ARM GAS  /tmp/ccEsDGUb.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_fir_sparse_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_fir_sparse_q7,"ax",%progbits
  17              		.align	1
  18              		.global	arm_fir_sparse_q7
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_fir_sparse_q7:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Title:        arm_fir_sparse_q7.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Description:  Q7 sparse FIR filter processing function
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** /**
ARM GAS  /tmp/ccEsDGUb.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @addtogroup FIR_Sparse
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @brief         Processing function for the Q7 sparse FIR filter.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[in]     S           points to an instance of the Q7 sparse FIR structure
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[in]     pSrc        points to the block of input data
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[out]    pDst        points to the block of output data
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[in]     pScratchIn  points to a temporary buffer of size blockSize
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[in]     pScratchOut points to a temporary buffer of size blockSize
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @param[in]     blockSize   number of input samples to process
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @return        none
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   @par           Scaling and Overflow Behavior
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    The function is implemented using a 32-bit internal accumulator.
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    Both coefficients and state variables are represented in 1.7 format and multipli
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 f
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    There is no risk of internal overflow with this approach and the full precision 
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    The accumulator is then converted to 18.7 format by discarding the low 7 bits.
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    Finally, the result is truncated to 1.7 format.
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****  */
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** void arm_fir_sparse_q7(
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         arm_fir_sparse_instance_q7 * S,
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   const q7_t * pSrc,
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t * pDst,
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t * pScratchIn,
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q31_t * pScratchOut,
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         uint32_t blockSize)
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** {
  28              		.loc 1 66 1
  29              		.cfi_startproc
  30              		@ args = 8, pretend = 0, frame = 264
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 C3B0     		sub	sp, sp, #268
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 272
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 07F10800 		add	r0, r7, #8
  45 000c 0160     		str	r1, [r0]
  46 000e 391D     		adds	r1, r7, #4
  47 0010 0A60     		str	r2, [r1]
  48 0012 3A46     		mov	r2, r7
  49 0014 1360     		str	r3, [r2]
ARM GAS  /tmp/ccEsDGUb.s 			page 3


  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t *pState = S->pState;                      /* State pointer */
  50              		.loc 1 67 15
  51 0016 FB68     		ldr	r3, [r7, #12]
  52 0018 5B68     		ldr	r3, [r3, #4]
  53 001a C7F8E430 		str	r3, [r7, #228]
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   const q7_t *pCoeffs = S->pCoeffs;                    /* Coefficient pointer */
  54              		.loc 1 68 15
  55 001e FB68     		ldr	r3, [r7, #12]
  56 0020 9B68     		ldr	r3, [r3, #8]
  57 0022 C7F80431 		str	r3, [r7, #260]
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t *px;                                      /* Scratch buffer pointer */
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t *py = pState;                             /* Temporary pointers for state buffer */
  58              		.loc 1 70 15
  59 0026 D7F8E430 		ldr	r3, [r7, #228]
  60 002a C7F8E030 		str	r3, [r7, #224]
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t *pb = pScratchIn;                         /* Temporary pointers for scratch buffer */
  61              		.loc 1 71 15
  62 002e 3B46     		mov	r3, r7
  63 0030 1B68     		ldr	r3, [r3]
  64 0032 C7F8DC30 		str	r3, [r7, #220]
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t *pOut = pDst;                             /* Destination pointer */
  65              		.loc 1 72 15
  66 0036 3B1D     		adds	r3, r7, #4
  67 0038 1B68     		ldr	r3, [r3]
  68 003a C7F8FC30 		str	r3, [r7, #252]
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         int32_t *pTapDelay = S->pTapDelay;             /* Pointer to the array containing offset of
  69              		.loc 1 73 18
  70 003e FB68     		ldr	r3, [r7, #12]
  71 0040 1B69     		ldr	r3, [r3, #16]
  72 0042 C7F8F830 		str	r3, [r7, #248]
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         uint32_t delaySize = S->maxDelay + blockSize;  /* state length */
  73              		.loc 1 74 31
  74 0046 FB68     		ldr	r3, [r7, #12]
  75 0048 9B89     		ldrh	r3, [r3, #12]
  76 004a 1A46     		mov	r2, r3
  77              		.loc 1 74 18
  78 004c D7F81431 		ldr	r3, [r7, #276]
  79 0050 1344     		add	r3, r3, r2
  80 0052 C7F8D830 		str	r3, [r7, #216]
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         uint16_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  81              		.loc 1 75 18
  82 0056 FB68     		ldr	r3, [r7, #12]
  83 0058 1B88     		ldrh	r3, [r3]	@ movhi
  84 005a A7F8D630 		strh	r3, [r7, #214]	@ movhi
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         int32_t readIndex;                             /* Read index of the state buffer */
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         uint32_t tapCnt, blkCnt;                       /* loop counters */
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q31_t *pScr2 = pScratchOut;                    /* Working pointer for scratch buffer of out
  85              		.loc 1 78 16
  86 005e D7F81031 		ldr	r3, [r7, #272]
  87 0062 C7F8EC30 		str	r3, [r7, #236]
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q31_t in;
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t coeff = *pCoeffs++;                       /* Read the coefficient value */
  88              		.loc 1 80 30
  89 0066 D7F80431 		ldr	r3, [r7, #260]
  90 006a 5A1C     		adds	r2, r3, #1
  91 006c C7F80421 		str	r2, [r7, #260]
  92              		.loc 1 80 14
ARM GAS  /tmp/ccEsDGUb.s 			page 4


  93 0070 1B78     		ldrb	r3, [r3]
  94 0072 87F8EB30 		strb	r3, [r7, #235]
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****         q7_t in1, in2, in3, in4;
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #endif
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* BlockSize of Input samples are copied into the state buffer */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* StateIndex points to the starting position to write in the state buffer */
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   arm_circularWrite_q7(py, (int32_t) delaySize, &S->stateIndex, 1, pSrc, 1, blockSize);
  95              		.loc 1 88 3
  96 0076 D7F8D820 		ldr	r2, [r7, #216]
  97 007a FB68     		ldr	r3, [r7, #12]
  98 007c 0233     		adds	r3, r3, #2
  99 007e D7F8E010 		ldr	r1, [r7, #224]
 100 0082 C7F8C410 		str	r1, [r7, #196]
 101 0086 C7F8C020 		str	r2, [r7, #192]
 102 008a C7F8BC30 		str	r3, [r7, #188]
 103 008e 0123     		movs	r3, #1
 104 0090 C7F8B830 		str	r3, [r7, #184]
 105 0094 07F10803 		add	r3, r7, #8
 106 0098 1B68     		ldr	r3, [r3]
 107 009a C7F8B430 		str	r3, [r7, #180]
 108 009e 0123     		movs	r3, #1
 109 00a0 C7F8B030 		str	r3, [r7, #176]
 110 00a4 D7F81431 		ldr	r3, [r7, #276]
 111 00a8 C7F8AC30 		str	r3, [r7, #172]
 112              	.LBB11:
 113              	.LBB12:
 114              		.file 2 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/ccEsDGUb.s 			page 5


  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
ARM GAS  /tmp/ccEsDGUb.s 			page 6


  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
ARM GAS  /tmp/ccEsDGUb.s 			page 7


 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
ARM GAS  /tmp/ccEsDGUb.s 			page 8


 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccEsDGUb.s 			page 9


 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
ARM GAS  /tmp/ccEsDGUb.s 			page 10


 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 11


 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
ARM GAS  /tmp/ccEsDGUb.s 			page 12


 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
ARM GAS  /tmp/ccEsDGUb.s 			page 13


 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 14


 541:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 557:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 574:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 575:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 576:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 577:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 578:./Libraries/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:./Libraries/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 581:./Libraries/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:./Libraries/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:./Libraries/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 585:./Libraries/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:./Libraries/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 588:./Libraries/CMSIS/DSP/Include/arm_math.h **** */
 589:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:./Libraries/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 592:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 594:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 597:./Libraries/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
ARM GAS  /tmp/ccEsDGUb.s 			page 15


 598:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 599:./Libraries/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:./Libraries/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 602:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 604:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 607:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 609:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 613:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 615:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 617:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 619:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 620:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 622:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 623:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 625:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 627:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 630:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 631:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 632:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 634:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 636:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 637:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 639:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 640:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 641:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 645:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 650:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
 652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 654:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
ARM GAS  /tmp/ccEsDGUb.s 			page 16


 655:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 660:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 665:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 666:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 667:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 668:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 671:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 675:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 676:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 677:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 678:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 679:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 680:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
 681:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 682:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 683:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 684:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 685:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 686:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 687:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 688:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 689:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 690:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
 691:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 692:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 693:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 694:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 695:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 696:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 697:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 698:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 699:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 700:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
 701:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 702:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 703:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 704:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 705:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 706:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 707:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 708:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 709:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 710:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
 711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x,
ARM GAS  /tmp/ccEsDGUb.s 			page 17


 712:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t y)
 713:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 714:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 715:./Libraries/CMSIS/DSP/Include/arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 716:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 717:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 718:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 719:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 720:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 721:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q31(
 722:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t in,
 723:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * dst,
 724:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pRecipTable)
 725:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 726:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
 727:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal;
 728:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index, i;
 729:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits;
 730:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 731:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 732:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 733:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 734:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 735:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
 736:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 737:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 738:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 739:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 740:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 741:./Libraries/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 742:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 743:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 744:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 745:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 746:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 747:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 1.31 with exp 1 */
 748:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 749:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 750:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
 751:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 752:./Libraries/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 753:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 754:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 755:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 756:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.31 with exp 1 */
 757:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 758:./Libraries/CMSIS/DSP/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 759:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 760:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 761:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 762:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 763:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 764:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 765:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1U);
 766:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 767:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 768:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 18


 769:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 770:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 771:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 772:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q15(
 773:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t in,
 774:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * dst,
 775:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pRecipTable)
 776:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 777:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t out = 0;
 778:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal = 0;
 779:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index = 0, i = 0;
 780:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits = 0;
 781:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 782:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 783:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 784:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 785:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 786:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
 787:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 788:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 789:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 790:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 791:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 792:./Libraries/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 793:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 794:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 795:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 796:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 797:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 798:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /*      1.15 with exp 1  */
 799:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 800:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 801:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
 802:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 803:./Libraries/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 804:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 805:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 806:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 807:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 808:./Libraries/CMSIS/DSP/Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 809:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 810:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 811:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 812:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 813:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 814:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 815:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 816:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1);
 817:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 818:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 819:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(ARM_MATH_NEON)
 820:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 821:./Libraries/CMSIS/DSP/Include/arm_math.h **** static inline float32x4_t __arm_vec_sqrt_f32_neon(float32x4_t  x)
 822:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 823:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32x4_t x1 = vmaxq_f32(x, vdupq_n_f32(FLT_MIN));
 824:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32x4_t e = vrsqrteq_f32(x1);
 825:./Libraries/CMSIS/DSP/Include/arm_math.h ****     e = vmulq_f32(vrsqrtsq_f32(vmulq_f32(x1, e), e), e);
ARM GAS  /tmp/ccEsDGUb.s 			page 19


 826:./Libraries/CMSIS/DSP/Include/arm_math.h ****     e = vmulq_f32(vrsqrtsq_f32(vmulq_f32(x1, e), e), e);
 827:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return vmulq_f32(x, e);
 828:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 829:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 830:./Libraries/CMSIS/DSP/Include/arm_math.h **** static inline int16x8_t __arm_vec_sqrt_q15_neon(int16x8_t vec)
 831:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 832:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32x4_t tempF;
 833:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32x4_t tempHI,tempLO;
 834:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 835:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempLO = vmovl_s16(vget_low_s16(vec));
 836:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempF = vcvtq_n_f32_s32(tempLO,15);
 837:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempF = __arm_vec_sqrt_f32_neon(tempF);
 838:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempLO = vcvtq_n_s32_f32(tempF,15);
 839:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 840:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempHI = vmovl_s16(vget_high_s16(vec));
 841:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempF = vcvtq_n_f32_s32(tempHI,15);
 842:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempF = __arm_vec_sqrt_f32_neon(tempF);
 843:./Libraries/CMSIS/DSP/Include/arm_math.h ****     tempHI = vcvtq_n_s32_f32(tempF,15);
 844:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 845:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return(vcombine_s16(vqmovn_s32(tempLO),vqmovn_s32(tempHI)));
 846:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 847:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 848:./Libraries/CMSIS/DSP/Include/arm_math.h **** static inline int32x4_t __arm_vec_sqrt_q31_neon(int32x4_t vec)
 849:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 850:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32x4_t temp;
 851:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 852:./Libraries/CMSIS/DSP/Include/arm_math.h ****   temp = vcvtq_n_f32_s32(vec,31);
 853:./Libraries/CMSIS/DSP/Include/arm_math.h ****   temp = __arm_vec_sqrt_f32_neon(temp);
 854:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return(vcvtq_n_s32_f32(temp,31));
 855:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 856:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 857:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 858:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 859:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 860:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief C custom defined intrinsic functions
 861:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 862:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 863:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 864:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 865:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD8
 866:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 867:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QADD8(
 868:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 869:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 870:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 871:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s, t, u;
 872:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 873:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 874:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 875:./Libraries/CMSIS/DSP/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 876:./Libraries/CMSIS/DSP/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 877:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 878:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 879:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 880:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 881:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 882:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
ARM GAS  /tmp/ccEsDGUb.s 			page 20


 883:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB8
 884:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 885:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSUB8(
 886:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 887:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 888:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 889:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s, t, u;
 890:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 891:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 892:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 893:./Libraries/CMSIS/DSP/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 894:./Libraries/CMSIS/DSP/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 895:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 896:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 897:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 898:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 899:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 900:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 901:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD16
 902:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 903:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QADD16(
 904:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 905:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 906:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 907:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 908:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r = 0, s = 0;
 909:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 910:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 911:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 912:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 913:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 914:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 915:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 916:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 917:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 918:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHADD16
 919:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 920:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHADD16(
 921:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 922:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 923:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 924:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 925:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 926:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 927:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 928:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 929:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 930:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 931:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 932:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 933:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 934:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB16
 935:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 936:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSUB16(
 937:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 938:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 939:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
ARM GAS  /tmp/ccEsDGUb.s 			page 21


 940:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 941:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 942:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 943:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 944:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 945:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 946:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 947:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 948:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 949:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 950:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHSUB16
 951:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 952:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHSUB16(
 953:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 954:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 955:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 956:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 957:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 958:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 959:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 960:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 961:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 962:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 963:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 964:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 965:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 966:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QASX
 967:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 968:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QASX(
 969:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 970:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 971:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 972:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 973:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 974:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 975:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 976:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 977:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 978:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 979:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 980:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 981:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 982:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHASX
 983:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 984:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHASX(
 985:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 986:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 987:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 988:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 989:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 990:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 991:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 992:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 993:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 994:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 995:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 996:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 22


 997:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
 998:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSAX
 999:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1000:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSAX(
1001:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1002:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1003:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1004:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
1005:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1006:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
1007:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
1008:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1009:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
1010:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1011:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1012:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1013:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1014:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHSAX
1015:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1016:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHSAX(
1017:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1018:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1019:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1020:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
1021:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1022:./Libraries/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
1023:./Libraries/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
1024:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1025:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
1026:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1027:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1028:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1029:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1030:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUSDX
1031:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1032:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUSDX(
1033:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1034:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1035:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1036:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
1037:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
1038:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1039:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1040:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1041:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUADX
1042:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1043:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUADX(
1044:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1045:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1046:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1047:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1048:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
1049:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1050:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1051:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1052:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1053:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD
ARM GAS  /tmp/ccEsDGUb.s 			page 23


1054:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1055:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __QADD(
1056:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1057:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t y)
1058:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1059:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
1060:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1061:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1062:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1063:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1064:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB
1065:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1066:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __QSUB(
1067:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1068:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t y)
1069:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1070:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
1071:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1072:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1073:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1074:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1075:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLAD
1076:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1077:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLAD(
1078:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1079:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1080:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1081:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1082:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1083:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
1084:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1085:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1086:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1087:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1088:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1089:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLADX
1090:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1091:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLADX(
1092:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1093:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1094:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1095:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1096:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1097:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1098:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1099:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1100:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1101:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1102:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLSDX
1104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1105:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLSDX(
1106:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1107:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1108:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1109:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1110:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
ARM GAS  /tmp/ccEsDGUb.s 			page 24


1111:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1112:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1113:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1114:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1115:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1116:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLALD
1118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1119:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint64_t __SMLALD(
1120:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1121:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1122:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint64_t sum)
1123:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1124:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
1125:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1126:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
1127:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1128:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1129:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1130:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1131:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLALDX
1133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1134:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint64_t __SMLALDX(
1135:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1136:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1137:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint64_t sum)
1138:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1139:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
1140:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1141:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1142:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1143:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1144:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1145:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1146:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUAD
1148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1149:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUAD(
1150:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1151:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1152:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1153:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1154:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1155:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1157:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1158:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1159:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUSD
1160:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1161:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUSD(
1162:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1163:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1164:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1165:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1166:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1167:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
ARM GAS  /tmp/ccEsDGUb.s 			page 25


1168:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1169:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1170:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1171:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SXTB16
1172:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1173:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SXTB16(
1174:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t x)
1175:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1176:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1177:./Libraries/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1178:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1180:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /*
1181:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMMLA
1182:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1183:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SMMLA(
1184:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1185:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t y,
1186:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t sum)
1187:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1188:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1189:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
1190:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1191:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1192:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1193:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1194:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1195:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1196:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1197:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1198:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1199:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1200:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q7_t *pState;            /**< points to the state variable array. The array is of length 
1201:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length num
1202:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q7;
1203:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1204:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1205:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1206:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1207:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1208:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1209:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1210:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;            /**< points to the state variable array. The array is of length
1211:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length nu
1212:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q15;
1213:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1214:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1215:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1216:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1217:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1218:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1219:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1220:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;            /**< points to the state variable array. The array is of length
1221:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length nu
1222:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q31;
1223:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1224:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccEsDGUb.s 			page 26


1225:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1226:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1227:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1228:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1229:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1230:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;    /**< points to the state variable array. The array is of length num
1231:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTap
1232:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_f32;
1233:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1234:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1235:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1236:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1237:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1238:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1239:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1240:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1241:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q7(
1242:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1243:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
1244:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
1245:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1246:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1247:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1248:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1249:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1250:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1251:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1252:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1253:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1254:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1255:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_q7(
1256:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q7 * S,
1257:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1258:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pCoeffs,
1259:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pState,
1260:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1261:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1262:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1263:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1264:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1265:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1266:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1267:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1268:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1269:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q15(
1270:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1271:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1272:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1273:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1274:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1275:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1276:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter (fast version).
1277:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1278:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1279:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1280:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1281:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 27


1282:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_fast_q15(
1283:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1284:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1285:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1286:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1287:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1289:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1290:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1291:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1292:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1293:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1294:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1295:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1296:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SUCCESS</code> if initialization was successful or
1297:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_ARGUMENT_ERROR</code> if <code>numTaps</code> is not a supported value.
1298:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1299:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_init_q15(
1300:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q15 * S,
1301:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1302:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
1303:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
1304:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1305:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1306:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1307:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1308:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1309:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1310:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1311:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1312:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1313:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q31(
1314:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1315:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1316:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1317:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1318:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1319:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1320:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter (fast version).
1321:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1322:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1323:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1324:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1325:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1326:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_fast_q31(
1327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1328:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1329:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1330:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1331:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1332:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1333:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1334:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1335:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1336:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1337:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1338:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
ARM GAS  /tmp/ccEsDGUb.s 			page 28


1339:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1340:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_q31(
1341:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q31 * S,
1342:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1343:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
1344:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
1345:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1346:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1347:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1348:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1349:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1350:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1351:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1352:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1354:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_f32(
1355:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1356:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
1357:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
1358:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1359:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1360:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1361:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1362:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1363:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1366:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1367:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1368:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_f32(
1369:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_f32 * S,
1370:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
1372:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
1373:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1376:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1377:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1378:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1379:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1380:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is
1381:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;           /**< Points to the array of state coefficients.  The array is of
1382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of lengt
1383:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. *
1384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1390:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1391:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is
1392:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;           /**< Points to the array of state coefficients.  The array is of
1393:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of lengt
1394:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. *
1395:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
ARM GAS  /tmp/ccEsDGUb.s 			page 29


1396:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1397:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1399:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1400:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1402:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is
1403:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;       /**< Points to the array of state coefficients.  The array is of
1404:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of lengt
1405:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1406:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1407:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1409:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1410:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1411:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1415:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1416:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1417:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1418:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1419:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1420:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1421:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1422:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1423:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1424:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1425:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1426:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1427:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1429:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_q15 * S,
1430:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1431:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
1432:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
1433:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t postShift);
1434:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1435:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1436:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1437:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1438:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1439:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1440:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1441:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1442:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1443:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1444:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1445:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1446:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1448:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1449:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1450:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1451:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1452:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  /tmp/ccEsDGUb.s 			page 30


1453:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1454:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1456:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1458:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1459:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1462:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1463:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1464:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1465:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1466:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1467:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1468:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1469:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1471:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1472:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1475:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1476:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1477:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1478:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1479:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1480:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1481:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1483:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_q31 * S,
1484:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1485:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
1486:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
1487:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t postShift);
1488:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1489:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1490:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1491:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1492:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1493:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1494:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1495:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1496:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
1499:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
1500:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1501:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1502:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1503:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1504:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1505:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1506:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1507:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1508:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
ARM GAS  /tmp/ccEsDGUb.s 			page 31


1510:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_f32 * S,
1511:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1512:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
1513:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
1514:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1516:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1517:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1518:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1520:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1521:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1522:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1523:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_f32;
1524:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1525:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1526:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1527:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1528:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1530:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1531:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1532:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1533:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_f64;
1535:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1537:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1538:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1540:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1541:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1542:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1543:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1544:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_q15;
1545:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1547:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1548:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1549:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1551:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1552:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1553:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_q31;
1555:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1556:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1557:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix addition.
1558:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1559:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1560:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1561:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1562:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1563:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1564:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_f32(
1565:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1566:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
ARM GAS  /tmp/ccEsDGUb.s 			page 32


1567:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1568:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1569:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1570:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix addition.
1571:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1572:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1573:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1574:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1575:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1576:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1577:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_q15(
1578:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1579:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1580:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1581:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1582:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1583:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix addition.
1584:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1585:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1586:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1587:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1588:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1589:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1590:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_q31(
1591:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1592:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1593:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1594:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1595:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1596:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1597:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1598:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1599:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1600:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1601:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1602:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1603:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_f32(
1604:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1606:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1607:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1608:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1609:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1610:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1611:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1612:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1613:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1614:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1615:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1616:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_q15(
1617:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1618:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1619:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1620:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
1621:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1622:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1623:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
ARM GAS  /tmp/ccEsDGUb.s 			page 33


1624:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1625:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1626:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1627:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1628:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1629:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1630:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_q31(
1631:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1632:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1633:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1634:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1635:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1636:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1637:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1638:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1639:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1640:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1641:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1642:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_f32(
1643:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1644:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1645:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1646:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1647:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix transpose.
1648:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1649:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1650:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1653:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_q15(
1654:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1655:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1656:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1657:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1658:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix transpose.
1659:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1660:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1661:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1662:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1663:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1664:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_q31(
1665:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1666:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1667:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1668:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1670:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1671:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1672:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1673:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1674:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1675:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1676:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_f32(
1677:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1678:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1679:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1680:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 34


1681:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1682:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix multiplication
1683:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1684:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1685:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1686:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1687:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1688:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1689:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1690:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_q15(
1691:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1692:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1693:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1694:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
1695:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1696:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1697:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1698:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1699:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1700:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1701:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1702:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1703:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1704:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1705:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_fast_q15(
1706:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1707:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1708:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1709:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
1710:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1712:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix multiplication
1713:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1714:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1715:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1716:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1717:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1718:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1719:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_q31(
1720:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1721:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1722:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1723:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1724:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1725:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1726:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1727:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1728:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1729:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1730:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1731:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1732:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_fast_q31(
1733:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1734:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1735:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1736:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1737:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccEsDGUb.s 			page 35


1738:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1739:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1740:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1741:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1742:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1743:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1744:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1745:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_f32(
1746:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1747:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1748:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1749:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1750:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1751:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix subtraction
1752:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1753:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1754:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1755:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1756:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1757:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1758:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_q15(
1759:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1760:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1761:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1762:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1763:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1764:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix subtraction
1765:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1766:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1767:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1768:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1769:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1770:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1771:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_q31(
1772:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1773:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1774:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1775:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1776:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1777:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1778:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1779:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scale  scale factor
1780:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1781:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1782:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1783:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1784:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_f32(
1785:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1786:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t scale,
1787:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1788:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1789:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1790:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix scaling.
1791:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1792:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1793:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1794:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to output matrix
ARM GAS  /tmp/ccEsDGUb.s 			page 36


1795:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1796:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1797:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1798:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_q15(
1799:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1800:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t scaleFract,
1801:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t shift,
1802:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1803:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1804:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1805:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix scaling.
1806:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1807:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1808:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1809:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1810:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1811:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1812:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1813:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_q31(
1814:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1815:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t scaleFract,
1816:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t shift,
1817:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1818:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1819:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1820:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1821:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1822:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1823:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1824:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1825:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1826:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_q31(
1827:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * S,
1828:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1829:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1830:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pData);
1831:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1832:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1833:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1834:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1835:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1836:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1837:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1838:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1839:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_q15(
1840:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * S,
1841:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1842:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1843:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pData);
1844:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1845:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1846:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1847:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1848:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1849:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1850:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1851:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 37


1852:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_f32(
1853:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * S,
1854:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1855:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1856:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pData);
1857:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1858:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1859:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1860:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1861:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1862:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1863:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1864:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1865:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
1866:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t A1;
1867:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t A2;
1868:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
1869:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1870:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
1871:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t state[3];     /**< The state array of length 3. */
1872:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t Kp;           /**< The proportional gain. */
1873:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t Ki;           /**< The integral gain. */
1874:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t Kd;           /**< The derivative gain. */
1875:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_q15;
1876:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1877:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1878:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1879:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1880:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1881:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1882:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1883:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1884:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t A2;            /**< The derived gain, A2 = Kd . */
1885:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t state[3];      /**< The state array of length 3. */
1886:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t Kp;            /**< The proportional gain. */
1887:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t Ki;            /**< The integral gain. */
1888:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t Kd;            /**< The derivative gain. */
1889:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_q31;
1890:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1891:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1892:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1893:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1894:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1895:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1896:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1897:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1898:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t A2;          /**< The derived gain, A2 = Kd . */
1899:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t state[3];    /**< The state array of length 3. */
1900:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t Kp;          /**< The proportional gain. */
1901:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t Ki;          /**< The integral gain. */
1902:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t Kd;          /**< The derivative gain. */
1903:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_f32;
1904:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1905:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1906:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1907:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1908:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
ARM GAS  /tmp/ccEsDGUb.s 			page 38


1909:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1910:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1911:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1912:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_f32(
1913:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_f32 * S,
1914:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1915:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1916:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1917:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1918:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1919:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1920:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1921:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_f32(
1922:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_f32 * S);
1923:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1924:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1925:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1926:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1927:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1928:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1929:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1930:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_q31(
1931:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q31 * S,
1932:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1933:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1934:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1935:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1936:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1937:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1938:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1939:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1940:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_q31(
1941:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q31 * S);
1942:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1943:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1944:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1945:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1946:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1947:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1948:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1949:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_q15(
1950:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q15 * S,
1951:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1952:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1953:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1954:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1955:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1956:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1957:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1958:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_q15(
1959:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q15 * S);
1960:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1961:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1962:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1963:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1964:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1965:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
ARM GAS  /tmp/ccEsDGUb.s 			page 39


1966:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1967:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t nValues;           /**< nValues */
1968:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t x1;               /**< x1 */
1969:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t xSpacing;         /**< xSpacing */
1970:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pYData;          /**< pointer to the table of Y values */
1971:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1972:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1973:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
1974:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1975:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1976:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1977:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1978:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
1979:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
1980:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pData;   /**< points to the data table. */
1981:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1982:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1983:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
1984:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1985:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1986:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1987:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1988:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
1989:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
1990:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pData;       /**< points to the data table. */
1991:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1992:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
1993:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
1994:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1995:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
1996:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1997:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
1998:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
1999:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
2000:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pData;       /**< points to the data table. */
2001:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
2002:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2003:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
2004:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
2005:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2006:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2007:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2008:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
2009:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
2010:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q7_t *pData;        /**< points to the data table. */
2011:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
2012:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2013:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2014:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2015:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector multiplication.
2016:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2017:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2018:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2019:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2020:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2021:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q7(
2022:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
ARM GAS  /tmp/ccEsDGUb.s 			page 40


2023:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2024:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2025:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2026:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2027:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2028:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2029:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector multiplication.
2030:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2031:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2032:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2033:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2034:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2035:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q15(
2036:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2037:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2038:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2039:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2040:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2041:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2042:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2043:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector multiplication.
2044:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2045:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2046:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2047:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2048:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2049:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q31(
2050:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2051:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2052:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2053:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2054:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2055:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2056:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2057:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector multiplication.
2058:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2059:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2060:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2061:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2062:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2063:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_f32(
2064:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2065:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2066:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2067:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2068:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2069:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2070:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2071:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2072:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2073:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2074:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2075:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2076:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2077:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2078:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
2079:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
ARM GAS  /tmp/ccEsDGUb.s 			page 41


2080:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2081:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2082:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
2083:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2084:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2085:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
2086:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_q15 * S,
2087:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2088:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2089:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2090:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2091:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2092:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_q15(
2093:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
2094:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc);
2095:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2096:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2097:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2098:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2099:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2100:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2101:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2102:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2103:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2104:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2105:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
2106:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2107:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2108:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2109:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
2110:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2111:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2112:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
2113:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q15 * S,
2114:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2115:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2116:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2117:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2118:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2119:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_q15(
2120:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
2121:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc);
2122:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2123:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2126:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2127:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2128:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2129:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2130:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2131:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2132:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2133:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2134:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2135:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2136:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 42


2137:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2138:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2139:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_q31 * S,
2140:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2141:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2142:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2143:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2144:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2145:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_q31(
2146:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2147:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc);
2148:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2149:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2151:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2152:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2153:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2154:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2155:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2156:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2157:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2158:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2159:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2160:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2161:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2162:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2163:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2164:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_q31(
2165:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2166:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc);
2167:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2168:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2169:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2170:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q31 * S,
2171:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2172:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2173:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2174:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2175:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2176:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2177:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2178:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2179:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2180:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2181:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse
2182:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables 
2183:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2184:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2185:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports differ
2186:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;             /**< bit reversal modifier that supports different siz
2187:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t onebyfftLen;             /**< value of 1/fftLen. */
2188:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2189:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2190:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2191:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2192:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_f32 * S,
2193:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
ARM GAS  /tmp/ccEsDGUb.s 			page 43


2194:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2195:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2196:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2197:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2198:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_f32(
2199:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2200:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc);
2201:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2202:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2203:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2204:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2205:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2206:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2207:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2208:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse
2209:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables 
2210:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2211:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2212:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports differ
2213:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;             /**< bit reversal modifier that supports different siz
2214:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t onebyfftLen;             /**< value of 1/fftLen. */
2215:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2216:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2217:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2218:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2219:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S,
2220:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2221:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2222:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2223:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2224:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2225:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_f32(
2226:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2227:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc);
2228:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2229:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2230:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2231:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2232:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2233:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2234:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2235:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2236:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2237:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2238:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_q15;
2239:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2240:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_cfft_q15(
2241:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2242:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t * p1,
2243:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag,
2244:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag);
2245:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2246:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2247:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2248:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2249:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2250:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
ARM GAS  /tmp/ccEsDGUb.s 			page 44


2251:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2252:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2253:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2254:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2255:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_q31;
2256:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2257:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_cfft_q31(
2258:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2259:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t * p1,
2260:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag,
2261:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag);
2262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2263:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2264:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2265:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2266:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2267:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2268:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2269:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2270:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2271:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2272:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_f32;
2273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2274:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_f32(
2275:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2276:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * p1,
2277:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2278:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2279:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2280:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2281:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2282:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2283:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2284:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2285:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                      /**< length of the real FFT. */
2286:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or
2287:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or d
2288:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports
2289:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. *
2290:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. *
2291:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2292:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_q15;
2293:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2294:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2295:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q15 * S,
2296:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2297:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2298:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2299:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2300:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_q15(
2301:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2302:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc,
2303:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
2304:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2305:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2306:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2307:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 45


2308:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2309:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2310:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                        /**< length of the real FFT. */
2311:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) 
2312:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or
2313:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that suppor
2314:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table.
2315:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table.
2316:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2317:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_q31;
2318:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2319:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2320:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q31 * S,
2321:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2322:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2323:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2325:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_q31(
2326:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2327:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc,
2328:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
2329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2330:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2331:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2332:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2333:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2334:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2335:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                        /**< length of the real FFT. */
2336:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2337:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) 
2338:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or
2339:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that su
2340:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table.
2341:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table.
2342:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2343:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_f32;
2344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2345:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2346:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_f32 * S,
2347:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S_CFFT,
2348:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2349:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2350:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_f32(
2353:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2354:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc,
2355:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
2356:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2357:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2358:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2359:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2360:./Libraries/CMSIS/DSP/Include/arm_math.h **** typedef struct
2361:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2362:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2363:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLenRFFT;             /**< length of the real sequence */
2364:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
ARM GAS  /tmp/ccEsDGUb.s 			page 46


2365:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2366:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2367:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2368:./Libraries/CMSIS/DSP/Include/arm_math.h ****          arm_rfft_fast_instance_f32 * S,
2369:./Libraries/CMSIS/DSP/Include/arm_math.h ****          uint16_t fftLen);
2370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2371:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_32_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2372:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2373:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_64_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2375:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_128_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2376:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2377:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_256_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2378:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2379:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_512_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2380:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2381:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_1024_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2382:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2383:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_2048_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2384:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2385:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_4096_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2386:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2387:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2388:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_fast_f32(
2389:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_fast_instance_f32 * S,
2390:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * p, float32_t * pOut,
2391:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag);
2392:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2393:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2394:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2395:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2397:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2398:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2399:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2400:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t normalize;                 /**< normalizing factor. */
2401:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2402:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCosFactor;               /**< points to the cosFactor table. */
2403:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2404:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2405:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_f32;
2406:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2407:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2408:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2409:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2410:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2411:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2414:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2415:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2416:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2417:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2419:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_f32 * S,
2420:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_f32 * S_RFFT,
2421:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S_CFFT,
ARM GAS  /tmp/ccEsDGUb.s 			page 47


2422:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2423:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2424:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t normalize);
2425:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2426:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2427:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2428:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2429:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2430:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2431:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2432:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2433:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_f32(
2434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2435:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
2436:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pInlineBuffer);
2437:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2438:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2439:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2440:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2441:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2442:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2443:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2444:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2445:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2446:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t normalize;                     /**< normalizing factor. */
2447:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2448:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2449:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2450:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_q31;
2452:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2453:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2454:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2455:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2456:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2457:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2458:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2459:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2460:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2461:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2462:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2463:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2464:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2465:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_q31 * S,
2466:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q31 * S_RFFT,
2467:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q31 * S_CFFT,
2468:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2469:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2470:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t normalize);
2471:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2472:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2473:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2474:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2475:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2476:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2477:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2478:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 48


2479:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_q31(
2480:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2481:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
2482:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pInlineBuffer);
2483:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2484:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2485:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2486:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2487:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2489:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
2490:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2491:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2492:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t normalize;                     /**< normalizing factor. */
2493:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2494:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2495:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2496:./Libraries/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_q15;
2498:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2499:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2501:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2502:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2503:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2504:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2505:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2506:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2507:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2508:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2509:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2510:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_q15(
2511:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_q15 * S,
2512:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q15 * S_RFFT,
2513:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q15 * S_CFFT,
2514:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2515:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2516:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t normalize);
2517:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2518:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2520:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2521:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2522:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2523:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2524:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2525:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_q15(
2526:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2527:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
2528:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pInlineBuffer);
2529:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2530:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2531:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2532:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector addition.
2533:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2534:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2535:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
ARM GAS  /tmp/ccEsDGUb.s 			page 49


2536:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2537:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_add_f32(
2539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2540:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2541:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2542:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2543:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2544:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2546:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector addition.
2547:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2548:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2549:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2550:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2551:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q7(
2553:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2555:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2556:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2557:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2558:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2559:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2560:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector addition.
2561:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2562:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2563:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2564:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2565:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2566:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q15(
2567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2569:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2570:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2572:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2573:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2574:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector addition.
2575:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2576:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2577:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2578:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2579:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2580:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q31(
2581:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2582:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2583:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2584:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2585:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2586:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2587:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2588:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2589:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2590:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2591:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2592:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
ARM GAS  /tmp/ccEsDGUb.s 			page 50


2593:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2594:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_f32(
2595:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2596:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2597:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2598:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2599:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2600:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2601:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2602:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector subtraction.
2603:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2604:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2605:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2606:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2607:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2608:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q7(
2609:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2610:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2611:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2612:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2613:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2614:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2615:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2616:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector subtraction.
2617:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2618:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2619:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2620:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2621:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2622:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q15(
2623:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2624:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2625:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2626:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2627:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2628:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2629:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2630:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector subtraction.
2631:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2632:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2633:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2634:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2635:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2636:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q31(
2637:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2639:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2640:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2641:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2642:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2643:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2645:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2646:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2647:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2648:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2649:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 51


2650:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_f32(
2651:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2652:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t scale,
2653:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2654:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2655:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2656:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2657:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2658:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2659:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2660:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2661:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2662:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2663:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2664:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2665:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q7(
2666:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2667:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t scaleFract,
2668:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2669:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2670:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2671:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2672:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2673:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2674:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2675:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2676:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2677:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2678:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2679:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2680:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2681:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q15(
2682:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2683:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t scaleFract,
2684:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2685:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2686:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2687:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2688:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2689:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2690:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2691:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2692:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2693:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2694:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2695:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2696:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2697:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q31(
2698:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2699:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t scaleFract,
2700:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2701:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2702:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2703:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2704:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2705:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2706:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector absolute value.
ARM GAS  /tmp/ccEsDGUb.s 			page 52


2707:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2708:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2709:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2710:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q7(
2712:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2713:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2714:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2715:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2716:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2717:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2718:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2719:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2720:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2721:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2722:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2723:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_f32(
2724:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2725:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2726:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2727:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2728:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2729:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2730:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector absolute value.
2731:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2732:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2733:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2734:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2735:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q15(
2736:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2737:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2738:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2739:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2740:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2741:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2742:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector absolute value.
2743:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2744:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2745:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2746:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2747:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q31(
2748:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2749:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2750:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2751:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2752:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2753:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2754:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2755:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2756:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2757:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2758:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2759:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2760:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_f32(
2761:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2762:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2763:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
ARM GAS  /tmp/ccEsDGUb.s 			page 53


2764:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * result);
2765:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2766:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2767:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2768:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2769:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2770:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2771:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2772:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2773:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2774:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q7(
2775:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2776:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2777:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2778:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * result);
2779:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2780:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2781:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2782:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2783:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2784:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2785:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2786:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2787:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2788:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q15(
2789:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2790:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2791:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2792:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q63_t * result);
2793:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2794:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2795:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2796:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
2797:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2798:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2799:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2800:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2801:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2802:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q31(
2803:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2804:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2805:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2806:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q63_t * result);
2807:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2808:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2809:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2810:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2811:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2812:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2813:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2814:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2815:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2816:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q7(
2817:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2818:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2819:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2820:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
ARM GAS  /tmp/ccEsDGUb.s 			page 54


2821:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2822:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2823:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2824:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2825:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2826:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2827:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2828:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2829:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2830:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q15(
2831:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2832:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2833:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2834:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2835:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2836:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2837:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2838:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2839:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2840:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2841:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2842:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2843:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2844:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q31(
2845:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2846:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2847:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2848:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2849:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2850:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2851:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2852:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2853:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2854:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2855:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2856:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2857:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2858:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_f32(
2859:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2860:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t offset,
2861:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2862:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2863:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2864:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2865:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2866:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2867:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2868:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2869:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2870:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2871:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2872:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q7(
2873:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2874:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t offset,
2875:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2876:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2877:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 55


2878:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2879:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2880:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2881:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2882:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2883:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2884:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2885:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2886:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q15(
2887:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2888:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t offset,
2889:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2890:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2891:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2892:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2893:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2894:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2895:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2896:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2897:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2898:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2899:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2900:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q31(
2901:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2902:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t offset,
2903:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2904:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2905:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2906:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2907:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2908:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2909:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2910:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2911:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2912:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2913:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_f32(
2914:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2915:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2916:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2917:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2918:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2919:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2920:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2921:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2922:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2923:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2924:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2925:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q7(
2926:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2927:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2928:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2929:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2930:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2931:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2932:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2933:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2934:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
ARM GAS  /tmp/ccEsDGUb.s 			page 56


2935:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2936:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2937:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q15(
2938:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2939:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2940:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2941:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2942:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2943:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2944:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2945:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2946:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2947:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2948:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2949:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q31(
2950:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2951:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2952:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2953:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2954:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2955:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2956:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2957:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2958:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2959:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2960:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2961:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_f32(
2962:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2963:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2964:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2965:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2966:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2967:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2968:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2969:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2970:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2971:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2972:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2973:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q7(
2974:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2975:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2976:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2977:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2978:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2979:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
2980:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2981:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2982:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2983:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2984:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2985:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q15(
2986:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2987:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2988:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2989:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2990:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
2991:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccEsDGUb.s 			page 57


2992:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2993:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2994:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2995:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2996:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
2997:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q31(
2998:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2999:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3000:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3001:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3002:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3003:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3004:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
3005:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3006:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3007:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3008:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3009:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_f32(
3010:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t value,
3011:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3012:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3013:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3014:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3015:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3016:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
3017:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3018:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3019:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3020:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3021:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q7(
3022:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t value,
3023:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3024:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3025:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3026:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3027:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3028:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
3029:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3030:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3031:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3032:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3033:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q15(
3034:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t value,
3035:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3036:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3037:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3038:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3039:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3040:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
3041:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3042:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3043:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3044:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3045:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q31(
3046:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t value,
3047:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3048:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
ARM GAS  /tmp/ccEsDGUb.s 			page 58


3049:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3050:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3051:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3052:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
3053:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3054:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3055:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3056:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3057:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3058:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3059:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_f32(
3060:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
3061:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3062:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
3063:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3064:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
3065:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3066:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3067:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3068:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
3069:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3070:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3071:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3072:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3073:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3074:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3075:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3076:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3077:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_opt_q15(
3078:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3079:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3080:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3081:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3082:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3083:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3084:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3085:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3086:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3087:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3088:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
3089:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3090:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3091:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3092:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3093:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3094:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3095:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q15(
3096:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3097:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3098:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3099:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3100:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
3101:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3102:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3103:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
ARM GAS  /tmp/ccEsDGUb.s 			page 59


3106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3111:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_q15(
3112:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3113:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3114:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3115:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3116:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
3117:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3118:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3119:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3129:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_opt_q15(
3130:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3131:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3132:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3133:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3134:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3135:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3136:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3137:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3138:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3139:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
3141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3147:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q31(
3148:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3149:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3150:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3151:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3152:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
3153:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3154:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3155:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3156:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3157:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3158:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3159:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3160:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3161:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3162:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccEsDGUb.s 			page 60


3163:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_q31(
3164:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3165:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3166:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3167:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3168:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
3169:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3170:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3171:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /**
3172:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3173:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3174:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3175:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3176:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3177:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3178:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3179:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3180:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3181:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_opt_q7(
3182:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3183:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3184:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3185:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3186:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3187:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3188:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3189:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3190:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3191:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3192:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3193:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3194:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3195:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3196:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3197:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3198:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3199:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q7(
3200:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3201:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3202:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3203:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3204:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst);
3205:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3206:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3207:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3208:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3209:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3210:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3211:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3212:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3213:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3214:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3215:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3216:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3217:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3218:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3219:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
ARM GAS  /tmp/ccEsDGUb.s 			page 61


3220:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3221:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
3222:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3223:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3224:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3225:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3226:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3227:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3228:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3229:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3230:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3231:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3232:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3233:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3234:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3235:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3236:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3237:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3238:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3239:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3240:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3241:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3242:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3243:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3244:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3245:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3246:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3247:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3248:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3249:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3250:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3251:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3252:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3253:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3254:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3255:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3256:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3257:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3258:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3259:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3260:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3261:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3262:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3263:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3264:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3265:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3266:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3267:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3268:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3269:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3270:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3271:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3272:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3274:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3275:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3276:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
ARM GAS  /tmp/ccEsDGUb.s 			page 62


3277:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3278:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3279:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3280:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3281:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3282:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3283:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3284:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3285:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3286:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3287:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3289:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3290:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3291:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3292:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3293:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3295:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3296:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3297:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3298:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3299:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3300:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3301:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3302:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3303:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3304:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3305:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3306:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3307:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3308:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3309:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3310:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3311:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3312:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3313:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3314:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3315:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3316:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3317:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3318:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3319:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3320:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3321:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3322:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3323:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3324:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3325:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3326:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3327:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3328:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3329:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3330:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3331:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3332:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3333:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
ARM GAS  /tmp/ccEsDGUb.s 			page 63


3334:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3335:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3336:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3337:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3338:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3344:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3345:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3346:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3347:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3348:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3349:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3350:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3351:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3353:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3354:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3355:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3356:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3357:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3358:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3359:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3360:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3361:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3362:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3363:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3366:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3367:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3368:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3369:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3370:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3371:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3374:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3377:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3378:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3379:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3380:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3381:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3382:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3383:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3384:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3386:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3387:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3389:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3390:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
ARM GAS  /tmp/ccEsDGUb.s 			page 64


3391:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3394:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3395:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3396:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3398:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3400:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3402:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3403:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3404:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3405:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3406:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3407:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3408:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3409:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3410:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3412:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3413:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3414:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3415:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length 
3416:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;              /**< points to the state variable array. The array is of leng
3417:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3418:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3420:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3421:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3423:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3424:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3425:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3426:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length 
3427:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;              /**< points to the state variable array. The array is of leng
3428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3429:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3430:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3431:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief Instance structure for floating-point FIR decimator.
3432:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3433:./Libraries/CMSIS/DSP/Include/arm_math.h **** typedef struct
3434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3435:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3436:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3437:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length 
3438:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;          /**< points to the state variable array. The array is of leng
3439:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3441:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3442:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3443:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Processing function for floating-point FIR decimator.
3444:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     S         points to an instance of the floating-point FIR decimator structure
3445:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrc      points to the block of input data
3446:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pDst      points to the block of output data
3447:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     blockSize number of samples to process
ARM GAS  /tmp/ccEsDGUb.s 			page 65


3448:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3449:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_fir_decimate_f32(
3450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3452:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3453:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3454:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3455:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3456:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Initialization function for the floating-point FIR decimator.
3458:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S          points to an instance of the floating-point FIR decimator structure
3459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     numTaps    number of coefficients in the filter
3460:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     M          decimation factor
3461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pCoeffs    points to the filter coefficients
3462:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pState     points to the state buffer
3463:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     blockSize  number of input samples to process per call
3464:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
3465:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS      : Operation successful
3466:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_LENGTH_ERROR : <code>blockSize</code> is not a multiple of <code
3467:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3468:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_fir_decimate_init_f32(
3469:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_f32 * S,
3470:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3471:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3473:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
3474:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3478:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3479:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3480:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3481:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3482:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3483:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3484:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_q15(
3485:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3487:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3488:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3490:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3492:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3493:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3494:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3495:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3496:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3497:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3501:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3502:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3503:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3504:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 66


3505:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3506:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3507:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3508:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3509:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3510:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3511:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3512:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3513:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3514:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3515:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3517:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_q15 * S,
3518:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3519:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3520:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3521:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
3522:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3524:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3525:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3526:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3527:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3528:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3529:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3530:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3531:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3532:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_q31(
3533:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3535:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3536:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3539:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3540:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3541:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3542:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3543:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3544:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3547:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3548:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3549:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3550:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3551:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3553:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3554:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3555:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3556:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3557:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3558:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3559:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3560:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3561:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
ARM GAS  /tmp/ccEsDGUb.s 			page 67


3562:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3563:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3564:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_q31 * S,
3565:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3566:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3568:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
3569:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3570:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3572:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3573:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3574:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3575:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3576:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3577:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                      /**< upsample factor. */
3578:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;           /**< length of each polyphase filter component. */
3579:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of lengt
3580:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t *pState;                  /**< points to the state variable array. The array is of le
3581:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3582:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3583:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3584:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3585:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3586:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3587:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3588:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                      /**< upsample factor. */
3589:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;           /**< length of each polyphase filter component. */
3590:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of lengt
3591:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t *pState;                  /**< points to the state variable array. The array is of le
3592:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3593:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3594:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3595:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3596:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3597:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3598:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3599:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                     /**< upsample factor. */
3600:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;          /**< length of each polyphase filter component. */
3601:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length
3602:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t *pState;             /**< points to the state variable array. The array is of len
3603:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3604:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3605:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3606:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3607:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3608:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3609:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3610:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3611:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3612:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3613:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_q15(
3614:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3615:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3616:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3617:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3618:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 68


3619:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3620:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3621:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3622:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3623:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3624:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3625:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3626:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3627:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3628:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3629:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3630:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3631:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3632:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_q15 * S,
3633:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3634:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3635:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3636:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
3637:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3638:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3639:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3640:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3641:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3642:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3645:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3646:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3647:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_q31(
3648:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3649:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3650:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3651:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3652:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3653:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3654:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3655:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3656:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3657:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3658:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3659:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3660:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3661:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3662:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3663:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3664:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3665:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3666:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_q31 * S,
3667:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3668:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3669:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3670:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
3671:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3672:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3673:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3675:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
ARM GAS  /tmp/ccEsDGUb.s 			page 69


3676:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3677:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3678:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3679:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3680:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3681:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_f32(
3682:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3683:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3684:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3685:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3686:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3687:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3688:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3689:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3690:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3691:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3692:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3693:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3694:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3695:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3696:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3697:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3698:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3699:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3700:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_f32 * S,
3701:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3702:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3703:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3704:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
3705:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3706:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3707:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3708:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3709:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3710:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3712:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3713:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is
3714:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q63_t *pState;           /**< points to the array of state coefficients.  The array is of
3715:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of lengt
3716:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. *
3717:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3718:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3719:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3720:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3721:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3722:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3723:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3724:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3725:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3726:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3727:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3728:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc,
3729:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3730:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3731:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3732:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 70


3733:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3734:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3735:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3736:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3737:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3738:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3739:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3740:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3741:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cas_df1_32x64_ins_q31 * S,
3742:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3743:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3744:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q63_t * pState,
3745:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
3746:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3747:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3748:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3749:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3750:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3751:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3752:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3753:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3754:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;         /**< points to the array of state coefficients.  The array is 
3755:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
3756:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3757:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3758:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3759:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3760:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3761:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3762:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3763:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3764:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;         /**< points to the array of state coefficients.  The array is 
3765:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
3766:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3767:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3768:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3769:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3770:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3771:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3772:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3773:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3774:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float64_t *pState;         /**< points to the array of state coefficients.  The array is 
3775:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
3776:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3777:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3778:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3779:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3780:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3781:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3782:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3783:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3784:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3785:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3786:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3787:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3788:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3789:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
ARM GAS  /tmp/ccEsDGUb.s 			page 71


3790:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3791:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3792:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3793:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3794:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3795:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3796:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3797:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3798:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3799:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3800:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3801:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3802:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3803:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3804:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3805:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3806:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3807:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3808:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3809:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3810:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3811:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3812:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3813:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3814:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3815:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3816:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float64_t * pSrc,
3817:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float64_t * pDst,
3818:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3819:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3820:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3821:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(ARM_MATH_NEON) 
3822:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_biquad_cascade_df2T_compute_coefs_f32(
3823:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3824:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint8_t numStages,
3825:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pCoeffs);
3826:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
3827:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3828:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3829:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3830:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3831:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3832:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3833:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3834:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3835:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_df2T_instance_f32 * S,
3836:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3837:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3838:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3839:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3840:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3841:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3842:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3843:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3844:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3845:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3846:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
ARM GAS  /tmp/ccEsDGUb.s 			page 72


3847:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3848:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3849:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3850:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3851:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3852:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3853:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3854:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3855:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3856:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3857:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3858:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3859:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3860:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3861:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3862:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3863:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_df2T_instance_f64 * S,
3864:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3865:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float64_t * pCoeffs,
3866:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float64_t * pState);
3867:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3868:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3869:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3870:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3871:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3872:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3873:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3874:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3875:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                       /**< points to the state variable array. The array i
3876:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;                      /**< points to the coefficient array. The array is o
3877:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3878:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3879:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3880:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3881:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3882:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3883:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3884:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3885:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                       /**< points to the state variable array. The array i
3886:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;                      /**< points to the coefficient array. The array is o
3887:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
3888:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3889:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3890:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3891:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3892:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3893:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3894:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3895:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;                   /**< points to the state variable array. The array i
3896:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;                  /**< points to the coefficient array. The array is o
3897:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3898:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3899:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3900:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3901:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3902:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3903:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
ARM GAS  /tmp/ccEsDGUb.s 			page 73


3904:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3905:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3906:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3907:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3908:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_q15 * S,
3909:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3910:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3911:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
3912:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3913:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3914:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3915:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3916:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3917:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3918:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3919:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3920:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3921:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_q15(
3922:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3923:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3924:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3925:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3926:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3927:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3928:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3929:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3930:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3931:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3932:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3933:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3934:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3935:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3936:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_q31 * S,
3937:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3938:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3939:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState);
3940:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3941:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3942:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3943:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3944:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3945:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3946:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3947:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3948:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3949:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_q31(
3950:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3951:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3952:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3953:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3954:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3955:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3956:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
3957:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3958:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3959:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3960:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
ARM GAS  /tmp/ccEsDGUb.s 			page 74


3961:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3962:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
3963:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3964:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_f32 * S,
3965:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3966:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3967:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3968:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3969:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3970:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3971:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3972:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3973:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3974:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3975:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3976:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3977:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_f32(
3978:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3979:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3980:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3981:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3982:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3983:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3984:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3985:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3986:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3987:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3988:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
3989:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
3990:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                       /**< points to the state variable array. The array i
3991:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The
3992:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The arr
3993:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
3994:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
3995:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
3996:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3997:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
3998:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3999:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4000:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
4001:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                       /**< points to the state variable array. The array i
4002:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The
4003:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The arr
4004:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
4005:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4006:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4007:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
4008:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4009:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4010:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4011:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
4012:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;                   /**< points to the state variable array. The array i
4013:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The
4014:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The arr
4015:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
4016:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4017:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 75


4018:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4019:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
4020:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
4021:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4022:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4023:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4024:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4025:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_f32(
4026:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
4027:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4028:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4029:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4030:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4031:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4032:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4033:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
4034:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
4035:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
4036:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
4037:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
4038:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
4039:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4040:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4041:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_f32(
4042:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_f32 * S,
4043:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
4044:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pkCoeffs,
4045:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pvCoeffs,
4046:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4047:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4048:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4049:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4050:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4051:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
4052:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
4053:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4054:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4055:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4056:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4057:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_q31(
4058:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
4059:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4060:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4061:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4062:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4063:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4064:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4065:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
4066:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
4067:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
4068:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
4069:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
4070:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
4071:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4072:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4073:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_q31(
4074:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_q31 * S,
ARM GAS  /tmp/ccEsDGUb.s 			page 76


4075:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
4076:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pkCoeffs,
4077:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pvCoeffs,
4078:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4079:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4080:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4081:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4082:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4083:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
4084:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
4085:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4086:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4087:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4088:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4089:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_q15(
4090:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
4091:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4092:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4093:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4094:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4095:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4096:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4097:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
4098:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
4099:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
4100:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
4101:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
4102:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
4103:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
4104:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
4105:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_q15(
4106:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_q15 * S,
4107:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
4108:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pkCoeffs,
4109:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pvCoeffs,
4110:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4111:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4112:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4113:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4114:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
4116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4117:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4118:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4119:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4120:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;   /**< points to the state variable array. The array is of length numT
4121:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps
4122:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t mu;        /**< step size that controls filter coefficient updates. */
4123:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_f32;
4124:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4125:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4126:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
4128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
4129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
ARM GAS  /tmp/ccEsDGUb.s 			page 77


4132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4135:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_f32(
4136:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_f32 * S,
4137:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4138:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pRef,
4139:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pOut,
4140:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pErr,
4141:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4142:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4143:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4144:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
4146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4151:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4152:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4153:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_f32(
4154:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_f32 * S,
4155:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4156:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCoeffs,
4157:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4158:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t mu,
4159:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4160:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4161:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4162:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4163:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4164:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4165:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4166:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4167:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4168:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;       /**< points to the state variable array. The array is of length numT
4169:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps
4170:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t mu;            /**< step size that controls filter coefficient updates. */
4171:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t postShift;  /**< bit shift applied to coefficients. */
4172:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_q15;
4173:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4174:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4175:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4176:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4177:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4178:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4179:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4180:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4181:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4182:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4183:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4184:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4185:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_q15(
4186:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_q15 * S,
4187:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4188:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pCoeffs,
ARM GAS  /tmp/ccEsDGUb.s 			page 78


4189:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4190:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t mu,
4191:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4192:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t postShift);
4193:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4194:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4195:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4196:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4197:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4198:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4199:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4200:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4201:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4202:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4203:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4204:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_q15(
4205:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4206:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4207:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pRef,
4208:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pOut,
4209:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pErr,
4210:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4211:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4212:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4213:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4214:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4215:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4216:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4217:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4218:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4219:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;       /**< points to the state variable array. The array is of length numT
4220:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps
4221:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t mu;            /**< step size that controls filter coefficient updates. */
4222:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint32_t postShift;  /**< bit shift applied to coefficients. */
4223:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_q31;
4224:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4225:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4226:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4227:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4228:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4229:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4230:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4231:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4232:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4233:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4234:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4235:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_q31(
4236:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4237:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4238:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pRef,
4239:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pOut,
4240:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pErr,
4241:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4242:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4243:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4244:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4245:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
ARM GAS  /tmp/ccEsDGUb.s 			page 79


4246:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4247:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4248:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4249:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4250:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4251:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4252:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4253:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4254:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_q31(
4255:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_q31 * S,
4256:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4257:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCoeffs,
4258:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4259:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t mu,
4260:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4261:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t postShift);
4262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4263:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4264:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4265:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4266:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4267:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4268:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4269:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of coefficients in the filter. */
4270:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;    /**< points to the state variable array. The array is of length num
4271:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTap
4272:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t mu;         /**< step size that control filter coefficient updates. */
4273:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t energy;     /**< saves previous frame energy. */
4274:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t x0;         /**< saves previous input sample. */
4275:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4276:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4278:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4279:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4280:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4281:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4282:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4283:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4284:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4285:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4286:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4287:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_f32(
4288:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_f32 * S,
4289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4290:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pRef,
4291:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pOut,
4292:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pErr,
4293:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4295:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4296:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4297:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4298:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4299:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4300:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4301:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4302:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
ARM GAS  /tmp/ccEsDGUb.s 			page 80


4303:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4304:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4305:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_f32(
4306:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_f32 * S,
4307:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4308:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCoeffs,
4309:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4310:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t mu,
4311:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4312:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4313:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4314:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4315:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4316:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4317:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4318:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4319:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of coefficients in the filter. */
4320:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;        /**< points to the state variable array. The array is of length num
4321:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTap
4322:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t mu;             /**< step size that controls filter coefficient updates. */
4323:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;    /**< bit shift applied to coefficients. */
4324:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4325:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t energy;         /**< saves previous frame energy. */
4326:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t x0;             /**< saves previous input sample. */
4327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4328:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4330:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4331:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4332:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4333:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4334:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4335:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4336:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4337:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4338:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4339:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_q31(
4340:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q31 * S,
4341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4342:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pRef,
4343:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pOut,
4344:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pErr,
4345:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4346:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4347:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4348:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4349:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4350:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4351:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4352:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4355:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4356:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4357:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4358:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_q31(
4359:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q31 * S,
ARM GAS  /tmp/ccEsDGUb.s 			page 81


4360:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4361:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCoeffs,
4362:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4363:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t mu,
4364:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4365:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
4366:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4367:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4368:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4369:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4370:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4372:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4373:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< Number of coefficients in the filter. */
4374:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;        /**< points to the state variable array. The array is of length num
4375:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTap
4376:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t mu;             /**< step size that controls filter coefficient updates. */
4377:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;    /**< bit shift applied to coefficients. */
4378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4379:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t energy;         /**< saves previous frame energy. */
4380:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t x0;             /**< saves previous input sample. */
4381:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4382:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4383:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4385:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4386:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4389:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4390:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4391:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4393:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_q15(
4394:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q15 * S,
4395:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4396:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pRef,
4397:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pOut,
4398:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pErr,
4399:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4401:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4402:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4404:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4405:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4406:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4409:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4410:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4411:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4412:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_q15(
4413:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q15 * S,
4414:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4415:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pCoeffs,
4416:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
ARM GAS  /tmp/ccEsDGUb.s 			page 82


4417:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t mu,
4418:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4419:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
4420:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4421:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4423:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4424:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4425:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4426:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4427:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4428:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4429:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_f32(
4431:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
4432:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4433:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
4434:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4435:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
4436:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4437:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4438:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4439:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @brief Correlation of Q15 sequences
4440:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pSrcA     points to the first input sequence
4441:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[in]  srcALen   length of the first input sequence
4442:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pSrcB     points to the second input sequence
4443:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[in]  srcBLen   length of the second input sequence
4444:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4445:./Libraries/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcB
4446:./Libraries/CMSIS/DSP/Include/arm_math.h **** */
4447:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_opt_q15(
4448:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4449:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4451:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4452:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4453:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
4454:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4455:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4456:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q15 sequences.
4458:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA    points to the first input sequence
4459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen  length of the first input sequence
4460:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB    points to the second input sequence
4461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen  length of the second input sequence
4462:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4463:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
4464:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q15(
4465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4466:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4468:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4469:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
4470:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4471:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4472:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4473:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Correlation of Q15 sequences (fast version).
ARM GAS  /tmp/ccEsDGUb.s 			page 83


4474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrcA      points to the first input sequence
4475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     srcALen    length of the first input sequence
4476:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrcB      points to the second input sequence
4477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     srcBLen    length of the second input sequence
4478:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pDst       points to the location where the output result is written.  Length 2 * 
4479:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
4480:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
4481:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_q15(
4482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4483:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4484:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4485:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4486:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
4487:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4488:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4489:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q15 sequences (fast version).
4491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA     points to the first input sequence.
4492:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen   length of the first input sequence.
4493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB     points to the second input sequence.
4494:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen   length of the second input sequence.
4495:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4496:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, src
4497:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
4498:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_opt_q15(
4499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4500:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4501:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4502:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4503:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4504:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
4505:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4506:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4507:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4508:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4509:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4510:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4511:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4512:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4513:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4514:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q31(
4516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
4517:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4518:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
4519:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4520:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
4521:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4522:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4523:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q31 sequences (fast version).
4525:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA    points to the first input sequence
4526:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen  length of the first input sequence
4527:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB    points to the second input sequence
4528:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen  length of the second input sequence
4529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4530:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  /tmp/ccEsDGUb.s 			page 84


4531:./Libraries/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_q31(
4532:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
4533:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
4535:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4536:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
4537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4538:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4539:./Libraries/CMSIS/DSP/Include/arm_math.h ****  /**
4540:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4541:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4542:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4543:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4544:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4545:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4546:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4547:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4548:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4549:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_opt_q7(
4550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
4551:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
4553:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4554:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
4555:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
4556:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
4557:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4558:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4559:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4560:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4561:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4562:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4563:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4564:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4565:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4566:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q7(
4568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
4569:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4570:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
4571:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4572:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst);
4573:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4574:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4575:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4576:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4577:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4578:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4579:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4580:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4581:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4582:./Libraries/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;            /**< points to the state buffer array. The array is of leng
4583:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;           /**< points to the coefficient array. The array is of lengt
4584:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4585:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4586:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4587:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 85


4588:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4589:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4590:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4591:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4592:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4593:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4594:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4595:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                /**< points to the state buffer array. The array is of leng
4596:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;               /**< points to the coefficient array. The array is of lengt
4597:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4598:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4599:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4600:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4601:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4602:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4603:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4604:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4606:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4607:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4608:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                /**< points to the state buffer array. The array is of leng
4609:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;               /**< points to the coefficient array. The array is of lengt
4610:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4611:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4612:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4613:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4614:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4615:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4616:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4617:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4618:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4619:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4620:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4621:./Libraries/CMSIS/DSP/Include/arm_math.h ****           q7_t *pState;                 /**< points to the state buffer array. The array is of leng
4622:./Libraries/CMSIS/DSP/Include/arm_math.h ****     const q7_t *pCoeffs;                /**< points to the coefficient array. The array is of lengt
4623:./Libraries/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4624:./Libraries/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4625:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
4626:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4627:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4628:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4629:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4630:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4631:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4632:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4633:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4634:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4635:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4636:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_f32(
4637:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_f32 * S,
4638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4639:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4640:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pScratchIn,
4641:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4642:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4643:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4644:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccEsDGUb.s 			page 86


4645:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4646:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4647:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4648:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4649:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4650:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4653:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4654:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4655:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_f32 * S,
4656:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4657:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
4658:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4659:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4660:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4661:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4662:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4663:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4664:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4665:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4666:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4667:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4668:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4670:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4671:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4672:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q31(
4673:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q31 * S,
4674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4675:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4676:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchIn,
4677:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4678:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4679:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4680:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4681:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4682:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4683:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4684:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4685:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4686:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4687:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4688:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4689:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4690:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4691:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q31 * S,
4692:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4693:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
4694:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4695:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4696:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4697:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4698:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4699:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4700:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4701:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
ARM GAS  /tmp/ccEsDGUb.s 			page 87


4702:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4703:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4704:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4705:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4706:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4707:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4708:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4709:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q15(
4710:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q15 * S,
4711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4712:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4713:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratchIn,
4714:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchOut,
4715:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4716:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4717:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4718:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4719:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4720:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4721:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4722:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4723:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4724:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4725:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4726:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4727:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4728:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4729:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q15 * S,
4730:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4731:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
4732:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4733:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4734:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4735:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4736:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4737:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4738:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4739:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4740:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4741:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4742:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4743:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4744:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4745:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4746:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4747:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q7(
4748:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q7 * S,
4749:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
4750:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
4751:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pScratchIn,
4752:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchOut,
4753:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4754:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4755:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4756:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4757:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4758:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
ARM GAS  /tmp/ccEsDGUb.s 			page 88


4759:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4760:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4761:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4762:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4763:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4764:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4765:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4766:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4767:./Libraries/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q7 * S,
4768:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4769:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pCoeffs,
4770:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q7_t * pState,
4771:./Libraries/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4772:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4773:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4774:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4775:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4776:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4777:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4778:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4779:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4780:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4781:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4782:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sin_cos_f32(
4783:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t theta,
4784:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSinVal,
4785:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCosVal);
4786:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4787:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4788:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4789:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4790:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4791:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4792:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4793:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4794:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_sin_cos_q31(
4795:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t theta,
4796:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSinVal,
4797:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCosVal);
4798:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4799:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4800:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4801:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4802:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4803:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4804:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4805:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4806:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_f32(
4807:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4808:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4809:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4810:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4811:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4812:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4813:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4814:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4815:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
ARM GAS  /tmp/ccEsDGUb.s 			page 89


4816:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4817:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_q31(
4818:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4819:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4820:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4821:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4822:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4823:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4824:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4825:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4826:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4827:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4828:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4829:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_q15(
4830:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4831:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4832:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4833:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4834:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4835:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4836:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4837:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4838:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4839:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4840:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4841:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4842:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4843:./Libraries/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4844:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4845:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4846:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4847:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4848:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
4849:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4850:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4851:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4852:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4853:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4854:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4855:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4856:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4857:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4858:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4859:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4860:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4861:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4862:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4863:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4864:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4865:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4866:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4867:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4868:./Libraries/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4869:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4870:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4871:./Libraries/CMSIS/DSP/Include/arm_math.h ****  /**
4872:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
ARM GAS  /tmp/ccEsDGUb.s 			page 90


4873:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4874:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4875:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4876:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup PID PID Motor Control
4877:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4878:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4879:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4880:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4881:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4882:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This set of functions implements (PID) controllers
4883:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4884:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4885:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4886:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4887:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4888:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm:
4889:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <pre>
4890:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4891:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4892:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4893:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *    A2 = Kd
4894:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * </pre>
4895:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4896:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
4897:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4898:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4899:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
4900:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4901:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4902:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
4903:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4904:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the measured output and the reference input.
4905:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4906:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4907:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4908:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4909:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4910:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Instance Structure
4911:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4912:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4913:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4914:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4915:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Reset Functions
4916:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4917:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4918:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Initialization Functions
4919:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4920:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The initialization function performs the following operations:
4921:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4922:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4923:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4924:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
4925:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4926:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
4927:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
4928:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4929:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
ARM GAS  /tmp/ccEsDGUb.s 			page 91


4930:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4931:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4932:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4933:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4934:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup PID
4935:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
4936:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4937:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4938:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
4939:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief         Process function for the floating-point PID Control.
4940:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4941:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     in  input sample to process
4942:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return        processed output sample.
4943:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
4944:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE float32_t arm_pid_f32(
4945:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_f32 * S,
4946:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t in)
4947:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4948:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t out;
4949:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4950:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4951:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = (S->A0 * in) +
4952:./Libraries/CMSIS/DSP/Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4953:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4954:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
4955:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
4956:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
4957:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
4958:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4959:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
4960:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (out);
4961:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4962:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
4963:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4964:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
4965:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Process function for the Q31 PID Control.
4966:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S  points to an instance of the Q31 PID Control structure
4967:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in  input sample to process
4968:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        processed output sample.
4969:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4970:./Libraries/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
4971:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 64-bit accumulator.
4972:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The accumulator has a 2.62 format and maintains full precision of the intermediate multipl
4973:./Libraries/CMSIS/DSP/Include/arm_math.h ****          Thus, if the accumulator result overflows it wraps around rather than clip.
4974:./Libraries/CMSIS/DSP/Include/arm_math.h ****          In order to avoid overflows completely the input signal must be scaled down by 2 bits as t
4975:./Libraries/CMSIS/DSP/Include/arm_math.h ****          After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 fo
4976:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
4977:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t arm_pid_q31(
4978:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_q31 * S,
4979:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t in)
4980:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
4981:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q63_t acc;
4982:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
4983:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4984:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4985:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4986:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 92


4987:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] */
4988:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4989:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4990:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4991:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4992:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4993:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4994:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = (q31_t) (acc >> 31U);
4995:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4996:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* out += y[n-1] */
4997:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out += S->state[2];
4998:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
4999:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
5000:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
5001:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
5002:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
5003:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5004:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
5005:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (out);
5006:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5007:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5008:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5009:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5010:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Process function for the Q15 PID Control.
5011:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S   points to an instance of the Q15 PID Control structure
5012:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in  input sample to process
5013:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        processed output sample.
5014:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5015:./Libraries/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5016:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using a 64-bit internal accumulator.
5017:./Libraries/CMSIS/DSP/Include/arm_math.h ****          Both Gains and state variables are represented in 1.15 format and multiplications yield a 
5018:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
5019:./Libraries/CMSIS/DSP/Include/arm_math.h ****          There is no risk of internal overflow with this approach and the full precision of interme
5020:./Libraries/CMSIS/DSP/Include/arm_math.h ****          After all additions have been performed, the accumulator is truncated to 34.15 format by d
5021:./Libraries/CMSIS/DSP/Include/arm_math.h ****          Lastly, the accumulator is saturated to yield a result in 1.15 format.
5022:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5023:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q15_t arm_pid_q15(
5024:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_q15 * S,
5025:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t in)
5026:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5027:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q63_t acc;
5028:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t out;
5029:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5030:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined (ARM_MATH_DSP)
5031:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Implementation of PID controller */
5032:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5033:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
5034:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
5035:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5036:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
5037:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)read_q15x2 (S->state), (uint64_t)acc);
5038:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
5039:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
5040:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
5041:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5042:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
5043:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
ARM GAS  /tmp/ccEsDGUb.s 			page 93


5044:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
5045:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
5046:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5047:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* acc += y[n-1] */
5048:./Libraries/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
5049:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5050:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* saturate the output */
5051:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
5052:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5053:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
5054:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
5055:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
5056:./Libraries/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
5057:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5058:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
5059:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (out);
5060:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5061:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5062:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5063:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of PID group
5064:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5065:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5066:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5067:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5068:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
5069:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5070:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5071:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5072:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5073:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5074:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
5075:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
5076:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
5077:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5078:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5079:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5080:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
5081:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5082:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5083:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5084:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5085:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5086:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
5087:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
5088:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
5089:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5090:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5091:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5092:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5093:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5094:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5095:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5096:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5097:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
5098:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
5099:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
5100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
ARM GAS  /tmp/ccEsDGUb.s 			page 94


5101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
5102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
5103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
5104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
5105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html clarkeFormula.gif
5110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
5111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
5112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5117:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5118:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup clarke
5120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5122:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5123:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Clarke transform
5126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return        none
5131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5132:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_clarke_f32(
5133:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ia,
5134:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ib,
5135:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIalpha,
5136:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIbeta)
5137:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5138:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
5139:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Ia;
5140:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5141:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
5142:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5143:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5144:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5145:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5146:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5147:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief  Clarke transform for Q31 version
5148:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ia       input three-phase coordinate <code>a</code>
5149:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ib       input three-phase coordinate <code>b</code>
5150:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5151:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5152:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return     none
5153:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5154:./Libraries/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5155:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5156:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5157:./Libraries/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition, hence there is no risk of overflow.
ARM GAS  /tmp/ccEsDGUb.s 			page 95


5158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5159:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_clarke_q31(
5160:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ia,
5161:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ib,
5162:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIalpha,
5163:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIbeta)
5164:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5165:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5166:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5167:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5168:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Ia;
5169:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5170:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5171:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5172:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5173:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5174:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5176:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5177:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5178:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5180:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5181:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of clarke group
5182:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5183:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5184:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5185:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5186:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5187:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5188:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5189:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5190:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5191:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5192:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5193:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5194:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5195:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5196:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5197:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5198:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5199:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5200:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5201:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5202:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5203:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5204:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5205:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5206:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup inv_clarke
5207:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5208:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5209:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5210:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
5211:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5212:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5213:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5214:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
ARM GAS  /tmp/ccEsDGUb.s 			page 96


5215:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5216:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5217:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5218:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_inv_clarke_f32(
5219:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ialpha,
5220:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ibeta,
5221:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIa,
5222:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIb)
5223:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5224:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5225:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIa = Ialpha;
5226:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5227:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5228:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5229:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5230:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5231:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5232:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5233:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief  Inverse Clarke transform for Q31 version
5234:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5235:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5236:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIa     points to output three-phase coordinate <code>a</code>
5237:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIb     points to output three-phase coordinate <code>b</code>
5238:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return     none
5239:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5240:./Libraries/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5241:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5242:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5243:./Libraries/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the subtraction, hence there is no risk of overflow.
5244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5245:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_inv_clarke_q31(
5246:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ialpha,
5247:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ibeta,
5248:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIa,
5249:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIb)
5250:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5251:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5252:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5253:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5254:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIa = Ialpha;
5255:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5256:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5257:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5259:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5260:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5261:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5262:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5263:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5264:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5265:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5266:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5267:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of inv_clarke group
5268:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5269:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5270:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5271:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 97


5272:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5273:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5274:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5275:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5276:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5277:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup park Vector Park Transform
5278:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5279:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5280:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5281:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5282:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * the stator vector current and rotor flux vector.
5283:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5284:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5285:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5286:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5287:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5288:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5289:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5290:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html parkFormula.gif
5291:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5292:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5293:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5294:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5295:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5296:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5297:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5298:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5299:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5300:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5301:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup park
5302:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5303:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5304:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5305:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5306:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point Park transform
5307:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5308:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5309:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5310:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5311:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5312:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5313:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5314:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5315:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The function implements the forward Park transform.
5316:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5317:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5318:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_park_f32(
5319:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ialpha,
5320:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Ibeta,
5321:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pId,
5322:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIq,
5323:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t sinVal,
5324:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t cosVal)
5325:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5326:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5327:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5328:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 98


5329:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5330:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5331:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5332:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5334:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5335:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief  Park transform for Q31 version
5336:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ialpha  input two-phase vector coordinate alpha
5337:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ibeta   input two-phase vector coordinate beta
5338:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pId     points to output rotor reference frame d
5339:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIq     points to output rotor reference frame q
5340:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  sinVal  sine value of rotation angle theta
5341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  cosVal  cosine value of rotation angle theta
5342:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return     none
5343:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5344:./Libraries/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5345:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5346:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5347:./Libraries/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition and subtraction, hence there is no risk of overflow.
5348:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5349:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_park_q31(
5350:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ialpha,
5351:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Ibeta,
5352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pId,
5353:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIq,
5354:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t sinVal,
5355:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t cosVal)
5356:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5357:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5358:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5359:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5360:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5361:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5363:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5364:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5365:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5366:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5367:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5368:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5370:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5371:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5372:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5373:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5374:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pId = __QADD(product1, product2);
5375:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5376:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5378:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5379:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5380:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5381:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of park group
5382:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5383:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5384:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5385:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  /tmp/ccEsDGUb.s 			page 99


5386:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5388:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5390:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5391:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5394:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5395:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5396:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html parkInvFormula.gif
5397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5399:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5400:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5401:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5404:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup inv_park
5408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5409:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5411:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
5412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5414:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5415:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5416:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5417:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5418:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5419:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5420:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5421:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_inv_park_f32(
5422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Id,
5423:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t Iq,
5424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIalpha,
5425:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIbeta,
5426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t sinVal,
5427:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t cosVal)
5428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5429:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5430:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5431:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5432:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5433:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5435:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5436:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5437:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief  Inverse Park transform for   Q31 version
5439:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Id       input coordinate of rotor reference frame d
5440:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Iq       input coordinate of rotor reference frame q
5441:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5442:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
ARM GAS  /tmp/ccEsDGUb.s 			page 100


5443:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  sinVal   sine value of rotation angle theta
5444:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]  cosVal   cosine value of rotation angle theta
5445:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return     none
5446:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5447:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @par Scaling and Overflow Behavior
5448:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5449:./Libraries/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5450:./Libraries/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition, hence there is no risk of overflow.
5451:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5452:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_inv_park_q31(
5453:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Id,
5454:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t Iq,
5455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIalpha,
5456:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIbeta,
5457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t sinVal,
5458:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t cosVal)
5459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5460:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5461:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5462:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5463:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5464:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5465:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5466:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5467:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5468:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5469:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5470:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5471:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5472:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5473:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5474:./Libraries/CMSIS/DSP/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5476:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5477:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5478:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5479:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5480:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = __QADD(product4, product3);
5481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5482:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5484:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of Inverse park group
5485:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5486:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5487:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5489:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupInterpolation
5490:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5492:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5493:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5494:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5495:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5496:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5497:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5498:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5499:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
ARM GAS  /tmp/ccEsDGUb.s 			page 101


5500:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5501:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5502:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5503:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5504:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5505:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm:
5506:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5507:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5508:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *       where x0, x1 are nearest values of input x
5509:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *             y0, y1 are nearest values to output y
5510:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5511:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5512:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5513:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This set of functions implements Linear interpolation process
5514:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5515:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5516:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5517:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5518:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5519:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5520:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5521:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5522:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5525:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup LinearInterpolate
5526:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5527:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5528:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5530:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5531:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5532:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     x  input sample to process
5533:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5534:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5535:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE float32_t arm_linear_interp_f32(
5537:./Libraries/CMSIS/DSP/Include/arm_math.h ****   arm_linear_interp_instance_f32 * S,
5538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t x)
5539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5540:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t y;
5541:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5542:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5543:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5544:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t i;                                   /* Index variable */
5545:./Libraries/CMSIS/DSP/Include/arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5546:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5547:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Calculation of index */
5548:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5549:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5550:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (i < 0)
5551:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5552:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5553:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = pYData[0];
5554:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5555:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else if ((uint32_t)i >= S->nValues)
5556:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
ARM GAS  /tmp/ccEsDGUb.s 			page 102


5557:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5558:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = pYData[S->nValues - 1];
5559:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5560:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
5561:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5562:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of nearest input values */
5563:./Libraries/CMSIS/DSP/Include/arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5564:./Libraries/CMSIS/DSP/Include/arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5565:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5566:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Read of nearest output values */
5567:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[i];
5568:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[i + 1];
5569:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5570:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of output */
5571:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5572:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5573:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5574:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5575:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* returns output value */
5576:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (y);
5577:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5578:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5579:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5580:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
5581:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5582:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5583:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5584:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5585:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5586:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5587:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5588:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5589:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5590:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5591:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5592:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5593:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t arm_linear_interp_q31(
5594:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pYData,
5595:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5596:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5597:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5598:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t y;                                     /* output */
5599:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5600:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5601:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5602:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5603:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5604:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5605:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5606:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5607:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5608:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5609:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5610:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5611:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5612:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else if (index < 0)
5613:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
ARM GAS  /tmp/ccEsDGUb.s 			page 103


5614:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5615:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5616:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
5617:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5618:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5619:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5620:./Libraries/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5621:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5622:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5623:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5624:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5625:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5626:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5627:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5628:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5629:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5630:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5631:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5632:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Convert y to 1.31 format */
5633:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (y << 1U);
5634:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5635:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5636:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5637:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5639:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5640:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5641:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5642:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5645:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5646:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5647:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5648:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5649:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5650:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5651:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t arm_linear_interp_q15(
5652:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pYData,
5653:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5654:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5655:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5656:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q63_t y;                                     /* output */
5657:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5658:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5659:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5660:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5661:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5662:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5663:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5664:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5665:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5666:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5667:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5668:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5669:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5670:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else if (index < 0)
ARM GAS  /tmp/ccEsDGUb.s 			page 104


5671:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5672:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5673:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5674:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
5675:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5676:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5677:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* fract is in 12.20 format */
5678:./Libraries/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5679:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5680:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index */
5681:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5682:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5683:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5684:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5685:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5686:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5687:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5688:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y += ((q63_t) y1 * (fract));
5689:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5690:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* convert y to 1.15 format */
5691:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (q15_t) (y >> 20);
5692:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5693:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5694:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5695:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5696:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5697:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5698:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5699:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5700:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5701:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5702:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5703:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5704:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * \par
5705:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5706:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5707:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5708:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t arm_linear_interp_q7(
5709:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t * pYData,
5710:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5712:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5713:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t y;                                     /* output */
5714:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5715:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5716:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5717:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5718:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5719:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5720:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5721:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (x < 0)
5722:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5723:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5724:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5725:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (x >> 20) & 0xfff;
5726:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5727:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (index >= (nValues - 1))
ARM GAS  /tmp/ccEsDGUb.s 			page 105


5728:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5729:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5730:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5731:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
5732:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5733:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5734:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* fract is in 12.20 format */
5735:./Libraries/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5736:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5737:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5738:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5739:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5740:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5741:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5742:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5743:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5744:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5745:./Libraries/CMSIS/DSP/Include/arm_math.h ****       y += (y1 * fract);
5746:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5747:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* convert y to 1.7(q7) format */
5748:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (q7_t) (y >> 20);
5749:./Libraries/CMSIS/DSP/Include/arm_math.h ****      }
5750:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5751:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5752:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5753:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of LinearInterpolate group
5754:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5755:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5756:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5757:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5758:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  input value in radians.
5759:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5760:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5761:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t arm_sin_f32(
5762:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t x);
5763:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5764:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5765:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5766:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5767:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5768:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5769:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5770:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t arm_sin_q31(
5771:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x);
5772:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5773:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5774:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5775:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5776:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5777:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5778:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5779:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t arm_sin_q15(
5780:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t x);
5781:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5782:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5783:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5784:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
ARM GAS  /tmp/ccEsDGUb.s 			page 106


5785:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  input value in radians.
5786:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5787:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5788:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t arm_cos_f32(
5789:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t x);
5790:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5791:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5792:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5793:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5794:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5795:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5796:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5797:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t arm_cos_q31(
5798:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x);
5799:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5800:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5801:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5802:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5803:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5804:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5805:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5806:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t arm_cos_q15(
5807:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t x);
5808:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5809:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5810:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5811:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupFastMath
5812:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5813:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5814:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5815:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5816:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @defgroup SQRT Square Root
5817:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
5818:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Computes the square root of a number.
5819:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5820:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5821:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This is an iterative algorithm of the form:
5822:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5823:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5824:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5825:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * where <code>x1</code> is the current estimate,
5826:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>x0</code> is the previous estimate, and
5827:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5828:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * For the square root function, the algorithm reduces to:
5829:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5830:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *     x0 = in/2                         [initial guess]
5831:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5832:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5833:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5834:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5835:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5836:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5837:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup SQRT
5838:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @{
5839:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5840:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5841:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccEsDGUb.s 			page 107


5842:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Floating-point square root function.
5843:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in    input value
5844:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pOut  square root of input value
5845:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
5846:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
5847:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
5848:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5849:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE arm_status arm_sqrt_f32(
5850:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t in,
5851:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pOut)
5852:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5853:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in >= 0.0f)
5854:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5855:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( __CC_ARM )
5856:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #if defined __TARGET_FPU_VFP
5857:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *pOut = __sqrtf(in);
5858:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #else
5859:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5860:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #endif
5861:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5862:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
5863:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #if defined __ARMVFP__
5864:./Libraries/CMSIS/DSP/Include/arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5865:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #else
5866:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5867:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #endif
5868:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5869:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
5870:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5871:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
5872:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5873:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (ARM_MATH_SUCCESS);
5874:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5875:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
5876:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5877:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *pOut = 0.0f;
5878:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return (ARM_MATH_ARGUMENT_ERROR);
5879:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5880:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5881:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5882:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5883:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5884:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Q31 square root function.
5885:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFF
5886:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pOut  points to square root of input value
5887:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
5888:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
5889:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
5890:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5891:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_sqrt_q31(
5892:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t in,
5893:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pOut);
5894:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5895:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5896:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
5897:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Q15 square root function.
5898:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in    input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF
ARM GAS  /tmp/ccEsDGUb.s 			page 108


5899:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pOut  points to square root of input value
5900:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
5901:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
5902:./Libraries/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
5903:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
5904:./Libraries/CMSIS/DSP/Include/arm_math.h **** arm_status arm_sqrt_q15(
5905:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t in,
5906:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pOut);
5907:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5908:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5909:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief  Vector Floating-point square root function.
5910:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pIn   input vector.
5911:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut  vector of square roots of input elements.
5912:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  len   length of input vector.
5913:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5914:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5915:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5916:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_vsqrt_f32(
5917:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIn,
5918:./Libraries/CMSIS/DSP/Include/arm_math.h ****   float32_t * pOut,
5919:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t len);
5920:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5921:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_vsqrt_q31(
5922:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIn,
5923:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t * pOut,
5924:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t len);
5925:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5926:./Libraries/CMSIS/DSP/Include/arm_math.h ****   void arm_vsqrt_q15(
5927:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pIn,
5928:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pOut,
5929:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t len);
5930:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5931:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5932:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @} end of SQRT group
5933:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5934:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5935:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5936:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5937:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief floating-point Circular write function.
5938:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5939:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularWrite_f32(
5940:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * circBuffer,
5941:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
5942:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t * writeOffset,
5943:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
5944:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const int32_t * src,
5945:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t srcInc,
5946:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
5947:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5948:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0U;
5949:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t wOffset;
5950:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5951:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
5952:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location where the input samples to be copied */
5953:./Libraries/CMSIS/DSP/Include/arm_math.h ****     wOffset = *writeOffset;
5954:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5955:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
ARM GAS  /tmp/ccEsDGUb.s 			page 109


5956:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
5957:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5958:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
5959:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
5960:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the input sample to the circular buffer */
5961:./Libraries/CMSIS/DSP/Include/arm_math.h ****       circBuffer[wOffset] = *src;
5962:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5963:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
5964:./Libraries/CMSIS/DSP/Include/arm_math.h ****       src += srcInc;
5965:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5966:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
5967:./Libraries/CMSIS/DSP/Include/arm_math.h ****       wOffset += bufferInc;
5968:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (wOffset >= L)
5969:./Libraries/CMSIS/DSP/Include/arm_math.h ****         wOffset -= L;
5970:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5971:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
5972:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
5973:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
5974:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5975:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
5976:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *writeOffset = (uint16_t)wOffset;
5977:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
5978:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5979:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5980:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5981:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
5982:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief floating-point Circular Read function.
5983:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
5984:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularRead_f32(
5985:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * circBuffer,
5986:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
5987:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * readOffset,
5988:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
5989:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * dst,
5990:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * dst_base,
5991:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dst_length,
5992:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dstInc,
5993:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
5994:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
5995:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0U;
5996:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t rOffset;
5997:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t* dst_end;
5998:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
5999:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
6000:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location from where the input samples to be read */
6001:./Libraries/CMSIS/DSP/Include/arm_math.h ****     rOffset = *readOffset;
6002:./Libraries/CMSIS/DSP/Include/arm_math.h ****     dst_end = dst_base + dst_length;
6003:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6004:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
6005:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
6006:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6007:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
6008:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
6009:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
6010:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *dst = circBuffer[rOffset];
6011:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6012:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
ARM GAS  /tmp/ccEsDGUb.s 			page 110


6013:./Libraries/CMSIS/DSP/Include/arm_math.h ****       dst += dstInc;
6014:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6015:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (dst == dst_end)
6016:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6017:./Libraries/CMSIS/DSP/Include/arm_math.h ****         dst = dst_base;
6018:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6019:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6020:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update rOffset.  Watch out for positive and negative value  */
6021:./Libraries/CMSIS/DSP/Include/arm_math.h ****       rOffset += bufferInc;
6022:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6023:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (rOffset >= L)
6024:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6025:./Libraries/CMSIS/DSP/Include/arm_math.h ****         rOffset -= L;
6026:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6027:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6028:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
6029:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
6030:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
6031:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6032:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
6033:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *readOffset = rOffset;
6034:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
6035:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6036:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6037:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
6038:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 Circular write function.
6039:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
6040:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularWrite_q15(
6041:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * circBuffer,
6042:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
6043:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t * writeOffset,
6044:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
6045:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q15_t * src,
6046:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t srcInc,
6047:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
6048:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
6049:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0U;
6050:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t wOffset;
6051:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6052:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
6053:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location where the input samples to be copied */
6054:./Libraries/CMSIS/DSP/Include/arm_math.h ****     wOffset = *writeOffset;
6055:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6056:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
6057:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
6058:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6059:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
6060:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
6061:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the input sample to the circular buffer */
6062:./Libraries/CMSIS/DSP/Include/arm_math.h ****       circBuffer[wOffset] = *src;
6063:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6064:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
6065:./Libraries/CMSIS/DSP/Include/arm_math.h ****       src += srcInc;
6066:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6067:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
6068:./Libraries/CMSIS/DSP/Include/arm_math.h ****       wOffset += bufferInc;
6069:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (wOffset >= L)
ARM GAS  /tmp/ccEsDGUb.s 			page 111


6070:./Libraries/CMSIS/DSP/Include/arm_math.h ****         wOffset -= L;
6071:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6072:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
6073:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
6074:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
6075:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6076:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
6077:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *writeOffset = (uint16_t)wOffset;
6078:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
6079:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6080:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6081:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
6082:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 Circular Read function.
6083:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
6084:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularRead_q15(
6085:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * circBuffer,
6086:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
6087:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * readOffset,
6088:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
6089:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * dst,
6090:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * dst_base,
6091:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dst_length,
6092:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dstInc,
6093:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
6094:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
6095:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0;
6096:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t rOffset;
6097:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q15_t* dst_end;
6098:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6099:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
6100:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location from where the input samples to be read */
6101:./Libraries/CMSIS/DSP/Include/arm_math.h ****     rOffset = *readOffset;
6102:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6103:./Libraries/CMSIS/DSP/Include/arm_math.h ****     dst_end = dst_base + dst_length;
6104:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6105:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
6106:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
6107:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6108:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
6109:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
6110:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
6111:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *dst = circBuffer[rOffset];
6112:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6113:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
6114:./Libraries/CMSIS/DSP/Include/arm_math.h ****       dst += dstInc;
6115:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6116:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (dst == dst_end)
6117:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6118:./Libraries/CMSIS/DSP/Include/arm_math.h ****         dst = dst_base;
6119:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6120:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6121:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
6122:./Libraries/CMSIS/DSP/Include/arm_math.h ****       rOffset += bufferInc;
6123:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6124:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (rOffset >= L)
6125:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6126:./Libraries/CMSIS/DSP/Include/arm_math.h ****         rOffset -= L;
ARM GAS  /tmp/ccEsDGUb.s 			page 112


6127:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6128:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6129:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
6130:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
6131:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
6132:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6133:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
6134:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *readOffset = rOffset;
6135:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
6136:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6137:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6138:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
6139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 Circular write function.
6140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
6141:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularWrite_q7(
6142:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t * circBuffer,
6143:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
6144:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint16_t * writeOffset,
6145:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
6146:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q7_t * src,
6147:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t srcInc,
6148:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
6149:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
6150:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0U;
 115              		.loc 2 6150 14
 116 00ac 0023     		movs	r3, #0
 117 00ae C7F8A830 		str	r3, [r7, #168]
6151:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t wOffset;
6152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6153:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
6154:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location where the input samples to be copied */
6155:./Libraries/CMSIS/DSP/Include/arm_math.h ****     wOffset = *writeOffset;
 118              		.loc 2 6155 15
 119 00b2 D7F8BC30 		ldr	r3, [r7, #188]
 120 00b6 1B88     		ldrh	r3, [r3]
 121              		.loc 2 6155 13
 122 00b8 C7F8A430 		str	r3, [r7, #164]
6156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6157:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
6158:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
 123              		.loc 2 6158 7
 124 00bc D7F8AC30 		ldr	r3, [r7, #172]
 125 00c0 C7F8A830 		str	r3, [r7, #168]
6159:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6160:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
 126              		.loc 2 6160 11
 127 00c4 29E0     		b	.L2
 128              	.L4:
6161:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
6162:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the input sample to the circular buffer */
6163:./Libraries/CMSIS/DSP/Include/arm_math.h ****       circBuffer[wOffset] = *src;
 129              		.loc 2 6163 17
 130 00c6 D7F8A430 		ldr	r3, [r7, #164]
 131 00ca D7F8C420 		ldr	r2, [r7, #196]
 132 00ce 1344     		add	r3, r3, r2
 133              		.loc 2 6163 29
 134 00d0 D7F8B420 		ldr	r2, [r7, #180]
ARM GAS  /tmp/ccEsDGUb.s 			page 113


 135 00d4 92F90020 		ldrsb	r2, [r2]
 136              		.loc 2 6163 27
 137 00d8 1A70     		strb	r2, [r3]
6164:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6165:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
6166:./Libraries/CMSIS/DSP/Include/arm_math.h ****       src += srcInc;
 138              		.loc 2 6166 11
 139 00da D7F8B030 		ldr	r3, [r7, #176]
 140 00de D7F8B420 		ldr	r2, [r7, #180]
 141 00e2 1344     		add	r3, r3, r2
 142 00e4 C7F8B430 		str	r3, [r7, #180]
6167:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6168:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update wOffset.  Watch out for positive and negative value */
6169:./Libraries/CMSIS/DSP/Include/arm_math.h ****       wOffset += bufferInc;
 143              		.loc 2 6169 15
 144 00e8 D7F8A420 		ldr	r2, [r7, #164]
 145 00ec D7F8B830 		ldr	r3, [r7, #184]
 146 00f0 1344     		add	r3, r3, r2
 147 00f2 C7F8A430 		str	r3, [r7, #164]
6170:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (wOffset >= L)
 148              		.loc 2 6170 10
 149 00f6 D7F8C020 		ldr	r2, [r7, #192]
 150 00fa D7F8A430 		ldr	r3, [r7, #164]
 151 00fe 9A42     		cmp	r2, r3
 152 0100 06DC     		bgt	.L3
6171:./Libraries/CMSIS/DSP/Include/arm_math.h ****         wOffset -= L;
 153              		.loc 2 6171 17
 154 0102 D7F8A420 		ldr	r2, [r7, #164]
 155 0106 D7F8C030 		ldr	r3, [r7, #192]
 156 010a D31A     		subs	r3, r2, r3
 157 010c C7F8A430 		str	r3, [r7, #164]
 158              	.L3:
6172:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6173:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
6174:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
 159              		.loc 2 6174 8
 160 0110 D7F8A830 		ldr	r3, [r7, #168]
 161 0114 013B     		subs	r3, r3, #1
 162 0116 C7F8A830 		str	r3, [r7, #168]
 163              	.L2:
6160:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 164              		.loc 2 6160 11
 165 011a D7F8A830 		ldr	r3, [r7, #168]
 166 011e 002B     		cmp	r3, #0
 167 0120 D1D1     		bne	.L4
6175:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
6176:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6177:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
6178:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *writeOffset = (uint16_t)wOffset;
 168              		.loc 2 6178 20
 169 0122 D7F8A430 		ldr	r3, [r7, #164]
 170 0126 9AB2     		uxth	r2, r3
 171              		.loc 2 6178 18
 172 0128 D7F8BC30 		ldr	r3, [r7, #188]
 173 012c 1A80     		strh	r2, [r3]	@ movhi
6179:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 174              		.loc 2 6179 3
ARM GAS  /tmp/ccEsDGUb.s 			page 114


 175 012e 00BF     		nop
 176              	.LBE12:
 177              	.LBE11:
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop over the number of taps. */
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   tapCnt = numTaps;
 178              		.loc 1 91 10
 179 0130 B7F8D630 		ldrh	r3, [r7, #214]
 180 0134 C7F8F430 		str	r3, [r7, #244]
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 181              		.loc 1 94 27
 182 0138 FB68     		ldr	r3, [r7, #12]
 183 013a 5B88     		ldrh	r3, [r3, #2]
 184 013c 1A46     		mov	r2, r3
 185              		.loc 1 94 40
 186 013e D7F81431 		ldr	r3, [r7, #276]
 187 0142 D31A     		subs	r3, r2, r3
 188              		.loc 1 94 15
 189 0144 1946     		mov	r1, r3
 190              		.loc 1 94 65
 191 0146 D7F8F830 		ldr	r3, [r7, #248]
 192 014a 1A1D     		adds	r2, r3, #4
 193 014c C7F8F820 		str	r2, [r7, #248]
 194              		.loc 1 94 55
 195 0150 1B68     		ldr	r3, [r3]
 196              		.loc 1 94 53
 197 0152 CB1A     		subs	r3, r1, r3
 198              		.loc 1 94 13
 199 0154 3B61     		str	r3, [r7, #16]
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Wraparound of readIndex */
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   if (readIndex < 0)
 200              		.loc 1 97 17
 201 0156 3B69     		ldr	r3, [r7, #16]
 202              		.loc 1 97 6
 203 0158 002B     		cmp	r3, #0
 204 015a 04DA     		bge	.L5
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     readIndex += (int32_t) delaySize;
 205              		.loc 1 99 15
 206 015c 3A69     		ldr	r2, [r7, #16]
 207              		.loc 1 99 18
 208 015e D7F8D830 		ldr	r3, [r7, #216]
 209              		.loc 1 99 15
 210 0162 1344     		add	r3, r3, r2
 211 0164 3B61     		str	r3, [r7, #16]
 212              	.L5:
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for state buffer is updated */
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   py = pState;
 213              		.loc 1 103 6
 214 0166 D7F8E430 		ldr	r3, [r7, #228]
 215 016a C7F8E030 		str	r3, [r7, #224]
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 115


 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* blockSize samples are read from the state buffer */
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1,
 216              		.loc 1 106 3
 217 016e D7F8D820 		ldr	r2, [r7, #216]
 218 0172 D7F81431 		ldr	r3, [r7, #276]
 219 0176 D7F8E010 		ldr	r1, [r7, #224]
 220 017a C7F8A010 		str	r1, [r7, #160]
 221 017e C7F89C20 		str	r2, [r7, #156]
 222 0182 07F11002 		add	r2, r7, #16
 223 0186 C7F89820 		str	r2, [r7, #152]
 224 018a 0122     		movs	r2, #1
 225 018c C7F89420 		str	r2, [r7, #148]
 226 0190 D7F8DC20 		ldr	r2, [r7, #220]
 227 0194 C7F89020 		str	r2, [r7, #144]
 228 0198 D7F8DC20 		ldr	r2, [r7, #220]
 229 019c C7F88C20 		str	r2, [r7, #140]
 230 01a0 C7F88830 		str	r3, [r7, #136]
 231 01a4 0123     		movs	r3, #1
 232 01a6 C7F88430 		str	r3, [r7, #132]
 233 01aa D7F81431 		ldr	r3, [r7, #276]
 234 01ae C7F88030 		str	r3, [r7, #128]
 235              	.LBB13:
 236              	.LBB14:
6180:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6181:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6182:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
6183:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 Circular Read function.
6184:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
6185:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_circularRead_q7(
6186:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t * circBuffer,
6187:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t L,
6188:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t * readOffset,
6189:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t bufferInc,
6190:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t * dst,
6191:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t * dst_base,
6192:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dst_length,
6193:./Libraries/CMSIS/DSP/Include/arm_math.h ****   int32_t dstInc,
6194:./Libraries/CMSIS/DSP/Include/arm_math.h ****   uint32_t blockSize)
6195:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
6196:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t i = 0;
 237              		.loc 2 6196 14
 238 01b2 0023     		movs	r3, #0
 239 01b4 FB67     		str	r3, [r7, #124]
6197:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t rOffset;
6198:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q7_t* dst_end;
6199:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6200:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Copy the value of Index pointer that points
6201:./Libraries/CMSIS/DSP/Include/arm_math.h ****      * to the current location from where the input samples to be read */
6202:./Libraries/CMSIS/DSP/Include/arm_math.h ****     rOffset = *readOffset;
 240              		.loc 2 6202 13
 241 01b6 D7F89830 		ldr	r3, [r7, #152]
 242 01ba 1B68     		ldr	r3, [r3]
 243 01bc BB67     		str	r3, [r7, #120]
6203:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6204:./Libraries/CMSIS/DSP/Include/arm_math.h ****     dst_end = dst_base + dst_length;
 244              		.loc 2 6204 24
 245 01be D7F88830 		ldr	r3, [r7, #136]
ARM GAS  /tmp/ccEsDGUb.s 			page 116


 246              		.loc 2 6204 13
 247 01c2 D7F88C20 		ldr	r2, [r7, #140]
 248 01c6 1344     		add	r3, r3, r2
 249 01c8 7B67     		str	r3, [r7, #116]
6205:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6206:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Loop over the blockSize */
6207:./Libraries/CMSIS/DSP/Include/arm_math.h ****     i = blockSize;
 250              		.loc 2 6207 7
 251 01ca D7F88030 		ldr	r3, [r7, #128]
 252 01ce FB67     		str	r3, [r7, #124]
6208:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     while (i > 0U)
 253              		.loc 2 6209 11
 254 01d0 2AE0     		b	.L6
 255              	.L9:
6210:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
6211:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* copy the sample from the circular buffer to the destination buffer */
6212:./Libraries/CMSIS/DSP/Include/arm_math.h ****       *dst = circBuffer[rOffset];
 256              		.loc 2 6212 24
 257 01d2 BB6F     		ldr	r3, [r7, #120]
 258 01d4 D7F8A020 		ldr	r2, [r7, #160]
 259 01d8 1344     		add	r3, r3, r2
 260 01da 93F90020 		ldrsb	r2, [r3]
 261              		.loc 2 6212 12
 262 01de D7F89030 		ldr	r3, [r7, #144]
 263 01e2 1A70     		strb	r2, [r3]
6213:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6214:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Update the input pointer */
6215:./Libraries/CMSIS/DSP/Include/arm_math.h ****       dst += dstInc;
 264              		.loc 2 6215 11
 265 01e4 D7F88430 		ldr	r3, [r7, #132]
 266 01e8 D7F89020 		ldr	r2, [r7, #144]
 267 01ec 1344     		add	r3, r3, r2
 268 01ee C7F89030 		str	r3, [r7, #144]
6216:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6217:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (dst == dst_end)
 269              		.loc 2 6217 10
 270 01f2 7A6F     		ldr	r2, [r7, #116]
 271 01f4 D7F89030 		ldr	r3, [r7, #144]
 272 01f8 9A42     		cmp	r2, r3
 273 01fa 03D1     		bne	.L7
6218:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6219:./Libraries/CMSIS/DSP/Include/arm_math.h ****         dst = dst_base;
 274              		.loc 2 6219 13
 275 01fc D7F88C30 		ldr	r3, [r7, #140]
 276 0200 C7F89030 		str	r3, [r7, #144]
 277              	.L7:
6220:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6221:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6222:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Circularly update rOffset.  Watch out for positive and negative value */
6223:./Libraries/CMSIS/DSP/Include/arm_math.h ****       rOffset += bufferInc;
 278              		.loc 2 6223 15
 279 0204 BA6F     		ldr	r2, [r7, #120]
 280 0206 D7F89430 		ldr	r3, [r7, #148]
 281 020a 1344     		add	r3, r3, r2
 282 020c BB67     		str	r3, [r7, #120]
6224:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 117


6225:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (rOffset >= L)
 283              		.loc 2 6225 10
 284 020e D7F89C20 		ldr	r2, [r7, #156]
 285 0212 BB6F     		ldr	r3, [r7, #120]
 286 0214 9A42     		cmp	r2, r3
 287 0216 04DC     		bgt	.L8
6226:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
6227:./Libraries/CMSIS/DSP/Include/arm_math.h ****         rOffset -= L;
 288              		.loc 2 6227 17
 289 0218 BA6F     		ldr	r2, [r7, #120]
 290 021a D7F89C30 		ldr	r3, [r7, #156]
 291 021e D31A     		subs	r3, r2, r3
 292 0220 BB67     		str	r3, [r7, #120]
 293              	.L8:
6228:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
6229:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6230:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* Decrement the loop counter */
6231:./Libraries/CMSIS/DSP/Include/arm_math.h ****       i--;
 294              		.loc 2 6231 8
 295 0222 FB6F     		ldr	r3, [r7, #124]
 296 0224 013B     		subs	r3, r3, #1
 297 0226 FB67     		str	r3, [r7, #124]
 298              	.L6:
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 299              		.loc 2 6209 11
 300 0228 FB6F     		ldr	r3, [r7, #124]
 301 022a 002B     		cmp	r3, #0
 302 022c D1D1     		bne	.L9
6232:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
6233:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
6234:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Update the index pointer */
6235:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *readOffset = rOffset;
 303              		.loc 2 6235 17
 304 022e D7F89830 		ldr	r3, [r7, #152]
 305 0232 BA6F     		ldr	r2, [r7, #120]
 306 0234 1A60     		str	r2, [r3]
6236:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 307              		.loc 2 6236 3
 308 0236 00BF     		nop
 309              	.LBE14:
 310              	.LBE13:
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                    pb, pb, (int32_t) blockSize, 1, blockSize);
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for the scratch buffer of state values */
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   px = pb;
 311              		.loc 1 110 6
 312 0238 D7F8DC30 		ldr	r3, [r7, #220]
 313 023c C7F80031 		str	r3, [r7, #256]
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for scratch buffer of output values */
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   pScratchOut = pScr2;
 314              		.loc 1 113 15
 315 0240 D7F8EC30 		ldr	r3, [r7, #236]
 316 0244 C7F81031 		str	r3, [r7, #272]
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
ARM GAS  /tmp/ccEsDGUb.s 			page 118


 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time. */
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize >> 2U;
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Perform multiplication and store in the scratch buffer */
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = ((q31_t) *px++ * coeff);
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = ((q31_t) *px++ * coeff);
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = ((q31_t) *px++ * coeff);
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = ((q31_t) *px++ * coeff);
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize % 0x4U;
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #else
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Initialize blkCnt with number of samples */
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize;
 317              		.loc 1 139 10
 318 0248 D7F81431 		ldr	r3, [r7, #276]
 319 024c C7F8F030 		str	r3, [r7, #240]
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 320              		.loc 1 143 9
 321 0250 16E0     		b	.L10
 322              	.L11:
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Perform Multiplication and store in the scratch buffer */
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = ((q31_t) *px++ * coeff);
 323              		.loc 1 146 34
 324 0252 D7F80031 		ldr	r3, [r7, #256]
 325 0256 5A1C     		adds	r2, r3, #1
 326 0258 C7F80021 		str	r2, [r7, #256]
 327              		.loc 1 146 31
 328 025c 93F90030 		ldrsb	r3, [r3]
 329              		.loc 1 146 23
 330 0260 1846     		mov	r0, r3
 331              		.loc 1 146 37
 332 0262 97F9EB20 		ldrsb	r2, [r7, #235]
 333              		.loc 1 146 17
 334 0266 D7F81031 		ldr	r3, [r7, #272]
 335 026a 191D     		adds	r1, r3, #4
 336 026c C7F81011 		str	r1, [r7, #272]
 337              		.loc 1 146 37
 338 0270 02FB00F2 		mul	r2, r2, r0
 339              		.loc 1 146 20
 340 0274 1A60     		str	r2, [r3]
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
ARM GAS  /tmp/ccEsDGUb.s 			page 119


 341              		.loc 1 149 11
 342 0276 D7F8F030 		ldr	r3, [r7, #240]
 343 027a 013B     		subs	r3, r3, #1
 344 027c C7F8F030 		str	r3, [r7, #240]
 345              	.L10:
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 346              		.loc 1 143 9
 347 0280 D7F8F030 		ldr	r3, [r7, #240]
 348 0284 002B     		cmp	r3, #0
 349 0286 E4D1     		bne	.L11
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Load the coefficient value and
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****    * increment the coefficient buffer for the next set of state values */
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   coeff = *pCoeffs++;
 350              		.loc 1 154 19
 351 0288 D7F80431 		ldr	r3, [r7, #260]
 352 028c 5A1C     		adds	r2, r3, #1
 353 028e C7F80421 		str	r2, [r7, #260]
 354              		.loc 1 154 9
 355 0292 1B78     		ldrb	r3, [r3]
 356 0294 87F8EB30 		strb	r3, [r7, #235]
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Read Index, from where the state buffer should be read, is calculated. */
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 357              		.loc 1 157 27
 358 0298 FB68     		ldr	r3, [r7, #12]
 359 029a 5B88     		ldrh	r3, [r3, #2]
 360 029c 1A46     		mov	r2, r3
 361              		.loc 1 157 40
 362 029e D7F81431 		ldr	r3, [r7, #276]
 363 02a2 D31A     		subs	r3, r2, r3
 364              		.loc 1 157 15
 365 02a4 1946     		mov	r1, r3
 366              		.loc 1 157 65
 367 02a6 D7F8F830 		ldr	r3, [r7, #248]
 368 02aa 1A1D     		adds	r2, r3, #4
 369 02ac C7F8F820 		str	r2, [r7, #248]
 370              		.loc 1 157 55
 371 02b0 1B68     		ldr	r3, [r3]
 372              		.loc 1 157 53
 373 02b2 CB1A     		subs	r3, r1, r3
 374              		.loc 1 157 13
 375 02b4 3B61     		str	r3, [r7, #16]
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Wraparound of readIndex */
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   if (readIndex < 0)
 376              		.loc 1 160 17
 377 02b6 3B69     		ldr	r3, [r7, #16]
 378              		.loc 1 160 6
 379 02b8 002B     		cmp	r3, #0
 380 02ba 04DA     		bge	.L12
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     readIndex += (int32_t) delaySize;
 381              		.loc 1 162 15
 382 02bc 3A69     		ldr	r2, [r7, #16]
 383              		.loc 1 162 18
ARM GAS  /tmp/ccEsDGUb.s 			page 120


 384 02be D7F8D830 		ldr	r3, [r7, #216]
 385              		.loc 1 162 15
 386 02c2 1344     		add	r3, r3, r2
 387 02c4 3B61     		str	r3, [r7, #16]
 388              	.L12:
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop over the number of taps. */
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   tapCnt = (uint32_t) numTaps - 2U;
 389              		.loc 1 166 12
 390 02c6 B7F8D630 		ldrh	r3, [r7, #214]
 391              		.loc 1 166 10
 392 02ca 023B     		subs	r3, r3, #2
 393 02cc C7F8F430 		str	r3, [r7, #244]
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (tapCnt > 0U)
 394              		.loc 1 168 9
 395 02d0 A3E0     		b	.L13
 396              	.L21:
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Working pointer for state buffer is updated */
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     py = pState;
 397              		.loc 1 171 8
 398 02d2 D7F8E430 		ldr	r3, [r7, #228]
 399 02d6 C7F8E030 		str	r3, [r7, #224]
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* blockSize samples are read from the state buffer */
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1,
 400              		.loc 1 174 5
 401 02da D7F8D820 		ldr	r2, [r7, #216]
 402 02de D7F81431 		ldr	r3, [r7, #276]
 403 02e2 D7F8E010 		ldr	r1, [r7, #224]
 404 02e6 3967     		str	r1, [r7, #112]
 405 02e8 FA66     		str	r2, [r7, #108]
 406 02ea 07F11002 		add	r2, r7, #16
 407 02ee BA66     		str	r2, [r7, #104]
 408 02f0 0122     		movs	r2, #1
 409 02f2 7A66     		str	r2, [r7, #100]
 410 02f4 D7F8DC20 		ldr	r2, [r7, #220]
 411 02f8 3A66     		str	r2, [r7, #96]
 412 02fa D7F8DC20 		ldr	r2, [r7, #220]
 413 02fe FA65     		str	r2, [r7, #92]
 414 0300 BB65     		str	r3, [r7, #88]
 415 0302 0123     		movs	r3, #1
 416 0304 7B65     		str	r3, [r7, #84]
 417 0306 D7F81431 		ldr	r3, [r7, #276]
 418 030a 3B65     		str	r3, [r7, #80]
 419              	.LBB15:
 420              	.LBB16:
6196:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t rOffset;
 421              		.loc 2 6196 14
 422 030c 0023     		movs	r3, #0
 423 030e FB64     		str	r3, [r7, #76]
6202:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 424              		.loc 2 6202 13
 425 0310 BB6E     		ldr	r3, [r7, #104]
 426 0312 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccEsDGUb.s 			page 121


 427 0314 BB64     		str	r3, [r7, #72]
6204:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 428              		.loc 2 6204 24
 429 0316 BB6D     		ldr	r3, [r7, #88]
6204:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 430              		.loc 2 6204 13
 431 0318 FA6D     		ldr	r2, [r7, #92]
 432 031a 1344     		add	r3, r3, r2
 433 031c 7B64     		str	r3, [r7, #68]
6207:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 434              		.loc 2 6207 7
 435 031e 3B6D     		ldr	r3, [r7, #80]
 436 0320 FB64     		str	r3, [r7, #76]
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 437              		.loc 2 6209 11
 438 0322 1FE0     		b	.L14
 439              	.L17:
6212:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 440              		.loc 2 6212 24
 441 0324 BB6C     		ldr	r3, [r7, #72]
 442 0326 3A6F     		ldr	r2, [r7, #112]
 443 0328 1344     		add	r3, r3, r2
 444 032a 93F90020 		ldrsb	r2, [r3]
6212:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 445              		.loc 2 6212 12
 446 032e 3B6E     		ldr	r3, [r7, #96]
 447 0330 1A70     		strb	r2, [r3]
6215:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448              		.loc 2 6215 11
 449 0332 7B6D     		ldr	r3, [r7, #84]
 450 0334 3A6E     		ldr	r2, [r7, #96]
 451 0336 1344     		add	r3, r3, r2
 452 0338 3B66     		str	r3, [r7, #96]
6217:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 453              		.loc 2 6217 10
 454 033a 7A6C     		ldr	r2, [r7, #68]
 455 033c 3B6E     		ldr	r3, [r7, #96]
 456 033e 9A42     		cmp	r2, r3
 457 0340 01D1     		bne	.L15
6219:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 458              		.loc 2 6219 13
 459 0342 FB6D     		ldr	r3, [r7, #92]
 460 0344 3B66     		str	r3, [r7, #96]
 461              	.L15:
6223:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 462              		.loc 2 6223 15
 463 0346 BA6C     		ldr	r2, [r7, #72]
 464 0348 7B6E     		ldr	r3, [r7, #100]
 465 034a 1344     		add	r3, r3, r2
 466 034c BB64     		str	r3, [r7, #72]
6225:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 467              		.loc 2 6225 10
 468 034e FA6E     		ldr	r2, [r7, #108]
 469 0350 BB6C     		ldr	r3, [r7, #72]
 470 0352 9A42     		cmp	r2, r3
 471 0354 03DC     		bgt	.L16
6227:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
ARM GAS  /tmp/ccEsDGUb.s 			page 122


 472              		.loc 2 6227 17
 473 0356 BA6C     		ldr	r2, [r7, #72]
 474 0358 FB6E     		ldr	r3, [r7, #108]
 475 035a D31A     		subs	r3, r2, r3
 476 035c BB64     		str	r3, [r7, #72]
 477              	.L16:
6231:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 478              		.loc 2 6231 8
 479 035e FB6C     		ldr	r3, [r7, #76]
 480 0360 013B     		subs	r3, r3, #1
 481 0362 FB64     		str	r3, [r7, #76]
 482              	.L14:
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 483              		.loc 2 6209 11
 484 0364 FB6C     		ldr	r3, [r7, #76]
 485 0366 002B     		cmp	r3, #0
 486 0368 DCD1     		bne	.L17
6235:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 487              		.loc 2 6235 17
 488 036a BB6E     		ldr	r3, [r7, #104]
 489 036c BA6C     		ldr	r2, [r7, #72]
 490 036e 1A60     		str	r2, [r3]
 491              		.loc 2 6236 3
 492 0370 00BF     		nop
 493              	.LBE16:
 494              	.LBE15:
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                         pb, pb, (int32_t) blockSize, 1, blockSize);
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Working pointer for the scratch buffer of state values */
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     px = pb;
 495              		.loc 1 178 8
 496 0372 D7F8DC30 		ldr	r3, [r7, #220]
 497 0376 C7F80031 		str	r3, [r7, #256]
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Working pointer for scratch buffer of output values */
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     pScratchOut = pScr2;
 498              		.loc 1 181 17
 499 037a D7F8EC30 		ldr	r3, [r7, #236]
 500 037e C7F81031 		str	r3, [r7, #272]
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Loop unrolling: Compute 4 outputs at a time. */
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt = blockSize >> 2U;
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     while (blkCnt > 0U)
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     {
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       /* Perform Multiply-Accumulate */
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       in = *pScratchOut + ((q31_t) * px++ * coeff);
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       *pScratchOut++ = in;
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       in = *pScratchOut + ((q31_t) * px++ * coeff);
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       *pScratchOut++ = in;
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       in = *pScratchOut + ((q31_t) * px++ * coeff);
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       *pScratchOut++ = in;
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       in = *pScratchOut + ((q31_t) * px++ * coeff);
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       *pScratchOut++ = in;
ARM GAS  /tmp/ccEsDGUb.s 			page 123


 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       /* Decrement loop counter */
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       blkCnt--;
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     }
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Loop unrolling: Compute remaining outputs */
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt = blockSize % 0x4U;
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #else
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Initialize blkCnt with number of samples */
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt = blockSize;
 501              		.loc 1 211 12
 502 0382 D7F81431 		ldr	r3, [r7, #276]
 503 0386 C7F8F030 		str	r3, [r7, #240]
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     while (blkCnt > 0U)
 504              		.loc 1 215 11
 505 038a 1EE0     		b	.L18
 506              	.L19:
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     {
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       /* Perform Multiply-Accumulate */
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       in = *pScratchOut + ((q31_t) *px++ * coeff);
 507              		.loc 1 218 12
 508 038c D7F81031 		ldr	r3, [r7, #272]
 509 0390 1A68     		ldr	r2, [r3]
 510              		.loc 1 218 39
 511 0392 D7F80031 		ldr	r3, [r7, #256]
 512 0396 591C     		adds	r1, r3, #1
 513 0398 C7F80011 		str	r1, [r7, #256]
 514              		.loc 1 218 36
 515 039c 93F90030 		ldrsb	r3, [r3]
 516              		.loc 1 218 28
 517 03a0 1946     		mov	r1, r3
 518              		.loc 1 218 42
 519 03a2 97F9EB30 		ldrsb	r3, [r7, #235]
 520 03a6 03FB01F3 		mul	r3, r3, r1
 521              		.loc 1 218 10
 522 03aa 1344     		add	r3, r3, r2
 523 03ac C7F8C830 		str	r3, [r7, #200]
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       *pScratchOut++ = in;
 524              		.loc 1 219 19
 525 03b0 D7F81031 		ldr	r3, [r7, #272]
 526 03b4 1A1D     		adds	r2, r3, #4
 527 03b6 C7F81021 		str	r2, [r7, #272]
 528              		.loc 1 219 22
 529 03ba D7F8C820 		ldr	r2, [r7, #200]
 530 03be 1A60     		str	r2, [r3]
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       /* Decrement loop counter */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       blkCnt--;
 531              		.loc 1 222 13
 532 03c0 D7F8F030 		ldr	r3, [r7, #240]
 533 03c4 013B     		subs	r3, r3, #1
 534 03c6 C7F8F030 		str	r3, [r7, #240]
ARM GAS  /tmp/ccEsDGUb.s 			page 124


 535              	.L18:
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     {
 536              		.loc 1 215 11
 537 03ca D7F8F030 		ldr	r3, [r7, #240]
 538 03ce 002B     		cmp	r3, #0
 539 03d0 DCD1     		bne	.L19
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     }
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Load the coefficient value and
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****      * increment the coefficient buffer for the next set of state values */
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     coeff = *pCoeffs++;
 540              		.loc 1 227 21
 541 03d2 D7F80431 		ldr	r3, [r7, #260]
 542 03d6 5A1C     		adds	r2, r3, #1
 543 03d8 C7F80421 		str	r2, [r7, #260]
 544              		.loc 1 227 11
 545 03dc 1B78     		ldrb	r3, [r3]
 546 03de 87F8EB30 		strb	r3, [r7, #235]
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Read Index, from where the state buffer should be read, is calculated. */
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     readIndex = (int32_t) (S->stateIndex - blockSize) - *pTapDelay++;
 547              		.loc 1 230 29
 548 03e2 FB68     		ldr	r3, [r7, #12]
 549 03e4 5B88     		ldrh	r3, [r3, #2]
 550 03e6 1A46     		mov	r2, r3
 551              		.loc 1 230 42
 552 03e8 D7F81431 		ldr	r3, [r7, #276]
 553 03ec D31A     		subs	r3, r2, r3
 554              		.loc 1 230 17
 555 03ee 1946     		mov	r1, r3
 556              		.loc 1 230 67
 557 03f0 D7F8F830 		ldr	r3, [r7, #248]
 558 03f4 1A1D     		adds	r2, r3, #4
 559 03f6 C7F8F820 		str	r2, [r7, #248]
 560              		.loc 1 230 57
 561 03fa 1B68     		ldr	r3, [r3]
 562              		.loc 1 230 55
 563 03fc CB1A     		subs	r3, r1, r3
 564              		.loc 1 230 15
 565 03fe 3B61     		str	r3, [r7, #16]
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Wraparound of readIndex */
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     if (readIndex < 0)
 566              		.loc 1 233 19
 567 0400 3B69     		ldr	r3, [r7, #16]
 568              		.loc 1 233 8
 569 0402 002B     		cmp	r3, #0
 570 0404 04DA     		bge	.L20
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     {
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****       readIndex += (int32_t) delaySize;
 571              		.loc 1 235 17
 572 0406 3A69     		ldr	r2, [r7, #16]
 573              		.loc 1 235 20
 574 0408 D7F8D830 		ldr	r3, [r7, #216]
 575              		.loc 1 235 17
 576 040c 1344     		add	r3, r3, r2
 577 040e 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccEsDGUb.s 			page 125


 578              	.L20:
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     }
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     tapCnt--;
 579              		.loc 1 239 11
 580 0410 D7F8F430 		ldr	r3, [r7, #244]
 581 0414 013B     		subs	r3, r3, #1
 582 0416 C7F8F430 		str	r3, [r7, #244]
 583              	.L13:
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 584              		.loc 1 168 9
 585 041a D7F8F430 		ldr	r3, [r7, #244]
 586 041e 002B     		cmp	r3, #0
 587 0420 7FF457AF 		bne	.L21
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Compute last tap without the final read of pTapDelay */
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for state buffer is updated */
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   py = pState;
 588              		.loc 1 245 6
 589 0424 D7F8E430 		ldr	r3, [r7, #228]
 590 0428 C7F8E030 		str	r3, [r7, #224]
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* blockSize samples are read from the state buffer */
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   arm_circularRead_q7(py, (int32_t) delaySize, &readIndex, 1,
 591              		.loc 1 248 3
 592 042c D7F8D820 		ldr	r2, [r7, #216]
 593 0430 D7F81431 		ldr	r3, [r7, #276]
 594 0434 D7F8E010 		ldr	r1, [r7, #224]
 595 0438 3964     		str	r1, [r7, #64]
 596 043a FA63     		str	r2, [r7, #60]
 597 043c 07F11002 		add	r2, r7, #16
 598 0440 BA63     		str	r2, [r7, #56]
 599 0442 0122     		movs	r2, #1
 600 0444 7A63     		str	r2, [r7, #52]
 601 0446 D7F8DC20 		ldr	r2, [r7, #220]
 602 044a 3A63     		str	r2, [r7, #48]
 603 044c D7F8DC20 		ldr	r2, [r7, #220]
 604 0450 FA62     		str	r2, [r7, #44]
 605 0452 BB62     		str	r3, [r7, #40]
 606 0454 0123     		movs	r3, #1
 607 0456 7B62     		str	r3, [r7, #36]
 608 0458 D7F81431 		ldr	r3, [r7, #276]
 609 045c 3B62     		str	r3, [r7, #32]
 610              	.LBB17:
 611              	.LBB18:
6196:./Libraries/CMSIS/DSP/Include/arm_math.h ****     int32_t rOffset;
 612              		.loc 2 6196 14
 613 045e 0023     		movs	r3, #0
 614 0460 FB61     		str	r3, [r7, #28]
6202:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 615              		.loc 2 6202 13
 616 0462 BB6B     		ldr	r3, [r7, #56]
 617 0464 1B68     		ldr	r3, [r3]
 618 0466 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccEsDGUb.s 			page 126


6204:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 619              		.loc 2 6204 24
 620 0468 BB6A     		ldr	r3, [r7, #40]
6204:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 621              		.loc 2 6204 13
 622 046a FA6A     		ldr	r2, [r7, #44]
 623 046c 1344     		add	r3, r3, r2
 624 046e 7B61     		str	r3, [r7, #20]
6207:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 625              		.loc 2 6207 7
 626 0470 3B6A     		ldr	r3, [r7, #32]
 627 0472 FB61     		str	r3, [r7, #28]
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 628              		.loc 2 6209 11
 629 0474 1FE0     		b	.L22
 630              	.L25:
6212:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 631              		.loc 2 6212 24
 632 0476 BB69     		ldr	r3, [r7, #24]
 633 0478 3A6C     		ldr	r2, [r7, #64]
 634 047a 1344     		add	r3, r3, r2
 635 047c 93F90020 		ldrsb	r2, [r3]
6212:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 636              		.loc 2 6212 12
 637 0480 3B6B     		ldr	r3, [r7, #48]
 638 0482 1A70     		strb	r2, [r3]
6215:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 639              		.loc 2 6215 11
 640 0484 7B6A     		ldr	r3, [r7, #36]
 641 0486 3A6B     		ldr	r2, [r7, #48]
 642 0488 1344     		add	r3, r3, r2
 643 048a 3B63     		str	r3, [r7, #48]
6217:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 644              		.loc 2 6217 10
 645 048c 7A69     		ldr	r2, [r7, #20]
 646 048e 3B6B     		ldr	r3, [r7, #48]
 647 0490 9A42     		cmp	r2, r3
 648 0492 01D1     		bne	.L23
6219:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 649              		.loc 2 6219 13
 650 0494 FB6A     		ldr	r3, [r7, #44]
 651 0496 3B63     		str	r3, [r7, #48]
 652              	.L23:
6223:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 653              		.loc 2 6223 15
 654 0498 BA69     		ldr	r2, [r7, #24]
 655 049a 7B6B     		ldr	r3, [r7, #52]
 656 049c 1344     		add	r3, r3, r2
 657 049e BB61     		str	r3, [r7, #24]
6225:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 658              		.loc 2 6225 10
 659 04a0 FA6B     		ldr	r2, [r7, #60]
 660 04a2 BB69     		ldr	r3, [r7, #24]
 661 04a4 9A42     		cmp	r2, r3
 662 04a6 03DC     		bgt	.L24
6227:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 663              		.loc 2 6227 17
ARM GAS  /tmp/ccEsDGUb.s 			page 127


 664 04a8 BA69     		ldr	r2, [r7, #24]
 665 04aa FB6B     		ldr	r3, [r7, #60]
 666 04ac D31A     		subs	r3, r2, r3
 667 04ae BB61     		str	r3, [r7, #24]
 668              	.L24:
6231:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 669              		.loc 2 6231 8
 670 04b0 FB69     		ldr	r3, [r7, #28]
 671 04b2 013B     		subs	r3, r3, #1
 672 04b4 FB61     		str	r3, [r7, #28]
 673              	.L22:
6209:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 674              		.loc 2 6209 11
 675 04b6 FB69     		ldr	r3, [r7, #28]
 676 04b8 002B     		cmp	r3, #0
 677 04ba DCD1     		bne	.L25
6235:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 678              		.loc 2 6235 17
 679 04bc BB6B     		ldr	r3, [r7, #56]
 680 04be BA69     		ldr	r2, [r7, #24]
 681 04c0 1A60     		str	r2, [r3]
 682              		.loc 2 6236 3
 683 04c2 00BF     		nop
 684              	.LBE18:
 685              	.LBE17:
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****                       pb, pb, (int32_t) blockSize, 1, blockSize);
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for the scratch buffer of state values */
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   px = pb;
 686              		.loc 1 252 6
 687 04c4 D7F8DC30 		ldr	r3, [r7, #220]
 688 04c8 C7F80031 		str	r3, [r7, #256]
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Working pointer for scratch buffer of output values */
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   pScratchOut = pScr2;
 689              		.loc 1 255 15
 690 04cc D7F8EC30 		ldr	r3, [r7, #236]
 691 04d0 C7F81031 		str	r3, [r7, #272]
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time. */
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize >> 2U;
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Perform Multiply-Accumulate */
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in = *pScratchOut + ((q31_t) *px++ * coeff);
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = in;
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in = *pScratchOut + ((q31_t) *px++ * coeff);
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = in;
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in = *pScratchOut + ((q31_t) *px++ * coeff);
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = in;
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in = *pScratchOut + ((q31_t) *px++ * coeff);
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = in;
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
ARM GAS  /tmp/ccEsDGUb.s 			page 128


 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize % 0x4U;
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #else
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Initialize blkCnt with number of samples */
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize;
 692              		.loc 1 285 10
 693 04d4 D7F81431 		ldr	r3, [r7, #276]
 694 04d8 C7F8F030 		str	r3, [r7, #240]
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 695              		.loc 1 289 9
 696 04dc 1EE0     		b	.L26
 697              	.L27:
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Perform Multiply-Accumulate */
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in = *pScratchOut + ((q31_t) *px++ * coeff);
 698              		.loc 1 292 10
 699 04de D7F81031 		ldr	r3, [r7, #272]
 700 04e2 1A68     		ldr	r2, [r3]
 701              		.loc 1 292 37
 702 04e4 D7F80031 		ldr	r3, [r7, #256]
 703 04e8 591C     		adds	r1, r3, #1
 704 04ea C7F80011 		str	r1, [r7, #256]
 705              		.loc 1 292 34
 706 04ee 93F90030 		ldrsb	r3, [r3]
 707              		.loc 1 292 26
 708 04f2 1946     		mov	r1, r3
 709              		.loc 1 292 40
 710 04f4 97F9EB30 		ldrsb	r3, [r7, #235]
 711 04f8 03FB01F3 		mul	r3, r3, r1
 712              		.loc 1 292 8
 713 04fc 1344     		add	r3, r3, r2
 714 04fe C7F8C830 		str	r3, [r7, #200]
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pScratchOut++ = in;
 715              		.loc 1 293 17
 716 0502 D7F81031 		ldr	r3, [r7, #272]
 717 0506 1A1D     		adds	r2, r3, #4
 718 0508 C7F81021 		str	r2, [r7, #272]
 719              		.loc 1 293 20
 720 050c D7F8C820 		ldr	r2, [r7, #200]
 721 0510 1A60     		str	r2, [r3]
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
 722              		.loc 1 296 11
 723 0512 D7F8F030 		ldr	r3, [r7, #240]
 724 0516 013B     		subs	r3, r3, #1
 725 0518 C7F8F030 		str	r3, [r7, #240]
 726              	.L26:
ARM GAS  /tmp/ccEsDGUb.s 			page 129


 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 727              		.loc 1 289 9
 728 051c D7F8F030 		ldr	r3, [r7, #240]
 729 0520 002B     		cmp	r3, #0
 730 0522 DCD1     		bne	.L27
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* All the output values are in pScratchOut buffer.
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****      Convert them into 1.15 format, saturate and store in the destination buffer. */
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time. */
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize >> 2U;
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in1 = (q7_t) __SSAT(*pScr2++ >> 7, 8);
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in2 = (q7_t) __SSAT(*pScr2++ >> 7, 8);
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in3 = (q7_t) __SSAT(*pScr2++ >> 7, 8);
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     in4 = (q7_t) __SSAT(*pScr2++ >> 7, 8);
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     write_q7x4_ia (&pOut, __PACKq7(in1, in2, in3, in4));
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize % 0x4U;
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #else
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   /* Initialize blkCnt with number of samples */
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   blkCnt = blockSize;
 731              		.loc 1 325 10
 732 0524 D7F81431 		ldr	r3, [r7, #276]
 733 0528 C7F8F030 		str	r3, [r7, #240]
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   while (blkCnt > 0U)
 734              		.loc 1 329 9
 735 052c 1CE0     		b	.L28
 736              	.L29:
 737              	.LBB19:
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     *pOut++ = (q7_t) __SSAT(*pScr2++ >> 7, 8);
 738              		.loc 1 331 22
 739 052e D7F8EC30 		ldr	r3, [r7, #236]
 740 0532 1A1D     		adds	r2, r3, #4
 741 0534 C7F8EC20 		str	r2, [r7, #236]
 742 0538 1B68     		ldr	r3, [r3]
 743 053a DB11     		asrs	r3, r3, #7
 744 053c C7F8D030 		str	r3, [r7, #208]
 745 0540 D7F8D030 		ldr	r3, [r7, #208]
 746              		.syntax unified
 747              	@ 331 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c" 1
ARM GAS  /tmp/ccEsDGUb.s 			page 130


 748 0544 03F30703 		ssat r3, #8, r3
 749              	@ 0 "" 2
 750              		.thumb
 751              		.syntax unified
 752 0548 C7F8CC30 		str	r3, [r7, #204]
 753 054c D7F8CC10 		ldr	r1, [r7, #204]
 754              	.LBE19:
 755              		.loc 1 331 10
 756 0550 D7F8FC30 		ldr	r3, [r7, #252]
 757 0554 5A1C     		adds	r2, r3, #1
 758 0556 C7F8FC20 		str	r2, [r7, #252]
 759              		.loc 1 331 15
 760 055a 4AB2     		sxtb	r2, r1
 761              		.loc 1 331 13
 762 055c 1A70     		strb	r2, [r3]
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     /* Decrement loop counter */
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****     blkCnt--;
 763              		.loc 1 334 11
 764 055e D7F8F030 		ldr	r3, [r7, #240]
 765 0562 013B     		subs	r3, r3, #1
 766 0564 C7F8F030 		str	r3, [r7, #240]
 767              	.L28:
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   {
 768              		.loc 1 329 9
 769 0568 D7F8F030 		ldr	r3, [r7, #240]
 770 056c 002B     		cmp	r3, #0
 771 056e DED1     		bne	.L29
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c ****   }
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** 
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_sparse_q7.c **** }
 772              		.loc 1 337 1
 773 0570 00BF     		nop
 774 0572 00BF     		nop
 775 0574 07F58677 		add	r7, r7, #268
 776              	.LCFI3:
 777              		.cfi_def_cfa_offset 4
 778 0578 BD46     		mov	sp, r7
 779              	.LCFI4:
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 057a 5DF8047B 		ldr	r7, [sp], #4
 783              	.LCFI5:
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 057e 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE145:
 790              		.text
 791              	.Letext0:
 792              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 793              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 794              		.file 5 "/usr/include/newlib/sys/_types.h"
 795              		.file 6 "/usr/include/newlib/sys/reent.h"
 796              		.file 7 "/usr/include/newlib/sys/lock.h"
 797              		.file 8 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccEsDGUb.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_fir_sparse_q7.c
     /tmp/ccEsDGUb.s:17     .text.arm_fir_sparse_q7:0000000000000000 $t
     /tmp/ccEsDGUb.s:25     .text.arm_fir_sparse_q7:0000000000000000 arm_fir_sparse_q7

NO UNDEFINED SYMBOLS
