ARM GAS  /tmp/ccUrfMQd.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cmplx_mult_real_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cmplx_mult_real_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_cmplx_mult_real_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_cmplx_mult_real_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c"
   1:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Title:        arm_cmplx_mult_real_f32.c
   4:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Description:  Floating-point complex by real multiplication
   5:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
ARM GAS  /tmp/ccUrfMQd.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @ingroup groupCmplxMath
  33:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @defgroup CmplxByRealMult Complex-by-Real Multiplication
  37:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   Multiplies a complex vector by a real vector and generates a complex result.
  39:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   The data in the complex arrays is stored in an interleaved fashion
  40:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   (real, imag, real, imag, ...).
  41:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   The parameter <code>numSamples</code> represents the number of complex
  42:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   samples processed.  The complex arrays have a total of <code>2*numSamples</code>
  43:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   real values while the real array has a total of <code>numSamples</code>
  44:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   real values.
  45:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  46:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   The underlying algorithm is used:
  47:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   <pre>
  49:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   for (n = 0; n < numSamples; n++) {
  50:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****       pCmplxDst[(2*n)+0] = pSrcCmplx[(2*n)+0] * pSrcReal[n];
  51:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****       pCmplxDst[(2*n)+1] = pSrcCmplx[(2*n)+1] * pSrcReal[n];
  52:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
  53:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   </pre>
  54:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  55:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  56:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  57:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  58:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  59:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @addtogroup CmplxByRealMult
  60:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @{
  61:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  62:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  63:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** /**
  64:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @brief         Floating-point complex-by-real multiplication.
  65:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @param[in]     pSrcCmplx   points to complex input vector
  66:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @param[in]     pSrcReal    points to real input vector
  67:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @param[out]    pCmplxDst   points to complex output vector
  68:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @param[in]     numSamples  number of samples in each vector
  69:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   @return        none
  70:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****  */
  71:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  72:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** void arm_cmplx_mult_real_f32(
  73:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   const float32_t * pSrcCmplx,
  74:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   const float32_t * pSrcReal,
  75:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         float32_t * pCmplxDst,
  76:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         uint32_t numSamples)
  77:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** {
  28              		.loc 1 77 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
ARM GAS  /tmp/ccUrfMQd.s 			page 3


  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
  78:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  79:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         float32_t in;                                  /* Temporary variable */
  80:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  81:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #if defined(ARM_MATH_NEON)
  82:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     float32x4_t r;
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     float32x4x2_t ab,outCplx;
  84:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Compute 4 outputs at a time */
  86:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt = numSamples >> 2U;
  87:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  88:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     while (blkCnt > 0U)
  89:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     {
  90:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         ab = vld2q_f32(pSrcCmplx);  // load & separate real/imag pSrcA (de-interleave 2)
  91:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         r = vld1q_f32(pSrcReal);  // load & separate real/imag pSrcB
  92:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 	/* Increment pointers */
  94:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         pSrcCmplx += 8;
  95:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         pSrcReal += 4;
  96:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
  97:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         outCplx.val[0] = vmulq_f32(ab.val[0], r);
  98:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         outCplx.val[1] = vmulq_f32(ab.val[1], r);
  99:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 100:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         vst2q_f32(pCmplxDst, outCplx);
 101:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         pCmplxDst += 8;
 102:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 103:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****         blkCnt--;
 104:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     }
 105:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 106:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Tail */
 107:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt = numSamples & 3;
 108:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #else
 109:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 110:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 111:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 112:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples >> 2U;
 113:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 114:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0U)
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 116:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i    ] = A[2 * i    ] * B[i]. */
 117:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i]. */
 118:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 119:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
 120:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result in destination buffer. */
 121:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 122:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 123:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 124:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
 125:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 126:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
ARM GAS  /tmp/ccUrfMQd.s 			page 4


 127:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 128:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
 129:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 130:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 131:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 132:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
 133:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++* in;
 134:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
 135:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 136:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement loop counter */
 137:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
 138:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 139:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 140:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 141:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples % 0x4U;
 142:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 143:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #else
 144:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 145:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   /* Initialize blkCnt with number of samples */
 146:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   blkCnt = numSamples;
  47              		.loc 1 146 10
  48 000e 3B68     		ldr	r3, [r7]
  49 0010 7B61     		str	r3, [r7, #20]
 147:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 148:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 149:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 150:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 151:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   while (blkCnt > 0U)
  50              		.loc 1 151 9
  51 0012 23E0     		b	.L2
  52              	.L3:
 152:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
 153:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i    ] = A[2 * i    ] * B[i]. */
 154:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i]. */
 155:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 156:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     in = *pSrcReal++;
  53              		.loc 1 156 19
  54 0014 BB68     		ldr	r3, [r7, #8]
  55 0016 1A1D     		adds	r2, r3, #4
  56 0018 BA60     		str	r2, [r7, #8]
  57              		.loc 1 156 8
  58 001a 1B68     		ldr	r3, [r3]	@ float
  59 001c 3B61     		str	r3, [r7, #16]	@ float
 157:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* store result in destination buffer. */
 158:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
  60              		.loc 1 158 30
  61 001e FB68     		ldr	r3, [r7, #12]
  62 0020 1A1D     		adds	r2, r3, #4
  63 0022 FA60     		str	r2, [r7, #12]
  64              		.loc 1 158 20
  65 0024 93ED007A 		vldr.32	s14, [r3]
  66              		.loc 1 158 15
  67 0028 7B68     		ldr	r3, [r7, #4]
  68 002a 1A1D     		adds	r2, r3, #4
  69 002c 7A60     		str	r2, [r7, #4]
  70              		.loc 1 158 33
  71 002e D7ED047A 		vldr.32	s15, [r7, #16]
ARM GAS  /tmp/ccUrfMQd.s 			page 5


  72 0032 67EE277A 		vmul.f32	s15, s14, s15
  73              		.loc 1 158 18
  74 0036 C3ED007A 		vstr.32	s15, [r3]
 159:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     *pCmplxDst++ = *pSrcCmplx++ * in;
  75              		.loc 1 159 30
  76 003a FB68     		ldr	r3, [r7, #12]
  77 003c 1A1D     		adds	r2, r3, #4
  78 003e FA60     		str	r2, [r7, #12]
  79              		.loc 1 159 20
  80 0040 93ED007A 		vldr.32	s14, [r3]
  81              		.loc 1 159 15
  82 0044 7B68     		ldr	r3, [r7, #4]
  83 0046 1A1D     		adds	r2, r3, #4
  84 0048 7A60     		str	r2, [r7, #4]
  85              		.loc 1 159 33
  86 004a D7ED047A 		vldr.32	s15, [r7, #16]
  87 004e 67EE277A 		vmul.f32	s15, s14, s15
  88              		.loc 1 159 18
  89 0052 C3ED007A 		vstr.32	s15, [r3]
 160:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 161:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     /* Decrement loop counter */
 162:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****     blkCnt--;
  90              		.loc 1 162 11
  91 0056 7B69     		ldr	r3, [r7, #20]
  92 0058 013B     		subs	r3, r3, #1
  93 005a 7B61     		str	r3, [r7, #20]
  94              	.L2:
 151:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   {
  95              		.loc 1 151 9
  96 005c 7B69     		ldr	r3, [r7, #20]
  97 005e 002B     		cmp	r3, #0
  98 0060 D8D1     		bne	.L3
 163:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c ****   }
 164:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** 
 165:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_real_f32.c **** }
  99              		.loc 1 165 1
 100 0062 00BF     		nop
 101 0064 00BF     		nop
 102 0066 1C37     		adds	r7, r7, #28
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105 0068 BD46     		mov	sp, r7
 106              	.LCFI4:
 107              		.cfi_def_cfa_register 13
 108              		@ sp needed
 109 006a 5DF8047B 		ldr	r7, [sp], #4
 110              	.LCFI5:
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 006e 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE145:
 117              		.text
 118              	.Letext0:
 119              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 120              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 121              		.file 4 "/usr/include/newlib/sys/_types.h"
ARM GAS  /tmp/ccUrfMQd.s 			page 6


 122              		.file 5 "/usr/include/newlib/sys/reent.h"
 123              		.file 6 "/usr/include/newlib/sys/lock.h"
 124              		.file 7 "/usr/include/newlib/math.h"
 125              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccUrfMQd.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cmplx_mult_real_f32.c
     /tmp/ccUrfMQd.s:17     .text.arm_cmplx_mult_real_f32:0000000000000000 $t
     /tmp/ccUrfMQd.s:25     .text.arm_cmplx_mult_real_f32:0000000000000000 arm_cmplx_mult_real_f32

NO UNDEFINED SYMBOLS
