ARM GAS  /tmp/ccEg2lBl.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RCC_DeInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @file    stm32h7xx_hal_rcc.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @verbatim
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSI 64MHz) with Flash 0 wait state,and all peripherals are off except
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       internal SRAM, Flash, JTAG and PWR
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) There is no pre-scaler on High speed (AHB) and Low speed (APB) buses;
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) All GPIOs are in analogue mode , except the JTAG pins which
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the AHB and APB buses pre-scalers
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /tmp/ccEg2lBl.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock kernel source(s) for peripherals which clocks are not
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           derived from the System clock through :RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           and RCC_D3CCIPR registers
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       from/to registers.
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Implemented Workaround:
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @endverbatim
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ******************************************************************************
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @attention
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #include "stm32h7xx_hal.h"
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @addtogroup STM32H7xx_HAL_Driver
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC  RCC
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  /tmp/ccEg2lBl.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()      __HAL_RCC_GPIOC_CLK_ENABLE()
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSE, HSI, LSE,CSI, LSI,HSI48, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB3, A
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        AHB2,AHB4,APB3, APB1L, APB1H, APB2, and APB4).
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSI (high-speed internal), 64 MHz factory-trimmed RC used directly or through
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              the PLL as System clock source.
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSI is a low-power RC oscillator which can be used directly as system clock, periphera
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock, or PLL input.But even with frequency calibration, is less accurate than an
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              external crystal oscillator or ceramic resonator.
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock source.
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 48 MHz crystal oscillator used directly or
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) PLL , The RCC features three independent PLLs (clocked by HSI , HSE or CSI),
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              featuring three different output clocks and able  to work either in integer or Fractio
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) A main PLL, PLL1, which is generally used to provide clocks to the CPU
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                 and to some peripherals.
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) Two dedicated PLLs, PLL2 and PLL3, which are used to generate the kernel clock for 
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccEg2lBl.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M NMI (Non-Mask-able Interrupt)
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              exception vector.
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO1 (micro controller clock output), used to output HSI, LSE, HSE, PLL1(PLL1_Q)
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              or HSI48 clock (through a configurable pre-scaler) on PA8 pin.
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO2 (micro controller clock output), used to output HSE, PLL2(PLL2_P), SYSCLK,
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              LSI, CSI, or PLL1(PLL1_P) clock (through a configurable pre-scaler) on PC9 pin.
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): CSI,HSI,
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              HSE and PLL.
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System core clock through configurable
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              pre-scaler and used to clock the CPU, memory and peripherals mapped
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              on AHB and APB bus of the 3 Domains (D1, D2, D3)* through configurable pre-scalers
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              and used to clock the peripherals mapped on these buses. You can use
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve system clock frequency.
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except those
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              with dual clock domain where kernel source clock could be selected through
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R and RCC_D3CCIPR registers.
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      (*) : 2 Domains (CD and SRD) for stm32h7a3xx and stm32h7b3xx family lines.
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSE, PLL1, PLL2 and PLL3 OFF
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - AHB, APB Bus pre-scaler set to 1.
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - All interrupts disabled
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - Peripheral clocks
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
  28              		.loc 1 191 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
ARM GAS  /tmp/ccEg2lBl.s 			page 5


  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Increasing the CPU frequency */
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLASH_LATENCY_DEFAULT  > __HAL_FLASH_GET_LATENCY())
  43              		.loc 1 195 31
  44 0006 894B     		ldr	r3, .L18
  45 0008 1B68     		ldr	r3, [r3]
  46 000a 03F00F03 		and	r3, r3, #15
  47              		.loc 1 195 5
  48 000e 062B     		cmp	r3, #6
  49 0010 0FD8     		bhi	.L2
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_DEFAULT);
  50              		.loc 1 198 5
  51 0012 864B     		ldr	r3, .L18
  52 0014 1B68     		ldr	r3, [r3]
  53 0016 23F00F03 		bic	r3, r3, #15
  54 001a 844A     		ldr	r2, .L18
  55 001c 43F00703 		orr	r3, r3, #7
  56 0020 1360     		str	r3, [r2]
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLASH_LATENCY_DEFAULT)
  57              		.loc 1 202 8
  58 0022 824B     		ldr	r3, .L18
  59 0024 1B68     		ldr	r3, [r3]
  60 0026 03F00F03 		and	r3, r3, #15
  61              		.loc 1 202 7
  62 002a 072B     		cmp	r3, #7
  63 002c 01D0     		beq	.L2
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
  64              		.loc 1 204 14
  65 002e 0123     		movs	r3, #1
  66 0030 F7E0     		b	.L3
  67              	.L2:
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  68              		.loc 1 211 15
  69 0032 FFF7FEFF 		bl	HAL_GetTick
  70 0036 7860     		str	r0, [r7, #4]
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSION bit */
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  71              		.loc 1 214 3
  72 0038 7D4B     		ldr	r3, .L18+4
ARM GAS  /tmp/ccEg2lBl.s 			page 6


  73 003a 1B68     		ldr	r3, [r3]
  74 003c 7C4A     		ldr	r2, .L18+4
  75 003e 43F00103 		orr	r3, r3, #1
  76 0042 1360     		str	r3, [r2]
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  77              		.loc 1 217 9
  78 0044 08E0     		b	.L4
  79              	.L5:
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  80              		.loc 1 219 10
  81 0046 FFF7FEFF 		bl	HAL_GetTick
  82 004a 0246     		mov	r2, r0
  83              		.loc 1 219 24
  84 004c 7B68     		ldr	r3, [r7, #4]
  85 004e D31A     		subs	r3, r2, r3
  86              		.loc 1 219 8
  87 0050 022B     		cmp	r3, #2
  88 0052 01D9     		bls	.L4
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
  89              		.loc 1 221 14
  90 0054 0323     		movs	r3, #3
  91 0056 E4E0     		b	.L3
  92              	.L4:
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  93              		.loc 1 217 10
  94 0058 754B     		ldr	r3, .L18+4
  95 005a 1B68     		ldr	r3, [r3]
  96 005c 03F00403 		and	r3, r3, #4
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  97              		.loc 1 217 9
  98 0060 002B     		cmp	r3, #0
  99 0062 F0D0     		beq	.L5
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSITRIM[6:0] bits to the reset value */
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM_6);
 100              		.loc 1 226 3
 101 0064 724B     		ldr	r3, .L18+4
 102 0066 5B68     		ldr	r3, [r3, #4]
 103 0068 714A     		ldr	r2, .L18+4
 104 006a 43F08043 		orr	r3, r3, #1073741824
 105 006e 5360     		str	r3, [r2, #4]
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CFGR register */
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 106              		.loc 1 229 3
 107 0070 6F4B     		ldr	r3, .L18+4
 108 0072 0022     		movs	r2, #0
 109 0074 1A61     		str	r2, [r3, #16]
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock and SystemD2Clock global variables */
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
ARM GAS  /tmp/ccEg2lBl.s 			page 7


 110              		.loc 1 232 19
 111 0076 6F4B     		ldr	r3, .L18+8
 112 0078 6F4A     		ldr	r2, .L18+12
 113 007a 1A60     		str	r2, [r3]
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = HSI_VALUE;
 114              		.loc 1 233 17
 115 007c 6F4B     		ldr	r3, .L18+16
 116 007e 6E4A     		ldr	r2, .L18+12
 117 0080 1A60     		str	r2, [r3]
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 118              		.loc 1 236 6
 119 0082 6F4B     		ldr	r3, .L18+20
 120 0084 1B68     		ldr	r3, [r3]
 121 0086 1846     		mov	r0, r3
 122 0088 FFF7FEFF 		bl	HAL_InitTick
 123 008c 0346     		mov	r3, r0
 124              		.loc 1 236 5
 125 008e 002B     		cmp	r3, #0
 126 0090 01D0     		beq	.L6
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 127              		.loc 1 238 12
 128 0092 0123     		movs	r3, #1
 129 0094 C5E0     		b	.L3
 130              	.L6:
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 131              		.loc 1 242 15
 132 0096 FFF7FEFF 		bl	HAL_GetTick
 133 009a 7860     		str	r0, [r7, #4]
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != 0U)
 134              		.loc 1 245 9
 135 009c 0AE0     		b	.L7
 136              	.L8:
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 137              		.loc 1 247 10
 138 009e FFF7FEFF 		bl	HAL_GetTick
 139 00a2 0246     		mov	r2, r0
 140              		.loc 1 247 24
 141 00a4 7B68     		ldr	r3, [r7, #4]
 142 00a6 D31A     		subs	r3, r2, r3
 143              		.loc 1 247 8
 144 00a8 41F28832 		movw	r2, #5000
 145 00ac 9342     		cmp	r3, r2
 146 00ae 01D9     		bls	.L7
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 147              		.loc 1 249 14
 148 00b0 0323     		movs	r3, #3
 149 00b2 B6E0     		b	.L3
ARM GAS  /tmp/ccEg2lBl.s 			page 8


 150              	.L7:
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 151              		.loc 1 245 10
 152 00b4 5E4B     		ldr	r3, .L18+4
 153 00b6 1B69     		ldr	r3, [r3, #16]
 154 00b8 03F03803 		and	r3, r3, #56
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 155              		.loc 1 245 9
 156 00bc 002B     		cmp	r3, #0
 157 00be EED1     		bne	.L8
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 158              		.loc 1 254 15
 159 00c0 FFF7FEFF 		bl	HAL_GetTick
 160 00c4 7860     		str	r0, [r7, #4]
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CSION, CSIKERON, HSEON, HSI48ON, HSECSSON, HSIDIV bits */
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSIKERON| RCC_CR_HSIDIV| RCC_CR_HSIDIVF| RCC_CR_CSION | 
 161              		.loc 1 257 3
 162 00c6 5A4B     		ldr	r3, .L18+4
 163 00c8 1A68     		ldr	r2, [r3]
 164 00ca 5949     		ldr	r1, .L18+4
 165 00cc 5D4B     		ldr	r3, .L18+24
 166 00ce 1340     		ands	r3, r3, r2
 167 00d0 0B60     		str	r3, [r1]
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 168              		.loc 1 261 9
 169 00d2 08E0     		b	.L9
 170              	.L10:
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 171              		.loc 1 263 10
 172 00d4 FFF7FEFF 		bl	HAL_GetTick
 173 00d8 0246     		mov	r2, r0
 174              		.loc 1 263 24
 175 00da 7B68     		ldr	r3, [r7, #4]
 176 00dc D31A     		subs	r3, r2, r3
 177              		.loc 1 263 8
 178 00de 642B     		cmp	r3, #100
 179 00e0 01D9     		bls	.L9
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 180              		.loc 1 265 14
 181 00e2 0323     		movs	r3, #3
 182 00e4 9DE0     		b	.L3
 183              	.L9:
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 184              		.loc 1 261 10
 185 00e6 524B     		ldr	r3, .L18+4
 186 00e8 1B68     		ldr	r3, [r3]
 187 00ea 03F40033 		and	r3, r3, #131072
ARM GAS  /tmp/ccEg2lBl.s 			page 9


 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 188              		.loc 1 261 9
 189 00ee 002B     		cmp	r3, #0
 190 00f0 F0D1     		bne	.L10
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 191              		.loc 1 270 15
 192 00f2 FFF7FEFF 		bl	HAL_GetTick
 193 00f6 7860     		str	r0, [r7, #4]
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear PLLON bit */
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 194              		.loc 1 273 3
 195 00f8 4D4B     		ldr	r3, .L18+4
 196 00fa 1B68     		ldr	r3, [r3]
 197 00fc 4C4A     		ldr	r2, .L18+4
 198 00fe 23F08073 		bic	r3, r3, #16777216
 199 0102 1360     		str	r3, [r2]
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 200              		.loc 1 276 9
 201 0104 08E0     		b	.L11
 202              	.L12:
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 203              		.loc 1 278 10
 204 0106 FFF7FEFF 		bl	HAL_GetTick
 205 010a 0246     		mov	r2, r0
 206              		.loc 1 278 24
 207 010c 7B68     		ldr	r3, [r7, #4]
 208 010e D31A     		subs	r3, r2, r3
 209              		.loc 1 278 8
 210 0110 022B     		cmp	r3, #2
 211 0112 01D9     		bls	.L11
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 212              		.loc 1 280 14
 213 0114 0323     		movs	r3, #3
 214 0116 84E0     		b	.L3
 215              	.L11:
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 216              		.loc 1 276 10
 217 0118 454B     		ldr	r3, .L18+4
 218 011a 1B68     		ldr	r3, [r3]
 219 011c 03F00073 		and	r3, r3, #33554432
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 220              		.loc 1 276 9
 221 0120 002B     		cmp	r3, #0
 222 0122 F0D1     		bne	.L12
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
ARM GAS  /tmp/ccEg2lBl.s 			page 10


 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 223              		.loc 1 285 15
 224 0124 FFF7FEFF 		bl	HAL_GetTick
 225 0128 7860     		str	r0, [r7, #4]
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2ON bit */
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 226              		.loc 1 288 3
 227 012a 414B     		ldr	r3, .L18+4
 228 012c 1B68     		ldr	r3, [r3]
 229 012e 404A     		ldr	r2, .L18+4
 230 0130 23F08063 		bic	r3, r3, #67108864
 231 0134 1360     		str	r3, [r2]
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != 0U)
 232              		.loc 1 291 9
 233 0136 08E0     		b	.L13
 234              	.L14:
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 235              		.loc 1 293 10
 236 0138 FFF7FEFF 		bl	HAL_GetTick
 237 013c 0246     		mov	r2, r0
 238              		.loc 1 293 24
 239 013e 7B68     		ldr	r3, [r7, #4]
 240 0140 D31A     		subs	r3, r2, r3
 241              		.loc 1 293 8
 242 0142 022B     		cmp	r3, #2
 243 0144 01D9     		bls	.L13
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 244              		.loc 1 295 14
 245 0146 0323     		movs	r3, #3
 246 0148 6BE0     		b	.L3
 247              	.L13:
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 248              		.loc 1 291 10
 249 014a 394B     		ldr	r3, .L18+4
 250 014c 1B68     		ldr	r3, [r3]
 251 014e 03F00063 		and	r3, r3, #134217728
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 252              		.loc 1 291 9
 253 0152 002B     		cmp	r3, #0
 254 0154 F0D1     		bne	.L14
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 255              		.loc 1 300 15
 256 0156 FFF7FEFF 		bl	HAL_GetTick
 257 015a 7860     		str	r0, [r7, #4]
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3 bit */
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 258              		.loc 1 303 3
ARM GAS  /tmp/ccEg2lBl.s 			page 11


 259 015c 344B     		ldr	r3, .L18+4
 260 015e 1B68     		ldr	r3, [r3]
 261 0160 334A     		ldr	r2, .L18+4
 262 0162 23F08053 		bic	r3, r3, #268435456
 263 0166 1360     		str	r3, [r2]
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != 0U)
 264              		.loc 1 306 9
 265 0168 08E0     		b	.L15
 266              	.L16:
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 267              		.loc 1 308 10
 268 016a FFF7FEFF 		bl	HAL_GetTick
 269 016e 0246     		mov	r2, r0
 270              		.loc 1 308 24
 271 0170 7B68     		ldr	r3, [r7, #4]
 272 0172 D31A     		subs	r3, r2, r3
 273              		.loc 1 308 8
 274 0174 022B     		cmp	r3, #2
 275 0176 01D9     		bls	.L15
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 276              		.loc 1 310 14
 277 0178 0323     		movs	r3, #3
 278 017a 52E0     		b	.L3
 279              	.L15:
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 280              		.loc 1 306 10
 281 017c 2C4B     		ldr	r3, .L18+4
 282 017e 1B68     		ldr	r3, [r3]
 283 0180 03F00053 		and	r3, r3, #536870912
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 284              		.loc 1 306 9
 285 0184 002B     		cmp	r3, #0
 286 0186 F0D1     		bne	.L16
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D1CFGR register */
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D1CFGR);
 287              		.loc 1 316 3
 288 0188 294B     		ldr	r3, .L18+4
 289 018a 0022     		movs	r2, #0
 290 018c 9A61     		str	r2, [r3, #24]
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D2CFGR register */
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D2CFGR);
 291              		.loc 1 319 3
 292 018e 284B     		ldr	r3, .L18+4
 293 0190 0022     		movs	r2, #0
 294 0192 DA61     		str	r2, [r3, #28]
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D3CFGR register */
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D3CFGR);
ARM GAS  /tmp/ccEg2lBl.s 			page 12


 295              		.loc 1 322 3
 296 0194 264B     		ldr	r3, .L18+4
 297 0196 0022     		movs	r2, #0
 298 0198 1A62     		str	r2, [r3, #32]
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CDCFGR1 register */
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CDCFGR1);
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CDCFGR2 register */
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CDCFGR2);
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset SRDCFGR register */
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->SRDCFGR);
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCKSELR register to default value */
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC->PLLCKSELR= RCC_PLLCKSELR_DIVM1_5|RCC_PLLCKSELR_DIVM2_5|RCC_PLLCKSELR_DIVM3_5;
 299              		.loc 1 335 6
 300 019a 254B     		ldr	r3, .L18+4
 301              		.loc 1 335 17
 302 019c 2A4A     		ldr	r2, .L18+28
 303 019e 9A62     		str	r2, [r3, #40]
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCFGR register to default value */
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLLCFGR, 0x01FF0000U);
 304              		.loc 1 338 3
 305 01a0 234B     		ldr	r3, .L18+4
 306 01a2 2A4A     		ldr	r2, .L18+32
 307 01a4 DA62     		str	r2, [r3, #44]
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1DIVR register to default value */
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL1DIVR,0x01010280U);
 308              		.loc 1 341 3
 309 01a6 224B     		ldr	r3, .L18+4
 310 01a8 294A     		ldr	r2, .L18+36
 311 01aa 1A63     		str	r2, [r3, #48]
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1FRACR register */
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL1FRACR);
 312              		.loc 1 344 3
 313 01ac 204B     		ldr	r3, .L18+4
 314 01ae 0022     		movs	r2, #0
 315 01b0 5A63     		str	r2, [r3, #52]
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2DIVR register to default value */
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL2DIVR,0x01010280U);
 316              		.loc 1 347 3
 317 01b2 1F4B     		ldr	r3, .L18+4
 318 01b4 264A     		ldr	r2, .L18+36
 319 01b6 9A63     		str	r2, [r3, #56]
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2FRACR register */
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL2FRACR);
 320              		.loc 1 350 3
 321 01b8 1D4B     		ldr	r3, .L18+4
 322 01ba 0022     		movs	r2, #0
 323 01bc DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/ccEg2lBl.s 			page 13


 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3DIVR register to default value */
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL3DIVR,0x01010280U);
 324              		.loc 1 353 3
 325 01be 1C4B     		ldr	r3, .L18+4
 326 01c0 234A     		ldr	r2, .L18+36
 327 01c2 1A64     		str	r2, [r3, #64]
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3FRACR register */
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL3FRACR);
 328              		.loc 1 356 3
 329 01c4 1A4B     		ldr	r3, .L18+4
 330 01c6 0022     		movs	r2, #0
 331 01c8 5A64     		str	r2, [r3, #68]
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_CR_HSEEXT)
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEEXT  */
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEEXT);
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_CR_HSEEXT */
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 332              		.loc 1 364 3
 333 01ca 194B     		ldr	r3, .L18+4
 334 01cc 1B68     		ldr	r3, [r3]
 335 01ce 184A     		ldr	r2, .L18+4
 336 01d0 23F48023 		bic	r3, r3, #262144
 337 01d4 1360     		str	r3, [r2]
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Disable all interrupts */
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 338              		.loc 1 367 3
 339 01d6 164B     		ldr	r3, .L18+4
 340 01d8 0022     		movs	r2, #0
 341 01da 1A66     		str	r2, [r3, #96]
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear all interrupts flags */
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->CICR,0xFFFFFFFFU);
 342              		.loc 1 370 3
 343 01dc 144B     		ldr	r3, .L18+4
 344 01de 4FF0FF32 		mov	r2, #-1
 345 01e2 9A66     		str	r2, [r3, #104]
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset all RSR flags */
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->RSR, RCC_RSR_RMVF);
 346              		.loc 1 373 3
 347 01e4 124B     		ldr	r3, .L18+4
 348 01e6 D3F8D030 		ldr	r3, [r3, #208]
 349 01ea 114A     		ldr	r2, .L18+4
 350 01ec 43F48033 		orr	r3, r3, #65536
 351 01f0 C2F8D030 		str	r3, [r2, #208]
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Decreasing the number of wait states because of lower CPU frequency */
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLASH_LATENCY_DEFAULT  < __HAL_FLASH_GET_LATENCY())
 352              		.loc 1 376 31
 353 01f4 0D4B     		ldr	r3, .L18
 354 01f6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccEg2lBl.s 			page 14


 355              		.loc 1 376 29
 356 01f8 03F00803 		and	r3, r3, #8
 357              		.loc 1 376 5
 358 01fc 002B     		cmp	r3, #0
 359 01fe 0FD0     		beq	.L17
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_DEFAULT);
 360              		.loc 1 379 5
 361 0200 0A4B     		ldr	r3, .L18
 362 0202 1B68     		ldr	r3, [r3]
 363 0204 23F00F03 		bic	r3, r3, #15
 364 0208 084A     		ldr	r2, .L18
 365 020a 43F00703 		orr	r3, r3, #7
 366 020e 1360     		str	r3, [r2]
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLASH_LATENCY_DEFAULT)
 367              		.loc 1 383 8
 368 0210 064B     		ldr	r3, .L18
 369 0212 1B68     		ldr	r3, [r3]
 370 0214 03F00F03 		and	r3, r3, #15
 371              		.loc 1 383 7
 372 0218 072B     		cmp	r3, #7
 373 021a 01D0     		beq	.L17
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 374              		.loc 1 385 14
 375 021c 0123     		movs	r3, #1
 376 021e 00E0     		b	.L3
 377              	.L17:
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 378              		.loc 1 390 10
 379 0220 0023     		movs	r3, #0
 380              	.L3:
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 381              		.loc 1 391 1
 382 0222 1846     		mov	r0, r3
 383 0224 0837     		adds	r7, r7, #8
 384              	.LCFI3:
 385              		.cfi_def_cfa_offset 8
 386 0226 BD46     		mov	sp, r7
 387              	.LCFI4:
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 0228 80BD     		pop	{r7, pc}
 391              	.L19:
 392 022a 00BF     		.align	2
 393              	.L18:
 394 022c 00200052 		.word	1375739904
 395 0230 00440258 		.word	1476543488
 396 0234 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/ccEg2lBl.s 			page 15


 397 0238 0090D003 		.word	64000000
 398 023c 00000000 		.word	SystemD2Clock
 399 0240 00000000 		.word	uwTickPrio
 400 0244 45EDF6FF 		.word	-594619
 401 0248 00020202 		.word	33686016
 402 024c 0000FF01 		.word	33488896
 403 0250 80020101 		.word	16843392
 404              		.cfi_endproc
 405              	.LFE331:
 407              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 408              		.align	1
 409              		.weak	HAL_RCC_OscConfig
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv5-d16
 415              	HAL_RCC_OscConfig:
 416              	.LFB332:
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 417              		.loc 1 408 1
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 48
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421 0000 80B5     		push	{r7, lr}
 422              	.LCFI5:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 8CB0     		sub	sp, sp, #48
 427              	.LCFI6:
 428              		.cfi_def_cfa_offset 56
 429 0004 00AF     		add	r7, sp, #0
 430              	.LCFI7:
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t temp1_pllckcfg, temp2_pllckcfg;
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check Null pointer */
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 433              		.loc 1 413 5
ARM GAS  /tmp/ccEg2lBl.s 			page 16


 434 0008 7B68     		ldr	r3, [r7, #4]
 435 000a 002B     		cmp	r3, #0
 436 000c 01D1     		bne	.L21
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 437              		.loc 1 415 12
 438 000e 0123     		movs	r3, #1
 439 0010 FFE3     		b	.L22
 440              	.L21:
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 441              		.loc 1 421 25
 442 0012 7B68     		ldr	r3, [r7, #4]
 443 0014 1B68     		ldr	r3, [r3]
 444              		.loc 1 421 43
 445 0016 03F00103 		and	r3, r3, #1
 446              		.loc 1 421 5
 447 001a 002B     		cmp	r3, #0
 448 001c 00F08780 		beq	.L23
 449              	.LBB2:
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 450              		.loc 1 426 37
 451 0020 994B     		ldr	r3, .L99
 452 0022 1B69     		ldr	r3, [r3, #16]
 453              		.loc 1 426 20
 454 0024 03F03803 		and	r3, r3, #56
 455 0028 FB62     		str	r3, [r7, #44]
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 456              		.loc 1 427 40
 457 002a 974B     		ldr	r3, .L99
 458              		.loc 1 427 20
 459 002c 9B6A     		ldr	r3, [r3, #40]
 460 002e BB62     		str	r3, [r7, #40]
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 461              		.loc 1 429 7
 462 0030 FB6A     		ldr	r3, [r7, #44]
 463 0032 102B     		cmp	r3, #16
 464 0034 07D0     		beq	.L24
 465              		.loc 1 429 45 discriminator 1
 466 0036 FB6A     		ldr	r3, [r7, #44]
 467 0038 182B     		cmp	r3, #24
 468 003a 10D1     		bne	.L25
 469              		.loc 1 429 107 discriminator 2
 470 003c BB6A     		ldr	r3, [r7, #40]
 471 003e 03F00303 		and	r3, r3, #3
 472              		.loc 1 429 87 discriminator 2
 473 0042 022B     		cmp	r3, #2
 474 0044 0BD1     		bne	.L25
ARM GAS  /tmp/ccEg2lBl.s 			page 17


 475              	.L24:
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF
 476              		.loc 1 431 11
 477 0046 904B     		ldr	r3, .L99
 478 0048 1B68     		ldr	r3, [r3]
 479 004a 03F40033 		and	r3, r3, #131072
 480              		.loc 1 431 9
 481 004e 002B     		cmp	r3, #0
 482 0050 6CD0     		beq	.L98
 483              		.loc 1 431 75 discriminator 1
 484 0052 7B68     		ldr	r3, [r7, #4]
 485 0054 5B68     		ldr	r3, [r3, #4]
 486              		.loc 1 431 54 discriminator 1
 487 0056 002B     		cmp	r3, #0
 488 0058 68D1     		bne	.L98
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 489              		.loc 1 433 16
 490 005a 0123     		movs	r3, #1
 491 005c D9E3     		b	.L22
 492              	.L25:
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 493              		.loc 1 439 7
 494 005e 7B68     		ldr	r3, [r7, #4]
 495 0060 5B68     		ldr	r3, [r3, #4]
 496 0062 B3F5803F 		cmp	r3, #65536
 497 0066 06D1     		bne	.L27
 498              		.loc 1 439 7 is_stmt 0 discriminator 1
 499 0068 874B     		ldr	r3, .L99
 500 006a 1B68     		ldr	r3, [r3]
 501 006c 864A     		ldr	r2, .L99
 502 006e 43F48033 		orr	r3, r3, #65536
 503 0072 1360     		str	r3, [r2]
 504 0074 2EE0     		b	.L28
 505              	.L27:
 506              		.loc 1 439 7 discriminator 2
 507 0076 7B68     		ldr	r3, [r7, #4]
 508 0078 5B68     		ldr	r3, [r3, #4]
 509 007a 002B     		cmp	r3, #0
 510 007c 0CD1     		bne	.L29
 511              		.loc 1 439 7 discriminator 3
 512 007e 824B     		ldr	r3, .L99
 513 0080 1B68     		ldr	r3, [r3]
 514 0082 814A     		ldr	r2, .L99
 515 0084 23F48033 		bic	r3, r3, #65536
 516 0088 1360     		str	r3, [r2]
 517 008a 7F4B     		ldr	r3, .L99
 518 008c 1B68     		ldr	r3, [r3]
 519 008e 7E4A     		ldr	r2, .L99
 520 0090 23F48023 		bic	r3, r3, #262144
 521 0094 1360     		str	r3, [r2]
ARM GAS  /tmp/ccEg2lBl.s 			page 18


 522 0096 1DE0     		b	.L28
 523              	.L29:
 524              		.loc 1 439 7 discriminator 4
 525 0098 7B68     		ldr	r3, [r7, #4]
 526 009a 5B68     		ldr	r3, [r3, #4]
 527 009c B3F5A02F 		cmp	r3, #327680
 528 00a0 0CD1     		bne	.L30
 529              		.loc 1 439 7 discriminator 5
 530 00a2 794B     		ldr	r3, .L99
 531 00a4 1B68     		ldr	r3, [r3]
 532 00a6 784A     		ldr	r2, .L99
 533 00a8 43F48023 		orr	r3, r3, #262144
 534 00ac 1360     		str	r3, [r2]
 535 00ae 764B     		ldr	r3, .L99
 536 00b0 1B68     		ldr	r3, [r3]
 537 00b2 754A     		ldr	r2, .L99
 538 00b4 43F48033 		orr	r3, r3, #65536
 539 00b8 1360     		str	r3, [r2]
 540 00ba 0BE0     		b	.L28
 541              	.L30:
 542              		.loc 1 439 7 discriminator 6
 543 00bc 724B     		ldr	r3, .L99
 544 00be 1B68     		ldr	r3, [r3]
 545 00c0 714A     		ldr	r2, .L99
 546 00c2 23F48033 		bic	r3, r3, #65536
 547 00c6 1360     		str	r3, [r2]
 548 00c8 6F4B     		ldr	r3, .L99
 549 00ca 1B68     		ldr	r3, [r3]
 550 00cc 6E4A     		ldr	r2, .L99
 551 00ce 23F48023 		bic	r3, r3, #262144
 552 00d2 1360     		str	r3, [r2]
 553              	.L28:
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSE State */
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 554              		.loc 1 442 27 is_stmt 1
 555 00d4 7B68     		ldr	r3, [r7, #4]
 556 00d6 5B68     		ldr	r3, [r3, #4]
 557              		.loc 1 442 9
 558 00d8 002B     		cmp	r3, #0
 559 00da 13D0     		beq	.L31
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 560              		.loc 1 445 21
 561 00dc FFF7FEFF 		bl	HAL_GetTick
 562 00e0 7862     		str	r0, [r7, #36]
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 563              		.loc 1 448 14
 564 00e2 08E0     		b	.L32
 565              	.L33:
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 566              		.loc 1 450 26
 567 00e4 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccEg2lBl.s 			page 19


 568 00e8 0246     		mov	r2, r0
 569              		.loc 1 450 40
 570 00ea 7B6A     		ldr	r3, [r7, #36]
 571 00ec D31A     		subs	r3, r2, r3
 572              		.loc 1 450 13
 573 00ee 642B     		cmp	r3, #100
 574 00f0 01D9     		bls	.L32
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 575              		.loc 1 452 20
 576 00f2 0323     		movs	r3, #3
 577 00f4 8DE3     		b	.L22
 578              	.L32:
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 579              		.loc 1 448 15
 580 00f6 644B     		ldr	r3, .L99
 581 00f8 1B68     		ldr	r3, [r3]
 582 00fa 03F40033 		and	r3, r3, #131072
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 583              		.loc 1 448 14
 584 00fe 002B     		cmp	r3, #0
 585 0100 F0D0     		beq	.L33
 586 0102 14E0     		b	.L23
 587              	.L31:
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 588              		.loc 1 459 21
 589 0104 FFF7FEFF 		bl	HAL_GetTick
 590 0108 7862     		str	r0, [r7, #36]
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 591              		.loc 1 462 14
 592 010a 08E0     		b	.L34
 593              	.L35:
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 594              		.loc 1 464 26
 595 010c FFF7FEFF 		bl	HAL_GetTick
 596 0110 0246     		mov	r2, r0
 597              		.loc 1 464 40
 598 0112 7B6A     		ldr	r3, [r7, #36]
 599 0114 D31A     		subs	r3, r2, r3
 600              		.loc 1 464 13
 601 0116 642B     		cmp	r3, #100
 602 0118 01D9     		bls	.L34
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 603              		.loc 1 466 20
 604 011a 0323     		movs	r3, #3
 605 011c 79E3     		b	.L22
 606              	.L34:
ARM GAS  /tmp/ccEg2lBl.s 			page 20


 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 607              		.loc 1 462 15
 608 011e 5A4B     		ldr	r3, .L99
 609 0120 1B68     		ldr	r3, [r3]
 610 0122 03F40033 		and	r3, r3, #131072
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 611              		.loc 1 462 14
 612 0126 002B     		cmp	r3, #0
 613 0128 F0D1     		bne	.L35
 614 012a 00E0     		b	.L23
 615              	.L98:
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 616              		.loc 1 431 9
 617 012c 00BF     		nop
 618              	.L23:
 619              	.LBE2:
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 620              		.loc 1 473 25
 621 012e 7B68     		ldr	r3, [r7, #4]
 622 0130 1B68     		ldr	r3, [r3]
 623              		.loc 1 473 43
 624 0132 03F00203 		and	r3, r3, #2
 625              		.loc 1 473 5
 626 0136 002B     		cmp	r3, #0
 627 0138 00F0AE80 		beq	.L36
 628              	.LBB3:
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSI is used as system clock it will not be disabled */
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 629              		.loc 1 480 37
 630 013c 524B     		ldr	r3, .L99
 631 013e 1B69     		ldr	r3, [r3, #16]
 632              		.loc 1 480 20
 633 0140 03F03803 		and	r3, r3, #56
 634 0144 3B62     		str	r3, [r7, #32]
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 635              		.loc 1 481 40
 636 0146 504B     		ldr	r3, .L99
 637              		.loc 1 481 20
 638 0148 9B6A     		ldr	r3, [r3, #40]
 639 014a FB61     		str	r3, [r7, #28]
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 640              		.loc 1 482 7
 641 014c 3B6A     		ldr	r3, [r7, #32]
 642 014e 002B     		cmp	r3, #0
 643 0150 07D0     		beq	.L37
 644              		.loc 1 482 45 discriminator 1
ARM GAS  /tmp/ccEg2lBl.s 			page 21


 645 0152 3B6A     		ldr	r3, [r7, #32]
 646 0154 182B     		cmp	r3, #24
 647 0156 3AD1     		bne	.L38
 648              		.loc 1 482 107 discriminator 2
 649 0158 FB69     		ldr	r3, [r7, #28]
 650 015a 03F00303 		and	r3, r3, #3
 651              		.loc 1 482 87 discriminator 2
 652 015e 002B     		cmp	r3, #0
 653 0160 35D1     		bne	.L38
 654              	.L37:
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF
 655              		.loc 1 485 11
 656 0162 494B     		ldr	r3, .L99
 657 0164 1B68     		ldr	r3, [r3]
 658 0166 03F00403 		and	r3, r3, #4
 659              		.loc 1 485 9
 660 016a 002B     		cmp	r3, #0
 661 016c 05D0     		beq	.L39
 662              		.loc 1 485 75 discriminator 1
 663 016e 7B68     		ldr	r3, [r7, #4]
 664 0170 DB68     		ldr	r3, [r3, #12]
 665              		.loc 1 485 54 discriminator 1
 666 0172 002B     		cmp	r3, #0
 667 0174 01D1     		bne	.L39
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 668              		.loc 1 487 16
 669 0176 0123     		movs	r3, #1
 670 0178 4BE3     		b	.L22
 671              	.L39:
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 672              		.loc 1 493 9
 673 017a FFF7FEFF 		bl	HAL_GetREVID
 674 017e 0346     		mov	r3, r0
 675 0180 41F20302 		movw	r2, #4099
 676 0184 9342     		cmp	r3, r2
 677 0186 17D8     		bhi	.L40
 678              		.loc 1 493 9 is_stmt 0 discriminator 1
 679 0188 7B68     		ldr	r3, [r7, #4]
 680 018a 1B69     		ldr	r3, [r3, #16]
 681 018c 402B     		cmp	r3, #64
 682 018e 08D1     		bne	.L41
 683              		.loc 1 493 9 discriminator 3
 684 0190 3D4B     		ldr	r3, .L99
 685 0192 5B68     		ldr	r3, [r3, #4]
 686 0194 23F47C33 		bic	r3, r3, #258048
 687 0198 3B4A     		ldr	r2, .L99
 688 019a 43F40033 		orr	r3, r3, #131072
 689 019e 5360     		str	r3, [r2, #4]
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccEg2lBl.s 			page 22


 690              		.loc 1 485 9 is_stmt 1 discriminator 3
 691 01a0 7AE0     		b	.L36
 692              	.L41:
 693              		.loc 1 493 9 discriminator 4
 694 01a2 394B     		ldr	r3, .L99
 695 01a4 5B68     		ldr	r3, [r3, #4]
 696 01a6 23F47C32 		bic	r2, r3, #258048
 697 01aa 7B68     		ldr	r3, [r7, #4]
 698 01ac 1B69     		ldr	r3, [r3, #16]
 699 01ae 1B03     		lsls	r3, r3, #12
 700 01b0 3549     		ldr	r1, .L99
 701 01b2 1343     		orrs	r3, r3, r2
 702 01b4 4B60     		str	r3, [r1, #4]
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 703              		.loc 1 485 9 discriminator 4
 704 01b6 6FE0     		b	.L36
 705              	.L40:
 706              		.loc 1 493 9 discriminator 2
 707 01b8 334B     		ldr	r3, .L99
 708 01ba 5B68     		ldr	r3, [r3, #4]
 709 01bc 23F0FE42 		bic	r2, r3, #2130706432
 710 01c0 7B68     		ldr	r3, [r7, #4]
 711 01c2 1B69     		ldr	r3, [r3, #16]
 712 01c4 1B06     		lsls	r3, r3, #24
 713 01c6 3049     		ldr	r1, .L99
 714 01c8 1343     		orrs	r3, r3, r2
 715 01ca 4B60     		str	r3, [r1, #4]
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 716              		.loc 1 485 9 discriminator 2
 717 01cc 64E0     		b	.L36
 718              	.L38:
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSI State */
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 719              		.loc 1 500 28
 720 01ce 7B68     		ldr	r3, [r7, #4]
 721 01d0 DB68     		ldr	r3, [r3, #12]
 722              		.loc 1 500 9
 723 01d2 002B     		cmp	r3, #0
 724 01d4 45D0     		beq	.L43
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 725              		.loc 1 503 9
 726 01d6 2C4B     		ldr	r3, .L99
 727 01d8 1B68     		ldr	r3, [r3]
 728 01da 23F01902 		bic	r2, r3, #25
 729 01de 7B68     		ldr	r3, [r7, #4]
 730 01e0 DB68     		ldr	r3, [r3, #12]
 731 01e2 2949     		ldr	r1, .L99
 732 01e4 1343     		orrs	r3, r3, r2
 733 01e6 0B60     		str	r3, [r1]
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccEg2lBl.s 			page 23


 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 734              		.loc 1 506 21
 735 01e8 FFF7FEFF 		bl	HAL_GetTick
 736 01ec 7862     		str	r0, [r7, #36]
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 737              		.loc 1 509 14
 738 01ee 08E0     		b	.L44
 739              	.L45:
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 740              		.loc 1 511 15
 741 01f0 FFF7FEFF 		bl	HAL_GetTick
 742 01f4 0246     		mov	r2, r0
 743              		.loc 1 511 29
 744 01f6 7B6A     		ldr	r3, [r7, #36]
 745 01f8 D31A     		subs	r3, r2, r3
 746              		.loc 1 511 13
 747 01fa 022B     		cmp	r3, #2
 748 01fc 01D9     		bls	.L44
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 749              		.loc 1 513 20
 750 01fe 0323     		movs	r3, #3
 751 0200 07E3     		b	.L22
 752              	.L44:
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 753              		.loc 1 509 15
 754 0202 214B     		ldr	r3, .L99
 755 0204 1B68     		ldr	r3, [r3]
 756 0206 03F00403 		and	r3, r3, #4
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 757              		.loc 1 509 14
 758 020a 002B     		cmp	r3, #0
 759 020c F0D0     		beq	.L45
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 760              		.loc 1 518 9
 761 020e FFF7FEFF 		bl	HAL_GetREVID
 762 0212 0346     		mov	r3, r0
 763 0214 41F20302 		movw	r2, #4099
 764 0218 9342     		cmp	r3, r2
 765 021a 17D8     		bhi	.L46
 766              		.loc 1 518 9 is_stmt 0 discriminator 1
 767 021c 7B68     		ldr	r3, [r7, #4]
 768 021e 1B69     		ldr	r3, [r3, #16]
 769 0220 402B     		cmp	r3, #64
 770 0222 08D1     		bne	.L47
 771              		.loc 1 518 9 discriminator 3
 772 0224 184B     		ldr	r3, .L99
 773 0226 5B68     		ldr	r3, [r3, #4]
 774 0228 23F47C33 		bic	r3, r3, #258048
ARM GAS  /tmp/ccEg2lBl.s 			page 24


 775 022c 164A     		ldr	r2, .L99
 776 022e 43F40033 		orr	r3, r3, #131072
 777 0232 5360     		str	r3, [r2, #4]
 778 0234 30E0     		b	.L36
 779              	.L47:
 780              		.loc 1 518 9 discriminator 4
 781 0236 144B     		ldr	r3, .L99
 782 0238 5B68     		ldr	r3, [r3, #4]
 783 023a 23F47C32 		bic	r2, r3, #258048
 784 023e 7B68     		ldr	r3, [r7, #4]
 785 0240 1B69     		ldr	r3, [r3, #16]
 786 0242 1B03     		lsls	r3, r3, #12
 787 0244 1049     		ldr	r1, .L99
 788 0246 1343     		orrs	r3, r3, r2
 789 0248 4B60     		str	r3, [r1, #4]
 790 024a 25E0     		b	.L36
 791              	.L46:
 792              		.loc 1 518 9 discriminator 2
 793 024c 0E4B     		ldr	r3, .L99
 794 024e 5B68     		ldr	r3, [r3, #4]
 795 0250 23F0FE42 		bic	r2, r3, #2130706432
 796 0254 7B68     		ldr	r3, [r7, #4]
 797 0256 1B69     		ldr	r3, [r3, #16]
 798 0258 1B06     		lsls	r3, r3, #24
 799 025a 0B49     		ldr	r1, .L99
 800 025c 1343     		orrs	r3, r3, r2
 801 025e 4B60     		str	r3, [r1, #4]
 802 0260 1AE0     		b	.L36
 803              	.L43:
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 804              		.loc 1 523 9 is_stmt 1
 805 0262 094B     		ldr	r3, .L99
 806 0264 1B68     		ldr	r3, [r3]
 807 0266 084A     		ldr	r2, .L99
 808 0268 23F00103 		bic	r3, r3, #1
 809 026c 1360     		str	r3, [r2]
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 810              		.loc 1 526 21
 811 026e FFF7FEFF 		bl	HAL_GetTick
 812 0272 7862     		str	r0, [r7, #36]
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 813              		.loc 1 529 14
 814 0274 0AE0     		b	.L48
 815              	.L49:
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 816              		.loc 1 531 15
 817 0276 FFF7FEFF 		bl	HAL_GetTick
 818 027a 0246     		mov	r2, r0
ARM GAS  /tmp/ccEg2lBl.s 			page 25


 819              		.loc 1 531 29
 820 027c 7B6A     		ldr	r3, [r7, #36]
 821 027e D31A     		subs	r3, r2, r3
 822              		.loc 1 531 13
 823 0280 022B     		cmp	r3, #2
 824 0282 03D9     		bls	.L48
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 825              		.loc 1 533 20
 826 0284 0323     		movs	r3, #3
 827 0286 C4E2     		b	.L22
 828              	.L100:
 829              		.align	2
 830              	.L99:
 831 0288 00440258 		.word	1476543488
 832              	.L48:
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 833              		.loc 1 529 15
 834 028c A44B     		ldr	r3, .L101
 835 028e 1B68     		ldr	r3, [r3]
 836 0290 03F00403 		and	r3, r3, #4
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 837              		.loc 1 529 14
 838 0294 002B     		cmp	r3, #0
 839 0296 EED1     		bne	.L49
 840              	.L36:
 841              	.LBE3:
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- CSI Configuration --------------------------*/
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 842              		.loc 1 540 25
 843 0298 7B68     		ldr	r3, [r7, #4]
 844 029a 1B68     		ldr	r3, [r3]
 845              		.loc 1 540 43
 846 029c 03F01003 		and	r3, r3, #16
 847              		.loc 1 540 5
 848 02a0 002B     		cmp	r3, #0
 849 02a2 00F0A980 		beq	.L50
 850              	.LBB4:
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the CSI is used as system clock it will not disabled */
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 851              		.loc 1 547 37
 852 02a6 9E4B     		ldr	r3, .L101
 853 02a8 1B69     		ldr	r3, [r3, #16]
 854              		.loc 1 547 20
 855 02aa 03F03803 		and	r3, r3, #56
 856 02ae BB61     		str	r3, [r7, #24]
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
ARM GAS  /tmp/ccEg2lBl.s 			page 26


 857              		.loc 1 548 40
 858 02b0 9B4B     		ldr	r3, .L101
 859              		.loc 1 548 20
 860 02b2 9B6A     		ldr	r3, [r3, #40]
 861 02b4 7B61     		str	r3, [r7, #20]
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 862              		.loc 1 549 7
 863 02b6 BB69     		ldr	r3, [r7, #24]
 864 02b8 082B     		cmp	r3, #8
 865 02ba 07D0     		beq	.L51
 866              		.loc 1 549 45 discriminator 1
 867 02bc BB69     		ldr	r3, [r7, #24]
 868 02be 182B     		cmp	r3, #24
 869 02c0 3AD1     		bne	.L52
 870              		.loc 1 549 107 discriminator 2
 871 02c2 7B69     		ldr	r3, [r7, #20]
 872 02c4 03F00303 		and	r3, r3, #3
 873              		.loc 1 549 87 discriminator 2
 874 02c8 012B     		cmp	r3, #1
 875 02ca 35D1     		bne	.L52
 876              	.L51:
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When CSI is used as system clock it will not disabled */
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON)
 877              		.loc 1 552 11
 878 02cc 944B     		ldr	r3, .L101
 879 02ce 1B68     		ldr	r3, [r3]
 880 02d0 03F48073 		and	r3, r3, #256
 881              		.loc 1 552 9
 882 02d4 002B     		cmp	r3, #0
 883 02d6 05D0     		beq	.L53
 884              		.loc 1 552 75 discriminator 1
 885 02d8 7B68     		ldr	r3, [r7, #4]
 886 02da DB69     		ldr	r3, [r3, #28]
 887              		.loc 1 552 54 discriminator 1
 888 02dc 802B     		cmp	r3, #128
 889 02de 01D0     		beq	.L53
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 890              		.loc 1 554 16
 891 02e0 0123     		movs	r3, #1
 892 02e2 96E2     		b	.L22
 893              	.L53:
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 894              		.loc 1 560 9
 895 02e4 FFF7FEFF 		bl	HAL_GetREVID
 896 02e8 0346     		mov	r3, r0
 897 02ea 41F20302 		movw	r2, #4099
 898 02ee 9342     		cmp	r3, r2
 899 02f0 17D8     		bhi	.L54
 900              		.loc 1 560 9 is_stmt 0 discriminator 1
 901 02f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccEg2lBl.s 			page 27


 902 02f4 1B6A     		ldr	r3, [r3, #32]
 903 02f6 202B     		cmp	r3, #32
 904 02f8 08D1     		bne	.L55
 905              		.loc 1 560 9 discriminator 3
 906 02fa 894B     		ldr	r3, .L101
 907 02fc 5B68     		ldr	r3, [r3, #4]
 908 02fe 23F0F843 		bic	r3, r3, #2080374784
 909 0302 874A     		ldr	r2, .L101
 910 0304 43F08043 		orr	r3, r3, #1073741824
 911 0308 5360     		str	r3, [r2, #4]
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 912              		.loc 1 552 9 is_stmt 1 discriminator 3
 913 030a 75E0     		b	.L50
 914              	.L55:
 915              		.loc 1 560 9 discriminator 4
 916 030c 844B     		ldr	r3, .L101
 917 030e 5B68     		ldr	r3, [r3, #4]
 918 0310 23F0F842 		bic	r2, r3, #2080374784
 919 0314 7B68     		ldr	r3, [r7, #4]
 920 0316 1B6A     		ldr	r3, [r3, #32]
 921 0318 9B06     		lsls	r3, r3, #26
 922 031a 8149     		ldr	r1, .L101
 923 031c 1343     		orrs	r3, r3, r2
 924 031e 4B60     		str	r3, [r1, #4]
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 925              		.loc 1 552 9 discriminator 4
 926 0320 6AE0     		b	.L50
 927              	.L54:
 928              		.loc 1 560 9 discriminator 2
 929 0322 7F4B     		ldr	r3, .L101
 930 0324 DB68     		ldr	r3, [r3, #12]
 931 0326 23F07C52 		bic	r2, r3, #1056964608
 932 032a 7B68     		ldr	r3, [r7, #4]
 933 032c 1B6A     		ldr	r3, [r3, #32]
 934 032e 1B06     		lsls	r3, r3, #24
 935 0330 7B49     		ldr	r1, .L101
 936 0332 1343     		orrs	r3, r3, r2
 937 0334 CB60     		str	r3, [r1, #12]
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 938              		.loc 1 552 9 discriminator 2
 939 0336 5FE0     		b	.L50
 940              	.L52:
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the CSI State */
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 941              		.loc 1 566 28
 942 0338 7B68     		ldr	r3, [r7, #4]
 943 033a DB69     		ldr	r3, [r3, #28]
 944              		.loc 1 566 9
 945 033c 002B     		cmp	r3, #0
 946 033e 42D0     		beq	.L57
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (CSI). */
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_ENABLE();
ARM GAS  /tmp/ccEg2lBl.s 			page 28


 947              		.loc 1 569 9
 948 0340 774B     		ldr	r3, .L101
 949 0342 1B68     		ldr	r3, [r3]
 950 0344 764A     		ldr	r2, .L101
 951 0346 43F08003 		orr	r3, r3, #128
 952 034a 1360     		str	r3, [r2]
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 953              		.loc 1 572 21
 954 034c FFF7FEFF 		bl	HAL_GetTick
 955 0350 7862     		str	r0, [r7, #36]
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 956              		.loc 1 575 14
 957 0352 08E0     		b	.L58
 958              	.L59:
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 959              		.loc 1 577 15
 960 0354 FFF7FEFF 		bl	HAL_GetTick
 961 0358 0246     		mov	r2, r0
 962              		.loc 1 577 29
 963 035a 7B6A     		ldr	r3, [r7, #36]
 964 035c D31A     		subs	r3, r2, r3
 965              		.loc 1 577 13
 966 035e 022B     		cmp	r3, #2
 967 0360 01D9     		bls	.L58
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 968              		.loc 1 579 20
 969 0362 0323     		movs	r3, #3
 970 0364 55E2     		b	.L22
 971              	.L58:
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 972              		.loc 1 575 15
 973 0366 6E4B     		ldr	r3, .L101
 974 0368 1B68     		ldr	r3, [r3]
 975 036a 03F48073 		and	r3, r3, #256
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 976              		.loc 1 575 14
 977 036e 002B     		cmp	r3, #0
 978 0370 F0D0     		beq	.L59
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 979              		.loc 1 584 9
 980 0372 FFF7FEFF 		bl	HAL_GetREVID
 981 0376 0346     		mov	r3, r0
 982 0378 41F20302 		movw	r2, #4099
 983 037c 9342     		cmp	r3, r2
 984 037e 17D8     		bhi	.L60
 985              		.loc 1 584 9 is_stmt 0 discriminator 1
 986 0380 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccEg2lBl.s 			page 29


 987 0382 1B6A     		ldr	r3, [r3, #32]
 988 0384 202B     		cmp	r3, #32
 989 0386 08D1     		bne	.L61
 990              		.loc 1 584 9 discriminator 3
 991 0388 654B     		ldr	r3, .L101
 992 038a 5B68     		ldr	r3, [r3, #4]
 993 038c 23F0F843 		bic	r3, r3, #2080374784
 994 0390 634A     		ldr	r2, .L101
 995 0392 43F08043 		orr	r3, r3, #1073741824
 996 0396 5360     		str	r3, [r2, #4]
 997 0398 2EE0     		b	.L50
 998              	.L61:
 999              		.loc 1 584 9 discriminator 4
 1000 039a 614B     		ldr	r3, .L101
 1001 039c 5B68     		ldr	r3, [r3, #4]
 1002 039e 23F0F842 		bic	r2, r3, #2080374784
 1003 03a2 7B68     		ldr	r3, [r7, #4]
 1004 03a4 1B6A     		ldr	r3, [r3, #32]
 1005 03a6 9B06     		lsls	r3, r3, #26
 1006 03a8 5D49     		ldr	r1, .L101
 1007 03aa 1343     		orrs	r3, r3, r2
 1008 03ac 4B60     		str	r3, [r1, #4]
 1009 03ae 23E0     		b	.L50
 1010              	.L60:
 1011              		.loc 1 584 9 discriminator 2
 1012 03b0 5B4B     		ldr	r3, .L101
 1013 03b2 DB68     		ldr	r3, [r3, #12]
 1014 03b4 23F07C52 		bic	r2, r3, #1056964608
 1015 03b8 7B68     		ldr	r3, [r7, #4]
 1016 03ba 1B6A     		ldr	r3, [r3, #32]
 1017 03bc 1B06     		lsls	r3, r3, #24
 1018 03be 5849     		ldr	r1, .L101
 1019 03c0 1343     		orrs	r3, r3, r2
 1020 03c2 CB60     		str	r3, [r1, #12]
 1021 03c4 18E0     		b	.L50
 1022              	.L57:
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (CSI). */
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_DISABLE();
 1023              		.loc 1 589 9 is_stmt 1
 1024 03c6 564B     		ldr	r3, .L101
 1025 03c8 1B68     		ldr	r3, [r3]
 1026 03ca 554A     		ldr	r2, .L101
 1027 03cc 23F08003 		bic	r3, r3, #128
 1028 03d0 1360     		str	r3, [r2]
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1029              		.loc 1 592 21
 1030 03d2 FFF7FEFF 		bl	HAL_GetTick
 1031 03d6 7862     		str	r0, [r7, #36]
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is disabled */
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 1032              		.loc 1 595 14
ARM GAS  /tmp/ccEg2lBl.s 			page 30


 1033 03d8 08E0     		b	.L62
 1034              	.L63:
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 1035              		.loc 1 597 15
 1036 03da FFF7FEFF 		bl	HAL_GetTick
 1037 03de 0246     		mov	r2, r0
 1038              		.loc 1 597 29
 1039 03e0 7B6A     		ldr	r3, [r7, #36]
 1040 03e2 D31A     		subs	r3, r2, r3
 1041              		.loc 1 597 13
 1042 03e4 022B     		cmp	r3, #2
 1043 03e6 01D9     		bls	.L62
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1044              		.loc 1 599 20
 1045 03e8 0323     		movs	r3, #3
 1046 03ea 12E2     		b	.L22
 1047              	.L62:
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1048              		.loc 1 595 15
 1049 03ec 4C4B     		ldr	r3, .L101
 1050 03ee 1B68     		ldr	r3, [r3]
 1051 03f0 03F48073 		and	r3, r3, #256
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1052              		.loc 1 595 14
 1053 03f4 002B     		cmp	r3, #0
 1054 03f6 F0D1     		bne	.L63
 1055              	.L50:
 1056              	.LBE4:
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 1057              		.loc 1 606 25
 1058 03f8 7B68     		ldr	r3, [r7, #4]
 1059 03fa 1B68     		ldr	r3, [r3]
 1060              		.loc 1 606 43
 1061 03fc 03F00803 		and	r3, r3, #8
 1062              		.loc 1 606 5
 1063 0400 002B     		cmp	r3, #0
 1064 0402 36D0     		beq	.L64
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSI State */
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 1065              		.loc 1 612 26
 1066 0404 7B68     		ldr	r3, [r7, #4]
 1067 0406 5B69     		ldr	r3, [r3, #20]
 1068              		.loc 1 612 7
 1069 0408 002B     		cmp	r3, #0
 1070 040a 19D0     		beq	.L65
ARM GAS  /tmp/ccEg2lBl.s 			page 31


 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 1071              		.loc 1 615 7
 1072 040c 444B     		ldr	r3, .L101
 1073 040e 5B6F     		ldr	r3, [r3, #116]
 1074 0410 434A     		ldr	r2, .L101
 1075 0412 43F00103 		orr	r3, r3, #1
 1076 0416 5367     		str	r3, [r2, #116]
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1077              		.loc 1 618 19
 1078 0418 FFF7FEFF 		bl	HAL_GetTick
 1079 041c 7862     		str	r0, [r7, #36]
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 1080              		.loc 1 621 12
 1081 041e 08E0     		b	.L66
 1082              	.L67:
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1083              		.loc 1 623 13
 1084 0420 FFF7FEFF 		bl	HAL_GetTick
 1085 0424 0246     		mov	r2, r0
 1086              		.loc 1 623 27
 1087 0426 7B6A     		ldr	r3, [r7, #36]
 1088 0428 D31A     		subs	r3, r2, r3
 1089              		.loc 1 623 11
 1090 042a 022B     		cmp	r3, #2
 1091 042c 01D9     		bls	.L66
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1092              		.loc 1 625 18
 1093 042e 0323     		movs	r3, #3
 1094 0430 EFE1     		b	.L22
 1095              	.L66:
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1096              		.loc 1 621 13
 1097 0432 3B4B     		ldr	r3, .L101
 1098 0434 5B6F     		ldr	r3, [r3, #116]
 1099 0436 03F00203 		and	r3, r3, #2
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1100              		.loc 1 621 12
 1101 043a 002B     		cmp	r3, #0
 1102 043c F0D0     		beq	.L67
 1103 043e 18E0     		b	.L64
 1104              	.L65:
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 1105              		.loc 1 632 7
ARM GAS  /tmp/ccEg2lBl.s 			page 32


 1106 0440 374B     		ldr	r3, .L101
 1107 0442 5B6F     		ldr	r3, [r3, #116]
 1108 0444 364A     		ldr	r2, .L101
 1109 0446 23F00103 		bic	r3, r3, #1
 1110 044a 5367     		str	r3, [r2, #116]
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1111              		.loc 1 635 19
 1112 044c FFF7FEFF 		bl	HAL_GetTick
 1113 0450 7862     		str	r0, [r7, #36]
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 1114              		.loc 1 638 12
 1115 0452 08E0     		b	.L68
 1116              	.L69:
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1117              		.loc 1 640 13
 1118 0454 FFF7FEFF 		bl	HAL_GetTick
 1119 0458 0246     		mov	r2, r0
 1120              		.loc 1 640 27
 1121 045a 7B6A     		ldr	r3, [r7, #36]
 1122 045c D31A     		subs	r3, r2, r3
 1123              		.loc 1 640 11
 1124 045e 022B     		cmp	r3, #2
 1125 0460 01D9     		bls	.L68
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1126              		.loc 1 642 18
 1127 0462 0323     		movs	r3, #3
 1128 0464 D5E1     		b	.L22
 1129              	.L68:
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1130              		.loc 1 638 13
 1131 0466 2E4B     		ldr	r3, .L101
 1132 0468 5B6F     		ldr	r3, [r3, #116]
 1133 046a 03F00203 		and	r3, r3, #2
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1134              		.loc 1 638 12
 1135 046e 002B     		cmp	r3, #0
 1136 0470 F0D1     		bne	.L69
 1137              	.L64:
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -------------------------*/
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1138              		.loc 1 649 25
 1139 0472 7B68     		ldr	r3, [r7, #4]
 1140 0474 1B68     		ldr	r3, [r3]
 1141              		.loc 1 649 43
 1142 0476 03F02003 		and	r3, r3, #32
 1143              		.loc 1 649 5
ARM GAS  /tmp/ccEg2lBl.s 			page 33


 1144 047a 002B     		cmp	r3, #0
 1145 047c 36D0     		beq	.L70
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the HSI48 State */
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 1146              		.loc 1 655 26
 1147 047e 7B68     		ldr	r3, [r7, #4]
 1148 0480 9B69     		ldr	r3, [r3, #24]
 1149              		.loc 1 655 7
 1150 0482 002B     		cmp	r3, #0
 1151 0484 19D0     		beq	.L71
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 1152              		.loc 1 658 7
 1153 0486 264B     		ldr	r3, .L101
 1154 0488 1B68     		ldr	r3, [r3]
 1155 048a 254A     		ldr	r2, .L101
 1156 048c 43F48053 		orr	r3, r3, #4096
 1157 0490 1360     		str	r3, [r2]
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1158              		.loc 1 661 19
 1159 0492 FFF7FEFF 		bl	HAL_GetTick
 1160 0496 7862     		str	r0, [r7, #36]
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 1161              		.loc 1 664 12
 1162 0498 08E0     		b	.L72
 1163              	.L73:
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 1164              		.loc 1 666 13
 1165 049a FFF7FEFF 		bl	HAL_GetTick
 1166 049e 0246     		mov	r2, r0
 1167              		.loc 1 666 27
 1168 04a0 7B6A     		ldr	r3, [r7, #36]
 1169 04a2 D31A     		subs	r3, r2, r3
 1170              		.loc 1 666 11
 1171 04a4 022B     		cmp	r3, #2
 1172 04a6 01D9     		bls	.L72
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1173              		.loc 1 668 18
 1174 04a8 0323     		movs	r3, #3
 1175 04aa B2E1     		b	.L22
 1176              	.L72:
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1177              		.loc 1 664 13
 1178 04ac 1C4B     		ldr	r3, .L101
 1179 04ae 1B68     		ldr	r3, [r3]
 1180 04b0 03F40053 		and	r3, r3, #8192
ARM GAS  /tmp/ccEg2lBl.s 			page 34


 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1181              		.loc 1 664 12
 1182 04b4 002B     		cmp	r3, #0
 1183 04b6 F0D0     		beq	.L73
 1184 04b8 18E0     		b	.L70
 1185              	.L71:
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 1186              		.loc 1 675 7
 1187 04ba 194B     		ldr	r3, .L101
 1188 04bc 1B68     		ldr	r3, [r3]
 1189 04be 184A     		ldr	r2, .L101
 1190 04c0 23F48053 		bic	r3, r3, #4096
 1191 04c4 1360     		str	r3, [r2]
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1192              		.loc 1 678 19
 1193 04c6 FFF7FEFF 		bl	HAL_GetTick
 1194 04ca 7862     		str	r0, [r7, #36]
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 1195              		.loc 1 681 12
 1196 04cc 08E0     		b	.L74
 1197              	.L75:
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 1198              		.loc 1 683 13
 1199 04ce FFF7FEFF 		bl	HAL_GetTick
 1200 04d2 0246     		mov	r2, r0
 1201              		.loc 1 683 27
 1202 04d4 7B6A     		ldr	r3, [r7, #36]
 1203 04d6 D31A     		subs	r3, r2, r3
 1204              		.loc 1 683 11
 1205 04d8 022B     		cmp	r3, #2
 1206 04da 01D9     		bls	.L74
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1207              		.loc 1 685 18
 1208 04dc 0323     		movs	r3, #3
 1209 04de 98E1     		b	.L22
 1210              	.L74:
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1211              		.loc 1 681 13
 1212 04e0 0F4B     		ldr	r3, .L101
 1213 04e2 1B68     		ldr	r3, [r3]
 1214 04e4 03F40053 		and	r3, r3, #8192
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1215              		.loc 1 681 12
 1216 04e8 002B     		cmp	r3, #0
 1217 04ea F0D1     		bne	.L75
ARM GAS  /tmp/ccEg2lBl.s 			page 35


 1218              	.L70:
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 1219              		.loc 1 691 25
 1220 04ec 7B68     		ldr	r3, [r7, #4]
 1221 04ee 1B68     		ldr	r3, [r3]
 1222              		.loc 1 691 43
 1223 04f0 03F00403 		and	r3, r3, #4
 1224              		.loc 1 691 5
 1225 04f4 002B     		cmp	r3, #0
 1226 04f6 00F08580 		beq	.L76
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     PWR->CR1 |= PWR_CR1_DBP;
 1227              		.loc 1 697 14
 1228 04fa 0A4B     		ldr	r3, .L101+4
 1229 04fc 1B68     		ldr	r3, [r3]
 1230 04fe 094A     		ldr	r2, .L101+4
 1231 0500 43F48073 		orr	r3, r3, #256
 1232 0504 1360     		str	r3, [r2]
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Wait for Backup domain Write protection disable */
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1233              		.loc 1 700 17
 1234 0506 FFF7FEFF 		bl	HAL_GetTick
 1235 050a 7862     		str	r0, [r7, #36]
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 1236              		.loc 1 702 10
 1237 050c 0CE0     		b	.L77
 1238              	.L78:
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 1239              		.loc 1 704 11
 1240 050e FFF7FEFF 		bl	HAL_GetTick
 1241 0512 0246     		mov	r2, r0
 1242              		.loc 1 704 25
 1243 0514 7B6A     		ldr	r3, [r7, #36]
 1244 0516 D31A     		subs	r3, r2, r3
 1245              		.loc 1 704 9
 1246 0518 642B     		cmp	r3, #100
 1247 051a 05D9     		bls	.L77
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1248              		.loc 1 706 16
 1249 051c 0323     		movs	r3, #3
 1250 051e 78E1     		b	.L22
 1251              	.L102:
 1252              		.align	2
 1253              	.L101:
ARM GAS  /tmp/ccEg2lBl.s 			page 36


 1254 0520 00440258 		.word	1476543488
 1255 0524 00480258 		.word	1476544512
 1256              	.L77:
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1257              		.loc 1 702 15
 1258 0528 964B     		ldr	r3, .L103
 1259 052a 1B68     		ldr	r3, [r3]
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1260              		.loc 1 702 21
 1261 052c 03F48073 		and	r3, r3, #256
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1262              		.loc 1 702 10
 1263 0530 002B     		cmp	r3, #0
 1264 0532 ECD0     		beq	.L78
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1265              		.loc 1 711 5
 1266 0534 7B68     		ldr	r3, [r7, #4]
 1267 0536 9B68     		ldr	r3, [r3, #8]
 1268 0538 012B     		cmp	r3, #1
 1269 053a 06D1     		bne	.L79
 1270              		.loc 1 711 5 is_stmt 0 discriminator 1
 1271 053c 924B     		ldr	r3, .L103+4
 1272 053e 1B6F     		ldr	r3, [r3, #112]
 1273 0540 914A     		ldr	r2, .L103+4
 1274 0542 43F00103 		orr	r3, r3, #1
 1275 0546 1367     		str	r3, [r2, #112]
 1276 0548 2DE0     		b	.L80
 1277              	.L79:
 1278              		.loc 1 711 5 discriminator 2
 1279 054a 7B68     		ldr	r3, [r7, #4]
 1280 054c 9B68     		ldr	r3, [r3, #8]
 1281 054e 002B     		cmp	r3, #0
 1282 0550 0CD1     		bne	.L81
 1283              		.loc 1 711 5 discriminator 3
 1284 0552 8D4B     		ldr	r3, .L103+4
 1285 0554 1B6F     		ldr	r3, [r3, #112]
 1286 0556 8C4A     		ldr	r2, .L103+4
 1287 0558 23F00103 		bic	r3, r3, #1
 1288 055c 1367     		str	r3, [r2, #112]
 1289 055e 8A4B     		ldr	r3, .L103+4
 1290 0560 1B6F     		ldr	r3, [r3, #112]
 1291 0562 894A     		ldr	r2, .L103+4
 1292 0564 23F00403 		bic	r3, r3, #4
 1293 0568 1367     		str	r3, [r2, #112]
 1294 056a 1CE0     		b	.L80
 1295              	.L81:
 1296              		.loc 1 711 5 discriminator 4
 1297 056c 7B68     		ldr	r3, [r7, #4]
 1298 056e 9B68     		ldr	r3, [r3, #8]
 1299 0570 052B     		cmp	r3, #5
 1300 0572 0CD1     		bne	.L82
 1301              		.loc 1 711 5 discriminator 5
 1302 0574 844B     		ldr	r3, .L103+4
ARM GAS  /tmp/ccEg2lBl.s 			page 37


 1303 0576 1B6F     		ldr	r3, [r3, #112]
 1304 0578 834A     		ldr	r2, .L103+4
 1305 057a 43F00403 		orr	r3, r3, #4
 1306 057e 1367     		str	r3, [r2, #112]
 1307 0580 814B     		ldr	r3, .L103+4
 1308 0582 1B6F     		ldr	r3, [r3, #112]
 1309 0584 804A     		ldr	r2, .L103+4
 1310 0586 43F00103 		orr	r3, r3, #1
 1311 058a 1367     		str	r3, [r2, #112]
 1312 058c 0BE0     		b	.L80
 1313              	.L82:
 1314              		.loc 1 711 5 discriminator 6
 1315 058e 7E4B     		ldr	r3, .L103+4
 1316 0590 1B6F     		ldr	r3, [r3, #112]
 1317 0592 7D4A     		ldr	r2, .L103+4
 1318 0594 23F00103 		bic	r3, r3, #1
 1319 0598 1367     		str	r3, [r2, #112]
 1320 059a 7B4B     		ldr	r3, .L103+4
 1321 059c 1B6F     		ldr	r3, [r3, #112]
 1322 059e 7A4A     		ldr	r2, .L103+4
 1323 05a0 23F00403 		bic	r3, r3, #4
 1324 05a4 1367     		str	r3, [r2, #112]
 1325              	.L80:
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 1326              		.loc 1 713 26 is_stmt 1
 1327 05a6 7B68     		ldr	r3, [r7, #4]
 1328 05a8 9B68     		ldr	r3, [r3, #8]
 1329              		.loc 1 713 7
 1330 05aa 002B     		cmp	r3, #0
 1331 05ac 15D0     		beq	.L83
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1332              		.loc 1 716 19
 1333 05ae FFF7FEFF 		bl	HAL_GetTick
 1334 05b2 7862     		str	r0, [r7, #36]
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 1335              		.loc 1 719 12
 1336 05b4 0AE0     		b	.L84
 1337              	.L85:
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1338              		.loc 1 721 13
 1339 05b6 FFF7FEFF 		bl	HAL_GetTick
 1340 05ba 0246     		mov	r2, r0
 1341              		.loc 1 721 27
 1342 05bc 7B6A     		ldr	r3, [r7, #36]
 1343 05be D31A     		subs	r3, r2, r3
 1344              		.loc 1 721 11
 1345 05c0 41F28832 		movw	r2, #5000
 1346 05c4 9342     		cmp	r3, r2
 1347 05c6 01D9     		bls	.L84
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccEg2lBl.s 			page 38


 1348              		.loc 1 723 18
 1349 05c8 0323     		movs	r3, #3
 1350 05ca 22E1     		b	.L22
 1351              	.L84:
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1352              		.loc 1 719 13
 1353 05cc 6E4B     		ldr	r3, .L103+4
 1354 05ce 1B6F     		ldr	r3, [r3, #112]
 1355 05d0 03F00203 		and	r3, r3, #2
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1356              		.loc 1 719 12
 1357 05d4 002B     		cmp	r3, #0
 1358 05d6 EED0     		beq	.L85
 1359 05d8 14E0     		b	.L76
 1360              	.L83:
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1361              		.loc 1 730 19
 1362 05da FFF7FEFF 		bl	HAL_GetTick
 1363 05de 7862     		str	r0, [r7, #36]
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 1364              		.loc 1 733 12
 1365 05e0 0AE0     		b	.L86
 1366              	.L87:
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1367              		.loc 1 735 13
 1368 05e2 FFF7FEFF 		bl	HAL_GetTick
 1369 05e6 0246     		mov	r2, r0
 1370              		.loc 1 735 27
 1371 05e8 7B6A     		ldr	r3, [r7, #36]
 1372 05ea D31A     		subs	r3, r2, r3
 1373              		.loc 1 735 11
 1374 05ec 41F28832 		movw	r2, #5000
 1375 05f0 9342     		cmp	r3, r2
 1376 05f2 01D9     		bls	.L86
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1377              		.loc 1 737 18
 1378 05f4 0323     		movs	r3, #3
 1379 05f6 0CE1     		b	.L22
 1380              	.L86:
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1381              		.loc 1 733 13
 1382 05f8 634B     		ldr	r3, .L103+4
 1383 05fa 1B6F     		ldr	r3, [r3, #112]
 1384 05fc 03F00203 		and	r3, r3, #2
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1385              		.loc 1 733 12
 1386 0600 002B     		cmp	r3, #0
ARM GAS  /tmp/ccEg2lBl.s 			page 39


 1387 0602 EED1     		bne	.L87
 1388              	.L76:
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1389              		.loc 1 745 30
 1390 0604 7B68     		ldr	r3, [r7, #4]
 1391 0606 5B6A     		ldr	r3, [r3, #36]
 1392              		.loc 1 745 6
 1393 0608 002B     		cmp	r3, #0
 1394 060a 00F00181 		beq	.L88
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 1395              		.loc 1 748 8
 1396 060e 5E4B     		ldr	r3, .L103+4
 1397 0610 1B69     		ldr	r3, [r3, #16]
 1398 0612 03F03803 		and	r3, r3, #56
 1399              		.loc 1 748 7
 1400 0616 182B     		cmp	r3, #24
 1401 0618 00F0BC80 		beq	.L89
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1402              		.loc 1 750 33
 1403 061c 7B68     		ldr	r3, [r7, #4]
 1404 061e 5B6A     		ldr	r3, [r3, #36]
 1405              		.loc 1 750 9
 1406 0620 022B     		cmp	r3, #2
 1407 0622 40F09580 		bne	.L90
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the parameters */
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLRGE_VALUE(RCC_OscInitStruct->PLL.PLLRGE));
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLVCO_VALUE(RCC_OscInitStruct->PLL.PLLVCOSEL));
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1408              		.loc 1 764 9
 1409 0626 584B     		ldr	r3, .L103+4
 1410 0628 1B68     		ldr	r3, [r3]
 1411 062a 574A     		ldr	r2, .L103+4
 1412 062c 23F08073 		bic	r3, r3, #16777216
 1413 0630 1360     		str	r3, [r2]
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /tmp/ccEg2lBl.s 			page 40


 1414              		.loc 1 767 21
 1415 0632 FFF7FEFF 		bl	HAL_GetTick
 1416 0636 7862     		str	r0, [r7, #36]
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 1417              		.loc 1 770 14
 1418 0638 08E0     		b	.L91
 1419              	.L92:
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1420              		.loc 1 772 15
 1421 063a FFF7FEFF 		bl	HAL_GetTick
 1422 063e 0246     		mov	r2, r0
 1423              		.loc 1 772 29
 1424 0640 7B6A     		ldr	r3, [r7, #36]
 1425 0642 D31A     		subs	r3, r2, r3
 1426              		.loc 1 772 13
 1427 0644 022B     		cmp	r3, #2
 1428 0646 01D9     		bls	.L91
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1429              		.loc 1 774 20
 1430 0648 0323     		movs	r3, #3
 1431 064a E2E0     		b	.L22
 1432              	.L91:
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1433              		.loc 1 770 15
 1434 064c 4E4B     		ldr	r3, .L103+4
 1435 064e 1B68     		ldr	r3, [r3]
 1436 0650 03F00073 		and	r3, r3, #33554432
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1437              		.loc 1 770 14
 1438 0654 002B     		cmp	r3, #0
 1439 0656 F0D1     		bne	.L92
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1440              		.loc 1 779 9
 1441 0658 4B4B     		ldr	r3, .L103+4
 1442 065a 9A6A     		ldr	r2, [r3, #40]
 1443 065c 4B4B     		ldr	r3, .L103+8
 1444 065e 1340     		ands	r3, r3, r2
 1445 0660 7A68     		ldr	r2, [r7, #4]
 1446 0662 916A     		ldr	r1, [r2, #40]
 1447 0664 7A68     		ldr	r2, [r7, #4]
 1448 0666 D26A     		ldr	r2, [r2, #44]
 1449 0668 1201     		lsls	r2, r2, #4
 1450 066a 0A43     		orrs	r2, r2, r1
 1451 066c 4649     		ldr	r1, .L103+4
 1452 066e 1343     		orrs	r3, r3, r2
 1453 0670 8B62     		str	r3, [r1, #40]
 1454 0672 7B68     		ldr	r3, [r7, #4]
 1455 0674 1B6B     		ldr	r3, [r3, #48]
 1456 0676 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccEg2lBl.s 			page 41


 1457 0678 C3F30802 		ubfx	r2, r3, #0, #9
 1458 067c 7B68     		ldr	r3, [r7, #4]
 1459 067e 5B6B     		ldr	r3, [r3, #52]
 1460 0680 013B     		subs	r3, r3, #1
 1461 0682 5B02     		lsls	r3, r3, #9
 1462 0684 9BB2     		uxth	r3, r3
 1463 0686 1A43     		orrs	r2, r2, r3
 1464 0688 7B68     		ldr	r3, [r7, #4]
 1465 068a 9B6B     		ldr	r3, [r3, #56]
 1466 068c 013B     		subs	r3, r3, #1
 1467 068e 1B04     		lsls	r3, r3, #16
 1468 0690 03F4FE03 		and	r3, r3, #8323072
 1469 0694 1A43     		orrs	r2, r2, r3
 1470 0696 7B68     		ldr	r3, [r7, #4]
 1471 0698 DB6B     		ldr	r3, [r3, #60]
 1472 069a 013B     		subs	r3, r3, #1
 1473 069c 1B06     		lsls	r3, r3, #24
 1474 069e 03F0FE43 		and	r3, r3, #2130706432
 1475 06a2 3949     		ldr	r1, .L103+4
 1476 06a4 1343     		orrs	r3, r3, r2
 1477 06a6 0B63     		str	r3, [r1, #48]
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Disable PLLFRACN . */
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_DISABLE();
 1478              		.loc 1 787 10
 1479 06a8 374B     		ldr	r3, .L103+4
 1480 06aa DB6A     		ldr	r3, [r3, #44]
 1481 06ac 364A     		ldr	r2, .L103+4
 1482 06ae 23F00103 		bic	r3, r3, #1
 1483 06b2 D362     		str	r3, [r2, #44]
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Configure PLL PLL1FRACN */
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 1484              		.loc 1 790 10
 1485 06b4 344B     		ldr	r3, .L103+4
 1486 06b6 5A6B     		ldr	r2, [r3, #52]
 1487 06b8 354B     		ldr	r3, .L103+12
 1488 06ba 1340     		ands	r3, r3, r2
 1489 06bc 7A68     		ldr	r2, [r7, #4]
 1490 06be 926C     		ldr	r2, [r2, #72]
 1491 06c0 D200     		lsls	r2, r2, #3
 1492 06c2 3149     		ldr	r1, .L103+4
 1493 06c4 1343     		orrs	r3, r3, r2
 1494 06c6 4B63     		str	r3, [r1, #52]
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 input reference frequency range: VCI */
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 1495              		.loc 1 793 9
 1496 06c8 2F4B     		ldr	r3, .L103+4
 1497 06ca DB6A     		ldr	r3, [r3, #44]
 1498 06cc 23F00C02 		bic	r2, r3, #12
 1499 06d0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccEg2lBl.s 			page 42


 1500 06d2 1B6C     		ldr	r3, [r3, #64]
 1501 06d4 2C49     		ldr	r1, .L103+4
 1502 06d6 1343     		orrs	r3, r3, r2
 1503 06d8 CB62     		str	r3, [r1, #44]
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 output frequency range : VCO */
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 1504              		.loc 1 796 9
 1505 06da 2B4B     		ldr	r3, .L103+4
 1506 06dc DB6A     		ldr	r3, [r3, #44]
 1507 06de 23F00202 		bic	r2, r3, #2
 1508 06e2 7B68     		ldr	r3, [r7, #4]
 1509 06e4 5B6C     		ldr	r3, [r3, #68]
 1510 06e6 2849     		ldr	r1, .L103+4
 1511 06e8 1343     		orrs	r3, r3, r2
 1512 06ea CB62     		str	r3, [r1, #44]
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 1513              		.loc 1 799 10
 1514 06ec 264B     		ldr	r3, .L103+4
 1515 06ee DB6A     		ldr	r3, [r3, #44]
 1516 06f0 254A     		ldr	r2, .L103+4
 1517 06f2 43F48033 		orr	r3, r3, #65536
 1518 06f6 D362     		str	r3, [r2, #44]
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1Q Clock output. */
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 1519              		.loc 1 802 10
 1520 06f8 234B     		ldr	r3, .L103+4
 1521 06fa DB6A     		ldr	r3, [r3, #44]
 1522 06fc 224A     		ldr	r2, .L103+4
 1523 06fe 43F40033 		orr	r3, r3, #131072
 1524 0702 D362     		str	r3, [r2, #44]
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1R  Clock output. */
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 1525              		.loc 1 805 10
 1526 0704 204B     		ldr	r3, .L103+4
 1527 0706 DB6A     		ldr	r3, [r3, #44]
 1528 0708 1F4A     		ldr	r2, .L103+4
 1529 070a 43F48023 		orr	r3, r3, #262144
 1530 070e D362     		str	r3, [r2, #44]
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1FRACN . */
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_ENABLE();
 1531              		.loc 1 808 10
 1532 0710 1D4B     		ldr	r3, .L103+4
 1533 0712 DB6A     		ldr	r3, [r3, #44]
 1534 0714 1C4A     		ldr	r2, .L103+4
 1535 0716 43F00103 		orr	r3, r3, #1
 1536 071a D362     		str	r3, [r2, #44]
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the main PLL. */
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1537              		.loc 1 811 9
 1538 071c 1A4B     		ldr	r3, .L103+4
ARM GAS  /tmp/ccEg2lBl.s 			page 43


 1539 071e 1B68     		ldr	r3, [r3]
 1540 0720 194A     		ldr	r2, .L103+4
 1541 0722 43F08073 		orr	r3, r3, #16777216
 1542 0726 1360     		str	r3, [r2]
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1543              		.loc 1 814 21
 1544 0728 FFF7FEFF 		bl	HAL_GetTick
 1545 072c 7862     		str	r0, [r7, #36]
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 1546              		.loc 1 817 14
 1547 072e 08E0     		b	.L93
 1548              	.L94:
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1549              		.loc 1 819 15
 1550 0730 FFF7FEFF 		bl	HAL_GetTick
 1551 0734 0246     		mov	r2, r0
 1552              		.loc 1 819 29
 1553 0736 7B6A     		ldr	r3, [r7, #36]
 1554 0738 D31A     		subs	r3, r2, r3
 1555              		.loc 1 819 13
 1556 073a 022B     		cmp	r3, #2
 1557 073c 01D9     		bls	.L93
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1558              		.loc 1 821 20
 1559 073e 0323     		movs	r3, #3
 1560 0740 67E0     		b	.L22
 1561              	.L93:
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1562              		.loc 1 817 15
 1563 0742 114B     		ldr	r3, .L103+4
 1564 0744 1B68     		ldr	r3, [r3]
 1565 0746 03F00073 		and	r3, r3, #33554432
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1566              		.loc 1 817 14
 1567 074a 002B     		cmp	r3, #0
 1568 074c F0D0     		beq	.L94
 1569 074e 5FE0     		b	.L88
 1570              	.L90:
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1571              		.loc 1 828 9
 1572 0750 0D4B     		ldr	r3, .L103+4
 1573 0752 1B68     		ldr	r3, [r3]
 1574 0754 0C4A     		ldr	r2, .L103+4
 1575 0756 23F08073 		bic	r3, r3, #16777216
 1576 075a 1360     		str	r3, [r2]
ARM GAS  /tmp/ccEg2lBl.s 			page 44


 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1577              		.loc 1 831 21
 1578 075c FFF7FEFF 		bl	HAL_GetTick
 1579 0760 7862     		str	r0, [r7, #36]
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 1580              		.loc 1 834 14
 1581 0762 08E0     		b	.L95
 1582              	.L96:
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1583              		.loc 1 836 15
 1584 0764 FFF7FEFF 		bl	HAL_GetTick
 1585 0768 0246     		mov	r2, r0
 1586              		.loc 1 836 29
 1587 076a 7B6A     		ldr	r3, [r7, #36]
 1588 076c D31A     		subs	r3, r2, r3
 1589              		.loc 1 836 13
 1590 076e 022B     		cmp	r3, #2
 1591 0770 01D9     		bls	.L95
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1592              		.loc 1 838 20
 1593 0772 0323     		movs	r3, #3
 1594 0774 4DE0     		b	.L22
 1595              	.L95:
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1596              		.loc 1 834 15
 1597 0776 044B     		ldr	r3, .L103+4
 1598 0778 1B68     		ldr	r3, [r3]
 1599 077a 03F00073 		and	r3, r3, #33554432
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1600              		.loc 1 834 14
 1601 077e 002B     		cmp	r3, #0
 1602 0780 F0D1     		bne	.L96
 1603 0782 45E0     		b	.L88
 1604              	.L104:
 1605              		.align	2
 1606              	.L103:
 1607 0784 00480258 		.word	1476544512
 1608 0788 00440258 		.word	1476543488
 1609 078c 0CFCFFFF 		.word	-1012
 1610 0790 0700FFFF 		.word	-65529
 1611              	.L89:
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       temp1_pllckcfg = RCC->PLLCKSELR;
 1612              		.loc 1 846 27
 1613 0794 214B     		ldr	r3, .L105
ARM GAS  /tmp/ccEg2lBl.s 			page 45


 1614              		.loc 1 846 22
 1615 0796 9B6A     		ldr	r3, [r3, #40]
 1616 0798 3B61     		str	r3, [r7, #16]
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       temp2_pllckcfg = RCC->PLL1DIVR;
 1617              		.loc 1 847 27
 1618 079a 204B     		ldr	r3, .L105
 1619              		.loc 1 847 22
 1620 079c 1B6B     		ldr	r3, [r3, #48]
 1621 079e FB60     		str	r3, [r7, #12]
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 1622              		.loc 1 848 34
 1623 07a0 7B68     		ldr	r3, [r7, #4]
 1624 07a2 5B6A     		ldr	r3, [r3, #36]
 1625              		.loc 1 848 9
 1626 07a4 012B     		cmp	r3, #1
 1627 07a6 31D0     		beq	.L97
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1628              		.loc 1 849 4 discriminator 1
 1629 07a8 3B69     		ldr	r3, [r7, #16]
 1630 07aa 03F00302 		and	r2, r3, #3
 1631              		.loc 1 849 76 discriminator 1
 1632 07ae 7B68     		ldr	r3, [r7, #4]
 1633 07b0 9B6A     		ldr	r3, [r3, #40]
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 1634              		.loc 1 848 61 discriminator 1
 1635 07b2 9A42     		cmp	r2, r3
 1636 07b4 2AD1     		bne	.L97
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInit
 1637              		.loc 1 850 58
 1638 07b6 3B69     		ldr	r3, [r7, #16]
 1639 07b8 1B09     		lsrs	r3, r3, #4
 1640 07ba 03F03F02 		and	r2, r3, #63
 1641              		.loc 1 850 111
 1642 07be 7B68     		ldr	r3, [r7, #4]
 1643 07c0 DB6A     		ldr	r3, [r3, #44]
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1644              		.loc 1 849 88
 1645 07c2 9A42     		cmp	r2, r3
 1646 07c4 22D1     		bne	.L97
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 1647              		.loc 1 851 11
 1648 07c6 FB68     		ldr	r3, [r7, #12]
 1649 07c8 C3F30802 		ubfx	r2, r3, #0, #9
 1650              		.loc 1 851 79
 1651 07cc 7B68     		ldr	r3, [r7, #4]
 1652 07ce 1B6B     		ldr	r3, [r3, #48]
 1653              		.loc 1 851 85
 1654 07d0 013B     		subs	r3, r3, #1
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInit
 1655              		.loc 1 850 118
 1656 07d2 9A42     		cmp	r2, r3
 1657 07d4 1AD1     		bne	.L97
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct-
 1658              		.loc 1 852 54
 1659 07d6 FB68     		ldr	r3, [r7, #12]
 1660 07d8 5B0A     		lsrs	r3, r3, #9
 1661 07da 03F07F02 		and	r2, r3, #127
ARM GAS  /tmp/ccEg2lBl.s 			page 46


 1662              		.loc 1 852 104
 1663 07de 7B68     		ldr	r3, [r7, #4]
 1664 07e0 5B6B     		ldr	r3, [r3, #52]
 1665              		.loc 1 852 110
 1666 07e2 013B     		subs	r3, r3, #1
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 1667              		.loc 1 851 92
 1668 07e4 9A42     		cmp	r2, r3
 1669 07e6 11D1     		bne	.L97
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct-
 1670              		.loc 1 853 54
 1671 07e8 FB68     		ldr	r3, [r7, #12]
 1672 07ea 1B0C     		lsrs	r3, r3, #16
 1673 07ec 03F07F02 		and	r2, r3, #127
 1674              		.loc 1 853 104
 1675 07f0 7B68     		ldr	r3, [r7, #4]
 1676 07f2 9B6B     		ldr	r3, [r3, #56]
 1677              		.loc 1 853 110
 1678 07f4 013B     		subs	r3, r3, #1
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct-
 1679              		.loc 1 852 117
 1680 07f6 9A42     		cmp	r2, r3
 1681 07f8 08D1     		bne	.L97
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct-
 1682              		.loc 1 854 54
 1683 07fa FB68     		ldr	r3, [r7, #12]
 1684 07fc 1B0E     		lsrs	r3, r3, #24
 1685 07fe 03F07F02 		and	r2, r3, #127
 1686              		.loc 1 854 104
 1687 0802 7B68     		ldr	r3, [r7, #4]
 1688 0804 DB6B     		ldr	r3, [r3, #60]
 1689              		.loc 1 854 110
 1690 0806 013B     		subs	r3, r3, #1
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct-
 1691              		.loc 1 853 117
 1692 0808 9A42     		cmp	r2, r3
 1693 080a 01D0     		beq	.L88
 1694              	.L97:
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 1695              		.loc 1 856 16
 1696 080c 0123     		movs	r3, #1
 1697 080e 00E0     		b	.L22
 1698              	.L88:
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 1699              		.loc 1 860 10
 1700 0810 0023     		movs	r3, #0
 1701              	.L22:
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1702              		.loc 1 861 1
 1703 0812 1846     		mov	r0, r3
 1704 0814 3037     		adds	r7, r7, #48
 1705              	.LCFI8:
 1706              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccEg2lBl.s 			page 47


 1707 0816 BD46     		mov	sp, r7
 1708              	.LCFI9:
 1709              		.cfi_def_cfa_register 13
 1710              		@ sp needed
 1711 0818 80BD     		pop	{r7, pc}
 1712              	.L106:
 1713 081a 00BF     		.align	2
 1714              	.L105:
 1715 081c 00440258 		.word	1476543488
 1716              		.cfi_endproc
 1717              	.LFE332:
 1719              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1720              		.align	1
 1721              		.global	HAL_RCC_ClockConfig
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1725              		.fpu fpv5-d16
 1727              	HAL_RCC_ClockConfig:
 1728              	.LFB333:
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Core Clock Frequency
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated by HAL_InitTick() function called within this function
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         currently used as system clock source.
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed freq
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1729              		.loc 1 890 1
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 24
 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733 0000 80B5     		push	{r7, lr}
 1734              	.LCFI10:
 1735              		.cfi_def_cfa_offset 8
 1736              		.cfi_offset 7, -8
ARM GAS  /tmp/ccEg2lBl.s 			page 48


 1737              		.cfi_offset 14, -4
 1738 0002 86B0     		sub	sp, sp, #24
 1739              	.LCFI11:
 1740              		.cfi_def_cfa_offset 32
 1741 0004 00AF     		add	r7, sp, #0
 1742              	.LCFI12:
 1743              		.cfi_def_cfa_register 7
 1744 0006 7860     		str	r0, [r7, #4]
 1745 0008 3960     		str	r1, [r7]
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t common_system_clock;
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Check Null pointer */
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1746              		.loc 1 896 5
 1747 000a 7B68     		ldr	r3, [r7, #4]
 1748 000c 002B     		cmp	r3, #0
 1749 000e 01D1     		bne	.L108
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 1750              		.loc 1 898 12
 1751 0010 0123     		movs	r3, #1
 1752 0012 9CE1     		b	.L109
 1753              	.L108:
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1754              		.loc 1 910 17
 1755 0014 8A4B     		ldr	r3, .L129
 1756 0016 1B68     		ldr	r3, [r3]
 1757 0018 03F00F03 		and	r3, r3, #15
 1758              		.loc 1 910 5
 1759 001c 3A68     		ldr	r2, [r7]
 1760 001e 9A42     		cmp	r2, r3
 1761 0020 10D9     		bls	.L110
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1762              		.loc 1 913 5
 1763 0022 874B     		ldr	r3, .L129
 1764 0024 1B68     		ldr	r3, [r3]
 1765 0026 23F00F02 		bic	r2, r3, #15
 1766 002a 8549     		ldr	r1, .L129
 1767 002c 3B68     		ldr	r3, [r7]
 1768 002e 1343     		orrs	r3, r3, r2
 1769 0030 0B60     		str	r3, [r1]
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccEg2lBl.s 			page 49


 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1770              		.loc 1 917 8
 1771 0032 834B     		ldr	r3, .L129
 1772 0034 1B68     		ldr	r3, [r3]
 1773 0036 03F00F03 		and	r3, r3, #15
 1774              		.loc 1 917 7
 1775 003a 3A68     		ldr	r2, [r7]
 1776 003c 9A42     		cmp	r2, r3
 1777 003e 01D0     		beq	.L110
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 1778              		.loc 1 919 14
 1779 0040 0123     		movs	r3, #1
 1780 0042 84E1     		b	.L109
 1781              	.L110:
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the BUS frequency divider */
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 1782              		.loc 1 926 25
 1783 0044 7B68     		ldr	r3, [r7, #4]
 1784 0046 1B68     		ldr	r3, [r3]
 1785              		.loc 1 926 38
 1786 0048 03F00403 		and	r3, r3, #4
 1787              		.loc 1 926 5
 1788 004c 002B     		cmp	r3, #0
 1789 004e 10D0     		beq	.L111
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D1CFGR_D1PPRE)
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 1790              		.loc 1 929 26
 1791 0050 7B68     		ldr	r3, [r7, #4]
 1792 0052 1A69     		ldr	r2, [r3, #16]
 1793              		.loc 1 929 50
 1794 0054 7B4B     		ldr	r3, .L129+4
 1795 0056 9B69     		ldr	r3, [r3, #24]
 1796              		.loc 1 929 59
 1797 0058 03F07003 		and	r3, r3, #112
 1798              		.loc 1 929 7
 1799 005c 9A42     		cmp	r2, r3
 1800 005e 08D9     		bls	.L111
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 1801              		.loc 1 932 7
 1802 0060 784B     		ldr	r3, .L129+4
 1803 0062 9B69     		ldr	r3, [r3, #24]
 1804 0064 23F07002 		bic	r2, r3, #112
 1805 0068 7B68     		ldr	r3, [r7, #4]
 1806 006a 1B69     		ldr	r3, [r3, #16]
 1807 006c 7549     		ldr	r1, .L129+4
 1808 006e 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccEg2lBl.s 			page 50


 1809 0070 8B61     		str	r3, [r1, #24]
 1810              	.L111:
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_CDPCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1811              		.loc 1 944 25
 1812 0072 7B68     		ldr	r3, [r7, #4]
 1813 0074 1B68     		ldr	r3, [r3]
 1814              		.loc 1 944 38
 1815 0076 03F00803 		and	r3, r3, #8
 1816              		.loc 1 944 5
 1817 007a 002B     		cmp	r3, #0
 1818 007c 10D0     		beq	.L112
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE1)
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 1819              		.loc 1 947 26
 1820 007e 7B68     		ldr	r3, [r7, #4]
 1821 0080 5A69     		ldr	r2, [r3, #20]
 1822              		.loc 1 947 50
 1823 0082 704B     		ldr	r3, .L129+4
 1824 0084 DB69     		ldr	r3, [r3, #28]
 1825              		.loc 1 947 59
 1826 0086 03F07003 		and	r3, r3, #112
 1827              		.loc 1 947 7
 1828 008a 9A42     		cmp	r2, r3
 1829 008c 08D9     		bls	.L112
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 1830              		.loc 1 950 7
 1831 008e 6D4B     		ldr	r3, .L129+4
 1832 0090 DB69     		ldr	r3, [r3, #28]
 1833 0092 23F07002 		bic	r2, r3, #112
 1834 0096 7B68     		ldr	r3, [r7, #4]
 1835 0098 5B69     		ldr	r3, [r3, #20]
 1836 009a 6A49     		ldr	r1, .L129+4
 1837 009c 1343     		orrs	r3, r3, r2
 1838 009e CB61     		str	r3, [r1, #28]
 1839              	.L112:
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
ARM GAS  /tmp/ccEg2lBl.s 			page 51


 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1840              		.loc 1 961 25
 1841 00a0 7B68     		ldr	r3, [r7, #4]
 1842 00a2 1B68     		ldr	r3, [r3]
 1843              		.loc 1 961 38
 1844 00a4 03F01003 		and	r3, r3, #16
 1845              		.loc 1 961 5
 1846 00a8 002B     		cmp	r3, #0
 1847 00aa 10D0     		beq	.L113
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE2)
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 1848              		.loc 1 964 26
 1849 00ac 7B68     		ldr	r3, [r7, #4]
 1850 00ae 9A69     		ldr	r2, [r3, #24]
 1851              		.loc 1 964 50
 1852 00b0 644B     		ldr	r3, .L129+4
 1853 00b2 DB69     		ldr	r3, [r3, #28]
 1854              		.loc 1 964 59
 1855 00b4 03F4E063 		and	r3, r3, #1792
 1856              		.loc 1 964 7
 1857 00b8 9A42     		cmp	r2, r3
 1858 00ba 08D9     		bls	.L113
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 1859              		.loc 1 967 7
 1860 00bc 614B     		ldr	r3, .L129+4
 1861 00be DB69     		ldr	r3, [r3, #28]
 1862 00c0 23F4E062 		bic	r2, r3, #1792
 1863 00c4 7B68     		ldr	r3, [r7, #4]
 1864 00c6 9B69     		ldr	r3, [r3, #24]
 1865 00c8 5E49     		ldr	r1, .L129+4
 1866 00ca 1343     		orrs	r3, r3, r2
 1867 00cc CB61     		str	r3, [r1, #28]
 1868              	.L113:
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 1869              		.loc 1 979 25
 1870 00ce 7B68     		ldr	r3, [r7, #4]
 1871 00d0 1B68     		ldr	r3, [r3]
 1872              		.loc 1 979 38
 1873 00d2 03F02003 		and	r3, r3, #32
 1874              		.loc 1 979 5
 1875 00d6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccEg2lBl.s 			page 52


 1876 00d8 10D0     		beq	.L114
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D3CFGR_D3PPRE)
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 1877              		.loc 1 982 26
 1878 00da 7B68     		ldr	r3, [r7, #4]
 1879 00dc DA69     		ldr	r2, [r3, #28]
 1880              		.loc 1 982 50
 1881 00de 594B     		ldr	r3, .L129+4
 1882 00e0 1B6A     		ldr	r3, [r3, #32]
 1883              		.loc 1 982 59
 1884 00e2 03F07003 		and	r3, r3, #112
 1885              		.loc 1 982 7
 1886 00e6 9A42     		cmp	r2, r3
 1887 00e8 08D9     		bls	.L114
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 1888              		.loc 1 985 7
 1889 00ea 564B     		ldr	r3, .L129+4
 1890 00ec 1B6A     		ldr	r3, [r3, #32]
 1891 00ee 23F07002 		bic	r2, r3, #112
 1892 00f2 7B68     		ldr	r3, [r7, #4]
 1893 00f4 DB69     		ldr	r3, [r3, #28]
 1894 00f6 5349     		ldr	r1, .L129+4
 1895 00f8 1343     		orrs	r3, r3, r2
 1896 00fa 0B62     		str	r3, [r1, #32]
 1897              	.L114:
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1898              		.loc 1 997 25
 1899 00fc 7B68     		ldr	r3, [r7, #4]
 1900 00fe 1B68     		ldr	r3, [r3]
 1901              		.loc 1 997 38
 1902 0100 03F00203 		and	r3, r3, #2
 1903              		.loc 1 997 5
 1904 0104 002B     		cmp	r3, #0
 1905 0106 10D0     		beq	.L115
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D1CFGR_HPRE)
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 1906              		.loc 1 1000 26
 1907 0108 7B68     		ldr	r3, [r7, #4]
 1908 010a DA68     		ldr	r2, [r3, #12]
 1909              		.loc 1 1000 49
 1910 010c 4D4B     		ldr	r3, .L129+4
 1911 010e 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccEg2lBl.s 			page 53


 1912              		.loc 1 1000 58
 1913 0110 03F00F03 		and	r3, r3, #15
 1914              		.loc 1 1000 7
 1915 0114 9A42     		cmp	r2, r3
 1916 0116 08D9     		bls	.L115
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1917              		.loc 1 1004 7
 1918 0118 4A4B     		ldr	r3, .L129+4
 1919 011a 9B69     		ldr	r3, [r3, #24]
 1920 011c 23F00F02 		bic	r2, r3, #15
 1921 0120 7B68     		ldr	r3, [r7, #4]
 1922 0122 DB68     		ldr	r3, [r3, #12]
 1923 0124 4749     		ldr	r1, .L129+4
 1924 0126 1343     		orrs	r3, r3, r2
 1925 0128 8B61     		str	r3, [r1, #24]
 1926              	.L115:
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /*------------------------- SYSCLK Configuration -------------------------*/
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1927              		.loc 1 1017 27
 1928 012a 7B68     		ldr	r3, [r7, #4]
 1929 012c 1B68     		ldr	r3, [r3]
 1930              		.loc 1 1017 40
 1931 012e 03F00103 		and	r3, r3, #1
 1932              		.loc 1 1017 7
 1933 0132 002B     		cmp	r3, #0
 1934 0134 55D0     		beq	.L116
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 1935              		.loc 1 1022 7
 1936 0136 434B     		ldr	r3, .L129+4
 1937 0138 9B69     		ldr	r3, [r3, #24]
 1938 013a 23F47062 		bic	r2, r3, #3840
 1939 013e 7B68     		ldr	r3, [r7, #4]
 1940 0140 9B68     		ldr	r3, [r3, #8]
 1941 0142 4049     		ldr	r1, .L129+4
 1942 0144 1343     		orrs	r3, r3, r2
 1943 0146 8B61     		str	r3, [r1, #24]
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
ARM GAS  /tmp/ccEg2lBl.s 			page 54


1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1944              		.loc 1 1027 27
 1945 0148 7B68     		ldr	r3, [r7, #4]
 1946 014a 5B68     		ldr	r3, [r3, #4]
 1947              		.loc 1 1027 9
 1948 014c 022B     		cmp	r3, #2
 1949 014e 07D1     		bne	.L117
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSE ready flag */
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 1950              		.loc 1 1030 12
 1951 0150 3C4B     		ldr	r3, .L129+4
 1952 0152 1B68     		ldr	r3, [r3]
 1953 0154 03F40033 		and	r3, r3, #131072
 1954              		.loc 1 1030 11
 1955 0158 002B     		cmp	r3, #0
 1956 015a 21D1     		bne	.L118
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1957              		.loc 1 1032 18
 1958 015c 0123     		movs	r3, #1
 1959 015e F6E0     		b	.L109
 1960              	.L117:
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* PLL is selected as System Clock Source */
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1961              		.loc 1 1036 32
 1962 0160 7B68     		ldr	r3, [r7, #4]
 1963 0162 5B68     		ldr	r3, [r3, #4]
 1964              		.loc 1 1036 14
 1965 0164 032B     		cmp	r3, #3
 1966 0166 07D1     		bne	.L119
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 1967              		.loc 1 1039 12
 1968 0168 364B     		ldr	r3, .L129+4
 1969 016a 1B68     		ldr	r3, [r3]
 1970 016c 03F00073 		and	r3, r3, #33554432
 1971              		.loc 1 1039 11
 1972 0170 002B     		cmp	r3, #0
 1973 0172 15D1     		bne	.L118
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1974              		.loc 1 1041 18
 1975 0174 0123     		movs	r3, #1
 1976 0176 EAE0     		b	.L109
 1977              	.L119:
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* CSI is selected as System Clock Source */
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 1978              		.loc 1 1045 32
 1979 0178 7B68     		ldr	r3, [r7, #4]
 1980 017a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccEg2lBl.s 			page 55


 1981              		.loc 1 1045 14
 1982 017c 012B     		cmp	r3, #1
 1983 017e 07D1     		bne	.L120
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 1984              		.loc 1 1048 12
 1985 0180 304B     		ldr	r3, .L129+4
 1986 0182 1B68     		ldr	r3, [r3]
 1987 0184 03F48073 		and	r3, r3, #256
 1988              		.loc 1 1048 11
 1989 0188 002B     		cmp	r3, #0
 1990 018a 09D1     		bne	.L118
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1991              		.loc 1 1050 18
 1992 018c 0123     		movs	r3, #1
 1993 018e DEE0     		b	.L109
 1994              	.L120:
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSI ready flag */
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 1995              		.loc 1 1057 12
 1996 0190 2C4B     		ldr	r3, .L129+4
 1997 0192 1B68     		ldr	r3, [r3]
 1998 0194 03F00403 		and	r3, r3, #4
 1999              		.loc 1 1057 11
 2000 0198 002B     		cmp	r3, #0
 2001 019a 01D1     		bne	.L118
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 2002              		.loc 1 1059 18
 2003 019c 0123     		movs	r3, #1
 2004 019e D6E0     		b	.L109
 2005              	.L118:
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 2006              		.loc 1 1062 7
 2007 01a0 284B     		ldr	r3, .L129+4
 2008 01a2 1B69     		ldr	r3, [r3, #16]
 2009 01a4 23F00702 		bic	r2, r3, #7
 2010 01a8 7B68     		ldr	r3, [r7, #4]
 2011 01aa 5B68     		ldr	r3, [r3, #4]
 2012 01ac 2549     		ldr	r1, .L129+4
 2013 01ae 1343     		orrs	r3, r3, r2
 2014 01b0 0B61     		str	r3, [r1, #16]
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 2015              		.loc 1 1065 19
 2016 01b2 FFF7FEFF 		bl	HAL_GetTick
 2017 01b6 7861     		str	r0, [r7, #20]
ARM GAS  /tmp/ccEg2lBl.s 			page 56


1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_P
 2018              		.loc 1 1067 15
 2019 01b8 0AE0     		b	.L121
 2020              	.L122:
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 2021              		.loc 1 1069 15
 2022 01ba FFF7FEFF 		bl	HAL_GetTick
 2023 01be 0246     		mov	r2, r0
 2024              		.loc 1 1069 29
 2025 01c0 7B69     		ldr	r3, [r7, #20]
 2026 01c2 D31A     		subs	r3, r2, r3
 2027              		.loc 1 1069 13
 2028 01c4 41F28832 		movw	r2, #5000
 2029 01c8 9342     		cmp	r3, r2
 2030 01ca 01D9     		bls	.L121
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 2031              		.loc 1 1071 20
 2032 01cc 0323     		movs	r3, #3
 2033 01ce BEE0     		b	.L109
 2034              	.L121:
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 2035              		.loc 1 1067 16
 2036 01d0 1C4B     		ldr	r3, .L129+4
 2037 01d2 1B69     		ldr	r3, [r3, #16]
 2038 01d4 03F03802 		and	r2, r3, #56
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 2039              		.loc 1 1067 68
 2040 01d8 7B68     		ldr	r3, [r7, #4]
 2041 01da 5B68     		ldr	r3, [r3, #4]
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 2042              		.loc 1 1067 83
 2043 01dc DB00     		lsls	r3, r3, #3
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 2044              		.loc 1 1067 15
 2045 01de 9A42     		cmp	r2, r3
 2046 01e0 EBD1     		bne	.L122
 2047              	.L116:
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Decreasing the BUS frequency divider */
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 2048              		.loc 1 1079 25
 2049 01e2 7B68     		ldr	r3, [r7, #4]
 2050 01e4 1B68     		ldr	r3, [r3]
 2051              		.loc 1 1079 38
 2052 01e6 03F00203 		and	r3, r3, #2
 2053              		.loc 1 1079 5
 2054 01ea 002B     		cmp	r3, #0
 2055 01ec 10D0     		beq	.L123
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccEg2lBl.s 			page 57


1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 2056              		.loc 1 1082 26
 2057 01ee 7B68     		ldr	r3, [r7, #4]
 2058 01f0 DA68     		ldr	r2, [r3, #12]
 2059              		.loc 1 1082 49
 2060 01f2 144B     		ldr	r3, .L129+4
 2061 01f4 9B69     		ldr	r3, [r3, #24]
 2062              		.loc 1 1082 58
 2063 01f6 03F00F03 		and	r3, r3, #15
 2064              		.loc 1 1082 7
 2065 01fa 9A42     		cmp	r2, r3
 2066 01fc 08D2     		bcs	.L123
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2067              		.loc 1 1086 7
 2068 01fe 114B     		ldr	r3, .L129+4
 2069 0200 9B69     		ldr	r3, [r3, #24]
 2070 0202 23F00F02 		bic	r2, r3, #15
 2071 0206 7B68     		ldr	r3, [r7, #4]
 2072 0208 DB68     		ldr	r3, [r3, #12]
 2073 020a 0E49     		ldr	r1, .L129+4
 2074 020c 1343     		orrs	r3, r3, r2
 2075 020e 8B61     		str	r3, [r1, #24]
 2076              	.L123:
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 2077              		.loc 1 1099 17
 2078 0210 0B4B     		ldr	r3, .L129
 2079 0212 1B68     		ldr	r3, [r3]
 2080 0214 03F00F03 		and	r3, r3, #15
 2081              		.loc 1 1099 5
 2082 0218 3A68     		ldr	r2, [r7]
 2083 021a 9A42     		cmp	r2, r3
 2084 021c 14D2     		bcs	.L124
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 2085              		.loc 1 1102 5
 2086 021e 084B     		ldr	r3, .L129
 2087 0220 1B68     		ldr	r3, [r3]
 2088 0222 23F00F02 		bic	r2, r3, #15
 2089 0226 0649     		ldr	r1, .L129
 2090 0228 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccEg2lBl.s 			page 58


 2091 022a 1343     		orrs	r3, r3, r2
 2092 022c 0B60     		str	r3, [r1]
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 2093              		.loc 1 1106 8
 2094 022e 044B     		ldr	r3, .L129
 2095 0230 1B68     		ldr	r3, [r3]
 2096 0232 03F00F03 		and	r3, r3, #15
 2097              		.loc 1 1106 7
 2098 0236 3A68     		ldr	r2, [r7]
 2099 0238 9A42     		cmp	r2, r3
 2100 023a 05D0     		beq	.L124
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 2101              		.loc 1 1108 14
 2102 023c 0123     		movs	r3, #1
 2103 023e 86E0     		b	.L109
 2104              	.L130:
 2105              		.align	2
 2106              	.L129:
 2107 0240 00200052 		.word	1375739904
 2108 0244 00440258 		.word	1476543488
 2109              	.L124:
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 2110              		.loc 1 1113 24
 2111 0248 7B68     		ldr	r3, [r7, #4]
 2112 024a 1B68     		ldr	r3, [r3]
 2113              		.loc 1 1113 37
 2114 024c 03F00403 		and	r3, r3, #4
 2115              		.loc 1 1113 4
 2116 0250 002B     		cmp	r3, #0
 2117 0252 10D0     		beq	.L125
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1PPRE)
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 2118              		.loc 1 1116 25
 2119 0254 7B68     		ldr	r3, [r7, #4]
 2120 0256 1A69     		ldr	r2, [r3, #16]
 2121              		.loc 1 1116 49
 2122 0258 3F4B     		ldr	r3, .L131
 2123 025a 9B69     		ldr	r3, [r3, #24]
 2124              		.loc 1 1116 58
 2125 025c 03F07003 		and	r3, r3, #112
 2126              		.loc 1 1116 6
 2127 0260 9A42     		cmp	r2, r3
 2128 0262 08D2     		bcs	.L125
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 2129              		.loc 1 1119 6
 2130 0264 3C4B     		ldr	r3, .L131
ARM GAS  /tmp/ccEg2lBl.s 			page 59


 2131 0266 9B69     		ldr	r3, [r3, #24]
 2132 0268 23F07002 		bic	r2, r3, #112
 2133 026c 7B68     		ldr	r3, [r7, #4]
 2134 026e 1B69     		ldr	r3, [r3, #16]
 2135 0270 3949     		ldr	r1, .L131
 2136 0272 1343     		orrs	r3, r3, r2
 2137 0274 8B61     		str	r3, [r1, #24]
 2138              	.L125:
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_CDPCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 2139              		.loc 1 1131 24
 2140 0276 7B68     		ldr	r3, [r7, #4]
 2141 0278 1B68     		ldr	r3, [r3]
 2142              		.loc 1 1131 37
 2143 027a 03F00803 		and	r3, r3, #8
 2144              		.loc 1 1131 4
 2145 027e 002B     		cmp	r3, #0
 2146 0280 10D0     		beq	.L126
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE1)
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 2147              		.loc 1 1134 25
 2148 0282 7B68     		ldr	r3, [r7, #4]
 2149 0284 5A69     		ldr	r2, [r3, #20]
 2150              		.loc 1 1134 49
 2151 0286 344B     		ldr	r3, .L131
 2152 0288 DB69     		ldr	r3, [r3, #28]
 2153              		.loc 1 1134 58
 2154 028a 03F07003 		and	r3, r3, #112
 2155              		.loc 1 1134 6
 2156 028e 9A42     		cmp	r2, r3
 2157 0290 08D2     		bcs	.L126
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 2158              		.loc 1 1137 6
 2159 0292 314B     		ldr	r3, .L131
 2160 0294 DB69     		ldr	r3, [r3, #28]
 2161 0296 23F07002 		bic	r2, r3, #112
 2162 029a 7B68     		ldr	r3, [r7, #4]
 2163 029c 5B69     		ldr	r3, [r3, #20]
 2164 029e 2E49     		ldr	r1, .L131
 2165 02a0 1343     		orrs	r3, r3, r2
 2166 02a2 CB61     		str	r3, [r1, #28]
 2167              	.L126:
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
ARM GAS  /tmp/ccEg2lBl.s 			page 60


1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2168              		.loc 1 1149 24
 2169 02a4 7B68     		ldr	r3, [r7, #4]
 2170 02a6 1B68     		ldr	r3, [r3]
 2171              		.loc 1 1149 37
 2172 02a8 03F01003 		and	r3, r3, #16
 2173              		.loc 1 1149 4
 2174 02ac 002B     		cmp	r3, #0
 2175 02ae 10D0     		beq	.L127
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE2)
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 2176              		.loc 1 1152 25
 2177 02b0 7B68     		ldr	r3, [r7, #4]
 2178 02b2 9A69     		ldr	r2, [r3, #24]
 2179              		.loc 1 1152 49
 2180 02b4 284B     		ldr	r3, .L131
 2181 02b6 DB69     		ldr	r3, [r3, #28]
 2182              		.loc 1 1152 58
 2183 02b8 03F4E063 		and	r3, r3, #1792
 2184              		.loc 1 1152 6
 2185 02bc 9A42     		cmp	r2, r3
 2186 02be 08D2     		bcs	.L127
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 2187              		.loc 1 1155 6
 2188 02c0 254B     		ldr	r3, .L131
 2189 02c2 DB69     		ldr	r3, [r3, #28]
 2190 02c4 23F4E062 		bic	r2, r3, #1792
 2191 02c8 7B68     		ldr	r3, [r7, #4]
 2192 02ca 9B69     		ldr	r3, [r3, #24]
 2193 02cc 2249     		ldr	r1, .L131
 2194 02ce 1343     		orrs	r3, r3, r2
 2195 02d0 CB61     		str	r3, [r1, #28]
 2196              	.L127:
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
ARM GAS  /tmp/ccEg2lBl.s 			page 61


 2197              		.loc 1 1167 24
 2198 02d2 7B68     		ldr	r3, [r7, #4]
 2199 02d4 1B68     		ldr	r3, [r3]
 2200              		.loc 1 1167 37
 2201 02d6 03F02003 		and	r3, r3, #32
 2202              		.loc 1 1167 4
 2203 02da 002B     		cmp	r3, #0
 2204 02dc 10D0     		beq	.L128
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D3CFGR_D3PPRE)
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 2205              		.loc 1 1170 25
 2206 02de 7B68     		ldr	r3, [r7, #4]
 2207 02e0 DA69     		ldr	r2, [r3, #28]
 2208              		.loc 1 1170 49
 2209 02e2 1D4B     		ldr	r3, .L131
 2210 02e4 1B6A     		ldr	r3, [r3, #32]
 2211              		.loc 1 1170 58
 2212 02e6 03F07003 		and	r3, r3, #112
 2213              		.loc 1 1170 6
 2214 02ea 9A42     		cmp	r2, r3
 2215 02ec 08D2     		bcs	.L128
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 2216              		.loc 1 1173 6
 2217 02ee 1A4B     		ldr	r3, .L131
 2218 02f0 1B6A     		ldr	r3, [r3, #32]
 2219 02f2 23F07002 		bic	r2, r3, #112
 2220 02f6 7B68     		ldr	r3, [r7, #4]
 2221 02f8 DB69     		ldr	r3, [r3, #28]
 2222 02fa 1749     		ldr	r1, .L131
 2223 02fc 1343     		orrs	r3, r3, r2
 2224 02fe 0B62     		str	r3, [r1, #32]
 2225              	.L128:
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_SRDPCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
 2226              		.loc 1 1186 25
 2227 0300 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2228 0304 0246     		mov	r2, r0
 2229              		.loc 1 1186 77
 2230 0306 144B     		ldr	r3, .L131
 2231 0308 9B69     		ldr	r3, [r3, #24]
 2232              		.loc 1 1186 106
 2233 030a 1B0A     		lsrs	r3, r3, #8
 2234 030c 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccEg2lBl.s 			page 62


 2235              		.loc 1 1186 72
 2236 0310 1249     		ldr	r1, .L131+4
 2237 0312 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2238              		.loc 1 1186 133
 2239 0314 03F01F03 		and	r3, r3, #31
 2240              		.loc 1 1186 23
 2241 0318 22FA03F3 		lsr	r3, r2, r3
 2242 031c 3B61     		str	r3, [r7, #16]
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 2243              		.loc 1 1192 66
 2244 031e 0E4B     		ldr	r3, .L131
 2245 0320 9B69     		ldr	r3, [r3, #24]
 2246              		.loc 1 1192 93
 2247 0322 03F00F03 		and	r3, r3, #15
 2248              		.loc 1 1192 61
 2249 0326 0D4A     		ldr	r2, .L131+4
 2250 0328 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2251              		.loc 1 1192 118
 2252 032a 03F01F03 		and	r3, r3, #31
 2253              		.loc 1 1192 40
 2254 032e 3A69     		ldr	r2, [r7, #16]
 2255 0330 22FA03F3 		lsr	r3, r2, r3
 2256              		.loc 1 1192 17
 2257 0334 0A4A     		ldr	r2, .L131+8
 2258 0336 1360     		str	r3, [r2]
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = SystemD2Clock;
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = common_system_clock;
 2259              		.loc 1 1200 19
 2260 0338 0A4A     		ldr	r2, .L131+12
 2261 033a 3B69     		ldr	r3, [r7, #16]
 2262 033c 1360     		str	r3, [r2]
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* DUAL_CORE && CORE_CM4 */
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   halstatus = HAL_InitTick (uwTickPrio);
 2263              		.loc 1 1204 15
 2264 033e 0A4B     		ldr	r3, .L131+16
 2265 0340 1B68     		ldr	r3, [r3]
 2266 0342 1846     		mov	r0, r3
 2267 0344 FFF7FEFF 		bl	HAL_InitTick
 2268 0348 0346     		mov	r3, r0
 2269 034a FB73     		strb	r3, [r7, #15]
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return halstatus;
 2270              		.loc 1 1206 10
 2271 034c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccEg2lBl.s 			page 63


 2272              	.L109:
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2273              		.loc 1 1207 1
 2274 034e 1846     		mov	r0, r3
 2275 0350 1837     		adds	r7, r7, #24
 2276              	.LCFI13:
 2277              		.cfi_def_cfa_offset 8
 2278 0352 BD46     		mov	sp, r7
 2279              	.LCFI14:
 2280              		.cfi_def_cfa_register 13
 2281              		@ sp needed
 2282 0354 80BD     		pop	{r7, pc}
 2283              	.L132:
 2284 0356 00BF     		.align	2
 2285              	.L131:
 2286 0358 00440258 		.word	1476543488
 2287 035c 00000000 		.word	D1CorePrescTable
 2288 0360 00000000 		.word	SystemD2Clock
 2289 0364 00000000 		.word	SystemCoreClock
 2290 0368 00000000 		.word	uwTickPrio
 2291              		.cfi_endproc
 2292              	.LFE333:
 2294              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 2295              		.align	1
 2296              		.global	HAL_RCC_MCOConfig
 2297              		.syntax unified
 2298              		.thumb
 2299              		.thumb_func
 2300              		.fpu fpv5-d16
 2302              	HAL_RCC_MCOConfig:
 2303              	.LFB334:
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Group2 Peripheral Control functions
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     frequencies.
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOx: specifies the output direction for the clock source.
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
ARM GAS  /tmp/ccEg2lBl.s 			page 64


1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLL1QCLK:  PLL1Q clock selected as MCO1 source
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI48: HSI48 (48MHZ) selected as MCO1 source
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLL2PCLK: PLL2P clock selected as MCO2 source
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK:  PLL1P clock selected as MCO2 source
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_CSICLK:  CSI clock selected as MCO2 source
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_LSICLK:  LSI clock selected as MCO2 source
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCODiv: specifies the MCOx pre-scaler.
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2304              		.loc 1 1254 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 48
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308 0000 80B5     		push	{r7, lr}
 2309              	.LCFI15:
 2310              		.cfi_def_cfa_offset 8
 2311              		.cfi_offset 7, -8
 2312              		.cfi_offset 14, -4
 2313 0002 8CB0     		sub	sp, sp, #48
 2314              	.LCFI16:
 2315              		.cfi_def_cfa_offset 56
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI17:
 2318              		.cfi_def_cfa_register 7
 2319 0006 F860     		str	r0, [r7, #12]
 2320 0008 B960     		str	r1, [r7, #8]
 2321 000a 7A60     		str	r2, [r7, #4]
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* RCC_MCO1 */
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 2322              		.loc 1 1260 5
 2323 000c FB68     		ldr	r3, [r7, #12]
 2324 000e 002B     		cmp	r3, #0
 2325 0010 2AD1     		bne	.L134
 2326              	.LBB5:
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
 2327              		.loc 1 1265 5
 2328 0012 2D4B     		ldr	r3, .L137
ARM GAS  /tmp/ccEg2lBl.s 			page 65


 2329 0014 D3F8E030 		ldr	r3, [r3, #224]
 2330 0018 2B4A     		ldr	r2, .L137
 2331 001a 43F00103 		orr	r3, r3, #1
 2332 001e C2F8E030 		str	r3, [r2, #224]
 2333 0022 294B     		ldr	r3, .L137
 2334 0024 D3F8E030 		ldr	r3, [r3, #224]
 2335 0028 03F00103 		and	r3, r3, #1
 2336 002c BB61     		str	r3, [r7, #24]
 2337 002e BB69     		ldr	r3, [r7, #24]
 2338              	.LBE5:
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 2339              		.loc 1 1268 25
 2340 0030 4FF48073 		mov	r3, #256
 2341 0034 FB61     		str	r3, [r7, #28]
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2342              		.loc 1 1269 26
 2343 0036 0223     		movs	r3, #2
 2344 0038 3B62     		str	r3, [r7, #32]
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2345              		.loc 1 1270 27
 2346 003a 0323     		movs	r3, #3
 2347 003c BB62     		str	r3, [r7, #40]
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2348              		.loc 1 1271 26
 2349 003e 0023     		movs	r3, #0
 2350 0040 7B62     		str	r3, [r7, #36]
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2351              		.loc 1 1272 31
 2352 0042 0023     		movs	r3, #0
 2353 0044 FB62     		str	r3, [r7, #44]
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 2354              		.loc 1 1273 5
 2355 0046 07F11C03 		add	r3, r7, #28
 2356 004a 1946     		mov	r1, r3
 2357 004c 1F48     		ldr	r0, .L137+4
 2358 004e FFF7FEFF 		bl	HAL_GPIO_Init
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 2359              		.loc 1 1276 5
 2360 0052 1D4B     		ldr	r3, .L137
 2361 0054 1B69     		ldr	r3, [r3, #16]
 2362 0056 23F0FE72 		bic	r2, r3, #33292288
 2363 005a B968     		ldr	r1, [r7, #8]
 2364 005c 7B68     		ldr	r3, [r7, #4]
 2365 005e 0B43     		orrs	r3, r3, r1
 2366 0060 1949     		ldr	r1, .L137
 2367 0062 1343     		orrs	r3, r3, r2
 2368 0064 0B61     		str	r3, [r1, #16]
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
ARM GAS  /tmp/ccEg2lBl.s 			page 66


1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)))
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2369              		.loc 1 1296 1
 2370 0066 2AE0     		b	.L136
 2371              	.L134:
 2372              	.LBB6:
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2373              		.loc 1 1283 5
 2374 0068 174B     		ldr	r3, .L137
 2375 006a D3F8E030 		ldr	r3, [r3, #224]
 2376 006e 164A     		ldr	r2, .L137
 2377 0070 43F00403 		orr	r3, r3, #4
 2378 0074 C2F8E030 		str	r3, [r2, #224]
 2379 0078 134B     		ldr	r3, .L137
 2380 007a D3F8E030 		ldr	r3, [r3, #224]
 2381 007e 03F00403 		and	r3, r3, #4
 2382 0082 7B61     		str	r3, [r7, #20]
 2383 0084 7B69     		ldr	r3, [r7, #20]
 2384              	.LBE6:
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2385              		.loc 1 1286 25
 2386 0086 4FF40073 		mov	r3, #512
 2387 008a FB61     		str	r3, [r7, #28]
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2388              		.loc 1 1287 26
 2389 008c 0223     		movs	r3, #2
 2390 008e 3B62     		str	r3, [r7, #32]
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2391              		.loc 1 1288 27
 2392 0090 0323     		movs	r3, #3
 2393 0092 BB62     		str	r3, [r7, #40]
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2394              		.loc 1 1289 26
 2395 0094 0023     		movs	r3, #0
 2396 0096 7B62     		str	r3, [r7, #36]
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 2397              		.loc 1 1290 31
 2398 0098 0023     		movs	r3, #0
 2399 009a FB62     		str	r3, [r7, #44]
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2400              		.loc 1 1291 5
 2401 009c 07F11C03 		add	r3, r7, #28
 2402 00a0 1946     		mov	r1, r3
 2403 00a2 0B48     		ldr	r0, .L137+8
 2404 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccEg2lBl.s 			page 67


1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2405              		.loc 1 1294 5
 2406 00a8 074B     		ldr	r3, .L137
 2407 00aa 1B69     		ldr	r3, [r3, #16]
 2408 00ac 23F07E42 		bic	r2, r3, #-33554432
 2409 00b0 7B68     		ldr	r3, [r7, #4]
 2410 00b2 D901     		lsls	r1, r3, #7
 2411 00b4 BB68     		ldr	r3, [r7, #8]
 2412 00b6 0B43     		orrs	r3, r3, r1
 2413 00b8 0349     		ldr	r1, .L137
 2414 00ba 1343     		orrs	r3, r3, r2
 2415 00bc 0B61     		str	r3, [r1, #16]
 2416              	.L136:
 2417              		.loc 1 1296 1
 2418 00be 00BF     		nop
 2419 00c0 3037     		adds	r7, r7, #48
 2420              	.LCFI18:
 2421              		.cfi_def_cfa_offset 8
 2422 00c2 BD46     		mov	sp, r7
 2423              	.LCFI19:
 2424              		.cfi_def_cfa_register 13
 2425              		@ sp needed
 2426 00c4 80BD     		pop	{r7, pc}
 2427              	.L138:
 2428 00c6 00BF     		.align	2
 2429              	.L137:
 2430 00c8 00440258 		.word	1476543488
 2431 00cc 00000258 		.word	1476526080
 2432 00d0 00080258 		.word	1476528128
 2433              		.cfi_endproc
 2434              	.LFE334:
 2436              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2437              		.align	1
 2438              		.global	HAL_RCC_EnableCSS
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2442              		.fpu fpv5-d16
 2444              	HAL_RCC_EnableCSS:
 2445              	.LFB335:
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         the Cortex-M NMI (Non-Mask-able Interrupt) exception vector.
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2446              		.loc 1 1308 1
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 0
 2449              		@ frame_needed = 1, uses_anonymous_args = 0
 2450              		@ link register save eliminated.
ARM GAS  /tmp/ccEg2lBl.s 			page 68


 2451 0000 80B4     		push	{r7}
 2452              	.LCFI20:
 2453              		.cfi_def_cfa_offset 4
 2454              		.cfi_offset 7, -4
 2455 0002 00AF     		add	r7, sp, #0
 2456              	.LCFI21:
 2457              		.cfi_def_cfa_register 7
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSHSEON) ;
 2458              		.loc 1 1309 3
 2459 0004 054B     		ldr	r3, .L140
 2460 0006 1B68     		ldr	r3, [r3]
 2461 0008 044A     		ldr	r2, .L140
 2462 000a 43F40023 		orr	r3, r3, #524288
 2463 000e 1360     		str	r3, [r2]
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2464              		.loc 1 1310 1
 2465 0010 00BF     		nop
 2466 0012 BD46     		mov	sp, r7
 2467              	.LCFI22:
 2468              		.cfi_def_cfa_register 13
 2469              		@ sp needed
 2470 0014 5DF8047B 		ldr	r7, [sp], #4
 2471              	.LCFI23:
 2472              		.cfi_restore 7
 2473              		.cfi_def_cfa_offset 0
 2474 0018 7047     		bx	lr
 2475              	.L141:
 2476 001a 00BF     		.align	2
 2477              	.L140:
 2478 001c 00440258 		.word	1476543488
 2479              		.cfi_endproc
 2480              	.LFE335:
 2482              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 2483              		.align	1
 2484              		.global	HAL_RCC_DisableCSS
 2485              		.syntax unified
 2486              		.thumb
 2487              		.thumb_func
 2488              		.fpu fpv5-d16
 2490              	HAL_RCC_DisableCSS:
 2491              	.LFB336:
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2492              		.loc 1 1317 1
 2493              		.cfi_startproc
 2494              		@ args = 0, pretend = 0, frame = 0
 2495              		@ frame_needed = 1, uses_anonymous_args = 0
 2496              		@ link register save eliminated.
 2497 0000 80B4     		push	{r7}
 2498              	.LCFI24:
 2499              		.cfi_def_cfa_offset 4
 2500              		.cfi_offset 7, -4
ARM GAS  /tmp/ccEg2lBl.s 			page 69


 2501 0002 00AF     		add	r7, sp, #0
 2502              	.LCFI25:
 2503              		.cfi_def_cfa_register 7
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSHSEON);
 2504              		.loc 1 1318 3
 2505 0004 054B     		ldr	r3, .L143
 2506 0006 1B68     		ldr	r3, [r3]
 2507 0008 044A     		ldr	r2, .L143
 2508 000a 23F40023 		bic	r3, r3, #524288
 2509 000e 1360     		str	r3, [r2]
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2510              		.loc 1 1319 1
 2511 0010 00BF     		nop
 2512 0012 BD46     		mov	sp, r7
 2513              	.LCFI26:
 2514              		.cfi_def_cfa_register 13
 2515              		@ sp needed
 2516 0014 5DF8047B 		ldr	r7, [sp], #4
 2517              	.LCFI27:
 2518              		.cfi_restore 7
 2519              		.cfi_def_cfa_offset 0
 2520 0018 7047     		bx	lr
 2521              	.L144:
 2522 001a 00BF     		.align	2
 2523              	.L143:
 2524 001c 00440258 		.word	1476543488
 2525              		.cfi_endproc
 2526              	.LFE336:
 2528              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 2529              		.align	1
 2530              		.global	HAL_RCC_GetSysClockFreq
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv5-d16
 2536              	HAL_RCC_GetSysClockFreq:
 2537              	.LFB337:
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         constant and the selected clock source:
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is CSI, function returns values based on CSI_VALUE(*)
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(**)
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(***)
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on CSI_VALUE(*),
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (*) CSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               4 MHz) but the real value may vary depending on the variations
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (**) HSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               64 MHz) but the real value may vary depending on the variations
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (***) HSE_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
ARM GAS  /tmp/ccEg2lBl.s 			page 70


1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                have wrong result.
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         value for HSE crystal.
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         baud rate for the communication peripherals or configure other parameters.
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval SYSCLK frequency
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2538              		.loc 1 1356 1
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 32
 2541              		@ frame_needed = 1, uses_anonymous_args = 0
 2542              		@ link register save eliminated.
 2543 0000 80B4     		push	{r7}
 2544              	.LCFI28:
 2545              		.cfi_def_cfa_offset 4
 2546              		.cfi_offset 7, -4
 2547 0002 89B0     		sub	sp, sp, #36
 2548              	.LCFI29:
 2549              		.cfi_def_cfa_offset 40
 2550 0004 00AF     		add	r7, sp, #0
 2551              	.LCFI30:
 2552              		.cfi_def_cfa_register 7
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue;
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   float_t fracn1, pllvco;
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t sysclockfreq;
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 2553              		.loc 1 1363 14
 2554 0006 B34B     		ldr	r3, .L165
 2555 0008 1B69     		ldr	r3, [r3, #16]
 2556              		.loc 1 1363 21
 2557 000a 03F03803 		and	r3, r3, #56
 2558 000e 182B     		cmp	r3, #24
 2559 0010 00F25581 		bhi	.L146
 2560 0014 01A2     		adr	r2, .L148
 2561 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2562 001a 00BF     		.p2align 2
 2563              	.L148:
 2564 001c 81000000 		.word	.L151+1
 2565 0020 BF020000 		.word	.L146+1
 2566 0024 BF020000 		.word	.L146+1
 2567 0028 BF020000 		.word	.L146+1
 2568 002c BF020000 		.word	.L146+1
 2569 0030 BF020000 		.word	.L146+1
 2570 0034 BF020000 		.word	.L146+1
ARM GAS  /tmp/ccEg2lBl.s 			page 71


 2571 0038 BF020000 		.word	.L146+1
 2572 003c A7000000 		.word	.L150+1
 2573 0040 BF020000 		.word	.L146+1
 2574 0044 BF020000 		.word	.L146+1
 2575 0048 BF020000 		.word	.L146+1
 2576 004c BF020000 		.word	.L146+1
 2577 0050 BF020000 		.word	.L146+1
 2578 0054 BF020000 		.word	.L146+1
 2579 0058 BF020000 		.word	.L146+1
 2580 005c AD000000 		.word	.L149+1
 2581 0060 BF020000 		.word	.L146+1
 2582 0064 BF020000 		.word	.L146+1
 2583 0068 BF020000 		.word	.L146+1
 2584 006c BF020000 		.word	.L146+1
 2585 0070 BF020000 		.word	.L146+1
 2586 0074 BF020000 		.word	.L146+1
 2587 0078 BF020000 		.word	.L146+1
 2588 007c B3000000 		.word	.L147+1
 2589              		.p2align 1
 2590              	.L151:
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 2591              		.loc 1 1367 8
 2592 0080 944B     		ldr	r3, .L165
 2593 0082 1B68     		ldr	r3, [r3]
 2594 0084 03F02003 		and	r3, r3, #32
 2595              		.loc 1 1367 7
 2596 0088 002B     		cmp	r3, #0
 2597 008a 09D0     		beq	.L152
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 2598              		.loc 1 1369 50
 2599 008c 914B     		ldr	r3, .L165
 2600 008e 1B68     		ldr	r3, [r3]
 2601              		.loc 1 1369 77
 2602 0090 DB08     		lsrs	r3, r3, #3
 2603 0092 03F00303 		and	r3, r3, #3
 2604              		.loc 1 1369 22
 2605 0096 904A     		ldr	r2, .L165+4
 2606 0098 22FA03F3 		lsr	r3, r2, r3
 2607 009c BB61     		str	r3, [r7, #24]
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) HSI_VALUE;
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2608              		.loc 1 1376 5
 2609 009e 11E1     		b	.L154
 2610              	.L152:
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2611              		.loc 1 1373 22
 2612 00a0 8D4B     		ldr	r3, .L165+4
 2613 00a2 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccEg2lBl.s 			page 72


 2614              		.loc 1 1376 5
 2615 00a4 0EE1     		b	.L154
 2616              	.L150:
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
 2617              		.loc 1 1379 18
 2618 00a6 8D4B     		ldr	r3, .L165+8
 2619 00a8 BB61     		str	r3, [r7, #24]
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2620              		.loc 1 1380 5
 2621 00aa 0BE1     		b	.L154
 2622              	.L149:
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 2623              		.loc 1 1383 18
 2624 00ac 8C4B     		ldr	r3, .L165+12
 2625 00ae BB61     		str	r3, [r7, #24]
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2626              		.loc 1 1384 5
 2627 00b0 08E1     		b	.L154
 2628              	.L147:
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     */
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 2629              		.loc 1 1391 21
 2630 00b2 884B     		ldr	r3, .L165
 2631 00b4 9B6A     		ldr	r3, [r3, #40]
 2632              		.loc 1 1391 15
 2633 00b6 03F00303 		and	r3, r3, #3
 2634 00ba 7B61     		str	r3, [r7, #20]
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 2635              		.loc 1 1392 17
 2636 00bc 854B     		ldr	r3, .L165
 2637 00be 9B6A     		ldr	r3, [r3, #40]
 2638              		.loc 1 1392 51
 2639 00c0 1B09     		lsrs	r3, r3, #4
 2640              		.loc 1 1392 10
 2641 00c2 03F03F03 		and	r3, r3, #63
 2642 00c6 3B61     		str	r3, [r7, #16]
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 2643              		.loc 1 1393 22
 2644 00c8 824B     		ldr	r3, .L165
 2645 00ca DB6A     		ldr	r3, [r3, #44]
 2646              		.loc 1 1393 15
 2647 00cc 03F00103 		and	r3, r3, #1
 2648 00d0 FB60     		str	r3, [r7, #12]
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 2649              		.loc 1 1394 50
 2650 00d2 804B     		ldr	r3, .L165
 2651 00d4 5B6B     		ldr	r3, [r3, #52]
 2652              		.loc 1 1394 85
ARM GAS  /tmp/ccEg2lBl.s 			page 73


 2653 00d6 DB08     		lsrs	r3, r3, #3
 2654 00d8 C3F30C03 		ubfx	r3, r3, #0, #13
 2655              		.loc 1 1394 23
 2656 00dc FA68     		ldr	r2, [r7, #12]
 2657 00de 02FB03F3 		mul	r3, r2, r3
 2658              		.loc 1 1394 12
 2659 00e2 07EE903A 		vmov	s15, r3	@ int
 2660 00e6 F8EE677A 		vcvt.f32.u32	s15, s15
 2661 00ea C7ED027A 		vstr.32	s15, [r7, #8]
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (pllm != 0U)
 2662              		.loc 1 1396 8
 2663 00ee 3B69     		ldr	r3, [r7, #16]
 2664 00f0 002B     		cmp	r3, #0
 2665 00f2 00F0E180 		beq	.L155
 2666 00f6 7B69     		ldr	r3, [r7, #20]
 2667 00f8 022B     		cmp	r3, #2
 2668 00fa 00F08380 		beq	.L156
 2669 00fe 7B69     		ldr	r3, [r7, #20]
 2670 0100 022B     		cmp	r3, #2
 2671 0102 00F2A180 		bhi	.L157
 2672 0106 7B69     		ldr	r3, [r7, #20]
 2673 0108 002B     		cmp	r3, #0
 2674 010a 03D0     		beq	.L158
 2675 010c 7B69     		ldr	r3, [r7, #20]
 2676 010e 012B     		cmp	r3, #1
 2677 0110 56D0     		beq	.L159
 2678 0112 99E0     		b	.L157
 2679              	.L158:
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       switch (pllsource)
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 2680              		.loc 1 1402 12
 2681 0114 6F4B     		ldr	r3, .L165
 2682 0116 1B68     		ldr	r3, [r3]
 2683 0118 03F02003 		and	r3, r3, #32
 2684              		.loc 1 1402 11
 2685 011c 002B     		cmp	r3, #0
 2686 011e 2DD0     		beq	.L160
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 2687              		.loc 1 1404 36
 2688 0120 6C4B     		ldr	r3, .L165
 2689 0122 1B68     		ldr	r3, [r3]
 2690              		.loc 1 1404 63
 2691 0124 DB08     		lsrs	r3, r3, #3
 2692 0126 03F00303 		and	r3, r3, #3
 2693              		.loc 1 1404 19
 2694 012a 6B4A     		ldr	r2, .L165+4
 2695 012c 22FA03F3 		lsr	r3, r2, r3
 2696 0130 7B60     		str	r3, [r7, #4]
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 2697              		.loc 1 1405 22
 2698 0132 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccEg2lBl.s 			page 74


 2699 0134 07EE903A 		vmov	s15, r3	@ int
 2700 0138 F8EE676A 		vcvt.f32.u32	s13, s15
 2701              		.loc 1 1405 42
 2702 013c 3B69     		ldr	r3, [r7, #16]
 2703 013e 07EE903A 		vmov	s15, r3	@ int
 2704 0142 F8EE677A 		vcvt.f32.u32	s15, s15
 2705              		.loc 1 1405 40
 2706 0146 86EEA77A 		vdiv.f32	s14, s13, s15
 2707              		.loc 1 1405 83
 2708 014a 624B     		ldr	r3, .L165
 2709 014c 1B6B     		ldr	r3, [r3, #48]
 2710              		.loc 1 1405 69
 2711 014e C3F30803 		ubfx	r3, r3, #0, #9
 2712              		.loc 1 1405 60
 2713 0152 07EE903A 		vmov	s15, r3	@ int
 2714 0156 F8EE676A 		vcvt.f32.u32	s13, s15
 2715              		.loc 1 1405 122
 2716 015a 97ED026A 		vldr.32	s12, [r7, #8]
 2717 015e DFED615A 		vldr.32	s11, .L165+16
 2718 0162 C6EE257A 		vdiv.f32	s15, s12, s11
 2719              		.loc 1 1405 113
 2720 0166 76EEA77A 		vadd.f32	s15, s13, s15
 2721              		.loc 1 1405 140
 2722 016a F7EE006A 		vmov.f32	s13, #1.0e+0
 2723 016e 77EEA67A 		vadd.f32	s15, s15, s13
 2724              		.loc 1 1405 18
 2725 0172 67EE277A 		vmul.f32	s15, s14, s15
 2726 0176 C7ED077A 		vstr.32	s15, [r7, #28]
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         else
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2727              		.loc 1 1411 9
 2728 017a 87E0     		b	.L162
 2729              	.L160:
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2730              		.loc 1 1409 42
 2731 017c 3B69     		ldr	r3, [r7, #16]
 2732 017e 07EE903A 		vmov	s15, r3	@ int
 2733 0182 F8EE677A 		vcvt.f32.u32	s15, s15
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2734              		.loc 1 1409 40
 2735 0186 DFED586A 		vldr.32	s13, .L165+20
 2736 018a 86EEA77A 		vdiv.f32	s14, s13, s15
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2737              		.loc 1 1409 83
 2738 018e 514B     		ldr	r3, .L165
 2739 0190 1B6B     		ldr	r3, [r3, #48]
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2740              		.loc 1 1409 69
 2741 0192 C3F30803 		ubfx	r3, r3, #0, #9
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2742              		.loc 1 1409 60
 2743 0196 07EE903A 		vmov	s15, r3	@ int
 2744 019a F8EE676A 		vcvt.f32.u32	s13, s15
ARM GAS  /tmp/ccEg2lBl.s 			page 75


1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2745              		.loc 1 1409 122
 2746 019e 97ED026A 		vldr.32	s12, [r7, #8]
 2747 01a2 DFED505A 		vldr.32	s11, .L165+16
 2748 01a6 C6EE257A 		vdiv.f32	s15, s12, s11
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2749              		.loc 1 1409 113
 2750 01aa 76EEA77A 		vadd.f32	s15, s13, s15
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2751              		.loc 1 1409 140
 2752 01ae F7EE006A 		vmov.f32	s13, #1.0e+0
 2753 01b2 77EEA67A 		vadd.f32	s15, s15, s13
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2754              		.loc 1 1409 18
 2755 01b6 67EE277A 		vmul.f32	s15, s14, s15
 2756 01ba C7ED077A 		vstr.32	s15, [r7, #28]
 2757              		.loc 1 1411 9
 2758 01be 65E0     		b	.L162
 2759              	.L159:
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2760              		.loc 1 1414 40
 2761 01c0 3B69     		ldr	r3, [r7, #16]
 2762 01c2 07EE903A 		vmov	s15, r3	@ int
 2763 01c6 F8EE677A 		vcvt.f32.u32	s15, s15
 2764              		.loc 1 1414 38
 2765 01ca DFED486A 		vldr.32	s13, .L165+24
 2766 01ce 86EEA77A 		vdiv.f32	s14, s13, s15
 2767              		.loc 1 1414 81
 2768 01d2 404B     		ldr	r3, .L165
 2769 01d4 1B6B     		ldr	r3, [r3, #48]
 2770              		.loc 1 1414 67
 2771 01d6 C3F30803 		ubfx	r3, r3, #0, #9
 2772              		.loc 1 1414 58
 2773 01da 07EE903A 		vmov	s15, r3	@ int
 2774 01de F8EE676A 		vcvt.f32.u32	s13, s15
 2775              		.loc 1 1414 120
 2776 01e2 97ED026A 		vldr.32	s12, [r7, #8]
 2777 01e6 DFED3F5A 		vldr.32	s11, .L165+16
 2778 01ea C6EE257A 		vdiv.f32	s15, s12, s11
 2779              		.loc 1 1414 111
 2780 01ee 76EEA77A 		vadd.f32	s15, s13, s15
 2781              		.loc 1 1414 138
 2782 01f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 2783 01f6 77EEA67A 		vadd.f32	s15, s15, s13
 2784              		.loc 1 1414 16
 2785 01fa 67EE277A 		vmul.f32	s15, s14, s15
 2786 01fe C7ED077A 		vstr.32	s15, [r7, #28]
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2787              		.loc 1 1415 9
 2788 0202 43E0     		b	.L162
 2789              	.L156:
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2790              		.loc 1 1418 40
ARM GAS  /tmp/ccEg2lBl.s 			page 76


 2791 0204 3B69     		ldr	r3, [r7, #16]
 2792 0206 07EE903A 		vmov	s15, r3	@ int
 2793 020a F8EE677A 		vcvt.f32.u32	s15, s15
 2794              		.loc 1 1418 38
 2795 020e DFED386A 		vldr.32	s13, .L165+28
 2796 0212 86EEA77A 		vdiv.f32	s14, s13, s15
 2797              		.loc 1 1418 81
 2798 0216 2F4B     		ldr	r3, .L165
 2799 0218 1B6B     		ldr	r3, [r3, #48]
 2800              		.loc 1 1418 67
 2801 021a C3F30803 		ubfx	r3, r3, #0, #9
 2802              		.loc 1 1418 58
 2803 021e 07EE903A 		vmov	s15, r3	@ int
 2804 0222 F8EE676A 		vcvt.f32.u32	s13, s15
 2805              		.loc 1 1418 120
 2806 0226 97ED026A 		vldr.32	s12, [r7, #8]
 2807 022a DFED2E5A 		vldr.32	s11, .L165+16
 2808 022e C6EE257A 		vdiv.f32	s15, s12, s11
 2809              		.loc 1 1418 111
 2810 0232 76EEA77A 		vadd.f32	s15, s13, s15
 2811              		.loc 1 1418 138
 2812 0236 F7EE006A 		vmov.f32	s13, #1.0e+0
 2813 023a 77EEA67A 		vadd.f32	s15, s15, s13
 2814              		.loc 1 1418 16
 2815 023e 67EE277A 		vmul.f32	s15, s14, s15
 2816 0242 C7ED077A 		vstr.32	s15, [r7, #28]
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2817              		.loc 1 1419 9
 2818 0246 21E0     		b	.L162
 2819              	.L157:
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       default:
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2820              		.loc 1 1422 40
 2821 0248 3B69     		ldr	r3, [r7, #16]
 2822 024a 07EE903A 		vmov	s15, r3	@ int
 2823 024e F8EE677A 		vcvt.f32.u32	s15, s15
 2824              		.loc 1 1422 38
 2825 0252 DFED266A 		vldr.32	s13, .L165+24
 2826 0256 86EEA77A 		vdiv.f32	s14, s13, s15
 2827              		.loc 1 1422 81
 2828 025a 1E4B     		ldr	r3, .L165
 2829 025c 1B6B     		ldr	r3, [r3, #48]
 2830              		.loc 1 1422 67
 2831 025e C3F30803 		ubfx	r3, r3, #0, #9
 2832              		.loc 1 1422 58
 2833 0262 07EE903A 		vmov	s15, r3	@ int
 2834 0266 F8EE676A 		vcvt.f32.u32	s13, s15
 2835              		.loc 1 1422 120
 2836 026a 97ED026A 		vldr.32	s12, [r7, #8]
 2837 026e DFED1D5A 		vldr.32	s11, .L165+16
 2838 0272 C6EE257A 		vdiv.f32	s15, s12, s11
 2839              		.loc 1 1422 111
 2840 0276 76EEA77A 		vadd.f32	s15, s13, s15
 2841              		.loc 1 1422 138
 2842 027a F7EE006A 		vmov.f32	s13, #1.0e+0
 2843 027e 77EEA67A 		vadd.f32	s15, s15, s13
ARM GAS  /tmp/ccEg2lBl.s 			page 77


 2844              		.loc 1 1422 16
 2845 0282 67EE277A 		vmul.f32	s15, s14, s15
 2846 0286 C7ED077A 		vstr.32	s15, [r7, #28]
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2847              		.loc 1 1423 9
 2848 028a 00BF     		nop
 2849              	.L162:
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 2850              		.loc 1 1425 20
 2851 028c 114B     		ldr	r3, .L165
 2852 028e 1B6B     		ldr	r3, [r3, #48]
 2853              		.loc 1 1425 50
 2854 0290 5B0A     		lsrs	r3, r3, #9
 2855 0292 03F07F03 		and	r3, r3, #127
 2856              		.loc 1 1425 12
 2857 0296 0133     		adds	r3, r3, #1
 2858 0298 3B60     		str	r3, [r7]
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 2859              		.loc 1 1426 50
 2860 029a 3B68     		ldr	r3, [r7]
 2861 029c 07EE903A 		vmov	s15, r3	@ int
 2862 02a0 B8EE677A 		vcvt.f32.u32	s14, s15
 2863              		.loc 1 1426 33
 2864 02a4 D7ED076A 		vldr.32	s13, [r7, #28]
 2865 02a8 C6EE877A 		vdiv.f32	s15, s13, s14
 2866              		.loc 1 1426 20
 2867 02ac FCEEE77A 		vcvt.u32.f32	s15, s15
 2868 02b0 17EE903A 		vmov	r3, s15	@ int
 2869 02b4 BB61     		str	r3, [r7, #24]
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = 0U;
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2870              		.loc 1 1432 5
 2871 02b6 05E0     		b	.L154
 2872              	.L155:
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2873              		.loc 1 1430 20
 2874 02b8 0023     		movs	r3, #0
 2875 02ba BB61     		str	r3, [r7, #24]
 2876              		.loc 1 1432 5
 2877 02bc 02E0     		b	.L154
 2878              	.L146:
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   default:
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
 2879              		.loc 1 1435 18
 2880 02be 074B     		ldr	r3, .L165+8
 2881 02c0 BB61     		str	r3, [r7, #24]
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2882              		.loc 1 1436 5
 2883 02c2 00BF     		nop
 2884              	.L154:
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccEg2lBl.s 			page 78


1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return sysclockfreq;
 2885              		.loc 1 1439 10
 2886 02c4 BB69     		ldr	r3, [r7, #24]
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2887              		.loc 1 1440 1
 2888 02c6 1846     		mov	r0, r3
 2889 02c8 2437     		adds	r7, r7, #36
 2890              	.LCFI31:
 2891              		.cfi_def_cfa_offset 4
 2892 02ca BD46     		mov	sp, r7
 2893              	.LCFI32:
 2894              		.cfi_def_cfa_register 13
 2895              		@ sp needed
 2896 02cc 5DF8047B 		ldr	r7, [sp], #4
 2897              	.LCFI33:
 2898              		.cfi_restore 7
 2899              		.cfi_def_cfa_offset 0
 2900 02d0 7047     		bx	lr
 2901              	.L166:
 2902 02d2 00BF     		.align	2
 2903              	.L165:
 2904 02d4 00440258 		.word	1476543488
 2905 02d8 0090D003 		.word	64000000
 2906 02dc 00093D00 		.word	4000000
 2907 02e0 40787D01 		.word	25000000
 2908 02e4 00000046 		.word	1174405120
 2909 02e8 0024744C 		.word	1282679808
 2910 02ec 0024744A 		.word	1249125376
 2911 02f0 20BCBE4B 		.word	1270791200
 2912              		.cfi_endproc
 2913              	.LFE337:
 2915              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2916              		.align	1
 2917              		.global	HAL_RCC_GetHCLKFreq
 2918              		.syntax unified
 2919              		.thumb
 2920              		.thumb_func
 2921              		.fpu fpv5-d16
 2923              	HAL_RCC_GetHCLKFreq:
 2924              	.LFB338:
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated within this function
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HCLK frequency
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2925              		.loc 1 1453 1
 2926              		.cfi_startproc
 2927              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccEg2lBl.s 			page 79


 2928              		@ frame_needed = 1, uses_anonymous_args = 0
 2929 0000 80B5     		push	{r7, lr}
 2930              	.LCFI34:
 2931              		.cfi_def_cfa_offset 8
 2932              		.cfi_offset 7, -8
 2933              		.cfi_offset 14, -4
 2934 0002 82B0     		sub	sp, sp, #8
 2935              	.LCFI35:
 2936              		.cfi_def_cfa_offset 16
 2937 0004 00AF     		add	r7, sp, #0
 2938              	.LCFI36:
 2939              		.cfi_def_cfa_register 7
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t common_system_clock;
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1
 2940              		.loc 1 1457 25
 2941 0006 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2942 000a 0246     		mov	r2, r0
 2943              		.loc 1 1457 76
 2944 000c 104B     		ldr	r3, .L169
 2945 000e 9B69     		ldr	r3, [r3, #24]
 2946              		.loc 1 1457 105
 2947 0010 1B0A     		lsrs	r3, r3, #8
 2948 0012 03F00F03 		and	r3, r3, #15
 2949              		.loc 1 1457 71
 2950 0016 0F49     		ldr	r1, .L169+4
 2951 0018 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2952              		.loc 1 1457 131
 2953 001a 03F01F03 		and	r3, r3, #31
 2954              		.loc 1 1457 23
 2955 001e 22FA03F3 		lsr	r3, r2, r3
 2956 0022 7B60     		str	r3, [r7, #4]
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 2957              		.loc 1 1463 66
 2958 0024 0A4B     		ldr	r3, .L169
 2959 0026 9B69     		ldr	r3, [r3, #24]
 2960              		.loc 1 1463 93
 2961 0028 03F00F03 		and	r3, r3, #15
 2962              		.loc 1 1463 61
 2963 002c 094A     		ldr	r2, .L169+4
 2964 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2965              		.loc 1 1463 118
 2966 0030 03F01F03 		and	r3, r3, #31
 2967              		.loc 1 1463 40
 2968 0034 7A68     		ldr	r2, [r7, #4]
 2969 0036 22FA03F3 		lsr	r3, r2, r3
 2970              		.loc 1 1463 17
 2971 003a 074A     		ldr	r2, .L169+8
 2972 003c 1360     		str	r3, [r2]
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
ARM GAS  /tmp/ccEg2lBl.s 			page 80


1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = SystemD2Clock;
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = common_system_clock;
 2973              		.loc 1 1471 19
 2974 003e 074A     		ldr	r2, .L169+12
 2975 0040 7B68     		ldr	r3, [r7, #4]
 2976 0042 1360     		str	r3, [r2]
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* DUAL_CORE && CORE_CM4 */
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return SystemD2Clock;
 2977              		.loc 1 1474 10
 2978 0044 044B     		ldr	r3, .L169+8
 2979 0046 1B68     		ldr	r3, [r3]
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2980              		.loc 1 1475 1
 2981 0048 1846     		mov	r0, r3
 2982 004a 0837     		adds	r7, r7, #8
 2983              	.LCFI37:
 2984              		.cfi_def_cfa_offset 8
 2985 004c BD46     		mov	sp, r7
 2986              	.LCFI38:
 2987              		.cfi_def_cfa_register 13
 2988              		@ sp needed
 2989 004e 80BD     		pop	{r7, pc}
 2990              	.L170:
 2991              		.align	2
 2992              	.L169:
 2993 0050 00440258 		.word	1476543488
 2994 0054 00000000 		.word	D1CorePrescTable
 2995 0058 00000000 		.word	SystemD2Clock
 2996 005c 00000000 		.word	SystemCoreClock
 2997              		.cfi_endproc
 2998              	.LFE338:
 3000              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 3001              		.align	1
 3002              		.global	HAL_RCC_GetPCLK1Freq
 3003              		.syntax unified
 3004              		.thumb
 3005              		.thumb_func
 3006              		.fpu fpv5-d16
 3008              	HAL_RCC_GetPCLK1Freq:
 3009              	.LFB339:
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3010              		.loc 1 1485 1
 3011              		.cfi_startproc
ARM GAS  /tmp/ccEg2lBl.s 			page 81


 3012              		@ args = 0, pretend = 0, frame = 0
 3013              		@ frame_needed = 1, uses_anonymous_args = 0
 3014 0000 80B5     		push	{r7, lr}
 3015              	.LCFI39:
 3016              		.cfi_def_cfa_offset 8
 3017              		.cfi_offset 7, -8
 3018              		.cfi_offset 14, -4
 3019 0002 00AF     		add	r7, sp, #0
 3020              	.LCFI40:
 3021              		.cfi_def_cfa_register 7
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE1)
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CF
 3022              		.loc 1 1488 11
 3023 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3024 0008 0246     		mov	r2, r0
 3025              		.loc 1 1488 59
 3026 000a 064B     		ldr	r3, .L173
 3027 000c DB69     		ldr	r3, [r3, #28]
 3028              		.loc 1 1488 89
 3029 000e 1B09     		lsrs	r3, r3, #4
 3030 0010 03F00703 		and	r3, r3, #7
 3031              		.loc 1 1488 54
 3032 0014 0449     		ldr	r1, .L173+4
 3033 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3034              		.loc 1 1488 117
 3035 0018 03F01F03 		and	r3, r3, #31
 3036              		.loc 1 1488 33
 3037 001c 22FA03F3 		lsr	r3, r2, r3
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CD
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3038              		.loc 1 1493 1
 3039 0020 1846     		mov	r0, r3
 3040 0022 80BD     		pop	{r7, pc}
 3041              	.L174:
 3042              		.align	2
 3043              	.L173:
 3044 0024 00440258 		.word	1476543488
 3045 0028 00000000 		.word	D1CorePrescTable
 3046              		.cfi_endproc
 3047              	.LFE339:
 3049              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 3050              		.align	1
 3051              		.global	HAL_RCC_GetPCLK2Freq
 3052              		.syntax unified
 3053              		.thumb
 3054              		.thumb_func
 3055              		.fpu fpv5-d16
 3057              	HAL_RCC_GetPCLK2Freq:
 3058              	.LFB340:
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
ARM GAS  /tmp/ccEg2lBl.s 			page 82


1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3059              		.loc 1 1503 1
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 0
 3062              		@ frame_needed = 1, uses_anonymous_args = 0
 3063 0000 80B5     		push	{r7, lr}
 3064              	.LCFI41:
 3065              		.cfi_def_cfa_offset 8
 3066              		.cfi_offset 7, -8
 3067              		.cfi_offset 14, -4
 3068 0002 00AF     		add	r7, sp, #0
 3069              	.LCFI42:
 3070              		.cfi_def_cfa_register 7
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE2)
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CF
 3071              		.loc 1 1506 11
 3072 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 3073 0008 0246     		mov	r2, r0
 3074              		.loc 1 1506 59
 3075 000a 064B     		ldr	r3, .L177
 3076 000c DB69     		ldr	r3, [r3, #28]
 3077              		.loc 1 1506 89
 3078 000e 1B0A     		lsrs	r3, r3, #8
 3079 0010 03F00703 		and	r3, r3, #7
 3080              		.loc 1 1506 54
 3081 0014 0449     		ldr	r1, .L177+4
 3082 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3083              		.loc 1 1506 117
 3084 0018 03F01F03 		and	r3, r3, #31
 3085              		.loc 1 1506 33
 3086 001c 22FA03F3 		lsr	r3, r2, r3
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CD
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3087              		.loc 1 1510 1
 3088 0020 1846     		mov	r0, r3
 3089 0022 80BD     		pop	{r7, pc}
 3090              	.L178:
 3091              		.align	2
 3092              	.L177:
 3093 0024 00440258 		.word	1476543488
 3094 0028 00000000 		.word	D1CorePrescTable
 3095              		.cfi_endproc
 3096              	.LFE340:
 3098              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 3099              		.align	1
 3100              		.global	HAL_RCC_GetOscConfig
 3101              		.syntax unified
 3102              		.thumb
 3103              		.thumb_func
ARM GAS  /tmp/ccEg2lBl.s 			page 83


 3104              		.fpu fpv5-d16
 3106              	HAL_RCC_GetOscConfig:
 3107              	.LFB341:
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3108              		.loc 1 1520 1
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 8
 3111              		@ frame_needed = 1, uses_anonymous_args = 0
 3112 0000 80B5     		push	{r7, lr}
 3113              	.LCFI43:
 3114              		.cfi_def_cfa_offset 8
 3115              		.cfi_offset 7, -8
 3116              		.cfi_offset 14, -4
 3117 0002 82B0     		sub	sp, sp, #8
 3118              	.LCFI44:
 3119              		.cfi_def_cfa_offset 16
 3120 0004 00AF     		add	r7, sp, #0
 3121              	.LCFI45:
 3122              		.cfi_def_cfa_register 7
 3123 0006 7860     		str	r0, [r7, #4]
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 3124              		.loc 1 1522 37
 3125 0008 7B68     		ldr	r3, [r7, #4]
 3126 000a 3F22     		movs	r2, #63
 3127 000c 1A60     		str	r2, [r3]
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI| RCC_OSCILLAT
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_CR_HSEEXT)
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &(RCC_CR_HSEBYP | RCC_CR_HSEEXT)) == RCC_CR_HSEBYP)
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->CR &(RCC_CR_HSEBYP | RCC_CR_HSEEXT)) == (RCC_CR_HSEBYP | RCC_CR_HSEEXT))
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS_DIGITAL;
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
ARM GAS  /tmp/ccEg2lBl.s 			page 84


 3128              		.loc 1 1544 10
 3129 000e 724B     		ldr	r3, .L200
 3130 0010 1B68     		ldr	r3, [r3]
 3131              		.loc 1 1544 15
 3132 0012 03F48023 		and	r3, r3, #262144
 3133              		.loc 1 1544 5
 3134 0016 B3F5802F 		cmp	r3, #262144
 3135 001a 04D1     		bne	.L180
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 3136              		.loc 1 1546 33
 3137 001c 7B68     		ldr	r3, [r7, #4]
 3138 001e 4FF4A022 		mov	r2, #327680
 3139 0022 5A60     		str	r2, [r3, #4]
 3140 0024 0EE0     		b	.L181
 3141              	.L180:
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 3142              		.loc 1 1548 15
 3143 0026 6C4B     		ldr	r3, .L200
 3144 0028 1B68     		ldr	r3, [r3]
 3145              		.loc 1 1548 20
 3146 002a 03F48033 		and	r3, r3, #65536
 3147              		.loc 1 1548 10
 3148 002e B3F5803F 		cmp	r3, #65536
 3149 0032 04D1     		bne	.L182
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 3150              		.loc 1 1550 33
 3151 0034 7B68     		ldr	r3, [r7, #4]
 3152 0036 4FF48032 		mov	r2, #65536
 3153 003a 5A60     		str	r2, [r3, #4]
 3154 003c 02E0     		b	.L181
 3155              	.L182:
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 3156              		.loc 1 1554 33
 3157 003e 7B68     		ldr	r3, [r7, #4]
 3158 0040 0022     		movs	r2, #0
 3159 0042 5A60     		str	r2, [r3, #4]
 3160              	.L181:
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_CR_HSEEXT */
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Get the CSI configuration -----------------------------------------------*/
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_CSION) == RCC_CR_CSION)
 3161              		.loc 1 1559 10
 3162 0044 644B     		ldr	r3, .L200
 3163 0046 1B68     		ldr	r3, [r3]
 3164              		.loc 1 1559 15
 3165 0048 03F08003 		and	r3, r3, #128
 3166              		.loc 1 1559 5
 3167 004c 802B     		cmp	r3, #128
 3168 004e 03D1     		bne	.L183
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccEg2lBl.s 			page 85


1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_ON;
 3169              		.loc 1 1561 33
 3170 0050 7B68     		ldr	r3, [r7, #4]
 3171 0052 8022     		movs	r2, #128
 3172 0054 DA61     		str	r2, [r3, #28]
 3173 0056 02E0     		b	.L184
 3174              	.L183:
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_OFF;
 3175              		.loc 1 1565 33
 3176 0058 7B68     		ldr	r3, [r7, #4]
 3177 005a 0022     		movs	r2, #0
 3178 005c DA61     		str	r2, [r3, #28]
 3179              	.L184:
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_VER_X)
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 3180              		.loc 1 1569 6
 3181 005e FFF7FEFF 		bl	HAL_GetREVID
 3182 0062 0346     		mov	r3, r0
 3183              		.loc 1 1569 5
 3184 0064 41F20302 		movw	r2, #4099
 3185 0068 9342     		cmp	r3, r2
 3186 006a 07D8     		bhi	.L185
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_CSITRI
 3187              		.loc 1 1571 57
 3188 006c 5A4B     		ldr	r3, .L200
 3189 006e 5B68     		ldr	r3, [r3, #4]
 3190              		.loc 1 1571 46
 3191 0070 9B0E     		lsrs	r3, r3, #26
 3192 0072 03F01F02 		and	r2, r3, #31
 3193              		.loc 1 1571 44
 3194 0076 7B68     		ldr	r3, [r7, #4]
 3195 0078 1A62     		str	r2, [r3, #32]
 3196 007a 06E0     		b	.L186
 3197              	.L185:
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM)
 3198              		.loc 1 1575 57
 3199 007c 564B     		ldr	r3, .L200
 3200 007e DB68     		ldr	r3, [r3, #12]
 3201              		.loc 1 1575 46
 3202 0080 1B0E     		lsrs	r3, r3, #24
 3203 0082 03F03F02 		and	r2, r3, #63
 3204              		.loc 1 1575 44
 3205 0086 7B68     		ldr	r3, [r7, #4]
 3206 0088 1A62     		str	r2, [r3, #32]
 3207              	.L186:
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM) >>
ARM GAS  /tmp/ccEg2lBl.s 			page 86


1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /*RCC_VER_X*/
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 3208              		.loc 1 1582 10
 3209 008a 534B     		ldr	r3, .L200
 3210 008c 1B68     		ldr	r3, [r3]
 3211              		.loc 1 1582 15
 3212 008e 03F00103 		and	r3, r3, #1
 3213              		.loc 1 1582 5
 3214 0092 012B     		cmp	r3, #1
 3215 0094 03D1     		bne	.L187
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 3216              		.loc 1 1584 33
 3217 0096 7B68     		ldr	r3, [r7, #4]
 3218 0098 0122     		movs	r2, #1
 3219 009a DA60     		str	r2, [r3, #12]
 3220 009c 02E0     		b	.L188
 3221              	.L187:
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 3222              		.loc 1 1588 33
 3223 009e 7B68     		ldr	r3, [r7, #4]
 3224 00a0 0022     		movs	r2, #0
 3225 00a2 DA60     		str	r2, [r3, #12]
 3226              	.L188:
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_VER_X)
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 3227              		.loc 1 1592 6
 3228 00a4 FFF7FEFF 		bl	HAL_GetREVID
 3229 00a8 0346     		mov	r3, r0
 3230              		.loc 1 1592 5
 3231 00aa 41F20302 		movw	r2, #4099
 3232 00ae 9342     		cmp	r3, r2
 3233 00b0 07D8     		bhi	.L189
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_HSITRI
 3234              		.loc 1 1594 57
 3235 00b2 494B     		ldr	r3, .L200
 3236 00b4 5B68     		ldr	r3, [r3, #4]
 3237              		.loc 1 1594 46
 3238 00b6 1B0B     		lsrs	r3, r3, #12
 3239 00b8 03F03F02 		and	r2, r3, #63
 3240              		.loc 1 1594 44
 3241 00bc 7B68     		ldr	r3, [r7, #4]
 3242 00be 1A61     		str	r2, [r3, #16]
 3243 00c0 06E0     		b	.L190
 3244              	.L189:
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM)
ARM GAS  /tmp/ccEg2lBl.s 			page 87


 3245              		.loc 1 1598 57
 3246 00c2 454B     		ldr	r3, .L200
 3247 00c4 5B68     		ldr	r3, [r3, #4]
 3248              		.loc 1 1598 46
 3249 00c6 1B0E     		lsrs	r3, r3, #24
 3250 00c8 03F07F02 		and	r2, r3, #127
 3251              		.loc 1 1598 44
 3252 00cc 7B68     		ldr	r3, [r7, #4]
 3253 00ce 1A61     		str	r2, [r3, #16]
 3254              	.L190:
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM)
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /*RCC_VER_X*/
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_BDCR_LSEEXT)
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->BDCR &(RCC_BDCR_LSEBYP|RCC_BDCR_LSEEXT)) == RCC_BDCR_LSEBYP)
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->BDCR &(RCC_BDCR_LSEBYP|RCC_BDCR_LSEEXT)) == (RCC_BDCR_LSEBYP|RCC_BDCR_LSEEXT))
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_DIGITAL;
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 3255              		.loc 1 1623 10
 3256 00d0 414B     		ldr	r3, .L200
 3257 00d2 1B6F     		ldr	r3, [r3, #112]
 3258              		.loc 1 1623 17
 3259 00d4 03F00403 		and	r3, r3, #4
 3260              		.loc 1 1623 5
 3261 00d8 042B     		cmp	r3, #4
 3262 00da 03D1     		bne	.L191
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 3263              		.loc 1 1625 33
 3264 00dc 7B68     		ldr	r3, [r7, #4]
 3265 00de 0522     		movs	r2, #5
 3266 00e0 9A60     		str	r2, [r3, #8]
 3267 00e2 0CE0     		b	.L192
 3268              	.L191:
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 3269              		.loc 1 1627 15
 3270 00e4 3C4B     		ldr	r3, .L200
 3271 00e6 1B6F     		ldr	r3, [r3, #112]
 3272              		.loc 1 1627 22
ARM GAS  /tmp/ccEg2lBl.s 			page 88


 3273 00e8 03F00103 		and	r3, r3, #1
 3274              		.loc 1 1627 10
 3275 00ec 012B     		cmp	r3, #1
 3276 00ee 03D1     		bne	.L193
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 3277              		.loc 1 1629 33
 3278 00f0 7B68     		ldr	r3, [r7, #4]
 3279 00f2 0122     		movs	r2, #1
 3280 00f4 9A60     		str	r2, [r3, #8]
 3281 00f6 02E0     		b	.L192
 3282              	.L193:
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 3283              		.loc 1 1633 33
 3284 00f8 7B68     		ldr	r3, [r7, #4]
 3285 00fa 0022     		movs	r2, #0
 3286 00fc 9A60     		str	r2, [r3, #8]
 3287              	.L192:
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_BDCR_LSEEXT */
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 3288              		.loc 1 1638 10
 3289 00fe 364B     		ldr	r3, .L200
 3290 0100 5B6F     		ldr	r3, [r3, #116]
 3291              		.loc 1 1638 16
 3292 0102 03F00103 		and	r3, r3, #1
 3293              		.loc 1 1638 5
 3294 0106 012B     		cmp	r3, #1
 3295 0108 03D1     		bne	.L194
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 3296              		.loc 1 1640 33
 3297 010a 7B68     		ldr	r3, [r7, #4]
 3298 010c 0122     		movs	r2, #1
 3299 010e 5A61     		str	r2, [r3, #20]
 3300 0110 02E0     		b	.L195
 3301              	.L194:
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 3302              		.loc 1 1644 33
 3303 0112 7B68     		ldr	r3, [r7, #4]
 3304 0114 0022     		movs	r2, #0
 3305 0116 5A61     		str	r2, [r3, #20]
 3306              	.L195:
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_HSI48ON) == RCC_CR_HSI48ON)
 3307              		.loc 1 1648 10
 3308 0118 2F4B     		ldr	r3, .L200
ARM GAS  /tmp/ccEg2lBl.s 			page 89


 3309 011a 1B68     		ldr	r3, [r3]
 3310              		.loc 1 1648 15
 3311 011c 03F48053 		and	r3, r3, #4096
 3312              		.loc 1 1648 5
 3313 0120 B3F5805F 		cmp	r3, #4096
 3314 0124 03D1     		bne	.L196
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 3315              		.loc 1 1650 35
 3316 0126 7B68     		ldr	r3, [r7, #4]
 3317 0128 0122     		movs	r2, #1
 3318 012a 9A61     		str	r2, [r3, #24]
 3319 012c 02E0     		b	.L197
 3320              	.L196:
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 3321              		.loc 1 1654 35
 3322 012e 7B68     		ldr	r3, [r7, #4]
 3323 0130 0022     		movs	r2, #0
 3324 0132 9A61     		str	r2, [r3, #24]
 3325              	.L197:
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 3326              		.loc 1 1658 10
 3327 0134 284B     		ldr	r3, .L200
 3328 0136 1B68     		ldr	r3, [r3]
 3329              		.loc 1 1658 15
 3330 0138 03F08073 		and	r3, r3, #16777216
 3331              		.loc 1 1658 5
 3332 013c B3F1807F 		cmp	r3, #16777216
 3333 0140 03D1     		bne	.L198
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 3334              		.loc 1 1660 37
 3335 0142 7B68     		ldr	r3, [r7, #4]
 3336 0144 0222     		movs	r2, #2
 3337 0146 5A62     		str	r2, [r3, #36]
 3338 0148 02E0     		b	.L199
 3339              	.L198:
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 3340              		.loc 1 1664 37
 3341 014a 7B68     		ldr	r3, [r7, #4]
 3342 014c 0122     		movs	r2, #1
 3343 014e 5A62     		str	r2, [r3, #36]
 3344              	.L199:
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 3345              		.loc 1 1666 52
 3346 0150 214B     		ldr	r3, .L200
 3347 0152 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/ccEg2lBl.s 			page 90


 3348              		.loc 1 1666 38
 3349 0154 03F00302 		and	r2, r3, #3
 3350              		.loc 1 1666 36
 3351 0158 7B68     		ldr	r3, [r7, #4]
 3352 015a 9A62     		str	r2, [r3, #40]
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> RCC_PLLCKSELR_D
 3353              		.loc 1 1667 48
 3354 015c 1E4B     		ldr	r3, .L200
 3355 015e 9B6A     		ldr	r3, [r3, #40]
 3356              		.loc 1 1667 33
 3357 0160 1B09     		lsrs	r3, r3, #4
 3358 0162 03F03F02 		and	r2, r3, #63
 3359              		.loc 1 1667 31
 3360 0166 7B68     		ldr	r3, [r7, #4]
 3361 0168 DA62     		str	r2, [r3, #44]
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) >> RCC_PLL1DIVR_N1_Pos
 3362              		.loc 1 1668 48
 3363 016a 1B4B     		ldr	r3, .L200
 3364 016c 1B6B     		ldr	r3, [r3, #48]
 3365              		.loc 1 1668 33
 3366 016e C3F30803 		ubfx	r3, r3, #0, #9
 3367              		.loc 1 1668 101
 3368 0172 5A1C     		adds	r2, r3, #1
 3369              		.loc 1 1668 31
 3370 0174 7B68     		ldr	r3, [r7, #4]
 3371 0176 1A63     		str	r2, [r3, #48]
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos
 3372              		.loc 1 1669 48
 3373 0178 174B     		ldr	r3, .L200
 3374 017a 1B6B     		ldr	r3, [r3, #48]
 3375              		.loc 1 1669 33
 3376 017c 1B0E     		lsrs	r3, r3, #24
 3377 017e 03F07F03 		and	r3, r3, #127
 3378              		.loc 1 1669 101
 3379 0182 5A1C     		adds	r2, r3, #1
 3380              		.loc 1 1669 31
 3381 0184 7B68     		ldr	r3, [r7, #4]
 3382 0186 DA63     		str	r2, [r3, #60]
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos
 3383              		.loc 1 1670 48
 3384 0188 134B     		ldr	r3, .L200
 3385 018a 1B6B     		ldr	r3, [r3, #48]
 3386              		.loc 1 1670 33
 3387 018c 5B0A     		lsrs	r3, r3, #9
 3388 018e 03F07F03 		and	r3, r3, #127
 3389              		.loc 1 1670 101
 3390 0192 5A1C     		adds	r2, r3, #1
 3391              		.loc 1 1670 31
 3392 0194 7B68     		ldr	r3, [r7, #4]
 3393 0196 5A63     		str	r2, [r3, #52]
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos
 3394              		.loc 1 1671 48
 3395 0198 0F4B     		ldr	r3, .L200
 3396 019a 1B6B     		ldr	r3, [r3, #48]
 3397              		.loc 1 1671 33
 3398 019c 1B0C     		lsrs	r3, r3, #16
 3399 019e 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/ccEg2lBl.s 			page 91


 3400              		.loc 1 1671 101
 3401 01a2 5A1C     		adds	r2, r3, #1
 3402              		.loc 1 1671 31
 3403 01a4 7B68     		ldr	r3, [r7, #4]
 3404 01a6 9A63     		str	r2, [r3, #56]
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLRGE = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1RGE));
 3405              		.loc 1 1672 50
 3406 01a8 0B4B     		ldr	r3, .L200
 3407 01aa DB6A     		ldr	r3, [r3, #44]
 3408              		.loc 1 1672 35
 3409 01ac 03F00C02 		and	r2, r3, #12
 3410              		.loc 1 1672 33
 3411 01b0 7B68     		ldr	r3, [r7, #4]
 3412 01b2 1A64     		str	r2, [r3, #64]
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLVCOSEL = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1VCOSEL) >> RCC_PLLC
 3413              		.loc 1 1673 53
 3414 01b4 084B     		ldr	r3, .L200
 3415 01b6 DB6A     		ldr	r3, [r3, #44]
 3416              		.loc 1 1673 38
 3417 01b8 5B08     		lsrs	r3, r3, #1
 3418 01ba 03F00102 		and	r2, r3, #1
 3419              		.loc 1 1673 36
 3420 01be 7B68     		ldr	r3, [r7, #4]
 3421 01c0 5A64     		str	r2, [r3, #68]
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLFRACN = (uint32_t)(((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1
 3422              		.loc 1 1674 53
 3423 01c2 054B     		ldr	r3, .L200
 3424 01c4 5B6B     		ldr	r3, [r3, #52]
 3425              		.loc 1 1674 37
 3426 01c6 DB08     		lsrs	r3, r3, #3
 3427 01c8 C3F30C02 		ubfx	r2, r3, #0, #13
 3428              		.loc 1 1674 35
 3429 01cc 7B68     		ldr	r3, [r7, #4]
 3430 01ce 9A64     		str	r2, [r3, #72]
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3431              		.loc 1 1675 1
 3432 01d0 00BF     		nop
 3433 01d2 0837     		adds	r7, r7, #8
 3434              	.LCFI46:
 3435              		.cfi_def_cfa_offset 8
 3436 01d4 BD46     		mov	sp, r7
 3437              	.LCFI47:
 3438              		.cfi_def_cfa_register 13
 3439              		@ sp needed
 3440 01d6 80BD     		pop	{r7, pc}
 3441              	.L201:
 3442              		.align	2
 3443              	.L200:
 3444 01d8 00440258 		.word	1476543488
 3445              		.cfi_endproc
 3446              	.LFE341:
 3448              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 3449              		.align	1
 3450              		.global	HAL_RCC_GetClockConfig
 3451              		.syntax unified
 3452              		.thumb
 3453              		.thumb_func
ARM GAS  /tmp/ccEg2lBl.s 			page 92


 3454              		.fpu fpv5-d16
 3456              	HAL_RCC_GetClockConfig:
 3457              	.LFB342:
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_ClkInitTypeDef structure that
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  pFLatency: Pointer on the Flash Latency.
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3458              		.loc 1 1686 1
 3459              		.cfi_startproc
 3460              		@ args = 0, pretend = 0, frame = 8
 3461              		@ frame_needed = 1, uses_anonymous_args = 0
 3462              		@ link register save eliminated.
 3463 0000 80B4     		push	{r7}
 3464              	.LCFI48:
 3465              		.cfi_def_cfa_offset 4
 3466              		.cfi_offset 7, -4
 3467 0002 83B0     		sub	sp, sp, #12
 3468              	.LCFI49:
 3469              		.cfi_def_cfa_offset 16
 3470 0004 00AF     		add	r7, sp, #0
 3471              	.LCFI50:
 3472              		.cfi_def_cfa_register 7
 3473 0006 7860     		str	r0, [r7, #4]
 3474 0008 3960     		str	r1, [r7]
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 
 3475              		.loc 1 1688 32
 3476 000a 7B68     		ldr	r3, [r7, #4]
 3477 000c 3F22     		movs	r2, #63
 3478 000e 1A60     		str	r2, [r3]
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                  RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3479              		.loc 1 1692 51
 3480 0010 1A4B     		ldr	r3, .L203
 3481 0012 1B69     		ldr	r3, [r3, #16]
 3482              		.loc 1 1692 37
 3483 0014 03F00702 		and	r2, r3, #7
 3484              		.loc 1 1692 35
 3485 0018 7B68     		ldr	r3, [r7, #4]
 3486 001a 5A60     		str	r2, [r3, #4]
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 3487              		.loc 1 1696 52
 3488 001c 174B     		ldr	r3, .L203
 3489 001e 9B69     		ldr	r3, [r3, #24]
 3490              		.loc 1 1696 38
ARM GAS  /tmp/ccEg2lBl.s 			page 93


 3491 0020 03F47062 		and	r2, r3, #3840
 3492              		.loc 1 1696 36
 3493 0024 7B68     		ldr	r3, [r7, #4]
 3494 0026 9A60     		str	r2, [r3, #8]
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 3495              		.loc 1 1699 52
 3496 0028 144B     		ldr	r3, .L203
 3497 002a 9B69     		ldr	r3, [r3, #24]
 3498              		.loc 1 1699 38
 3499 002c 03F00F02 		and	r2, r3, #15
 3500              		.loc 1 1699 36
 3501 0030 7B68     		ldr	r3, [r7, #4]
 3502 0032 DA60     		str	r2, [r3, #12]
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 3503              		.loc 1 1702 53
 3504 0034 114B     		ldr	r3, .L203
 3505 0036 9B69     		ldr	r3, [r3, #24]
 3506              		.loc 1 1702 39
 3507 0038 03F07002 		and	r2, r3, #112
 3508              		.loc 1 1702 37
 3509 003c 7B68     		ldr	r3, [r7, #4]
 3510 003e 1A61     		str	r2, [r3, #16]
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 3511              		.loc 1 1705 53
 3512 0040 0E4B     		ldr	r3, .L203
 3513 0042 DB69     		ldr	r3, [r3, #28]
 3514              		.loc 1 1705 39
 3515 0044 03F07002 		and	r2, r3, #112
 3516              		.loc 1 1705 37
 3517 0048 7B68     		ldr	r3, [r7, #4]
 3518 004a 5A61     		str	r2, [r3, #20]
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 3519              		.loc 1 1708 53
 3520 004c 0B4B     		ldr	r3, .L203
 3521 004e DB69     		ldr	r3, [r3, #28]
 3522              		.loc 1 1708 39
 3523 0050 03F4E062 		and	r2, r3, #1792
 3524              		.loc 1 1708 37
 3525 0054 7B68     		ldr	r3, [r7, #4]
 3526 0056 9A61     		str	r2, [r3, #24]
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 3527              		.loc 1 1711 53
 3528 0058 084B     		ldr	r3, .L203
 3529 005a 1B6A     		ldr	r3, [r3, #32]
 3530              		.loc 1 1711 39
 3531 005c 03F07002 		and	r2, r3, #112
 3532              		.loc 1 1711 37
ARM GAS  /tmp/ccEg2lBl.s 			page 94


 3533 0060 7B68     		ldr	r3, [r7, #4]
 3534 0062 DA61     		str	r2, [r3, #28]
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE);
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE);
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE);
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1);
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2);
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 3535              		.loc 1 1733 32
 3536 0064 064B     		ldr	r3, .L203+4
 3537 0066 1B68     		ldr	r3, [r3]
 3538              		.loc 1 1733 16
 3539 0068 03F00F02 		and	r2, r3, #15
 3540              		.loc 1 1733 14
 3541 006c 3B68     		ldr	r3, [r7]
 3542 006e 1A60     		str	r2, [r3]
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3543              		.loc 1 1734 1
 3544 0070 00BF     		nop
 3545 0072 0C37     		adds	r7, r7, #12
 3546              	.LCFI51:
 3547              		.cfi_def_cfa_offset 4
 3548 0074 BD46     		mov	sp, r7
 3549              	.LCFI52:
 3550              		.cfi_def_cfa_register 13
 3551              		@ sp needed
 3552 0076 5DF8047B 		ldr	r7, [sp], #4
 3553              	.LCFI53:
 3554              		.cfi_restore 7
 3555              		.cfi_def_cfa_offset 0
 3556 007a 7047     		bx	lr
 3557              	.L204:
 3558              		.align	2
 3559              	.L203:
 3560 007c 00440258 		.word	1476543488
 3561 0080 00200052 		.word	1375739904
 3562              		.cfi_endproc
 3563              	.LFE342:
 3565              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 3566              		.align	1
 3567              		.global	HAL_RCC_NMI_IRQHandler
ARM GAS  /tmp/ccEg2lBl.s 			page 95


 3568              		.syntax unified
 3569              		.thumb
 3570              		.thumb_func
 3571              		.fpu fpv5-d16
 3573              	HAL_RCC_NMI_IRQHandler:
 3574              	.LFB343:
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3575              		.loc 1 1742 1
 3576              		.cfi_startproc
 3577              		@ args = 0, pretend = 0, frame = 0
 3578              		@ frame_needed = 1, uses_anonymous_args = 0
 3579 0000 80B5     		push	{r7, lr}
 3580              	.LCFI54:
 3581              		.cfi_def_cfa_offset 8
 3582              		.cfi_offset 7, -8
 3583              		.cfi_offset 14, -4
 3584 0002 00AF     		add	r7, sp, #0
 3585              	.LCFI55:
 3586              		.cfi_def_cfa_register 7
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3587              		.loc 1 1744 6
 3588 0004 074B     		ldr	r3, .L208
 3589 0006 5B6E     		ldr	r3, [r3, #100]
 3590 0008 03F48063 		and	r3, r3, #1024
 3591              		.loc 1 1744 5
 3592 000c B3F5806F 		cmp	r3, #1024
 3593 0010 05D1     		bne	.L207
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_RCC_CCSCallback();
 3594              		.loc 1 1747 5
 3595 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3596              		.loc 1 1750 5
 3597 0016 034B     		ldr	r3, .L208
 3598 0018 4FF48062 		mov	r2, #1024
 3599 001c 9A66     		str	r2, [r3, #104]
 3600              	.L207:
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3601              		.loc 1 1752 1
 3602 001e 00BF     		nop
 3603 0020 80BD     		pop	{r7, pc}
 3604              	.L209:
 3605 0022 00BF     		.align	2
 3606              	.L208:
 3607 0024 00440258 		.word	1476543488
ARM GAS  /tmp/ccEg2lBl.s 			page 96


 3608              		.cfi_endproc
 3609              	.LFE343:
 3611              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3612              		.align	1
 3613              		.weak	HAL_RCC_CSSCallback
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu fpv5-d16
 3619              	HAL_RCC_CSSCallback:
 3620              	.LFB344:
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval none
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak void HAL_RCC_CCSCallback(void)
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3621              		.loc 1 1759 1
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 1, uses_anonymous_args = 0
 3625              		@ link register save eliminated.
 3626 0000 80B4     		push	{r7}
 3627              	.LCFI56:
 3628              		.cfi_def_cfa_offset 4
 3629              		.cfi_offset 7, -4
 3630 0002 00AF     		add	r7, sp, #0
 3631              	.LCFI57:
 3632              		.cfi_def_cfa_register 7
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             the HAL_RCC_CCSCallback could be implemented in the user file
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    */
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3633              		.loc 1 1763 1
 3634 0004 00BF     		nop
 3635 0006 BD46     		mov	sp, r7
 3636              	.LCFI58:
 3637              		.cfi_def_cfa_register 13
 3638              		@ sp needed
 3639 0008 5DF8047B 		ldr	r7, [sp], #4
 3640              	.LCFI59:
 3641              		.cfi_restore 7
 3642              		.cfi_def_cfa_offset 0
 3643 000c 7047     		bx	lr
 3644              		.cfi_endproc
 3645              	.LFE344:
 3647              		.text
 3648              	.Letext0:
 3649              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3650              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 3651              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3652              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 3653              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3654              		.file 7 "/usr/include/newlib/sys/_types.h"
 3655              		.file 8 "/usr/include/newlib/sys/reent.h"
 3656              		.file 9 "/usr/include/newlib/sys/lock.h"
ARM GAS  /tmp/ccEg2lBl.s 			page 97


 3657              		.file 10 "/usr/include/newlib/math.h"
 3658              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3659              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 3660              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3661              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3662              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 3663              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccEg2lBl.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rcc.c
     /tmp/ccEg2lBl.s:17     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccEg2lBl.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccEg2lBl.s:394    .text.HAL_RCC_DeInit:000000000000022c $d
     /tmp/ccEg2lBl.s:408    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccEg2lBl.s:415    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccEg2lBl.s:831    .text.HAL_RCC_OscConfig:0000000000000288 $d
     /tmp/ccEg2lBl.s:834    .text.HAL_RCC_OscConfig:000000000000028c $t
     /tmp/ccEg2lBl.s:1254   .text.HAL_RCC_OscConfig:0000000000000520 $d
     /tmp/ccEg2lBl.s:1258   .text.HAL_RCC_OscConfig:0000000000000528 $t
     /tmp/ccEg2lBl.s:1607   .text.HAL_RCC_OscConfig:0000000000000784 $d
     /tmp/ccEg2lBl.s:1613   .text.HAL_RCC_OscConfig:0000000000000794 $t
     /tmp/ccEg2lBl.s:1715   .text.HAL_RCC_OscConfig:000000000000081c $d
     /tmp/ccEg2lBl.s:1720   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccEg2lBl.s:1727   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccEg2lBl.s:2107   .text.HAL_RCC_ClockConfig:0000000000000240 $d
     /tmp/ccEg2lBl.s:2111   .text.HAL_RCC_ClockConfig:0000000000000248 $t
     /tmp/ccEg2lBl.s:2536   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccEg2lBl.s:2286   .text.HAL_RCC_ClockConfig:0000000000000358 $d
     /tmp/ccEg2lBl.s:2295   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccEg2lBl.s:2302   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccEg2lBl.s:2430   .text.HAL_RCC_MCOConfig:00000000000000c8 $d
     /tmp/ccEg2lBl.s:2437   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccEg2lBl.s:2444   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccEg2lBl.s:2478   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccEg2lBl.s:2483   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccEg2lBl.s:2490   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccEg2lBl.s:2524   .text.HAL_RCC_DisableCSS:000000000000001c $d
     /tmp/ccEg2lBl.s:2529   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccEg2lBl.s:2564   .text.HAL_RCC_GetSysClockFreq:000000000000001c $d
     /tmp/ccEg2lBl.s:2589   .text.HAL_RCC_GetSysClockFreq:0000000000000080 $t
     /tmp/ccEg2lBl.s:2904   .text.HAL_RCC_GetSysClockFreq:00000000000002d4 $d
     /tmp/ccEg2lBl.s:2916   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccEg2lBl.s:2923   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccEg2lBl.s:2993   .text.HAL_RCC_GetHCLKFreq:0000000000000050 $d
     /tmp/ccEg2lBl.s:3001   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccEg2lBl.s:3008   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccEg2lBl.s:3044   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccEg2lBl.s:3050   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccEg2lBl.s:3057   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccEg2lBl.s:3093   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccEg2lBl.s:3099   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccEg2lBl.s:3106   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccEg2lBl.s:3444   .text.HAL_RCC_GetOscConfig:00000000000001d8 $d
     /tmp/ccEg2lBl.s:3449   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccEg2lBl.s:3456   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccEg2lBl.s:3560   .text.HAL_RCC_GetClockConfig:000000000000007c $d
     /tmp/ccEg2lBl.s:3566   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccEg2lBl.s:3573   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccEg2lBl.s:3619   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccEg2lBl.s:3607   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccEg2lBl.s:3612   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
ARM GAS  /tmp/ccEg2lBl.s 			page 99


SystemCoreClock
SystemD2Clock
uwTickPrio
HAL_GetREVID
D1CorePrescTable
HAL_GPIO_Init
