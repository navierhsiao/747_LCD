ARM GAS  /tmp/ccp35uGD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_uart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	UARTPrescTable
  17              		.section	.rodata.UARTPrescTable,"a"
  18              		.align	2
  21              	UARTPrescTable:
  22 0000 0100     		.short	1
  23 0002 0200     		.short	2
  24 0004 0400     		.short	4
  25 0006 0600     		.short	6
  26 0008 0800     		.short	8
  27 000a 0A00     		.short	10
  28 000c 0C00     		.short	12
  29 000e 1000     		.short	16
  30 0010 2000     		.short	32
  31 0012 4000     		.short	64
  32 0014 8000     		.short	128
  33 0016 0001     		.short	256
  34              		.section	.text.HAL_UART_Init,"ax",%progbits
  35              		.align	1
  36              		.global	HAL_UART_Init
  37              		.arch armv7e-m
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu fpv5-d16
  43              	HAL_UART_Init:
  44              	.LFB331:
  45              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @file    stm32h7xx_hal_uart.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + IO operation functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @verbatim
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                         ##### How to use this driver #####
ARM GAS  /tmp/ccp35uGD.s 			page 2


  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   [..]
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART pins configuration:
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART interrupts handling:
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ##### Callback registration #####
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ==================================
ARM GAS  /tmp/ccp35uGD.s 			page 3


  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and a pointer to the user callback function.
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     weak (surcharged) function.
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and the Callback ID.
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function allows to reset following callbacks:
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     respectively @ref HAL_UART_RegisterRxEventCallback() , @ref HAL_UART_UnRegisterRxEventCallback(
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
ARM GAS  /tmp/ccp35uGD.s 			page 4


 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     not defined, the callback registration feature is not available
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @endverbatim
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @attention
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * All rights reserved.</center></h2>
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #include "stm32h7xx_hal.h"
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART UART
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief HAL UART module driver
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
ARM GAS  /tmp/ccp35uGD.s 			page 5


 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Exported_Constants
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
ARM GAS  /tmp/ccp35uGD.s 			page 6


 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** ===============================================================================
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in asynchronous mode.
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Baud Rate
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Word Length
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Stop Bit
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Hardware flow control
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Over Sampling Method
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) data logical level inversion
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX and TX pins swap
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX overrun detection disabling
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA disabling on RX error
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) MSB first on communication line
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) auto Baud rate detection
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     are available in reference manual).
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   following table.
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Table 1. UART frame format.
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 7


 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  46              		.loc 1 308 1
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 8
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 82B0     		sub	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 16
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  61 0006 7860     		str	r0, [r7, #4]
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
  62              		.loc 1 310 6
  63 0008 7B68     		ldr	r3, [r7, #4]
  64 000a 002B     		cmp	r3, #0
  65 000c 01D1     		bne	.L2
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
  66              		.loc 1 312 12
  67 000e 0123     		movs	r3, #1
  68 0010 42E0     		b	.L3
  69              	.L2:
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  70              		.loc 1 326 12
  71 0012 7B68     		ldr	r3, [r7, #4]
  72 0014 D3F88430 		ldr	r3, [r3, #132]
  73              		.loc 1 326 6
  74 0018 002B     		cmp	r3, #0
  75 001a 06D1     		bne	.L4
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccp35uGD.s 			page 8


 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  76              		.loc 1 329 17
  77 001c 7B68     		ldr	r3, [r7, #4]
  78 001e 0022     		movs	r2, #0
  79 0020 83F88020 		strb	r2, [r3, #128]
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  80              		.loc 1 343 5
  81 0024 7868     		ldr	r0, [r7, #4]
  82 0026 FFF7FEFF 		bl	HAL_UART_MspInit
  83              	.L4:
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  84              		.loc 1 347 17
  85 002a 7B68     		ldr	r3, [r7, #4]
  86 002c 2422     		movs	r2, #36
  87 002e C3F88420 		str	r2, [r3, #132]
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  88              		.loc 1 349 3
  89 0032 7B68     		ldr	r3, [r7, #4]
  90 0034 1B68     		ldr	r3, [r3]
  91 0036 1A68     		ldr	r2, [r3]
  92 0038 7B68     		ldr	r3, [r7, #4]
  93 003a 1B68     		ldr	r3, [r3]
  94 003c 22F00102 		bic	r2, r2, #1
  95 0040 1A60     		str	r2, [r3]
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  96              		.loc 1 352 7
  97 0042 7868     		ldr	r0, [r7, #4]
  98 0044 FFF7FEFF 		bl	UART_SetConfig
  99 0048 0346     		mov	r3, r0
 100              		.loc 1 352 6
 101 004a 012B     		cmp	r3, #1
 102 004c 01D1     		bne	.L5
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 103              		.loc 1 354 12
 104 004e 0123     		movs	r3, #1
 105 0050 22E0     		b	.L3
ARM GAS  /tmp/ccp35uGD.s 			page 9


 106              	.L5:
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 107              		.loc 1 357 26
 108 0052 7B68     		ldr	r3, [r7, #4]
 109 0054 9B6A     		ldr	r3, [r3, #40]
 110              		.loc 1 357 6
 111 0056 002B     		cmp	r3, #0
 112 0058 02D0     		beq	.L6
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 113              		.loc 1 359 5
 114 005a 7868     		ldr	r0, [r7, #4]
 115 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 116              	.L6:
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 117              		.loc 1 365 3
 118 0060 7B68     		ldr	r3, [r7, #4]
 119 0062 1B68     		ldr	r3, [r3]
 120 0064 5A68     		ldr	r2, [r3, #4]
 121 0066 7B68     		ldr	r3, [r7, #4]
 122 0068 1B68     		ldr	r3, [r3]
 123 006a 22F49042 		bic	r2, r2, #18432
 124 006e 5A60     		str	r2, [r3, #4]
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 125              		.loc 1 366 3
 126 0070 7B68     		ldr	r3, [r7, #4]
 127 0072 1B68     		ldr	r3, [r3]
 128 0074 9A68     		ldr	r2, [r3, #8]
 129 0076 7B68     		ldr	r3, [r7, #4]
 130 0078 1B68     		ldr	r3, [r3]
 131 007a 22F02A02 		bic	r2, r2, #42
 132 007e 9A60     		str	r2, [r3, #8]
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 133              		.loc 1 368 3
 134 0080 7B68     		ldr	r3, [r7, #4]
 135 0082 1B68     		ldr	r3, [r3]
 136 0084 1A68     		ldr	r2, [r3]
 137 0086 7B68     		ldr	r3, [r7, #4]
 138 0088 1B68     		ldr	r3, [r3]
 139 008a 42F00102 		orr	r2, r2, #1
 140 008e 1A60     		str	r2, [r3]
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 141              		.loc 1 371 11
 142 0090 7868     		ldr	r0, [r7, #4]
 143 0092 FFF7FEFF 		bl	UART_CheckIdleState
 144 0096 0346     		mov	r3, r0
 145              	.L3:
ARM GAS  /tmp/ccp35uGD.s 			page 10


 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 146              		.loc 1 372 1
 147 0098 1846     		mov	r0, r3
 148 009a 0837     		adds	r7, r7, #8
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 8
 151 009c BD46     		mov	sp, r7
 152              	.LCFI4:
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 009e 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE331:
 159              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_HalfDuplex_Init
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-d16
 167              	HAL_HalfDuplex_Init:
 168              	.LFB332:
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 169              		.loc 1 381 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 82B0     		sub	sp, sp, #8
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI7:
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 185              		.loc 1 383 6
 186 0008 7B68     		ldr	r3, [r7, #4]
 187 000a 002B     		cmp	r3, #0
 188 000c 01D1     		bne	.L8
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 189              		.loc 1 385 12
 190 000e 0123     		movs	r3, #1
ARM GAS  /tmp/ccp35uGD.s 			page 11


 191 0010 4AE0     		b	.L9
 192              	.L8:
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART instance */
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 193              		.loc 1 391 12
 194 0012 7B68     		ldr	r3, [r7, #4]
 195 0014 D3F88430 		ldr	r3, [r3, #132]
 196              		.loc 1 391 6
 197 0018 002B     		cmp	r3, #0
 198 001a 06D1     		bne	.L10
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 199              		.loc 1 394 17
 200 001c 7B68     		ldr	r3, [r7, #4]
 201 001e 0022     		movs	r2, #0
 202 0020 83F88020 		strb	r2, [r3, #128]
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 203              		.loc 1 408 5
 204 0024 7868     		ldr	r0, [r7, #4]
 205 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 206              	.L10:
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 207              		.loc 1 412 17
 208 002a 7B68     		ldr	r3, [r7, #4]
 209 002c 2422     		movs	r2, #36
 210 002e C3F88420 		str	r2, [r3, #132]
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 211              		.loc 1 414 3
 212 0032 7B68     		ldr	r3, [r7, #4]
 213 0034 1B68     		ldr	r3, [r3]
 214 0036 1A68     		ldr	r2, [r3]
 215 0038 7B68     		ldr	r3, [r7, #4]
 216 003a 1B68     		ldr	r3, [r3]
 217 003c 22F00102 		bic	r2, r2, #1
 218 0040 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 12


 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 219              		.loc 1 417 7
 220 0042 7868     		ldr	r0, [r7, #4]
 221 0044 FFF7FEFF 		bl	UART_SetConfig
 222 0048 0346     		mov	r3, r0
 223              		.loc 1 417 6
 224 004a 012B     		cmp	r3, #1
 225 004c 01D1     		bne	.L11
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 226              		.loc 1 419 12
 227 004e 0123     		movs	r3, #1
 228 0050 2AE0     		b	.L9
 229              	.L11:
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 230              		.loc 1 422 26
 231 0052 7B68     		ldr	r3, [r7, #4]
 232 0054 9B6A     		ldr	r3, [r3, #40]
 233              		.loc 1 422 6
 234 0056 002B     		cmp	r3, #0
 235 0058 02D0     		beq	.L12
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 236              		.loc 1 424 5
 237 005a 7868     		ldr	r0, [r7, #4]
 238 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 239              	.L12:
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 240              		.loc 1 430 3
 241 0060 7B68     		ldr	r3, [r7, #4]
 242 0062 1B68     		ldr	r3, [r3]
 243 0064 5A68     		ldr	r2, [r3, #4]
 244 0066 7B68     		ldr	r3, [r7, #4]
 245 0068 1B68     		ldr	r3, [r3]
 246 006a 22F49042 		bic	r2, r2, #18432
 247 006e 5A60     		str	r2, [r3, #4]
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 248              		.loc 1 431 3
 249 0070 7B68     		ldr	r3, [r7, #4]
 250 0072 1B68     		ldr	r3, [r3]
 251 0074 9A68     		ldr	r2, [r3, #8]
 252 0076 7B68     		ldr	r3, [r7, #4]
 253 0078 1B68     		ldr	r3, [r3]
 254 007a 22F02202 		bic	r2, r2, #34
 255 007e 9A60     		str	r2, [r3, #8]
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
ARM GAS  /tmp/ccp35uGD.s 			page 13


 256              		.loc 1 434 3
 257 0080 7B68     		ldr	r3, [r7, #4]
 258 0082 1B68     		ldr	r3, [r3]
 259 0084 9A68     		ldr	r2, [r3, #8]
 260 0086 7B68     		ldr	r3, [r7, #4]
 261 0088 1B68     		ldr	r3, [r3]
 262 008a 42F00802 		orr	r2, r2, #8
 263 008e 9A60     		str	r2, [r3, #8]
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 264              		.loc 1 436 3
 265 0090 7B68     		ldr	r3, [r7, #4]
 266 0092 1B68     		ldr	r3, [r3]
 267 0094 1A68     		ldr	r2, [r3]
 268 0096 7B68     		ldr	r3, [r7, #4]
 269 0098 1B68     		ldr	r3, [r3]
 270 009a 42F00102 		orr	r2, r2, #1
 271 009e 1A60     		str	r2, [r3]
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 272              		.loc 1 439 11
 273 00a0 7868     		ldr	r0, [r7, #4]
 274 00a2 FFF7FEFF 		bl	UART_CheckIdleState
 275 00a6 0346     		mov	r3, r0
 276              	.L9:
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 277              		.loc 1 440 1
 278 00a8 1846     		mov	r0, r3
 279 00aa 0837     		adds	r7, r7, #8
 280              	.LCFI8:
 281              		.cfi_def_cfa_offset 8
 282 00ac BD46     		mov	sp, r7
 283              	.LCFI9:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 00ae 80BD     		pop	{r7, pc}
 287              		.cfi_endproc
 288              	.LFE332:
 290              		.section	.text.HAL_LIN_Init,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_LIN_Init
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv5-d16
 298              	HAL_LIN_Init:
 299              	.LFB333:
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart             UART handle.
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
ARM GAS  /tmp/ccp35uGD.s 			page 14


 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 300              		.loc 1 454 1
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI10:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 82B0     		sub	sp, sp, #8
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              	.LCFI12:
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 316 0008 3960     		str	r1, [r7]
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 317              		.loc 1 456 6
 318 000a 7B68     		ldr	r3, [r7, #4]
 319 000c 002B     		cmp	r3, #0
 320 000e 01D1     		bne	.L14
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 321              		.loc 1 458 12
 322 0010 0123     		movs	r3, #1
 323 0012 61E0     		b	.L15
 324              	.L14:
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the LIN UART instance */
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 325              		.loc 1 467 18
 326 0014 7B68     		ldr	r3, [r7, #4]
 327 0016 DB69     		ldr	r3, [r3, #28]
 328              		.loc 1 467 6
 329 0018 B3F5004F 		cmp	r3, #32768
 330 001c 01D1     		bne	.L16
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 331              		.loc 1 469 12
 332 001e 0123     		movs	r3, #1
 333 0020 5AE0     		b	.L15
 334              	.L16:
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
ARM GAS  /tmp/ccp35uGD.s 			page 15


 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 335              		.loc 1 472 18
 336 0022 7B68     		ldr	r3, [r7, #4]
 337 0024 9B68     		ldr	r3, [r3, #8]
 338              		.loc 1 472 6
 339 0026 002B     		cmp	r3, #0
 340 0028 01D0     		beq	.L17
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 341              		.loc 1 474 12
 342 002a 0123     		movs	r3, #1
 343 002c 54E0     		b	.L15
 344              	.L17:
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 345              		.loc 1 477 12
 346 002e 7B68     		ldr	r3, [r7, #4]
 347 0030 D3F88430 		ldr	r3, [r3, #132]
 348              		.loc 1 477 6
 349 0034 002B     		cmp	r3, #0
 350 0036 06D1     		bne	.L18
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 351              		.loc 1 480 17
 352 0038 7B68     		ldr	r3, [r7, #4]
 353 003a 0022     		movs	r2, #0
 354 003c 83F88020 		strb	r2, [r3, #128]
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 355              		.loc 1 494 5
 356 0040 7868     		ldr	r0, [r7, #4]
 357 0042 FFF7FEFF 		bl	HAL_UART_MspInit
 358              	.L18:
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 359              		.loc 1 498 17
 360 0046 7B68     		ldr	r3, [r7, #4]
 361 0048 2422     		movs	r2, #36
 362 004a C3F88420 		str	r2, [r3, #132]
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  /tmp/ccp35uGD.s 			page 16


 363              		.loc 1 500 3
 364 004e 7B68     		ldr	r3, [r7, #4]
 365 0050 1B68     		ldr	r3, [r3]
 366 0052 1A68     		ldr	r2, [r3]
 367 0054 7B68     		ldr	r3, [r7, #4]
 368 0056 1B68     		ldr	r3, [r3]
 369 0058 22F00102 		bic	r2, r2, #1
 370 005c 1A60     		str	r2, [r3]
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 371              		.loc 1 503 7
 372 005e 7868     		ldr	r0, [r7, #4]
 373 0060 FFF7FEFF 		bl	UART_SetConfig
 374 0064 0346     		mov	r3, r0
 375              		.loc 1 503 6
 376 0066 012B     		cmp	r3, #1
 377 0068 01D1     		bne	.L19
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 378              		.loc 1 505 12
 379 006a 0123     		movs	r3, #1
 380 006c 34E0     		b	.L15
 381              	.L19:
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 382              		.loc 1 508 26
 383 006e 7B68     		ldr	r3, [r7, #4]
 384 0070 9B6A     		ldr	r3, [r3, #40]
 385              		.loc 1 508 6
 386 0072 002B     		cmp	r3, #0
 387 0074 02D0     		beq	.L20
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 388              		.loc 1 510 5
 389 0076 7868     		ldr	r0, [r7, #4]
 390 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 391              	.L20:
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 392              		.loc 1 516 3
 393 007c 7B68     		ldr	r3, [r7, #4]
 394 007e 1B68     		ldr	r3, [r3]
 395 0080 5A68     		ldr	r2, [r3, #4]
 396 0082 7B68     		ldr	r3, [r7, #4]
 397 0084 1B68     		ldr	r3, [r3]
 398 0086 22F40062 		bic	r2, r2, #2048
 399 008a 5A60     		str	r2, [r3, #4]
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 400              		.loc 1 517 3
 401 008c 7B68     		ldr	r3, [r7, #4]
 402 008e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 17


 403 0090 9A68     		ldr	r2, [r3, #8]
 404 0092 7B68     		ldr	r3, [r7, #4]
 405 0094 1B68     		ldr	r3, [r3]
 406 0096 22F02A02 		bic	r2, r2, #42
 407 009a 9A60     		str	r2, [r3, #8]
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 408              		.loc 1 520 3
 409 009c 7B68     		ldr	r3, [r7, #4]
 410 009e 1B68     		ldr	r3, [r3]
 411 00a0 5A68     		ldr	r2, [r3, #4]
 412 00a2 7B68     		ldr	r3, [r7, #4]
 413 00a4 1B68     		ldr	r3, [r3]
 414 00a6 42F48042 		orr	r2, r2, #16384
 415 00aa 5A60     		str	r2, [r3, #4]
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 416              		.loc 1 523 3
 417 00ac 7B68     		ldr	r3, [r7, #4]
 418 00ae 1B68     		ldr	r3, [r3]
 419 00b0 5B68     		ldr	r3, [r3, #4]
 420 00b2 23F02001 		bic	r1, r3, #32
 421 00b6 7B68     		ldr	r3, [r7, #4]
 422 00b8 1B68     		ldr	r3, [r3]
 423 00ba 3A68     		ldr	r2, [r7]
 424 00bc 0A43     		orrs	r2, r2, r1
 425 00be 5A60     		str	r2, [r3, #4]
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 426              		.loc 1 525 3
 427 00c0 7B68     		ldr	r3, [r7, #4]
 428 00c2 1B68     		ldr	r3, [r3]
 429 00c4 1A68     		ldr	r2, [r3]
 430 00c6 7B68     		ldr	r3, [r7, #4]
 431 00c8 1B68     		ldr	r3, [r3]
 432 00ca 42F00102 		orr	r2, r2, #1
 433 00ce 1A60     		str	r2, [r3]
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 434              		.loc 1 528 11
 435 00d0 7868     		ldr	r0, [r7, #4]
 436 00d2 FFF7FEFF 		bl	UART_CheckIdleState
 437 00d6 0346     		mov	r3, r0
 438              	.L15:
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 439              		.loc 1 529 1
 440 00d8 1846     		mov	r0, r3
 441 00da 0837     		adds	r7, r7, #8
 442              	.LCFI13:
 443              		.cfi_def_cfa_offset 8
 444 00dc BD46     		mov	sp, r7
 445              	.LCFI14:
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
ARM GAS  /tmp/ccp35uGD.s 			page 18


 448 00de 80BD     		pop	{r7, pc}
 449              		.cfi_endproc
 450              	.LFE333:
 452              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_MultiProcessor_Init
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv5-d16
 460              	HAL_MultiProcessor_Init:
 461              	.LFB334:
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart        UART handle.
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 462              		.loc 1 551 1
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 80B5     		push	{r7, lr}
 467              	.LCFI15:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 84B0     		sub	sp, sp, #16
 472              	.LCFI16:
 473              		.cfi_def_cfa_offset 24
 474 0004 00AF     		add	r7, sp, #0
 475              	.LCFI17:
 476              		.cfi_def_cfa_register 7
 477 0006 F860     		str	r0, [r7, #12]
 478 0008 0B46     		mov	r3, r1
 479 000a 7A60     		str	r2, [r7, #4]
 480 000c FB72     		strb	r3, [r7, #11]
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 481              		.loc 1 553 6
 482 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 19


 483 0010 002B     		cmp	r3, #0
 484 0012 01D1     		bne	.L22
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 485              		.loc 1 555 12
 486 0014 0123     		movs	r3, #1
 487 0016 5BE0     		b	.L23
 488              	.L22:
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the wake up method parameter */
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 489              		.loc 1 561 12
 490 0018 FB68     		ldr	r3, [r7, #12]
 491 001a D3F88430 		ldr	r3, [r3, #132]
 492              		.loc 1 561 6
 493 001e 002B     		cmp	r3, #0
 494 0020 06D1     		bne	.L24
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 495              		.loc 1 564 17
 496 0022 FB68     		ldr	r3, [r7, #12]
 497 0024 0022     		movs	r2, #0
 498 0026 83F88020 		strb	r2, [r3, #128]
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 499              		.loc 1 578 5
 500 002a F868     		ldr	r0, [r7, #12]
 501 002c FFF7FEFF 		bl	HAL_UART_MspInit
 502              	.L24:
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 503              		.loc 1 582 17
 504 0030 FB68     		ldr	r3, [r7, #12]
 505 0032 2422     		movs	r2, #36
 506 0034 C3F88420 		str	r2, [r3, #132]
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 507              		.loc 1 584 3
 508 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 20


 509 003a 1B68     		ldr	r3, [r3]
 510 003c 1A68     		ldr	r2, [r3]
 511 003e FB68     		ldr	r3, [r7, #12]
 512 0040 1B68     		ldr	r3, [r3]
 513 0042 22F00102 		bic	r2, r2, #1
 514 0046 1A60     		str	r2, [r3]
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 515              		.loc 1 587 7
 516 0048 F868     		ldr	r0, [r7, #12]
 517 004a FFF7FEFF 		bl	UART_SetConfig
 518 004e 0346     		mov	r3, r0
 519              		.loc 1 587 6
 520 0050 012B     		cmp	r3, #1
 521 0052 01D1     		bne	.L25
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 522              		.loc 1 589 12
 523 0054 0123     		movs	r3, #1
 524 0056 3BE0     		b	.L23
 525              	.L25:
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 526              		.loc 1 592 26
 527 0058 FB68     		ldr	r3, [r7, #12]
 528 005a 9B6A     		ldr	r3, [r3, #40]
 529              		.loc 1 592 6
 530 005c 002B     		cmp	r3, #0
 531 005e 02D0     		beq	.L26
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 532              		.loc 1 594 5
 533 0060 F868     		ldr	r0, [r7, #12]
 534 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 535              	.L26:
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 536              		.loc 1 600 3
 537 0066 FB68     		ldr	r3, [r7, #12]
 538 0068 1B68     		ldr	r3, [r3]
 539 006a 5A68     		ldr	r2, [r3, #4]
 540 006c FB68     		ldr	r3, [r7, #12]
 541 006e 1B68     		ldr	r3, [r3]
 542 0070 22F49042 		bic	r2, r2, #18432
 543 0074 5A60     		str	r2, [r3, #4]
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 544              		.loc 1 601 3
 545 0076 FB68     		ldr	r3, [r7, #12]
 546 0078 1B68     		ldr	r3, [r3]
 547 007a 9A68     		ldr	r2, [r3, #8]
 548 007c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 21


 549 007e 1B68     		ldr	r3, [r3]
 550 0080 22F02A02 		bic	r2, r2, #42
 551 0084 9A60     		str	r2, [r3, #8]
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 552              		.loc 1 603 6
 553 0086 7B68     		ldr	r3, [r7, #4]
 554 0088 B3F5006F 		cmp	r3, #2048
 555 008c 0AD1     		bne	.L27
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 556              		.loc 1 606 5
 557 008e FB68     		ldr	r3, [r7, #12]
 558 0090 1B68     		ldr	r3, [r3]
 559 0092 5B68     		ldr	r3, [r3, #4]
 560 0094 23F07F41 		bic	r1, r3, #-16777216
 561 0098 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 562 009a 1A06     		lsls	r2, r3, #24
 563 009c FB68     		ldr	r3, [r7, #12]
 564 009e 1B68     		ldr	r3, [r3]
 565 00a0 0A43     		orrs	r2, r2, r1
 566 00a2 5A60     		str	r2, [r3, #4]
 567              	.L27:
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 568              		.loc 1 610 3
 569 00a4 FB68     		ldr	r3, [r7, #12]
 570 00a6 1B68     		ldr	r3, [r3]
 571 00a8 1B68     		ldr	r3, [r3]
 572 00aa 23F40061 		bic	r1, r3, #2048
 573 00ae FB68     		ldr	r3, [r7, #12]
 574 00b0 1B68     		ldr	r3, [r3]
 575 00b2 7A68     		ldr	r2, [r7, #4]
 576 00b4 0A43     		orrs	r2, r2, r1
 577 00b6 1A60     		str	r2, [r3]
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 578              		.loc 1 612 3
 579 00b8 FB68     		ldr	r3, [r7, #12]
 580 00ba 1B68     		ldr	r3, [r3]
 581 00bc 1A68     		ldr	r2, [r3]
 582 00be FB68     		ldr	r3, [r7, #12]
 583 00c0 1B68     		ldr	r3, [r3]
 584 00c2 42F00102 		orr	r2, r2, #1
 585 00c6 1A60     		str	r2, [r3]
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 586              		.loc 1 615 11
 587 00c8 F868     		ldr	r0, [r7, #12]
 588 00ca FFF7FEFF 		bl	UART_CheckIdleState
 589 00ce 0346     		mov	r3, r0
 590              	.L23:
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  /tmp/ccp35uGD.s 			page 22


 591              		.loc 1 616 1
 592 00d0 1846     		mov	r0, r3
 593 00d2 1037     		adds	r7, r7, #16
 594              	.LCFI18:
 595              		.cfi_def_cfa_offset 8
 596 00d4 BD46     		mov	sp, r7
 597              	.LCFI19:
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 00d6 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE334:
 604              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 605              		.align	1
 606              		.global	HAL_UART_DeInit
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv5-d16
 612              	HAL_UART_DeInit:
 613              	.LFB335:
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 614              		.loc 1 625 1
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 80B5     		push	{r7, lr}
 619              	.LCFI20:
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 82B0     		sub	sp, sp, #8
 624              	.LCFI21:
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              	.LCFI22:
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 630              		.loc 1 627 6
 631 0008 7B68     		ldr	r3, [r7, #4]
 632 000a 002B     		cmp	r3, #0
 633 000c 01D1     		bne	.L29
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 634              		.loc 1 629 12
 635 000e 0123     		movs	r3, #1
 636 0010 2EE0     		b	.L30
ARM GAS  /tmp/ccp35uGD.s 			page 23


 637              	.L29:
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 638              		.loc 1 635 17
 639 0012 7B68     		ldr	r3, [r7, #4]
 640 0014 2422     		movs	r2, #36
 641 0016 C3F88420 		str	r2, [r3, #132]
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 642              		.loc 1 637 3
 643 001a 7B68     		ldr	r3, [r7, #4]
 644 001c 1B68     		ldr	r3, [r3]
 645 001e 1A68     		ldr	r2, [r3]
 646 0020 7B68     		ldr	r3, [r7, #4]
 647 0022 1B68     		ldr	r3, [r3]
 648 0024 22F00102 		bic	r2, r2, #1
 649 0028 1A60     		str	r2, [r3]
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 650              		.loc 1 639 8
 651 002a 7B68     		ldr	r3, [r7, #4]
 652 002c 1B68     		ldr	r3, [r3]
 653              		.loc 1 639 24
 654 002e 0022     		movs	r2, #0
 655 0030 1A60     		str	r2, [r3]
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 656              		.loc 1 640 8
 657 0032 7B68     		ldr	r3, [r7, #4]
 658 0034 1B68     		ldr	r3, [r3]
 659              		.loc 1 640 24
 660 0036 0022     		movs	r2, #0
 661 0038 5A60     		str	r2, [r3, #4]
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 662              		.loc 1 641 8
 663 003a 7B68     		ldr	r3, [r7, #4]
 664 003c 1B68     		ldr	r3, [r3]
 665              		.loc 1 641 24
 666 003e 0022     		movs	r2, #0
 667 0040 9A60     		str	r2, [r3, #8]
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 668              		.loc 1 652 3
 669 0042 7868     		ldr	r0, [r7, #4]
 670 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
ARM GAS  /tmp/ccp35uGD.s 			page 24


 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 671              		.loc 1 655 20
 672 0048 7B68     		ldr	r3, [r7, #4]
 673 004a 0022     		movs	r2, #0
 674 004c C3F88C20 		str	r2, [r3, #140]
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 675              		.loc 1 656 17
 676 0050 7B68     		ldr	r3, [r7, #4]
 677 0052 0022     		movs	r2, #0
 678 0054 C3F88420 		str	r2, [r3, #132]
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 679              		.loc 1 657 18
 680 0058 7B68     		ldr	r3, [r7, #4]
 681 005a 0022     		movs	r2, #0
 682 005c C3F88820 		str	r2, [r3, #136]
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 683              		.loc 1 658 24
 684 0060 7B68     		ldr	r3, [r7, #4]
 685 0062 0022     		movs	r2, #0
 686 0064 DA66     		str	r2, [r3, #108]
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 687              		.loc 1 660 3
 688 0066 7B68     		ldr	r3, [r7, #4]
 689 0068 0022     		movs	r2, #0
 690 006a 83F88020 		strb	r2, [r3, #128]
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 691              		.loc 1 662 10
 692 006e 0023     		movs	r3, #0
 693              	.L30:
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 694              		.loc 1 663 1
 695 0070 1846     		mov	r0, r3
 696 0072 0837     		adds	r7, r7, #8
 697              	.LCFI23:
 698              		.cfi_def_cfa_offset 8
 699 0074 BD46     		mov	sp, r7
 700              	.LCFI24:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0076 80BD     		pop	{r7, pc}
 704              		.cfi_endproc
 705              	.LFE335:
 707              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 708              		.align	1
 709              		.weak	HAL_UART_MspInit
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu fpv5-d16
 715              	HAL_UART_MspInit:
 716              	.LFB336:
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccp35uGD.s 			page 25


 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 717              		.loc 1 671 1
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 8
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              	.LCFI25:
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              	.LCFI26:
 728              		.cfi_def_cfa_offset 16
 729 0004 00AF     		add	r7, sp, #0
 730              	.LCFI27:
 731              		.cfi_def_cfa_register 7
 732 0006 7860     		str	r0, [r7, #4]
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 733              		.loc 1 678 1
 734 0008 00BF     		nop
 735 000a 0C37     		adds	r7, r7, #12
 736              	.LCFI28:
 737              		.cfi_def_cfa_offset 4
 738 000c BD46     		mov	sp, r7
 739              	.LCFI29:
 740              		.cfi_def_cfa_register 13
 741              		@ sp needed
 742 000e 5DF8047B 		ldr	r7, [sp], #4
 743              	.LCFI30:
 744              		.cfi_restore 7
 745              		.cfi_def_cfa_offset 0
 746 0012 7047     		bx	lr
 747              		.cfi_endproc
 748              	.LFE336:
 750              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 751              		.align	1
 752              		.weak	HAL_UART_MspDeInit
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv5-d16
 758              	HAL_UART_MspDeInit:
 759              	.LFB337:
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
ARM GAS  /tmp/ccp35uGD.s 			page 26


 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 760              		.loc 1 686 1
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 80B4     		push	{r7}
 766              	.LCFI31:
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 0002 83B0     		sub	sp, sp, #12
 770              	.LCFI32:
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              	.LCFI33:
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 776              		.loc 1 693 1
 777 0008 00BF     		nop
 778 000a 0C37     		adds	r7, r7, #12
 779              	.LCFI34:
 780              		.cfi_def_cfa_offset 4
 781 000c BD46     		mov	sp, r7
 782              	.LCFI35:
 783              		.cfi_def_cfa_register 13
 784              		@ sp needed
 785 000e 5DF8047B 		ldr	r7, [sp], #4
 786              	.LCFI36:
 787              		.cfi_restore 7
 788              		.cfi_def_cfa_offset 0
 789 0012 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE337:
 793              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_UART_Transmit
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv5-d16
 801              	HAL_UART_Transmit:
 802              	.LFB338:
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Callback
ARM GAS  /tmp/ccp35uGD.s 			page 27


 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccp35uGD.s 			page 28


 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccp35uGD.s 			page 29


 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 30


 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 31


 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart     Uart handle
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process locked */
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Release Lock */
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccp35uGD.s 			page 32


 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart     Uart handle
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process locked */
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Release Lock */
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### IO operation functions #####
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and Half duplex data transfers.
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) There are two mode of transfer:
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            after finishing transfer.
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The end of the data processing will be indicated through the
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
ARM GAS  /tmp/ccp35uGD.s 			page 33


1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            using DMA mode.
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Blocking mode API's are :
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive()
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort()
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         reception services:
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         Errors are handled as follows :
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            in Interrupt mode reception .
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
ARM GAS  /tmp/ccp35uGD.s 			page 34


1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            user callback is executed.
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 803              		.loc 1 1122 1
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 32
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807 0000 80B5     		push	{r7, lr}
 808              	.LCFI37:
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 8AB0     		sub	sp, sp, #40
 813              	.LCFI38:
 814              		.cfi_def_cfa_offset 48
 815 0004 02AF     		add	r7, sp, #8
 816              	.LCFI39:
 817              		.cfi_def_cfa 7, 40
 818 0006 F860     		str	r0, [r7, #12]
 819 0008 B960     		str	r1, [r7, #8]
 820 000a 3B60     		str	r3, [r7]
 821 000c 1346     		mov	r3, r2	@ movhi
 822 000e FB80     		strh	r3, [r7, #6]	@ movhi
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 823              		.loc 1 1128 12
 824 0010 FB68     		ldr	r3, [r7, #12]
 825 0012 D3F88430 		ldr	r3, [r3, #132]
 826              		.loc 1 1128 6
 827 0016 202B     		cmp	r3, #32
ARM GAS  /tmp/ccp35uGD.s 			page 35


 828 0018 40F08380 		bne	.L34
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 829              		.loc 1 1130 8
 830 001c BB68     		ldr	r3, [r7, #8]
 831 001e 002B     		cmp	r3, #0
 832 0020 02D0     		beq	.L35
 833              		.loc 1 1130 25 discriminator 1
 834 0022 FB88     		ldrh	r3, [r7, #6]
 835 0024 002B     		cmp	r3, #0
 836 0026 01D1     		bne	.L36
 837              	.L35:
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 838              		.loc 1 1132 15
 839 0028 0123     		movs	r3, #1
 840 002a 7BE0     		b	.L37
 841              	.L36:
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 842              		.loc 1 1135 5
 843 002c FB68     		ldr	r3, [r7, #12]
 844 002e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 845 0032 012B     		cmp	r3, #1
 846 0034 01D1     		bne	.L38
 847              		.loc 1 1135 5 is_stmt 0 discriminator 1
 848 0036 0223     		movs	r3, #2
 849 0038 74E0     		b	.L37
 850              	.L38:
 851              		.loc 1 1135 5 discriminator 2
 852 003a FB68     		ldr	r3, [r7, #12]
 853 003c 0122     		movs	r2, #1
 854 003e 83F88020 		strb	r2, [r3, #128]
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 855              		.loc 1 1137 22 is_stmt 1 discriminator 2
 856 0042 FB68     		ldr	r3, [r7, #12]
 857 0044 0022     		movs	r2, #0
 858 0046 C3F88C20 		str	r2, [r3, #140]
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 859              		.loc 1 1138 19 discriminator 2
 860 004a FB68     		ldr	r3, [r7, #12]
 861 004c 2122     		movs	r2, #33
 862 004e C3F88420 		str	r2, [r3, #132]
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 863              		.loc 1 1141 17 discriminator 2
 864 0052 FFF7FEFF 		bl	HAL_GetTick
 865 0056 7861     		str	r0, [r7, #20]
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 866              		.loc 1 1143 24 discriminator 2
 867 0058 FB68     		ldr	r3, [r7, #12]
 868 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 869 005c A3F85420 		strh	r2, [r3, #84]	@ movhi
ARM GAS  /tmp/ccp35uGD.s 			page 36


1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 870              		.loc 1 1144 24 discriminator 2
 871 0060 FB68     		ldr	r3, [r7, #12]
 872 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 873 0064 A3F85620 		strh	r2, [r3, #86]	@ movhi
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 874              		.loc 1 1147 21 discriminator 2
 875 0068 FB68     		ldr	r3, [r7, #12]
 876 006a 9B68     		ldr	r3, [r3, #8]
 877              		.loc 1 1147 8 discriminator 2
 878 006c B3F5805F 		cmp	r3, #4096
 879 0070 08D1     		bne	.L39
 880              		.loc 1 1147 71 discriminator 1
 881 0072 FB68     		ldr	r3, [r7, #12]
 882 0074 1B69     		ldr	r3, [r3, #16]
 883              		.loc 1 1147 56 discriminator 1
 884 0076 002B     		cmp	r3, #0
 885 0078 04D1     		bne	.L39
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
 886              		.loc 1 1149 19
 887 007a 0023     		movs	r3, #0
 888 007c FB61     		str	r3, [r7, #28]
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 889              		.loc 1 1150 19
 890 007e BB68     		ldr	r3, [r7, #8]
 891 0080 BB61     		str	r3, [r7, #24]
 892 0082 03E0     		b	.L40
 893              	.L39:
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
 894              		.loc 1 1154 19
 895 0084 BB68     		ldr	r3, [r7, #8]
 896 0086 FB61     		str	r3, [r7, #28]
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
 897              		.loc 1 1155 19
 898 0088 0023     		movs	r3, #0
 899 008a BB61     		str	r3, [r7, #24]
 900              	.L40:
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 901              		.loc 1 1158 5
 902 008c FB68     		ldr	r3, [r7, #12]
 903 008e 0022     		movs	r2, #0
 904 0090 83F88020 		strb	r2, [r3, #128]
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 905              		.loc 1 1160 11
 906 0094 2CE0     		b	.L41
 907              	.L45:
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
ARM GAS  /tmp/ccp35uGD.s 			page 37


 908              		.loc 1 1162 11
 909 0096 3B68     		ldr	r3, [r7]
 910 0098 0093     		str	r3, [sp]
 911 009a 7B69     		ldr	r3, [r7, #20]
 912 009c 0022     		movs	r2, #0
 913 009e 8021     		movs	r1, #128
 914 00a0 F868     		ldr	r0, [r7, #12]
 915 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 916 00a6 0346     		mov	r3, r0
 917              		.loc 1 1162 10
 918 00a8 002B     		cmp	r3, #0
 919 00aa 01D0     		beq	.L42
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 920              		.loc 1 1164 16
 921 00ac 0323     		movs	r3, #3
 922 00ae 39E0     		b	.L37
 923              	.L42:
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
 924              		.loc 1 1166 10
 925 00b0 FB69     		ldr	r3, [r7, #28]
 926 00b2 002B     		cmp	r3, #0
 927 00b4 0BD1     		bne	.L43
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 928              		.loc 1 1168 43
 929 00b6 BB69     		ldr	r3, [r7, #24]
 930 00b8 1B88     		ldrh	r3, [r3]
 931              		.loc 1 1168 32
 932 00ba 1A46     		mov	r2, r3
 933              		.loc 1 1168 14
 934 00bc FB68     		ldr	r3, [r7, #12]
 935 00be 1B68     		ldr	r3, [r3]
 936              		.loc 1 1168 32
 937 00c0 C2F30802 		ubfx	r2, r2, #0, #9
 938              		.loc 1 1168 30
 939 00c4 9A62     		str	r2, [r3, #40]
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 940              		.loc 1 1169 20
 941 00c6 BB69     		ldr	r3, [r7, #24]
 942 00c8 0233     		adds	r3, r3, #2
 943 00ca BB61     		str	r3, [r7, #24]
 944 00cc 07E0     		b	.L44
 945              	.L43:
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 946              		.loc 1 1173 42
 947 00ce FB69     		ldr	r3, [r7, #28]
 948 00d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 949              		.loc 1 1173 14
 950 00d2 FB68     		ldr	r3, [r7, #12]
 951 00d4 1B68     		ldr	r3, [r3]
 952              		.loc 1 1173 30
 953 00d6 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccp35uGD.s 			page 38


1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 954              		.loc 1 1174 19
 955 00d8 FB69     		ldr	r3, [r7, #28]
 956 00da 0133     		adds	r3, r3, #1
 957 00dc FB61     		str	r3, [r7, #28]
 958              	.L44:
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 959              		.loc 1 1176 12
 960 00de FB68     		ldr	r3, [r7, #12]
 961 00e0 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 962 00e4 9BB2     		uxth	r3, r3
 963              		.loc 1 1176 25
 964 00e6 013B     		subs	r3, r3, #1
 965 00e8 9AB2     		uxth	r2, r3
 966 00ea FB68     		ldr	r3, [r7, #12]
 967 00ec A3F85620 		strh	r2, [r3, #86]	@ movhi
 968              	.L41:
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 969              		.loc 1 1160 17
 970 00f0 FB68     		ldr	r3, [r7, #12]
 971 00f2 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 972 00f6 9BB2     		uxth	r3, r3
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 973              		.loc 1 1160 11
 974 00f8 002B     		cmp	r3, #0
 975 00fa CCD1     		bne	.L45
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 976              		.loc 1 1179 9
 977 00fc 3B68     		ldr	r3, [r7]
 978 00fe 0093     		str	r3, [sp]
 979 0100 7B69     		ldr	r3, [r7, #20]
 980 0102 0022     		movs	r2, #0
 981 0104 4021     		movs	r1, #64
 982 0106 F868     		ldr	r0, [r7, #12]
 983 0108 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 984 010c 0346     		mov	r3, r0
 985              		.loc 1 1179 8
 986 010e 002B     		cmp	r3, #0
 987 0110 01D0     		beq	.L46
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 988              		.loc 1 1181 14
 989 0112 0323     		movs	r3, #3
 990 0114 06E0     		b	.L37
 991              	.L46:
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 992              		.loc 1 1185 19
 993 0116 FB68     		ldr	r3, [r7, #12]
 994 0118 2022     		movs	r2, #32
 995 011a C3F88420 		str	r2, [r3, #132]
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 39


1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 996              		.loc 1 1187 12
 997 011e 0023     		movs	r3, #0
 998 0120 00E0     		b	.L37
 999              	.L34:
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1000              		.loc 1 1191 12
 1001 0122 0223     		movs	r3, #2
 1002              	.L37:
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1003              		.loc 1 1193 1
 1004 0124 1846     		mov	r0, r3
 1005 0126 2037     		adds	r7, r7, #32
 1006              	.LCFI40:
 1007              		.cfi_def_cfa_offset 8
 1008 0128 BD46     		mov	sp, r7
 1009              	.LCFI41:
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 012a 80BD     		pop	{r7, pc}
 1013              		.cfi_endproc
 1014              	.LFE338:
 1016              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1017              		.align	1
 1018              		.global	HAL_UART_Receive
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv5-d16
 1024              	HAL_UART_Receive:
 1025              	.LFB339:
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1026              		.loc 1 1211 1
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 32
 1029              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccp35uGD.s 			page 40


 1030 0000 80B5     		push	{r7, lr}
 1031              	.LCFI42:
 1032              		.cfi_def_cfa_offset 8
 1033              		.cfi_offset 7, -8
 1034              		.cfi_offset 14, -4
 1035 0002 8AB0     		sub	sp, sp, #40
 1036              	.LCFI43:
 1037              		.cfi_def_cfa_offset 48
 1038 0004 02AF     		add	r7, sp, #8
 1039              	.LCFI44:
 1040              		.cfi_def_cfa 7, 40
 1041 0006 F860     		str	r0, [r7, #12]
 1042 0008 B960     		str	r1, [r7, #8]
 1043 000a 3B60     		str	r3, [r7]
 1044 000c 1346     		mov	r3, r2	@ movhi
 1045 000e FB80     		strh	r3, [r7, #6]	@ movhi
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask;
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1046              		.loc 1 1218 12
 1047 0010 FB68     		ldr	r3, [r7, #12]
 1048 0012 D3F88830 		ldr	r3, [r3, #136]
 1049              		.loc 1 1218 6
 1050 0016 202B     		cmp	r3, #32
 1051 0018 40F0C080 		bne	.L48
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1052              		.loc 1 1220 8
 1053 001c BB68     		ldr	r3, [r7, #8]
 1054 001e 002B     		cmp	r3, #0
 1055 0020 02D0     		beq	.L49
 1056              		.loc 1 1220 25 discriminator 1
 1057 0022 FB88     		ldrh	r3, [r7, #6]
 1058 0024 002B     		cmp	r3, #0
 1059 0026 01D1     		bne	.L50
 1060              	.L49:
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 1061              		.loc 1 1222 15
 1062 0028 0123     		movs	r3, #1
 1063 002a B8E0     		b	.L51
 1064              	.L50:
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1065              		.loc 1 1225 5
 1066 002c FB68     		ldr	r3, [r7, #12]
 1067 002e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1068 0032 012B     		cmp	r3, #1
 1069 0034 01D1     		bne	.L52
 1070              		.loc 1 1225 5 is_stmt 0 discriminator 1
 1071 0036 0223     		movs	r3, #2
 1072 0038 B1E0     		b	.L51
ARM GAS  /tmp/ccp35uGD.s 			page 41


 1073              	.L52:
 1074              		.loc 1 1225 5 discriminator 2
 1075 003a FB68     		ldr	r3, [r7, #12]
 1076 003c 0122     		movs	r2, #1
 1077 003e 83F88020 		strb	r2, [r3, #128]
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1078              		.loc 1 1227 22 is_stmt 1 discriminator 2
 1079 0042 FB68     		ldr	r3, [r7, #12]
 1080 0044 0022     		movs	r2, #0
 1081 0046 C3F88C20 		str	r2, [r3, #140]
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1082              		.loc 1 1228 20 discriminator 2
 1083 004a FB68     		ldr	r3, [r7, #12]
 1084 004c 2222     		movs	r2, #34
 1085 004e C3F88820 		str	r2, [r3, #136]
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1086              		.loc 1 1229 26 discriminator 2
 1087 0052 FB68     		ldr	r3, [r7, #12]
 1088 0054 0022     		movs	r2, #0
 1089 0056 DA66     		str	r2, [r3, #108]
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1090              		.loc 1 1232 17 discriminator 2
 1091 0058 FFF7FEFF 		bl	HAL_GetTick
 1092 005c 7861     		str	r0, [r7, #20]
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1093              		.loc 1 1234 24 discriminator 2
 1094 005e FB68     		ldr	r3, [r7, #12]
 1095 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1096 0062 A3F85C20 		strh	r2, [r3, #92]	@ movhi
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1097              		.loc 1 1235 24 discriminator 2
 1098 0066 FB68     		ldr	r3, [r7, #12]
 1099 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1100 006a A3F85E20 		strh	r2, [r3, #94]	@ movhi
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1101              		.loc 1 1238 5 discriminator 2
 1102 006e FB68     		ldr	r3, [r7, #12]
 1103 0070 9B68     		ldr	r3, [r3, #8]
 1104 0072 B3F5805F 		cmp	r3, #4096
 1105 0076 0ED1     		bne	.L53
 1106              		.loc 1 1238 5 is_stmt 0 discriminator 1
 1107 0078 FB68     		ldr	r3, [r7, #12]
 1108 007a 1B69     		ldr	r3, [r3, #16]
 1109 007c 002B     		cmp	r3, #0
 1110 007e 05D1     		bne	.L54
 1111              		.loc 1 1238 5 discriminator 3
 1112 0080 FB68     		ldr	r3, [r7, #12]
 1113 0082 40F2FF12 		movw	r2, #511
 1114 0086 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1115 008a 2DE0     		b	.L55
 1116              	.L54:
ARM GAS  /tmp/ccp35uGD.s 			page 42


 1117              		.loc 1 1238 5 discriminator 4
 1118 008c FB68     		ldr	r3, [r7, #12]
 1119 008e FF22     		movs	r2, #255
 1120 0090 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1121 0094 28E0     		b	.L55
 1122              	.L53:
 1123              		.loc 1 1238 5 discriminator 2
 1124 0096 FB68     		ldr	r3, [r7, #12]
 1125 0098 9B68     		ldr	r3, [r3, #8]
 1126 009a 002B     		cmp	r3, #0
 1127 009c 0DD1     		bne	.L56
 1128              		.loc 1 1238 5 discriminator 5
 1129 009e FB68     		ldr	r3, [r7, #12]
 1130 00a0 1B69     		ldr	r3, [r3, #16]
 1131 00a2 002B     		cmp	r3, #0
 1132 00a4 04D1     		bne	.L57
 1133              		.loc 1 1238 5 discriminator 7
 1134 00a6 FB68     		ldr	r3, [r7, #12]
 1135 00a8 FF22     		movs	r2, #255
 1136 00aa A3F86020 		strh	r2, [r3, #96]	@ movhi
 1137 00ae 1BE0     		b	.L55
 1138              	.L57:
 1139              		.loc 1 1238 5 discriminator 8
 1140 00b0 FB68     		ldr	r3, [r7, #12]
 1141 00b2 7F22     		movs	r2, #127
 1142 00b4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1143 00b8 16E0     		b	.L55
 1144              	.L56:
 1145              		.loc 1 1238 5 discriminator 6
 1146 00ba FB68     		ldr	r3, [r7, #12]
 1147 00bc 9B68     		ldr	r3, [r3, #8]
 1148 00be B3F1805F 		cmp	r3, #268435456
 1149 00c2 0DD1     		bne	.L58
 1150              		.loc 1 1238 5 discriminator 9
 1151 00c4 FB68     		ldr	r3, [r7, #12]
 1152 00c6 1B69     		ldr	r3, [r3, #16]
 1153 00c8 002B     		cmp	r3, #0
 1154 00ca 04D1     		bne	.L59
 1155              		.loc 1 1238 5 discriminator 11
 1156 00cc FB68     		ldr	r3, [r7, #12]
 1157 00ce 7F22     		movs	r2, #127
 1158 00d0 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1159 00d4 08E0     		b	.L55
 1160              	.L59:
 1161              		.loc 1 1238 5 discriminator 12
 1162 00d6 FB68     		ldr	r3, [r7, #12]
 1163 00d8 3F22     		movs	r2, #63
 1164 00da A3F86020 		strh	r2, [r3, #96]	@ movhi
 1165 00de 03E0     		b	.L55
 1166              	.L58:
 1167              		.loc 1 1238 5 discriminator 10
 1168 00e0 FB68     		ldr	r3, [r7, #12]
 1169 00e2 0022     		movs	r2, #0
 1170 00e4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1171              	.L55:
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 1172              		.loc 1 1239 12 is_stmt 1
ARM GAS  /tmp/ccp35uGD.s 			page 43


 1173 00e8 FB68     		ldr	r3, [r7, #12]
 1174 00ea B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 1175 00ee 7B82     		strh	r3, [r7, #18]	@ movhi
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1176              		.loc 1 1242 21
 1177 00f0 FB68     		ldr	r3, [r7, #12]
 1178 00f2 9B68     		ldr	r3, [r3, #8]
 1179              		.loc 1 1242 8
 1180 00f4 B3F5805F 		cmp	r3, #4096
 1181 00f8 08D1     		bne	.L60
 1182              		.loc 1 1242 71 discriminator 1
 1183 00fa FB68     		ldr	r3, [r7, #12]
 1184 00fc 1B69     		ldr	r3, [r3, #16]
 1185              		.loc 1 1242 56 discriminator 1
 1186 00fe 002B     		cmp	r3, #0
 1187 0100 04D1     		bne	.L60
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
 1188              		.loc 1 1244 19
 1189 0102 0023     		movs	r3, #0
 1190 0104 FB61     		str	r3, [r7, #28]
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1191              		.loc 1 1245 19
 1192 0106 BB68     		ldr	r3, [r7, #8]
 1193 0108 BB61     		str	r3, [r7, #24]
 1194 010a 03E0     		b	.L61
 1195              	.L60:
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
 1196              		.loc 1 1249 19
 1197 010c BB68     		ldr	r3, [r7, #8]
 1198 010e FB61     		str	r3, [r7, #28]
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
 1199              		.loc 1 1250 19
 1200 0110 0023     		movs	r3, #0
 1201 0112 BB61     		str	r3, [r7, #24]
 1202              	.L61:
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1203              		.loc 1 1253 5
 1204 0114 FB68     		ldr	r3, [r7, #12]
 1205 0116 0022     		movs	r2, #0
 1206 0118 83F88020 		strb	r2, [r3, #128]
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* as long as data have to be received */
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1207              		.loc 1 1256 11
 1208 011c 32E0     		b	.L62
 1209              	.L66:
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1210              		.loc 1 1258 11
ARM GAS  /tmp/ccp35uGD.s 			page 44


 1211 011e 3B68     		ldr	r3, [r7]
 1212 0120 0093     		str	r3, [sp]
 1213 0122 7B69     		ldr	r3, [r7, #20]
 1214 0124 0022     		movs	r2, #0
 1215 0126 2021     		movs	r1, #32
 1216 0128 F868     		ldr	r0, [r7, #12]
 1217 012a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1218 012e 0346     		mov	r3, r0
 1219              		.loc 1 1258 10
 1220 0130 002B     		cmp	r3, #0
 1221 0132 01D0     		beq	.L63
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1222              		.loc 1 1260 16
 1223 0134 0323     		movs	r3, #3
 1224 0136 32E0     		b	.L51
 1225              	.L63:
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
 1226              		.loc 1 1262 10
 1227 0138 FB69     		ldr	r3, [r7, #28]
 1228 013a 002B     		cmp	r3, #0
 1229 013c 0CD1     		bne	.L64
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1230              		.loc 1 1264 40
 1231 013e FB68     		ldr	r3, [r7, #12]
 1232 0140 1B68     		ldr	r3, [r3]
 1233              		.loc 1 1264 50
 1234 0142 5B6A     		ldr	r3, [r3, #36]
 1235              		.loc 1 1264 24
 1236 0144 9AB2     		uxth	r2, r3
 1237 0146 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1238 0148 1340     		ands	r3, r3, r2
 1239 014a 9AB2     		uxth	r2, r3
 1240              		.loc 1 1264 22
 1241 014c BB69     		ldr	r3, [r7, #24]
 1242 014e 1A80     		strh	r2, [r3]	@ movhi
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 1243              		.loc 1 1265 20
 1244 0150 BB69     		ldr	r3, [r7, #24]
 1245 0152 0233     		adds	r3, r3, #2
 1246 0154 BB61     		str	r3, [r7, #24]
 1247 0156 0CE0     		b	.L65
 1248              	.L64:
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1249              		.loc 1 1269 38
 1250 0158 FB68     		ldr	r3, [r7, #12]
 1251 015a 1B68     		ldr	r3, [r3]
 1252              		.loc 1 1269 48
 1253 015c 5B6A     		ldr	r3, [r3, #36]
 1254              		.loc 1 1269 23
 1255 015e DAB2     		uxtb	r2, r3
 1256              		.loc 1 1269 56
ARM GAS  /tmp/ccp35uGD.s 			page 45


 1257 0160 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1258 0162 DBB2     		uxtb	r3, r3
 1259              		.loc 1 1269 23
 1260 0164 1340     		ands	r3, r3, r2
 1261 0166 DAB2     		uxtb	r2, r3
 1262              		.loc 1 1269 21
 1263 0168 FB69     		ldr	r3, [r7, #28]
 1264 016a 1A70     		strb	r2, [r3]
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 1265              		.loc 1 1270 19
 1266 016c FB69     		ldr	r3, [r7, #28]
 1267 016e 0133     		adds	r3, r3, #1
 1268 0170 FB61     		str	r3, [r7, #28]
 1269              	.L65:
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 1270              		.loc 1 1272 12
 1271 0172 FB68     		ldr	r3, [r7, #12]
 1272 0174 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1273 0178 9BB2     		uxth	r3, r3
 1274              		.loc 1 1272 25
 1275 017a 013B     		subs	r3, r3, #1
 1276 017c 9AB2     		uxth	r2, r3
 1277 017e FB68     		ldr	r3, [r7, #12]
 1278 0180 A3F85E20 		strh	r2, [r3, #94]	@ movhi
 1279              	.L62:
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1280              		.loc 1 1256 17
 1281 0184 FB68     		ldr	r3, [r7, #12]
 1282 0186 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1283 018a 9BB2     		uxth	r3, r3
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1284              		.loc 1 1256 11
 1285 018c 002B     		cmp	r3, #0
 1286 018e C6D1     		bne	.L66
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1287              		.loc 1 1276 20
 1288 0190 FB68     		ldr	r3, [r7, #12]
 1289 0192 2022     		movs	r2, #32
 1290 0194 C3F88820 		str	r2, [r3, #136]
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1291              		.loc 1 1278 12
 1292 0198 0023     		movs	r3, #0
 1293 019a 00E0     		b	.L51
 1294              	.L48:
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1295              		.loc 1 1282 12
 1296 019c 0223     		movs	r3, #2
 1297              	.L51:
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  /tmp/ccp35uGD.s 			page 46


1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1298              		.loc 1 1284 1
 1299 019e 1846     		mov	r0, r3
 1300 01a0 2037     		adds	r7, r7, #32
 1301              	.LCFI45:
 1302              		.cfi_def_cfa_offset 8
 1303 01a2 BD46     		mov	sp, r7
 1304              	.LCFI46:
 1305              		.cfi_def_cfa_register 13
 1306              		@ sp needed
 1307 01a4 80BD     		pop	{r7, pc}
 1308              		.cfi_endproc
 1309              	.LFE339:
 1311              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1312              		.align	1
 1313              		.global	HAL_UART_Transmit_IT
 1314              		.syntax unified
 1315              		.thumb
 1316              		.thumb_func
 1317              		.fpu fpv5-d16
 1319              	HAL_UART_Transmit_IT:
 1320              	.LFB340:
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1321              		.loc 1 1297 1
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 16
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 1326 0000 80B4     		push	{r7}
 1327              	.LCFI47:
 1328              		.cfi_def_cfa_offset 4
 1329              		.cfi_offset 7, -4
 1330 0002 85B0     		sub	sp, sp, #20
 1331              	.LCFI48:
 1332              		.cfi_def_cfa_offset 24
 1333 0004 00AF     		add	r7, sp, #0
 1334              	.LCFI49:
 1335              		.cfi_def_cfa_register 7
 1336 0006 F860     		str	r0, [r7, #12]
 1337 0008 B960     		str	r1, [r7, #8]
 1338 000a 1346     		mov	r3, r2
 1339 000c FB80     		strh	r3, [r7, #6]	@ movhi
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1340              		.loc 1 1299 12
ARM GAS  /tmp/ccp35uGD.s 			page 47


 1341 000e FB68     		ldr	r3, [r7, #12]
 1342 0010 D3F88430 		ldr	r3, [r3, #132]
 1343              		.loc 1 1299 6
 1344 0014 202B     		cmp	r3, #32
 1345 0016 68D1     		bne	.L68
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1346              		.loc 1 1301 8
 1347 0018 BB68     		ldr	r3, [r7, #8]
 1348 001a 002B     		cmp	r3, #0
 1349 001c 02D0     		beq	.L69
 1350              		.loc 1 1301 25 discriminator 1
 1351 001e FB88     		ldrh	r3, [r7, #6]
 1352 0020 002B     		cmp	r3, #0
 1353 0022 01D1     		bne	.L70
 1354              	.L69:
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1355              		.loc 1 1303 14
 1356 0024 0123     		movs	r3, #1
 1357 0026 61E0     		b	.L71
 1358              	.L70:
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1359              		.loc 1 1306 5
 1360 0028 FB68     		ldr	r3, [r7, #12]
 1361 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1362 002e 012B     		cmp	r3, #1
 1363 0030 01D1     		bne	.L72
 1364              		.loc 1 1306 5 is_stmt 0 discriminator 1
 1365 0032 0223     		movs	r3, #2
 1366 0034 5AE0     		b	.L71
 1367              	.L72:
 1368              		.loc 1 1306 5 discriminator 2
 1369 0036 FB68     		ldr	r3, [r7, #12]
 1370 0038 0122     		movs	r2, #1
 1371 003a 83F88020 		strb	r2, [r3, #128]
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1372              		.loc 1 1308 24 is_stmt 1 discriminator 2
 1373 003e FB68     		ldr	r3, [r7, #12]
 1374 0040 BA68     		ldr	r2, [r7, #8]
 1375 0042 1A65     		str	r2, [r3, #80]
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1376              		.loc 1 1309 24 discriminator 2
 1377 0044 FB68     		ldr	r3, [r7, #12]
 1378 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1379 0048 A3F85420 		strh	r2, [r3, #84]	@ movhi
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1380              		.loc 1 1310 24 discriminator 2
 1381 004c FB68     		ldr	r3, [r7, #12]
 1382 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1383 0050 A3F85620 		strh	r2, [r3, #86]	@ movhi
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
 1384              		.loc 1 1311 24 discriminator 2
 1385 0054 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 48


 1386 0056 0022     		movs	r2, #0
 1387 0058 5A67     		str	r2, [r3, #116]
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1388              		.loc 1 1313 22 discriminator 2
 1389 005a FB68     		ldr	r3, [r7, #12]
 1390 005c 0022     		movs	r2, #0
 1391 005e C3F88C20 		str	r2, [r3, #140]
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1392              		.loc 1 1314 19 discriminator 2
 1393 0062 FB68     		ldr	r3, [r7, #12]
 1394 0064 2122     		movs	r2, #33
 1395 0066 C3F88420 		str	r2, [r3, #132]
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 1396              		.loc 1 1317 14 discriminator 2
 1397 006a FB68     		ldr	r3, [r7, #12]
 1398 006c 5B6E     		ldr	r3, [r3, #100]
 1399              		.loc 1 1317 8 discriminator 2
 1400 006e B3F1005F 		cmp	r3, #536870912
 1401 0072 1CD1     		bne	.L73
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1402              		.loc 1 1320 23
 1403 0074 FB68     		ldr	r3, [r7, #12]
 1404 0076 9B68     		ldr	r3, [r3, #8]
 1405              		.loc 1 1320 10
 1406 0078 B3F5805F 		cmp	r3, #4096
 1407 007c 07D1     		bne	.L74
 1408              		.loc 1 1320 73 discriminator 1
 1409 007e FB68     		ldr	r3, [r7, #12]
 1410 0080 1B69     		ldr	r3, [r3, #16]
 1411              		.loc 1 1320 58 discriminator 1
 1412 0082 002B     		cmp	r3, #0
 1413 0084 03D1     		bne	.L74
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 1414              		.loc 1 1322 22
 1415 0086 FB68     		ldr	r3, [r7, #12]
 1416 0088 1B4A     		ldr	r2, .L79
 1417 008a 5A67     		str	r2, [r3, #116]
 1418 008c 02E0     		b	.L75
 1419              	.L74:
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 1420              		.loc 1 1326 22
 1421 008e FB68     		ldr	r3, [r7, #12]
 1422 0090 1A4A     		ldr	r2, .L79+4
 1423 0092 5A67     		str	r2, [r3, #116]
 1424              	.L75:
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccp35uGD.s 			page 49


 1425              		.loc 1 1329 7
 1426 0094 FB68     		ldr	r3, [r7, #12]
 1427 0096 0022     		movs	r2, #0
 1428 0098 83F88020 		strb	r2, [r3, #128]
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1429              		.loc 1 1332 7
 1430 009c FB68     		ldr	r3, [r7, #12]
 1431 009e 1B68     		ldr	r3, [r3]
 1432 00a0 9A68     		ldr	r2, [r3, #8]
 1433 00a2 FB68     		ldr	r3, [r7, #12]
 1434 00a4 1B68     		ldr	r3, [r3]
 1435 00a6 42F40002 		orr	r2, r2, #8388608
 1436 00aa 9A60     		str	r2, [r3, #8]
 1437 00ac 1BE0     		b	.L76
 1438              	.L73:
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1439              		.loc 1 1337 23
 1440 00ae FB68     		ldr	r3, [r7, #12]
 1441 00b0 9B68     		ldr	r3, [r3, #8]
 1442              		.loc 1 1337 10
 1443 00b2 B3F5805F 		cmp	r3, #4096
 1444 00b6 07D1     		bne	.L77
 1445              		.loc 1 1337 73 discriminator 1
 1446 00b8 FB68     		ldr	r3, [r7, #12]
 1447 00ba 1B69     		ldr	r3, [r3, #16]
 1448              		.loc 1 1337 58 discriminator 1
 1449 00bc 002B     		cmp	r3, #0
 1450 00be 03D1     		bne	.L77
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
 1451              		.loc 1 1339 22
 1452 00c0 FB68     		ldr	r3, [r7, #12]
 1453 00c2 0F4A     		ldr	r2, .L79+8
 1454 00c4 5A67     		str	r2, [r3, #116]
 1455 00c6 02E0     		b	.L78
 1456              	.L77:
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
 1457              		.loc 1 1343 22
 1458 00c8 FB68     		ldr	r3, [r7, #12]
 1459 00ca 0E4A     		ldr	r2, .L79+12
 1460 00cc 5A67     		str	r2, [r3, #116]
 1461              	.L78:
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 1462              		.loc 1 1346 7
 1463 00ce FB68     		ldr	r3, [r7, #12]
 1464 00d0 0022     		movs	r2, #0
ARM GAS  /tmp/ccp35uGD.s 			page 50


 1465 00d2 83F88020 		strb	r2, [r3, #128]
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 1466              		.loc 1 1349 7
 1467 00d6 FB68     		ldr	r3, [r7, #12]
 1468 00d8 1B68     		ldr	r3, [r3]
 1469 00da 1A68     		ldr	r2, [r3]
 1470 00dc FB68     		ldr	r3, [r7, #12]
 1471 00de 1B68     		ldr	r3, [r3]
 1472 00e0 42F08002 		orr	r2, r2, #128
 1473 00e4 1A60     		str	r2, [r3]
 1474              	.L76:
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1475              		.loc 1 1352 12
 1476 00e6 0023     		movs	r3, #0
 1477 00e8 00E0     		b	.L71
 1478              	.L68:
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1479              		.loc 1 1356 12
 1480 00ea 0223     		movs	r3, #2
 1481              	.L71:
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1482              		.loc 1 1358 1
 1483 00ec 1846     		mov	r0, r3
 1484 00ee 1437     		adds	r7, r7, #20
 1485              	.LCFI50:
 1486              		.cfi_def_cfa_offset 4
 1487 00f0 BD46     		mov	sp, r7
 1488              	.LCFI51:
 1489              		.cfi_def_cfa_register 13
 1490              		@ sp needed
 1491 00f2 5DF8047B 		ldr	r7, [sp], #4
 1492              	.LCFI52:
 1493              		.cfi_restore 7
 1494              		.cfi_def_cfa_offset 0
 1495 00f6 7047     		bx	lr
 1496              	.L80:
 1497              		.align	2
 1498              	.L79:
 1499 00f8 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 1500 00fc 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 1501 0100 00000000 		.word	UART_TxISR_16BIT
 1502 0104 00000000 		.word	UART_TxISR_8BIT
 1503              		.cfi_endproc
 1504              	.LFE340:
 1506              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1507              		.align	1
 1508              		.global	HAL_UART_Receive_IT
 1509              		.syntax unified
 1510              		.thumb
ARM GAS  /tmp/ccp35uGD.s 			page 51


 1511              		.thumb_func
 1512              		.fpu fpv5-d16
 1514              	HAL_UART_Receive_IT:
 1515              	.LFB341:
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1516              		.loc 1 1371 1
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 16
 1519              		@ frame_needed = 1, uses_anonymous_args = 0
 1520 0000 80B5     		push	{r7, lr}
 1521              	.LCFI53:
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 7, -8
 1524              		.cfi_offset 14, -4
 1525 0002 84B0     		sub	sp, sp, #16
 1526              	.LCFI54:
 1527              		.cfi_def_cfa_offset 24
 1528 0004 00AF     		add	r7, sp, #0
 1529              	.LCFI55:
 1530              		.cfi_def_cfa_register 7
 1531 0006 F860     		str	r0, [r7, #12]
 1532 0008 B960     		str	r1, [r7, #8]
 1533 000a 1346     		mov	r3, r2
 1534 000c FB80     		strh	r3, [r7, #6]	@ movhi
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1535              		.loc 1 1373 12
 1536 000e FB68     		ldr	r3, [r7, #12]
 1537 0010 D3F88830 		ldr	r3, [r3, #136]
 1538              		.loc 1 1373 6
 1539 0014 202B     		cmp	r3, #32
 1540 0016 31D1     		bne	.L82
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1541              		.loc 1 1375 8
 1542 0018 BB68     		ldr	r3, [r7, #8]
 1543 001a 002B     		cmp	r3, #0
 1544 001c 02D0     		beq	.L83
 1545              		.loc 1 1375 25 discriminator 1
 1546 001e FB88     		ldrh	r3, [r7, #6]
 1547 0020 002B     		cmp	r3, #0
 1548 0022 01D1     		bne	.L84
 1549              	.L83:
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccp35uGD.s 			page 52


 1550              		.loc 1 1377 14
 1551 0024 0123     		movs	r3, #1
 1552 0026 2AE0     		b	.L85
 1553              	.L84:
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1554              		.loc 1 1380 5
 1555 0028 FB68     		ldr	r3, [r7, #12]
 1556 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1557 002e 012B     		cmp	r3, #1
 1558 0030 01D1     		bne	.L86
 1559              		.loc 1 1380 5 is_stmt 0 discriminator 1
 1560 0032 0223     		movs	r3, #2
 1561 0034 23E0     		b	.L85
 1562              	.L86:
 1563              		.loc 1 1380 5 discriminator 2
 1564 0036 FB68     		ldr	r3, [r7, #12]
 1565 0038 0122     		movs	r2, #1
 1566 003a 83F88020 		strb	r2, [r3, #128]
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1567              		.loc 1 1383 26 is_stmt 1 discriminator 2
 1568 003e FB68     		ldr	r3, [r7, #12]
 1569 0040 0022     		movs	r2, #0
 1570 0042 DA66     		str	r2, [r3, #108]
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1571              		.loc 1 1385 11 discriminator 2
 1572 0044 FB68     		ldr	r3, [r7, #12]
 1573 0046 1B68     		ldr	r3, [r3]
 1574              		.loc 1 1385 8 discriminator 2
 1575 0048 0F4A     		ldr	r2, .L88
 1576 004a 9342     		cmp	r3, r2
 1577 004c 0ED0     		beq	.L87
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1578              		.loc 1 1388 11
 1579 004e FB68     		ldr	r3, [r7, #12]
 1580 0050 1B68     		ldr	r3, [r3]
 1581 0052 5B68     		ldr	r3, [r3, #4]
 1582 0054 03F40003 		and	r3, r3, #8388608
 1583              		.loc 1 1388 10
 1584 0058 002B     		cmp	r3, #0
 1585 005a 07D0     		beq	.L87
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1586              		.loc 1 1391 9
 1587 005c FB68     		ldr	r3, [r7, #12]
 1588 005e 1B68     		ldr	r3, [r3]
 1589 0060 1A68     		ldr	r2, [r3]
 1590 0062 FB68     		ldr	r3, [r7, #12]
 1591 0064 1B68     		ldr	r3, [r3]
 1592 0066 42F08062 		orr	r2, r2, #67108864
ARM GAS  /tmp/ccp35uGD.s 			page 53


 1593 006a 1A60     		str	r2, [r3]
 1594              	.L87:
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1595              		.loc 1 1395 13
 1596 006c FB88     		ldrh	r3, [r7, #6]
 1597 006e 1A46     		mov	r2, r3
 1598 0070 B968     		ldr	r1, [r7, #8]
 1599 0072 F868     		ldr	r0, [r7, #12]
 1600 0074 FFF7FEFF 		bl	UART_Start_Receive_IT
 1601 0078 0346     		mov	r3, r0
 1602 007a 00E0     		b	.L85
 1603              	.L82:
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1604              		.loc 1 1399 12
 1605 007c 0223     		movs	r3, #2
 1606              	.L85:
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1607              		.loc 1 1401 1
 1608 007e 1846     		mov	r0, r3
 1609 0080 1037     		adds	r7, r7, #16
 1610              	.LCFI56:
 1611              		.cfi_def_cfa_offset 8
 1612 0082 BD46     		mov	sp, r7
 1613              	.LCFI57:
 1614              		.cfi_def_cfa_register 13
 1615              		@ sp needed
 1616 0084 80BD     		pop	{r7, pc}
 1617              	.L89:
 1618 0086 00BF     		.align	2
 1619              	.L88:
 1620 0088 000C0058 		.word	1476398080
 1621              		.cfi_endproc
 1622              	.LFE341:
 1624              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1625              		.align	1
 1626              		.global	HAL_UART_Transmit_DMA
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv5-d16
 1632              	HAL_UART_Transmit_DMA:
 1633              	.LFB342:
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  /tmp/ccp35uGD.s 			page 54


1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1634              		.loc 1 1414 1
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 16
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              	.LCFI58:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 84B0     		sub	sp, sp, #16
 1644              	.LCFI59:
 1645              		.cfi_def_cfa_offset 24
 1646 0004 00AF     		add	r7, sp, #0
 1647              	.LCFI60:
 1648              		.cfi_def_cfa_register 7
 1649 0006 F860     		str	r0, [r7, #12]
 1650 0008 B960     		str	r1, [r7, #8]
 1651 000a 1346     		mov	r3, r2
 1652 000c FB80     		strh	r3, [r7, #6]	@ movhi
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1653              		.loc 1 1416 12
 1654 000e FB68     		ldr	r3, [r7, #12]
 1655 0010 D3F88430 		ldr	r3, [r3, #132]
 1656              		.loc 1 1416 6
 1657 0014 202B     		cmp	r3, #32
 1658 0016 68D1     		bne	.L91
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1659              		.loc 1 1418 8
 1660 0018 BB68     		ldr	r3, [r7, #8]
 1661 001a 002B     		cmp	r3, #0
 1662 001c 02D0     		beq	.L92
 1663              		.loc 1 1418 25 discriminator 1
 1664 001e FB88     		ldrh	r3, [r7, #6]
 1665 0020 002B     		cmp	r3, #0
 1666 0022 01D1     		bne	.L93
 1667              	.L92:
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1668              		.loc 1 1420 14
 1669 0024 0123     		movs	r3, #1
 1670 0026 61E0     		b	.L94
 1671              	.L93:
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1672              		.loc 1 1423 5
 1673 0028 FB68     		ldr	r3, [r7, #12]
 1674 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1675 002e 012B     		cmp	r3, #1
 1676 0030 01D1     		bne	.L95
ARM GAS  /tmp/ccp35uGD.s 			page 55


 1677              		.loc 1 1423 5 is_stmt 0 discriminator 1
 1678 0032 0223     		movs	r3, #2
 1679 0034 5AE0     		b	.L94
 1680              	.L95:
 1681              		.loc 1 1423 5 discriminator 2
 1682 0036 FB68     		ldr	r3, [r7, #12]
 1683 0038 0122     		movs	r2, #1
 1684 003a 83F88020 		strb	r2, [r3, #128]
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1685              		.loc 1 1425 24 is_stmt 1 discriminator 2
 1686 003e FB68     		ldr	r3, [r7, #12]
 1687 0040 BA68     		ldr	r2, [r7, #8]
 1688 0042 1A65     		str	r2, [r3, #80]
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1689              		.loc 1 1426 24 discriminator 2
 1690 0044 FB68     		ldr	r3, [r7, #12]
 1691 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1692 0048 A3F85420 		strh	r2, [r3, #84]	@ movhi
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1693              		.loc 1 1427 24 discriminator 2
 1694 004c FB68     		ldr	r3, [r7, #12]
 1695 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1696 0050 A3F85620 		strh	r2, [r3, #86]	@ movhi
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1697              		.loc 1 1429 22 discriminator 2
 1698 0054 FB68     		ldr	r3, [r7, #12]
 1699 0056 0022     		movs	r2, #0
 1700 0058 C3F88C20 		str	r2, [r3, #140]
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1701              		.loc 1 1430 19 discriminator 2
 1702 005c FB68     		ldr	r3, [r7, #12]
 1703 005e 2122     		movs	r2, #33
 1704 0060 C3F88420 		str	r2, [r3, #132]
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1705              		.loc 1 1432 14 discriminator 2
 1706 0064 FB68     		ldr	r3, [r7, #12]
 1707 0066 9B6F     		ldr	r3, [r3, #120]
 1708              		.loc 1 1432 8 discriminator 2
 1709 0068 002B     		cmp	r3, #0
 1710 006a 2CD0     		beq	.L96
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1711              		.loc 1 1435 12
 1712 006c FB68     		ldr	r3, [r7, #12]
 1713 006e 9B6F     		ldr	r3, [r3, #120]
 1714              		.loc 1 1435 39
 1715 0070 204A     		ldr	r2, .L97
 1716 0072 DA63     		str	r2, [r3, #60]
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1717              		.loc 1 1438 12
 1718 0074 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 56


 1719 0076 9B6F     		ldr	r3, [r3, #120]
 1720              		.loc 1 1438 43
 1721 0078 1F4A     		ldr	r2, .L97+4
 1722 007a 1A64     		str	r2, [r3, #64]
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1723              		.loc 1 1441 12
 1724 007c FB68     		ldr	r3, [r7, #12]
 1725 007e 9B6F     		ldr	r3, [r3, #120]
 1726              		.loc 1 1441 40
 1727 0080 1E4A     		ldr	r2, .L97+8
 1728 0082 DA64     		str	r2, [r3, #76]
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1729              		.loc 1 1444 12
 1730 0084 FB68     		ldr	r3, [r7, #12]
 1731 0086 9B6F     		ldr	r3, [r3, #120]
 1732              		.loc 1 1444 40
 1733 0088 0022     		movs	r2, #0
 1734 008a 1A65     		str	r2, [r3, #80]
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1735              		.loc 1 1447 11
 1736 008c FB68     		ldr	r3, [r7, #12]
 1737 008e 986F     		ldr	r0, [r3, #120]
 1738              		.loc 1 1447 58
 1739 0090 FB68     		ldr	r3, [r7, #12]
 1740 0092 1B6D     		ldr	r3, [r3, #80]
 1741              		.loc 1 1447 11
 1742 0094 1946     		mov	r1, r3
 1743              		.loc 1 1447 88
 1744 0096 FB68     		ldr	r3, [r7, #12]
 1745 0098 1B68     		ldr	r3, [r3]
 1746              		.loc 1 1447 82
 1747 009a 2833     		adds	r3, r3, #40
 1748              		.loc 1 1447 11
 1749 009c 1A46     		mov	r2, r3
 1750 009e FB88     		ldrh	r3, [r7, #6]
 1751 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1752 00a4 0346     		mov	r3, r0
 1753              		.loc 1 1447 10
 1754 00a6 002B     		cmp	r3, #0
 1755 00a8 0DD0     		beq	.L96
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1756              		.loc 1 1450 26
 1757 00aa FB68     		ldr	r3, [r7, #12]
 1758 00ac 1022     		movs	r2, #16
 1759 00ae C3F88C20 		str	r2, [r3, #140]
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1760              		.loc 1 1452 9
 1761 00b2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 57


 1762 00b4 0022     		movs	r2, #0
 1763 00b6 83F88020 		strb	r2, [r3, #128]
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1764              		.loc 1 1455 23
 1765 00ba FB68     		ldr	r3, [r7, #12]
 1766 00bc 2022     		movs	r2, #32
 1767 00be C3F88420 		str	r2, [r3, #132]
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
 1768              		.loc 1 1457 16
 1769 00c2 0123     		movs	r3, #1
 1770 00c4 12E0     		b	.L94
 1771              	.L96:
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1772              		.loc 1 1461 5
 1773 00c6 FB68     		ldr	r3, [r7, #12]
 1774 00c8 1B68     		ldr	r3, [r3]
 1775 00ca 4022     		movs	r2, #64
 1776 00cc 1A62     		str	r2, [r3, #32]
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1777              		.loc 1 1463 5
 1778 00ce FB68     		ldr	r3, [r7, #12]
 1779 00d0 0022     		movs	r2, #0
 1780 00d2 83F88020 		strb	r2, [r3, #128]
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1781              		.loc 1 1467 5
 1782 00d6 FB68     		ldr	r3, [r7, #12]
 1783 00d8 1B68     		ldr	r3, [r3]
 1784 00da 9A68     		ldr	r2, [r3, #8]
 1785 00dc FB68     		ldr	r3, [r7, #12]
 1786 00de 1B68     		ldr	r3, [r3]
 1787 00e0 42F08002 		orr	r2, r2, #128
 1788 00e4 9A60     		str	r2, [r3, #8]
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1789              		.loc 1 1469 12
 1790 00e6 0023     		movs	r3, #0
 1791 00e8 00E0     		b	.L94
 1792              	.L91:
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1793              		.loc 1 1473 12
 1794 00ea 0223     		movs	r3, #2
 1795              	.L94:
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  /tmp/ccp35uGD.s 			page 58


 1796              		.loc 1 1475 1
 1797 00ec 1846     		mov	r0, r3
 1798 00ee 1037     		adds	r7, r7, #16
 1799              	.LCFI61:
 1800              		.cfi_def_cfa_offset 8
 1801 00f0 BD46     		mov	sp, r7
 1802              	.LCFI62:
 1803              		.cfi_def_cfa_register 13
 1804              		@ sp needed
 1805 00f2 80BD     		pop	{r7, pc}
 1806              	.L98:
 1807              		.align	2
 1808              	.L97:
 1809 00f4 00000000 		.word	UART_DMATransmitCplt
 1810 00f8 00000000 		.word	UART_DMATxHalfCplt
 1811 00fc 00000000 		.word	UART_DMAError
 1812              		.cfi_endproc
 1813              	.LFE342:
 1815              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1816              		.align	1
 1817              		.global	HAL_UART_Receive_DMA
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv5-d16
 1823              	HAL_UART_Receive_DMA:
 1824              	.LFB343:
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the parity bit (MSB position).
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1825              		.loc 1 1490 1
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 16
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 0000 80B5     		push	{r7, lr}
 1830              	.LCFI63:
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 7, -8
 1833              		.cfi_offset 14, -4
 1834 0002 84B0     		sub	sp, sp, #16
 1835              	.LCFI64:
 1836              		.cfi_def_cfa_offset 24
 1837 0004 00AF     		add	r7, sp, #0
 1838              	.LCFI65:
 1839              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccp35uGD.s 			page 59


 1840 0006 F860     		str	r0, [r7, #12]
 1841 0008 B960     		str	r1, [r7, #8]
 1842 000a 1346     		mov	r3, r2
 1843 000c FB80     		strh	r3, [r7, #6]	@ movhi
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1844              		.loc 1 1492 12
 1845 000e FB68     		ldr	r3, [r7, #12]
 1846 0010 D3F88830 		ldr	r3, [r3, #136]
 1847              		.loc 1 1492 6
 1848 0014 202B     		cmp	r3, #32
 1849 0016 31D1     		bne	.L100
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1850              		.loc 1 1494 8
 1851 0018 BB68     		ldr	r3, [r7, #8]
 1852 001a 002B     		cmp	r3, #0
 1853 001c 02D0     		beq	.L101
 1854              		.loc 1 1494 25 discriminator 1
 1855 001e FB88     		ldrh	r3, [r7, #6]
 1856 0020 002B     		cmp	r3, #0
 1857 0022 01D1     		bne	.L102
 1858              	.L101:
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1859              		.loc 1 1496 14
 1860 0024 0123     		movs	r3, #1
 1861 0026 2AE0     		b	.L103
 1862              	.L102:
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 1863              		.loc 1 1499 5
 1864 0028 FB68     		ldr	r3, [r7, #12]
 1865 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1866 002e 012B     		cmp	r3, #1
 1867 0030 01D1     		bne	.L104
 1868              		.loc 1 1499 5 is_stmt 0 discriminator 1
 1869 0032 0223     		movs	r3, #2
 1870 0034 23E0     		b	.L103
 1871              	.L104:
 1872              		.loc 1 1499 5 discriminator 2
 1873 0036 FB68     		ldr	r3, [r7, #12]
 1874 0038 0122     		movs	r2, #1
 1875 003a 83F88020 		strb	r2, [r3, #128]
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1876              		.loc 1 1502 26 is_stmt 1 discriminator 2
 1877 003e FB68     		ldr	r3, [r7, #12]
 1878 0040 0022     		movs	r2, #0
 1879 0042 DA66     		str	r2, [r3, #108]
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1880              		.loc 1 1504 11 discriminator 2
 1881 0044 FB68     		ldr	r3, [r7, #12]
 1882 0046 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 60


 1883              		.loc 1 1504 8 discriminator 2
 1884 0048 0F4A     		ldr	r2, .L106
 1885 004a 9342     		cmp	r3, r2
 1886 004c 0ED0     		beq	.L105
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1887              		.loc 1 1507 11
 1888 004e FB68     		ldr	r3, [r7, #12]
 1889 0050 1B68     		ldr	r3, [r3]
 1890 0052 5B68     		ldr	r3, [r3, #4]
 1891 0054 03F40003 		and	r3, r3, #8388608
 1892              		.loc 1 1507 10
 1893 0058 002B     		cmp	r3, #0
 1894 005a 07D0     		beq	.L105
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1895              		.loc 1 1510 9
 1896 005c FB68     		ldr	r3, [r7, #12]
 1897 005e 1B68     		ldr	r3, [r3]
 1898 0060 1A68     		ldr	r2, [r3]
 1899 0062 FB68     		ldr	r3, [r7, #12]
 1900 0064 1B68     		ldr	r3, [r3]
 1901 0066 42F08062 		orr	r2, r2, #67108864
 1902 006a 1A60     		str	r2, [r3]
 1903              	.L105:
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1904              		.loc 1 1514 13
 1905 006c FB88     		ldrh	r3, [r7, #6]
 1906 006e 1A46     		mov	r2, r3
 1907 0070 B968     		ldr	r1, [r7, #8]
 1908 0072 F868     		ldr	r0, [r7, #12]
 1909 0074 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1910 0078 0346     		mov	r3, r0
 1911 007a 00E0     		b	.L103
 1912              	.L100:
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1913              		.loc 1 1518 12
 1914 007c 0223     		movs	r3, #2
 1915              	.L103:
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1916              		.loc 1 1520 1
 1917 007e 1846     		mov	r0, r3
 1918 0080 1037     		adds	r7, r7, #16
 1919              	.LCFI66:
 1920              		.cfi_def_cfa_offset 8
 1921 0082 BD46     		mov	sp, r7
 1922              	.LCFI67:
 1923              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccp35uGD.s 			page 61


 1924              		@ sp needed
 1925 0084 80BD     		pop	{r7, pc}
 1926              	.L107:
 1927 0086 00BF     		.align	2
 1928              	.L106:
 1929 0088 000C0058 		.word	1476398080
 1930              		.cfi_endproc
 1931              	.LFE343:
 1933              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1934              		.align	1
 1935              		.global	HAL_UART_DMAPause
 1936              		.syntax unified
 1937              		.thumb
 1938              		.thumb_func
 1939              		.fpu fpv5-d16
 1941              	HAL_UART_DMAPause:
 1942              	.LFB344:
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1943              		.loc 1 1528 1
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 16
 1946              		@ frame_needed = 1, uses_anonymous_args = 0
 1947              		@ link register save eliminated.
 1948 0000 80B4     		push	{r7}
 1949              	.LCFI68:
 1950              		.cfi_def_cfa_offset 4
 1951              		.cfi_offset 7, -4
 1952 0002 85B0     		sub	sp, sp, #20
 1953              	.LCFI69:
 1954              		.cfi_def_cfa_offset 24
 1955 0004 00AF     		add	r7, sp, #0
 1956              	.LCFI70:
 1957              		.cfi_def_cfa_register 7
 1958 0006 7860     		str	r0, [r7, #4]
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1959              		.loc 1 1529 31
 1960 0008 7B68     		ldr	r3, [r7, #4]
 1961 000a D3F88430 		ldr	r3, [r3, #132]
 1962 000e FB60     		str	r3, [r7, #12]
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1963              		.loc 1 1530 31
 1964 0010 7B68     		ldr	r3, [r7, #4]
 1965 0012 D3F88830 		ldr	r3, [r3, #136]
 1966 0016 BB60     		str	r3, [r7, #8]
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 1967              		.loc 1 1532 3
 1968 0018 7B68     		ldr	r3, [r7, #4]
 1969 001a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1970 001e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccp35uGD.s 			page 62


 1971 0020 01D1     		bne	.L109
 1972              		.loc 1 1532 3 is_stmt 0 discriminator 1
 1973 0022 0223     		movs	r3, #2
 1974 0024 3CE0     		b	.L110
 1975              	.L109:
 1976              		.loc 1 1532 3 discriminator 2
 1977 0026 7B68     		ldr	r3, [r7, #4]
 1978 0028 0122     		movs	r2, #1
 1979 002a 83F88020 		strb	r2, [r3, #128]
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 1980              		.loc 1 1534 8 is_stmt 1 discriminator 2
 1981 002e 7B68     		ldr	r3, [r7, #4]
 1982 0030 1B68     		ldr	r3, [r3]
 1983 0032 9B68     		ldr	r3, [r3, #8]
 1984 0034 03F08003 		and	r3, r3, #128
 1985              		.loc 1 1534 6 discriminator 2
 1986 0038 802B     		cmp	r3, #128
 1987 003a 0AD1     		bne	.L111
 1988              		.loc 1 1534 62 discriminator 1
 1989 003c FB68     		ldr	r3, [r7, #12]
 1990 003e 212B     		cmp	r3, #33
 1991 0040 07D1     		bne	.L111
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1992              		.loc 1 1538 5
 1993 0042 7B68     		ldr	r3, [r7, #4]
 1994 0044 1B68     		ldr	r3, [r3]
 1995 0046 9A68     		ldr	r2, [r3, #8]
 1996 0048 7B68     		ldr	r3, [r7, #4]
 1997 004a 1B68     		ldr	r3, [r3]
 1998 004c 22F08002 		bic	r2, r2, #128
 1999 0050 9A60     		str	r2, [r3, #8]
 2000              	.L111:
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2001              		.loc 1 1540 8
 2002 0052 7B68     		ldr	r3, [r7, #4]
 2003 0054 1B68     		ldr	r3, [r3]
 2004 0056 9B68     		ldr	r3, [r3, #8]
 2005 0058 03F04003 		and	r3, r3, #64
 2006              		.loc 1 1540 6
 2007 005c 402B     		cmp	r3, #64
 2008 005e 1AD1     		bne	.L112
 2009              		.loc 1 1540 62 discriminator 1
 2010 0060 BB68     		ldr	r3, [r7, #8]
 2011 0062 222B     		cmp	r3, #34
 2012 0064 17D1     		bne	.L112
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2013              		.loc 1 1544 5
 2014 0066 7B68     		ldr	r3, [r7, #4]
 2015 0068 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 63


 2016 006a 1A68     		ldr	r2, [r3]
 2017 006c 7B68     		ldr	r3, [r7, #4]
 2018 006e 1B68     		ldr	r3, [r3]
 2019 0070 22F48072 		bic	r2, r2, #256
 2020 0074 1A60     		str	r2, [r3]
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2021              		.loc 1 1545 5
 2022 0076 7B68     		ldr	r3, [r7, #4]
 2023 0078 1B68     		ldr	r3, [r3]
 2024 007a 9A68     		ldr	r2, [r3, #8]
 2025 007c 7B68     		ldr	r3, [r7, #4]
 2026 007e 1B68     		ldr	r3, [r3]
 2027 0080 22F00102 		bic	r2, r2, #1
 2028 0084 9A60     		str	r2, [r3, #8]
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2029              		.loc 1 1548 5
 2030 0086 7B68     		ldr	r3, [r7, #4]
 2031 0088 1B68     		ldr	r3, [r3]
 2032 008a 9A68     		ldr	r2, [r3, #8]
 2033 008c 7B68     		ldr	r3, [r7, #4]
 2034 008e 1B68     		ldr	r3, [r3]
 2035 0090 22F04002 		bic	r2, r2, #64
 2036 0094 9A60     		str	r2, [r3, #8]
 2037              	.L112:
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2038              		.loc 1 1551 3
 2039 0096 7B68     		ldr	r3, [r7, #4]
 2040 0098 0022     		movs	r2, #0
 2041 009a 83F88020 		strb	r2, [r3, #128]
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2042              		.loc 1 1553 10
 2043 009e 0023     		movs	r3, #0
 2044              	.L110:
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2045              		.loc 1 1554 1
 2046 00a0 1846     		mov	r0, r3
 2047 00a2 1437     		adds	r7, r7, #20
 2048              	.LCFI71:
 2049              		.cfi_def_cfa_offset 4
 2050 00a4 BD46     		mov	sp, r7
 2051              	.LCFI72:
 2052              		.cfi_def_cfa_register 13
 2053              		@ sp needed
 2054 00a6 5DF8047B 		ldr	r7, [sp], #4
 2055              	.LCFI73:
 2056              		.cfi_restore 7
 2057              		.cfi_def_cfa_offset 0
 2058 00aa 7047     		bx	lr
 2059              		.cfi_endproc
 2060              	.LFE344:
 2062              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2063              		.align	1
ARM GAS  /tmp/ccp35uGD.s 			page 64


 2064              		.global	HAL_UART_DMAResume
 2065              		.syntax unified
 2066              		.thumb
 2067              		.thumb_func
 2068              		.fpu fpv5-d16
 2070              	HAL_UART_DMAResume:
 2071              	.LFB345:
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2072              		.loc 1 1562 1
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 8
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076              		@ link register save eliminated.
 2077 0000 80B4     		push	{r7}
 2078              	.LCFI74:
 2079              		.cfi_def_cfa_offset 4
 2080              		.cfi_offset 7, -4
 2081 0002 83B0     		sub	sp, sp, #12
 2082              	.LCFI75:
 2083              		.cfi_def_cfa_offset 16
 2084 0004 00AF     		add	r7, sp, #0
 2085              	.LCFI76:
 2086              		.cfi_def_cfa_register 7
 2087 0006 7860     		str	r0, [r7, #4]
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 2088              		.loc 1 1563 3
 2089 0008 7B68     		ldr	r3, [r7, #4]
 2090 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 2091 000e 012B     		cmp	r3, #1
 2092 0010 01D1     		bne	.L114
 2093              		.loc 1 1563 3 is_stmt 0 discriminator 1
 2094 0012 0223     		movs	r3, #2
 2095 0014 36E0     		b	.L115
 2096              	.L114:
 2097              		.loc 1 1563 3 discriminator 2
 2098 0016 7B68     		ldr	r3, [r7, #4]
 2099 0018 0122     		movs	r2, #1
 2100 001a 83F88020 		strb	r2, [r3, #128]
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2101              		.loc 1 1565 12 is_stmt 1 discriminator 2
 2102 001e 7B68     		ldr	r3, [r7, #4]
 2103 0020 D3F88430 		ldr	r3, [r3, #132]
 2104              		.loc 1 1565 6 discriminator 2
 2105 0024 212B     		cmp	r3, #33
 2106 0026 07D1     		bne	.L116
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2107              		.loc 1 1568 5
ARM GAS  /tmp/ccp35uGD.s 			page 65


 2108 0028 7B68     		ldr	r3, [r7, #4]
 2109 002a 1B68     		ldr	r3, [r3]
 2110 002c 9A68     		ldr	r2, [r3, #8]
 2111 002e 7B68     		ldr	r3, [r7, #4]
 2112 0030 1B68     		ldr	r3, [r3]
 2113 0032 42F08002 		orr	r2, r2, #128
 2114 0036 9A60     		str	r2, [r3, #8]
 2115              	.L116:
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2116              		.loc 1 1570 12
 2117 0038 7B68     		ldr	r3, [r7, #4]
 2118 003a D3F88830 		ldr	r3, [r3, #136]
 2119              		.loc 1 1570 6
 2120 003e 222B     		cmp	r3, #34
 2121 0040 1BD1     		bne	.L117
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2122              		.loc 1 1573 5
 2123 0042 7B68     		ldr	r3, [r7, #4]
 2124 0044 1B68     		ldr	r3, [r3]
 2125 0046 0822     		movs	r2, #8
 2126 0048 1A62     		str	r2, [r3, #32]
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2127              		.loc 1 1576 5
 2128 004a 7B68     		ldr	r3, [r7, #4]
 2129 004c 1B68     		ldr	r3, [r3]
 2130 004e 1A68     		ldr	r2, [r3]
 2131 0050 7B68     		ldr	r3, [r7, #4]
 2132 0052 1B68     		ldr	r3, [r3]
 2133 0054 42F48072 		orr	r2, r2, #256
 2134 0058 1A60     		str	r2, [r3]
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2135              		.loc 1 1577 5
 2136 005a 7B68     		ldr	r3, [r7, #4]
 2137 005c 1B68     		ldr	r3, [r3]
 2138 005e 9A68     		ldr	r2, [r3, #8]
 2139 0060 7B68     		ldr	r3, [r7, #4]
 2140 0062 1B68     		ldr	r3, [r3]
 2141 0064 42F00102 		orr	r2, r2, #1
 2142 0068 9A60     		str	r2, [r3, #8]
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2143              		.loc 1 1580 5
 2144 006a 7B68     		ldr	r3, [r7, #4]
 2145 006c 1B68     		ldr	r3, [r3]
 2146 006e 9A68     		ldr	r2, [r3, #8]
 2147 0070 7B68     		ldr	r3, [r7, #4]
 2148 0072 1B68     		ldr	r3, [r3]
 2149 0074 42F04002 		orr	r2, r2, #64
 2150 0078 9A60     		str	r2, [r3, #8]
 2151              	.L117:
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  /tmp/ccp35uGD.s 			page 66


1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2152              		.loc 1 1583 3
 2153 007a 7B68     		ldr	r3, [r7, #4]
 2154 007c 0022     		movs	r2, #0
 2155 007e 83F88020 		strb	r2, [r3, #128]
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2156              		.loc 1 1585 10
 2157 0082 0023     		movs	r3, #0
 2158              	.L115:
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2159              		.loc 1 1586 1
 2160 0084 1846     		mov	r0, r3
 2161 0086 0C37     		adds	r7, r7, #12
 2162              	.LCFI77:
 2163              		.cfi_def_cfa_offset 4
 2164 0088 BD46     		mov	sp, r7
 2165              	.LCFI78:
 2166              		.cfi_def_cfa_register 13
 2167              		@ sp needed
 2168 008a 5DF8047B 		ldr	r7, [sp], #4
 2169              	.LCFI79:
 2170              		.cfi_restore 7
 2171              		.cfi_def_cfa_offset 0
 2172 008e 7047     		bx	lr
 2173              		.cfi_endproc
 2174              	.LFE345:
 2176              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2177              		.align	1
 2178              		.global	HAL_UART_DMAStop
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu fpv5-d16
 2184              	HAL_UART_DMAStop:
 2185              	.LFB346:
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2186              		.loc 1 1594 1
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 16
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              	.LCFI80:
 2192              		.cfi_def_cfa_offset 8
 2193              		.cfi_offset 7, -8
 2194              		.cfi_offset 14, -4
 2195 0002 84B0     		sub	sp, sp, #16
 2196              	.LCFI81:
 2197              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccp35uGD.s 			page 67


 2198 0004 00AF     		add	r7, sp, #0
 2199              	.LCFI82:
 2200              		.cfi_def_cfa_register 7
 2201 0006 7860     		str	r0, [r7, #4]
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2202              		.loc 1 1602 31
 2203 0008 7B68     		ldr	r3, [r7, #4]
 2204 000a D3F88430 		ldr	r3, [r3, #132]
 2205 000e FB60     		str	r3, [r7, #12]
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2206              		.loc 1 1603 31
 2207 0010 7B68     		ldr	r3, [r7, #4]
 2208 0012 D3F88830 		ldr	r3, [r3, #136]
 2209 0016 BB60     		str	r3, [r7, #8]
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2210              		.loc 1 1606 8
 2211 0018 7B68     		ldr	r3, [r7, #4]
 2212 001a 1B68     		ldr	r3, [r3]
 2213 001c 9B68     		ldr	r3, [r3, #8]
 2214 001e 03F08003 		and	r3, r3, #128
 2215              		.loc 1 1606 6
 2216 0022 802B     		cmp	r3, #128
 2217 0024 27D1     		bne	.L119
 2218              		.loc 1 1606 62 discriminator 1
 2219 0026 FB68     		ldr	r3, [r7, #12]
 2220 0028 212B     		cmp	r3, #33
 2221 002a 24D1     		bne	.L119
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2222              		.loc 1 1609 5
 2223 002c 7B68     		ldr	r3, [r7, #4]
 2224 002e 1B68     		ldr	r3, [r3]
 2225 0030 9A68     		ldr	r2, [r3, #8]
 2226 0032 7B68     		ldr	r3, [r7, #4]
 2227 0034 1B68     		ldr	r3, [r3]
 2228 0036 22F08002 		bic	r2, r2, #128
 2229 003a 9A60     		str	r2, [r3, #8]
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2230              		.loc 1 1612 14
 2231 003c 7B68     		ldr	r3, [r7, #4]
 2232 003e 9B6F     		ldr	r3, [r3, #120]
 2233              		.loc 1 1612 8
 2234 0040 002B     		cmp	r3, #0
 2235 0042 15D0     		beq	.L120
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  /tmp/ccp35uGD.s 			page 68


1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2236              		.loc 1 1614 11
 2237 0044 7B68     		ldr	r3, [r7, #4]
 2238 0046 9B6F     		ldr	r3, [r3, #120]
 2239 0048 1846     		mov	r0, r3
 2240 004a FFF7FEFF 		bl	HAL_DMA_Abort
 2241 004e 0346     		mov	r3, r0
 2242              		.loc 1 1614 10
 2243 0050 002B     		cmp	r3, #0
 2244 0052 0DD0     		beq	.L120
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2245              		.loc 1 1616 13
 2246 0054 7B68     		ldr	r3, [r7, #4]
 2247 0056 9B6F     		ldr	r3, [r3, #120]
 2248 0058 1846     		mov	r0, r3
 2249 005a FFF7FEFF 		bl	HAL_DMA_GetError
 2250 005e 0346     		mov	r3, r0
 2251              		.loc 1 1616 12
 2252 0060 202B     		cmp	r3, #32
 2253 0062 05D1     		bne	.L120
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2254              		.loc 1 1619 28
 2255 0064 7B68     		ldr	r3, [r7, #4]
 2256 0066 1022     		movs	r2, #16
 2257 0068 C3F88C20 		str	r2, [r3, #140]
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2258              		.loc 1 1621 18
 2259 006c 0323     		movs	r3, #3
 2260 006e 32E0     		b	.L121
 2261              	.L120:
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2262              		.loc 1 1626 5
 2263 0070 7868     		ldr	r0, [r7, #4]
 2264 0072 FFF7FEFF 		bl	UART_EndTxTransfer
 2265              	.L119:
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2266              		.loc 1 1630 8
 2267 0076 7B68     		ldr	r3, [r7, #4]
 2268 0078 1B68     		ldr	r3, [r3]
 2269 007a 9B68     		ldr	r3, [r3, #8]
 2270 007c 03F04003 		and	r3, r3, #64
 2271              		.loc 1 1630 6
 2272 0080 402B     		cmp	r3, #64
 2273 0082 27D1     		bne	.L122
 2274              		.loc 1 1630 62 discriminator 1
 2275 0084 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccp35uGD.s 			page 69


 2276 0086 222B     		cmp	r3, #34
 2277 0088 24D1     		bne	.L122
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2278              		.loc 1 1633 5
 2279 008a 7B68     		ldr	r3, [r7, #4]
 2280 008c 1B68     		ldr	r3, [r3]
 2281 008e 9A68     		ldr	r2, [r3, #8]
 2282 0090 7B68     		ldr	r3, [r7, #4]
 2283 0092 1B68     		ldr	r3, [r3]
 2284 0094 22F04002 		bic	r2, r2, #64
 2285 0098 9A60     		str	r2, [r3, #8]
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2286              		.loc 1 1636 14
 2287 009a 7B68     		ldr	r3, [r7, #4]
 2288 009c DB6F     		ldr	r3, [r3, #124]
 2289              		.loc 1 1636 8
 2290 009e 002B     		cmp	r3, #0
 2291 00a0 15D0     		beq	.L123
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2292              		.loc 1 1638 11
 2293 00a2 7B68     		ldr	r3, [r7, #4]
 2294 00a4 DB6F     		ldr	r3, [r3, #124]
 2295 00a6 1846     		mov	r0, r3
 2296 00a8 FFF7FEFF 		bl	HAL_DMA_Abort
 2297 00ac 0346     		mov	r3, r0
 2298              		.loc 1 1638 10
 2299 00ae 002B     		cmp	r3, #0
 2300 00b0 0DD0     		beq	.L123
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2301              		.loc 1 1640 13
 2302 00b2 7B68     		ldr	r3, [r7, #4]
 2303 00b4 DB6F     		ldr	r3, [r3, #124]
 2304 00b6 1846     		mov	r0, r3
 2305 00b8 FFF7FEFF 		bl	HAL_DMA_GetError
 2306 00bc 0346     		mov	r3, r0
 2307              		.loc 1 1640 12
 2308 00be 202B     		cmp	r3, #32
 2309 00c0 05D1     		bne	.L123
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2310              		.loc 1 1643 28
 2311 00c2 7B68     		ldr	r3, [r7, #4]
 2312 00c4 1022     		movs	r2, #16
 2313 00c6 C3F88C20 		str	r2, [r3, #140]
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2314              		.loc 1 1645 18
 2315 00ca 0323     		movs	r3, #3
 2316 00cc 03E0     		b	.L121
 2317              	.L123:
ARM GAS  /tmp/ccp35uGD.s 			page 70


1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2318              		.loc 1 1650 5
 2319 00ce 7868     		ldr	r0, [r7, #4]
 2320 00d0 FFF7FEFF 		bl	UART_EndRxTransfer
 2321              	.L122:
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2322              		.loc 1 1653 10
 2323 00d4 0023     		movs	r3, #0
 2324              	.L121:
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2325              		.loc 1 1654 1
 2326 00d6 1846     		mov	r0, r3
 2327 00d8 1037     		adds	r7, r7, #16
 2328              	.LCFI83:
 2329              		.cfi_def_cfa_offset 8
 2330 00da BD46     		mov	sp, r7
 2331              	.LCFI84:
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 00dc 80BD     		pop	{r7, pc}
 2335              		.cfi_endproc
 2336              	.LFE346:
 2338              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2339              		.align	1
 2340              		.global	HAL_UART_Abort
 2341              		.syntax unified
 2342              		.thumb
 2343              		.thumb_func
 2344              		.fpu fpv5-d16
 2346              	HAL_UART_Abort:
 2347              	.LFB347:
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2348              		.loc 1 1669 1
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 8
 2351              		@ frame_needed = 1, uses_anonymous_args = 0
 2352 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccp35uGD.s 			page 71


 2353              	.LCFI85:
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 82B0     		sub	sp, sp, #8
 2358              	.LCFI86:
 2359              		.cfi_def_cfa_offset 16
 2360 0004 00AF     		add	r7, sp, #0
 2361              	.LCFI87:
 2362              		.cfi_def_cfa_register 7
 2363 0006 7860     		str	r0, [r7, #4]
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
 2364              		.loc 1 1671 3
 2365 0008 7B68     		ldr	r3, [r7, #4]
 2366 000a 1B68     		ldr	r3, [r3]
 2367 000c 1A68     		ldr	r2, [r3]
 2368 000e 7B68     		ldr	r3, [r7, #4]
 2369 0010 1B68     		ldr	r3, [r3]
 2370 0012 22F4F072 		bic	r2, r2, #480
 2371 0016 1A60     		str	r2, [r3]
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                    USART_CR1_TCIE));
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 2372              		.loc 1 1673 3
 2373 0018 7B68     		ldr	r3, [r7, #4]
 2374 001a 1B68     		ldr	r3, [r3]
 2375 001c 9968     		ldr	r1, [r3, #8]
 2376 001e 7B68     		ldr	r3, [r7, #4]
 2377 0020 1A68     		ldr	r2, [r3]
 2378 0022 4F4B     		ldr	r3, .L130
 2379 0024 0B40     		ands	r3, r3, r1
 2380 0026 9360     		str	r3, [r2, #8]
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2381              		.loc 1 1676 12
 2382 0028 7B68     		ldr	r3, [r7, #4]
 2383 002a DB6E     		ldr	r3, [r3, #108]
 2384              		.loc 1 1676 6
 2385 002c 012B     		cmp	r3, #1
 2386 002e 07D1     		bne	.L125
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 2387              		.loc 1 1678 5
 2388 0030 7B68     		ldr	r3, [r7, #4]
 2389 0032 1B68     		ldr	r3, [r3]
 2390 0034 1A68     		ldr	r2, [r3]
 2391 0036 7B68     		ldr	r3, [r7, #4]
 2392 0038 1B68     		ldr	r3, [r3]
 2393 003a 22F01002 		bic	r2, r2, #16
 2394 003e 1A60     		str	r2, [r3]
 2395              	.L125:
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2396              		.loc 1 1682 7
ARM GAS  /tmp/ccp35uGD.s 			page 72


 2397 0040 7B68     		ldr	r3, [r7, #4]
 2398 0042 1B68     		ldr	r3, [r3]
 2399 0044 9B68     		ldr	r3, [r3, #8]
 2400 0046 03F08003 		and	r3, r3, #128
 2401              		.loc 1 1682 6
 2402 004a 802B     		cmp	r3, #128
 2403 004c 25D1     		bne	.L126
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2404              		.loc 1 1684 5
 2405 004e 7B68     		ldr	r3, [r7, #4]
 2406 0050 1B68     		ldr	r3, [r3]
 2407 0052 9A68     		ldr	r2, [r3, #8]
 2408 0054 7B68     		ldr	r3, [r7, #4]
 2409 0056 1B68     		ldr	r3, [r3]
 2410 0058 22F08002 		bic	r2, r2, #128
 2411 005c 9A60     		str	r2, [r3, #8]
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2412              		.loc 1 1687 14
 2413 005e 7B68     		ldr	r3, [r7, #4]
 2414 0060 9B6F     		ldr	r3, [r3, #120]
 2415              		.loc 1 1687 8
 2416 0062 002B     		cmp	r3, #0
 2417 0064 19D0     		beq	.L126
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2418              		.loc 1 1691 12
 2419 0066 7B68     		ldr	r3, [r7, #4]
 2420 0068 9B6F     		ldr	r3, [r3, #120]
 2421              		.loc 1 1691 40
 2422 006a 0022     		movs	r2, #0
 2423 006c 1A65     		str	r2, [r3, #80]
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2424              		.loc 1 1693 11
 2425 006e 7B68     		ldr	r3, [r7, #4]
 2426 0070 9B6F     		ldr	r3, [r3, #120]
 2427 0072 1846     		mov	r0, r3
 2428 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 2429 0078 0346     		mov	r3, r0
 2430              		.loc 1 1693 10
 2431 007a 002B     		cmp	r3, #0
 2432 007c 0DD0     		beq	.L126
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2433              		.loc 1 1695 13
 2434 007e 7B68     		ldr	r3, [r7, #4]
 2435 0080 9B6F     		ldr	r3, [r3, #120]
 2436 0082 1846     		mov	r0, r3
 2437 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2438 0088 0346     		mov	r3, r0
 2439              		.loc 1 1695 12
 2440 008a 202B     		cmp	r3, #32
ARM GAS  /tmp/ccp35uGD.s 			page 73


 2441 008c 05D1     		bne	.L126
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2442              		.loc 1 1698 28
 2443 008e 7B68     		ldr	r3, [r7, #4]
 2444 0090 1022     		movs	r2, #16
 2445 0092 C3F88C20 		str	r2, [r3, #140]
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2446              		.loc 1 1700 18
 2447 0096 0323     		movs	r3, #3
 2448 0098 5DE0     		b	.L127
 2449              	.L126:
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2450              		.loc 1 1707 7
 2451 009a 7B68     		ldr	r3, [r7, #4]
 2452 009c 1B68     		ldr	r3, [r3]
 2453 009e 9B68     		ldr	r3, [r3, #8]
 2454 00a0 03F04003 		and	r3, r3, #64
 2455              		.loc 1 1707 6
 2456 00a4 402B     		cmp	r3, #64
 2457 00a6 25D1     		bne	.L128
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2458              		.loc 1 1709 5
 2459 00a8 7B68     		ldr	r3, [r7, #4]
 2460 00aa 1B68     		ldr	r3, [r3]
 2461 00ac 9A68     		ldr	r2, [r3, #8]
 2462 00ae 7B68     		ldr	r3, [r7, #4]
 2463 00b0 1B68     		ldr	r3, [r3]
 2464 00b2 22F04002 		bic	r2, r2, #64
 2465 00b6 9A60     		str	r2, [r3, #8]
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2466              		.loc 1 1712 14
 2467 00b8 7B68     		ldr	r3, [r7, #4]
 2468 00ba DB6F     		ldr	r3, [r3, #124]
 2469              		.loc 1 1712 8
 2470 00bc 002B     		cmp	r3, #0
 2471 00be 19D0     		beq	.L128
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2472              		.loc 1 1716 12
 2473 00c0 7B68     		ldr	r3, [r7, #4]
 2474 00c2 DB6F     		ldr	r3, [r3, #124]
 2475              		.loc 1 1716 40
 2476 00c4 0022     		movs	r2, #0
ARM GAS  /tmp/ccp35uGD.s 			page 74


 2477 00c6 1A65     		str	r2, [r3, #80]
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2478              		.loc 1 1718 11
 2479 00c8 7B68     		ldr	r3, [r7, #4]
 2480 00ca DB6F     		ldr	r3, [r3, #124]
 2481 00cc 1846     		mov	r0, r3
 2482 00ce FFF7FEFF 		bl	HAL_DMA_Abort
 2483 00d2 0346     		mov	r3, r0
 2484              		.loc 1 1718 10
 2485 00d4 002B     		cmp	r3, #0
 2486 00d6 0DD0     		beq	.L128
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2487              		.loc 1 1720 13
 2488 00d8 7B68     		ldr	r3, [r7, #4]
 2489 00da DB6F     		ldr	r3, [r3, #124]
 2490 00dc 1846     		mov	r0, r3
 2491 00de FFF7FEFF 		bl	HAL_DMA_GetError
 2492 00e2 0346     		mov	r3, r0
 2493              		.loc 1 1720 12
 2494 00e4 202B     		cmp	r3, #32
 2495 00e6 05D1     		bne	.L128
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2496              		.loc 1 1723 28
 2497 00e8 7B68     		ldr	r3, [r7, #4]
 2498 00ea 1022     		movs	r2, #16
 2499 00ec C3F88C20 		str	r2, [r3, #140]
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2500              		.loc 1 1725 18
 2501 00f0 0323     		movs	r3, #3
 2502 00f2 30E0     		b	.L127
 2503              	.L128:
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2504              		.loc 1 1732 22
 2505 00f4 7B68     		ldr	r3, [r7, #4]
 2506 00f6 0022     		movs	r2, #0
 2507 00f8 A3F85620 		strh	r2, [r3, #86]	@ movhi
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2508              		.loc 1 1733 22
 2509 00fc 7B68     		ldr	r3, [r7, #4]
 2510 00fe 0022     		movs	r2, #0
 2511 0100 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2512              		.loc 1 1736 3
 2513 0104 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 75


 2514 0106 1B68     		ldr	r3, [r3]
 2515 0108 0F22     		movs	r2, #15
 2516 010a 1A62     		str	r2, [r3, #32]
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 2517              		.loc 1 1739 12
 2518 010c 7B68     		ldr	r3, [r7, #4]
 2519 010e 5B6E     		ldr	r3, [r3, #100]
 2520              		.loc 1 1739 6
 2521 0110 B3F1005F 		cmp	r3, #536870912
 2522 0114 07D1     		bne	.L129
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 2523              		.loc 1 1741 5
 2524 0116 7B68     		ldr	r3, [r7, #4]
 2525 0118 1B68     		ldr	r3, [r3]
 2526 011a 9A69     		ldr	r2, [r3, #24]
 2527 011c 7B68     		ldr	r3, [r7, #4]
 2528 011e 1B68     		ldr	r3, [r3]
 2529 0120 42F01002 		orr	r2, r2, #16
 2530 0124 9A61     		str	r2, [r3, #24]
 2531              	.L129:
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2532              		.loc 1 1745 3
 2533 0126 7B68     		ldr	r3, [r7, #4]
 2534 0128 1B68     		ldr	r3, [r3]
 2535 012a 9A69     		ldr	r2, [r3, #24]
 2536 012c 7B68     		ldr	r3, [r7, #4]
 2537 012e 1B68     		ldr	r3, [r3]
 2538 0130 42F00802 		orr	r2, r2, #8
 2539 0134 9A61     		str	r2, [r3, #24]
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2540              		.loc 1 1748 18
 2541 0136 7B68     		ldr	r3, [r7, #4]
 2542 0138 2022     		movs	r2, #32
 2543 013a C3F88420 		str	r2, [r3, #132]
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2544              		.loc 1 1749 18
 2545 013e 7B68     		ldr	r3, [r7, #4]
 2546 0140 2022     		movs	r2, #32
 2547 0142 C3F88820 		str	r2, [r3, #136]
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2548              		.loc 1 1750 24
 2549 0146 7B68     		ldr	r3, [r7, #4]
 2550 0148 0022     		movs	r2, #0
 2551 014a DA66     		str	r2, [r3, #108]
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2552              		.loc 1 1752 20
 2553 014c 7B68     		ldr	r3, [r7, #4]
 2554 014e 0022     		movs	r2, #0
ARM GAS  /tmp/ccp35uGD.s 			page 76


 2555 0150 C3F88C20 		str	r2, [r3, #140]
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2556              		.loc 1 1754 10
 2557 0154 0023     		movs	r3, #0
 2558              	.L127:
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2559              		.loc 1 1755 1
 2560 0156 1846     		mov	r0, r3
 2561 0158 0837     		adds	r7, r7, #8
 2562              	.LCFI88:
 2563              		.cfi_def_cfa_offset 8
 2564 015a BD46     		mov	sp, r7
 2565              	.LCFI89:
 2566              		.cfi_def_cfa_register 13
 2567              		@ sp needed
 2568 015c 80BD     		pop	{r7, pc}
 2569              	.L131:
 2570 015e 00BF     		.align	2
 2571              	.L130:
 2572 0160 FEFF7FEF 		.word	-276824066
 2573              		.cfi_endproc
 2574              	.LFE347:
 2576              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2577              		.align	1
 2578              		.global	HAL_UART_AbortTransmit
 2579              		.syntax unified
 2580              		.thumb
 2581              		.thumb_func
 2582              		.fpu fpv5-d16
 2584              	HAL_UART_AbortTransmit:
 2585              	.LFB348:
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2586              		.loc 1 1770 1
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 8
 2589              		@ frame_needed = 1, uses_anonymous_args = 0
 2590 0000 80B5     		push	{r7, lr}
 2591              	.LCFI90:
 2592              		.cfi_def_cfa_offset 8
 2593              		.cfi_offset 7, -8
 2594              		.cfi_offset 14, -4
 2595 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccp35uGD.s 			page 77


 2596              	.LCFI91:
 2597              		.cfi_def_cfa_offset 16
 2598 0004 00AF     		add	r7, sp, #0
 2599              	.LCFI92:
 2600              		.cfi_def_cfa_register 7
 2601 0006 7860     		str	r0, [r7, #4]
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 2602              		.loc 1 1772 3
 2603 0008 7B68     		ldr	r3, [r7, #4]
 2604 000a 1B68     		ldr	r3, [r3]
 2605 000c 1A68     		ldr	r2, [r3]
 2606 000e 7B68     		ldr	r3, [r7, #4]
 2607 0010 1B68     		ldr	r3, [r3]
 2608 0012 22F0C002 		bic	r2, r2, #192
 2609 0016 1A60     		str	r2, [r3]
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2610              		.loc 1 1773 3
 2611 0018 7B68     		ldr	r3, [r7, #4]
 2612 001a 1B68     		ldr	r3, [r3]
 2613 001c 9A68     		ldr	r2, [r3, #8]
 2614 001e 7B68     		ldr	r3, [r7, #4]
 2615 0020 1B68     		ldr	r3, [r3]
 2616 0022 22F40002 		bic	r2, r2, #8388608
 2617 0026 9A60     		str	r2, [r3, #8]
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2618              		.loc 1 1776 7
 2619 0028 7B68     		ldr	r3, [r7, #4]
 2620 002a 1B68     		ldr	r3, [r3]
 2621 002c 9B68     		ldr	r3, [r3, #8]
 2622 002e 03F08003 		and	r3, r3, #128
 2623              		.loc 1 1776 6
 2624 0032 802B     		cmp	r3, #128
 2625 0034 25D1     		bne	.L133
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2626              		.loc 1 1778 5
 2627 0036 7B68     		ldr	r3, [r7, #4]
 2628 0038 1B68     		ldr	r3, [r3]
 2629 003a 9A68     		ldr	r2, [r3, #8]
 2630 003c 7B68     		ldr	r3, [r7, #4]
 2631 003e 1B68     		ldr	r3, [r3]
 2632 0040 22F08002 		bic	r2, r2, #128
 2633 0044 9A60     		str	r2, [r3, #8]
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2634              		.loc 1 1781 14
 2635 0046 7B68     		ldr	r3, [r7, #4]
 2636 0048 9B6F     		ldr	r3, [r3, #120]
 2637              		.loc 1 1781 8
 2638 004a 002B     		cmp	r3, #0
 2639 004c 19D0     		beq	.L133
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  /tmp/ccp35uGD.s 			page 78


1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2640              		.loc 1 1785 12
 2641 004e 7B68     		ldr	r3, [r7, #4]
 2642 0050 9B6F     		ldr	r3, [r3, #120]
 2643              		.loc 1 1785 40
 2644 0052 0022     		movs	r2, #0
 2645 0054 1A65     		str	r2, [r3, #80]
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2646              		.loc 1 1787 11
 2647 0056 7B68     		ldr	r3, [r7, #4]
 2648 0058 9B6F     		ldr	r3, [r3, #120]
 2649 005a 1846     		mov	r0, r3
 2650 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2651 0060 0346     		mov	r3, r0
 2652              		.loc 1 1787 10
 2653 0062 002B     		cmp	r3, #0
 2654 0064 0DD0     		beq	.L133
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2655              		.loc 1 1789 13
 2656 0066 7B68     		ldr	r3, [r7, #4]
 2657 0068 9B6F     		ldr	r3, [r3, #120]
 2658 006a 1846     		mov	r0, r3
 2659 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2660 0070 0346     		mov	r3, r0
 2661              		.loc 1 1789 12
 2662 0072 202B     		cmp	r3, #32
 2663 0074 05D1     		bne	.L133
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2664              		.loc 1 1792 28
 2665 0076 7B68     		ldr	r3, [r7, #4]
 2666 0078 1022     		movs	r2, #16
 2667 007a C3F88C20 		str	r2, [r3, #140]
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2668              		.loc 1 1794 18
 2669 007e 0323     		movs	r3, #3
 2670 0080 15E0     		b	.L134
 2671              	.L133:
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2672              		.loc 1 1801 22
 2673 0082 7B68     		ldr	r3, [r7, #4]
 2674 0084 0022     		movs	r2, #0
 2675 0086 A3F85620 		strh	r2, [r3, #86]	@ movhi
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
ARM GAS  /tmp/ccp35uGD.s 			page 79


 2676              		.loc 1 1804 12
 2677 008a 7B68     		ldr	r3, [r7, #4]
 2678 008c 5B6E     		ldr	r3, [r3, #100]
 2679              		.loc 1 1804 6
 2680 008e B3F1005F 		cmp	r3, #536870912
 2681 0092 07D1     		bne	.L135
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 2682              		.loc 1 1806 5
 2683 0094 7B68     		ldr	r3, [r7, #4]
 2684 0096 1B68     		ldr	r3, [r3]
 2685 0098 9A69     		ldr	r2, [r3, #24]
 2686 009a 7B68     		ldr	r3, [r7, #4]
 2687 009c 1B68     		ldr	r3, [r3]
 2688 009e 42F01002 		orr	r2, r2, #16
 2689 00a2 9A61     		str	r2, [r3, #24]
 2690              	.L135:
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2691              		.loc 1 1810 17
 2692 00a4 7B68     		ldr	r3, [r7, #4]
 2693 00a6 2022     		movs	r2, #32
 2694 00a8 C3F88420 		str	r2, [r3, #132]
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2695              		.loc 1 1812 10
 2696 00ac 0023     		movs	r3, #0
 2697              	.L134:
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2698              		.loc 1 1813 1
 2699 00ae 1846     		mov	r0, r3
 2700 00b0 0837     		adds	r7, r7, #8
 2701              	.LCFI93:
 2702              		.cfi_def_cfa_offset 8
 2703 00b2 BD46     		mov	sp, r7
 2704              	.LCFI94:
 2705              		.cfi_def_cfa_register 13
 2706              		@ sp needed
 2707 00b4 80BD     		pop	{r7, pc}
 2708              		.cfi_endproc
 2709              	.LFE348:
 2711              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2712              		.align	1
 2713              		.global	HAL_UART_AbortReceive
 2714              		.syntax unified
 2715              		.thumb
 2716              		.thumb_func
 2717              		.fpu fpv5-d16
 2719              	HAL_UART_AbortReceive:
 2720              	.LFB349:
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
ARM GAS  /tmp/ccp35uGD.s 			page 80


1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2721              		.loc 1 1828 1
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 8
 2724              		@ frame_needed = 1, uses_anonymous_args = 0
 2725 0000 80B5     		push	{r7, lr}
 2726              	.LCFI95:
 2727              		.cfi_def_cfa_offset 8
 2728              		.cfi_offset 7, -8
 2729              		.cfi_offset 14, -4
 2730 0002 82B0     		sub	sp, sp, #8
 2731              	.LCFI96:
 2732              		.cfi_def_cfa_offset 16
 2733 0004 00AF     		add	r7, sp, #0
 2734              	.LCFI97:
 2735              		.cfi_def_cfa_register 7
 2736 0006 7860     		str	r0, [r7, #4]
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 2737              		.loc 1 1830 3
 2738 0008 7B68     		ldr	r3, [r7, #4]
 2739 000a 1B68     		ldr	r3, [r3]
 2740 000c 1A68     		ldr	r2, [r3]
 2741 000e 7B68     		ldr	r3, [r7, #4]
 2742 0010 1B68     		ldr	r3, [r3]
 2743 0012 22F49072 		bic	r2, r2, #288
 2744 0016 1A60     		str	r2, [r3]
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2745              		.loc 1 1831 3
 2746 0018 7B68     		ldr	r3, [r7, #4]
 2747 001a 1B68     		ldr	r3, [r3]
 2748 001c 9968     		ldr	r1, [r3, #8]
 2749 001e 7B68     		ldr	r3, [r7, #4]
 2750 0020 1A68     		ldr	r2, [r3]
 2751 0022 2C4B     		ldr	r3, .L140
 2752 0024 0B40     		ands	r3, r3, r1
 2753 0026 9360     		str	r3, [r2, #8]
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2754              		.loc 1 1834 12
 2755 0028 7B68     		ldr	r3, [r7, #4]
 2756 002a DB6E     		ldr	r3, [r3, #108]
 2757              		.loc 1 1834 6
 2758 002c 012B     		cmp	r3, #1
 2759 002e 07D1     		bne	.L137
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
ARM GAS  /tmp/ccp35uGD.s 			page 81


 2760              		.loc 1 1836 5
 2761 0030 7B68     		ldr	r3, [r7, #4]
 2762 0032 1B68     		ldr	r3, [r3]
 2763 0034 1A68     		ldr	r2, [r3]
 2764 0036 7B68     		ldr	r3, [r7, #4]
 2765 0038 1B68     		ldr	r3, [r3]
 2766 003a 22F01002 		bic	r2, r2, #16
 2767 003e 1A60     		str	r2, [r3]
 2768              	.L137:
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2769              		.loc 1 1840 7
 2770 0040 7B68     		ldr	r3, [r7, #4]
 2771 0042 1B68     		ldr	r3, [r3]
 2772 0044 9B68     		ldr	r3, [r3, #8]
 2773 0046 03F04003 		and	r3, r3, #64
 2774              		.loc 1 1840 6
 2775 004a 402B     		cmp	r3, #64
 2776 004c 25D1     		bne	.L138
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2777              		.loc 1 1842 5
 2778 004e 7B68     		ldr	r3, [r7, #4]
 2779 0050 1B68     		ldr	r3, [r3]
 2780 0052 9A68     		ldr	r2, [r3, #8]
 2781 0054 7B68     		ldr	r3, [r7, #4]
 2782 0056 1B68     		ldr	r3, [r3]
 2783 0058 22F04002 		bic	r2, r2, #64
 2784 005c 9A60     		str	r2, [r3, #8]
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2785              		.loc 1 1845 14
 2786 005e 7B68     		ldr	r3, [r7, #4]
 2787 0060 DB6F     		ldr	r3, [r3, #124]
 2788              		.loc 1 1845 8
 2789 0062 002B     		cmp	r3, #0
 2790 0064 19D0     		beq	.L138
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2791              		.loc 1 1849 12
 2792 0066 7B68     		ldr	r3, [r7, #4]
 2793 0068 DB6F     		ldr	r3, [r3, #124]
 2794              		.loc 1 1849 40
 2795 006a 0022     		movs	r2, #0
 2796 006c 1A65     		str	r2, [r3, #80]
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2797              		.loc 1 1851 11
 2798 006e 7B68     		ldr	r3, [r7, #4]
 2799 0070 DB6F     		ldr	r3, [r3, #124]
 2800 0072 1846     		mov	r0, r3
 2801 0074 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccp35uGD.s 			page 82


 2802 0078 0346     		mov	r3, r0
 2803              		.loc 1 1851 10
 2804 007a 002B     		cmp	r3, #0
 2805 007c 0DD0     		beq	.L138
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2806              		.loc 1 1853 13
 2807 007e 7B68     		ldr	r3, [r7, #4]
 2808 0080 DB6F     		ldr	r3, [r3, #124]
 2809 0082 1846     		mov	r0, r3
 2810 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2811 0088 0346     		mov	r3, r0
 2812              		.loc 1 1853 12
 2813 008a 202B     		cmp	r3, #32
 2814 008c 05D1     		bne	.L138
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2815              		.loc 1 1856 28
 2816 008e 7B68     		ldr	r3, [r7, #4]
 2817 0090 1022     		movs	r2, #16
 2818 0092 C3F88C20 		str	r2, [r3, #140]
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2819              		.loc 1 1858 18
 2820 0096 0323     		movs	r3, #3
 2821 0098 17E0     		b	.L139
 2822              	.L138:
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2823              		.loc 1 1865 22
 2824 009a 7B68     		ldr	r3, [r7, #4]
 2825 009c 0022     		movs	r2, #0
 2826 009e A3F85E20 		strh	r2, [r3, #94]	@ movhi
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2827              		.loc 1 1868 3
 2828 00a2 7B68     		ldr	r3, [r7, #4]
 2829 00a4 1B68     		ldr	r3, [r3]
 2830 00a6 0F22     		movs	r2, #15
 2831 00a8 1A62     		str	r2, [r3, #32]
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2832              		.loc 1 1871 3
 2833 00aa 7B68     		ldr	r3, [r7, #4]
 2834 00ac 1B68     		ldr	r3, [r3]
 2835 00ae 9A69     		ldr	r2, [r3, #24]
 2836 00b0 7B68     		ldr	r3, [r7, #4]
 2837 00b2 1B68     		ldr	r3, [r3]
 2838 00b4 42F00802 		orr	r2, r2, #8
ARM GAS  /tmp/ccp35uGD.s 			page 83


 2839 00b8 9A61     		str	r2, [r3, #24]
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2840              		.loc 1 1874 18
 2841 00ba 7B68     		ldr	r3, [r7, #4]
 2842 00bc 2022     		movs	r2, #32
 2843 00be C3F88820 		str	r2, [r3, #136]
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2844              		.loc 1 1875 24
 2845 00c2 7B68     		ldr	r3, [r7, #4]
 2846 00c4 0022     		movs	r2, #0
 2847 00c6 DA66     		str	r2, [r3, #108]
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2848              		.loc 1 1877 10
 2849 00c8 0023     		movs	r3, #0
 2850              	.L139:
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2851              		.loc 1 1878 1
 2852 00ca 1846     		mov	r0, r3
 2853 00cc 0837     		adds	r7, r7, #8
 2854              	.LCFI98:
 2855              		.cfi_def_cfa_offset 8
 2856 00ce BD46     		mov	sp, r7
 2857              	.LCFI99:
 2858              		.cfi_def_cfa_register 13
 2859              		@ sp needed
 2860 00d0 80BD     		pop	{r7, pc}
 2861              	.L141:
 2862 00d2 00BF     		.align	2
 2863              	.L140:
 2864 00d4 FEFFFFEF 		.word	-268435458
 2865              		.cfi_endproc
 2866              	.LFE349:
 2868              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2869              		.align	1
 2870              		.global	HAL_UART_Abort_IT
 2871              		.syntax unified
 2872              		.thumb
 2873              		.thumb_func
 2874              		.fpu fpv5-d16
 2876              	HAL_UART_Abort_IT:
 2877              	.LFB350:
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
ARM GAS  /tmp/ccp35uGD.s 			page 84


1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2878              		.loc 1 1895 1
 2879              		.cfi_startproc
 2880              		@ args = 0, pretend = 0, frame = 16
 2881              		@ frame_needed = 1, uses_anonymous_args = 0
 2882 0000 80B5     		push	{r7, lr}
 2883              	.LCFI100:
 2884              		.cfi_def_cfa_offset 8
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 84B0     		sub	sp, sp, #16
 2888              	.LCFI101:
 2889              		.cfi_def_cfa_offset 24
 2890 0004 00AF     		add	r7, sp, #0
 2891              	.LCFI102:
 2892              		.cfi_def_cfa_register 7
 2893 0006 7860     		str	r0, [r7, #4]
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2894              		.loc 1 1896 12
 2895 0008 0123     		movs	r3, #1
 2896 000a FB60     		str	r3, [r7, #12]
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
 2897              		.loc 1 1899 3
 2898 000c 7B68     		ldr	r3, [r7, #4]
 2899 000e 1B68     		ldr	r3, [r3]
 2900 0010 1A68     		ldr	r2, [r3]
 2901 0012 7B68     		ldr	r3, [r7, #4]
 2902 0014 1B68     		ldr	r3, [r3]
 2903 0016 22F4F072 		bic	r2, r2, #480
 2904 001a 1A60     		str	r2, [r3]
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 2905              		.loc 1 1901 3
 2906 001c 7B68     		ldr	r3, [r7, #4]
 2907 001e 1B68     		ldr	r3, [r3]
 2908 0020 9968     		ldr	r1, [r3, #8]
 2909 0022 7B68     		ldr	r3, [r7, #4]
 2910 0024 1A68     		ldr	r2, [r3]
 2911 0026 5F4B     		ldr	r3, .L155
 2912 0028 0B40     		ands	r3, r3, r1
 2913 002a 9360     		str	r3, [r2, #8]
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2914              		.loc 1 1904 12
 2915 002c 7B68     		ldr	r3, [r7, #4]
 2916 002e DB6E     		ldr	r3, [r3, #108]
 2917              		.loc 1 1904 6
 2918 0030 012B     		cmp	r3, #1
 2919 0032 07D1     		bne	.L143
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
ARM GAS  /tmp/ccp35uGD.s 			page 85


 2920              		.loc 1 1906 5
 2921 0034 7B68     		ldr	r3, [r7, #4]
 2922 0036 1B68     		ldr	r3, [r3]
 2923 0038 1A68     		ldr	r2, [r3]
 2924 003a 7B68     		ldr	r3, [r7, #4]
 2925 003c 1B68     		ldr	r3, [r3]
 2926 003e 22F01002 		bic	r2, r2, #16
 2927 0042 1A60     		str	r2, [r3]
 2928              	.L143:
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      before any call to DMA Abort functions */
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2929              		.loc 1 1912 12
 2930 0044 7B68     		ldr	r3, [r7, #4]
 2931 0046 9B6F     		ldr	r3, [r3, #120]
 2932              		.loc 1 1912 6
 2933 0048 002B     		cmp	r3, #0
 2934 004a 0FD0     		beq	.L144
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2935              		.loc 1 1916 9
 2936 004c 7B68     		ldr	r3, [r7, #4]
 2937 004e 1B68     		ldr	r3, [r3]
 2938 0050 9B68     		ldr	r3, [r3, #8]
 2939 0052 03F08003 		and	r3, r3, #128
 2940              		.loc 1 1916 8
 2941 0056 802B     		cmp	r3, #128
 2942 0058 04D1     		bne	.L145
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2943              		.loc 1 1918 12
 2944 005a 7B68     		ldr	r3, [r7, #4]
 2945 005c 9B6F     		ldr	r3, [r3, #120]
 2946              		.loc 1 1918 40
 2947 005e 524A     		ldr	r2, .L155+4
 2948 0060 1A65     		str	r2, [r3, #80]
 2949 0062 03E0     		b	.L144
 2950              	.L145:
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2951              		.loc 1 1922 12
 2952 0064 7B68     		ldr	r3, [r7, #4]
 2953 0066 9B6F     		ldr	r3, [r3, #120]
 2954              		.loc 1 1922 40
 2955 0068 0022     		movs	r2, #0
 2956 006a 1A65     		str	r2, [r3, #80]
 2957              	.L144:
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
ARM GAS  /tmp/ccp35uGD.s 			page 86


1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2958              		.loc 1 1926 12
 2959 006c 7B68     		ldr	r3, [r7, #4]
 2960 006e DB6F     		ldr	r3, [r3, #124]
 2961              		.loc 1 1926 6
 2962 0070 002B     		cmp	r3, #0
 2963 0072 0FD0     		beq	.L146
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2964              		.loc 1 1930 9
 2965 0074 7B68     		ldr	r3, [r7, #4]
 2966 0076 1B68     		ldr	r3, [r3]
 2967 0078 9B68     		ldr	r3, [r3, #8]
 2968 007a 03F04003 		and	r3, r3, #64
 2969              		.loc 1 1930 8
 2970 007e 402B     		cmp	r3, #64
 2971 0080 04D1     		bne	.L147
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2972              		.loc 1 1932 12
 2973 0082 7B68     		ldr	r3, [r7, #4]
 2974 0084 DB6F     		ldr	r3, [r3, #124]
 2975              		.loc 1 1932 40
 2976 0086 494A     		ldr	r2, .L155+8
 2977 0088 1A65     		str	r2, [r3, #80]
 2978 008a 03E0     		b	.L146
 2979              	.L147:
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2980              		.loc 1 1936 12
 2981 008c 7B68     		ldr	r3, [r7, #4]
 2982 008e DB6F     		ldr	r3, [r3, #124]
 2983              		.loc 1 1936 40
 2984 0090 0022     		movs	r2, #0
 2985 0092 1A65     		str	r2, [r3, #80]
 2986              	.L146:
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2987              		.loc 1 1941 7
 2988 0094 7B68     		ldr	r3, [r7, #4]
 2989 0096 1B68     		ldr	r3, [r3]
 2990 0098 9B68     		ldr	r3, [r3, #8]
 2991 009a 03F08003 		and	r3, r3, #128
 2992              		.loc 1 1941 6
 2993 009e 802B     		cmp	r3, #128
 2994 00a0 1AD1     		bne	.L148
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2995              		.loc 1 1944 5
ARM GAS  /tmp/ccp35uGD.s 			page 87


 2996 00a2 7B68     		ldr	r3, [r7, #4]
 2997 00a4 1B68     		ldr	r3, [r3]
 2998 00a6 9A68     		ldr	r2, [r3, #8]
 2999 00a8 7B68     		ldr	r3, [r7, #4]
 3000 00aa 1B68     		ldr	r3, [r3]
 3001 00ac 22F08002 		bic	r2, r2, #128
 3002 00b0 9A60     		str	r2, [r3, #8]
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3003              		.loc 1 1947 14
 3004 00b2 7B68     		ldr	r3, [r7, #4]
 3005 00b4 9B6F     		ldr	r3, [r3, #120]
 3006              		.loc 1 1947 8
 3007 00b6 002B     		cmp	r3, #0
 3008 00b8 0ED0     		beq	.L148
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3009              		.loc 1 1953 11
 3010 00ba 7B68     		ldr	r3, [r7, #4]
 3011 00bc 9B6F     		ldr	r3, [r3, #120]
 3012 00be 1846     		mov	r0, r3
 3013 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3014 00c4 0346     		mov	r3, r0
 3015              		.loc 1 1953 10
 3016 00c6 002B     		cmp	r3, #0
 3017 00c8 04D0     		beq	.L149
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3018              		.loc 1 1955 14
 3019 00ca 7B68     		ldr	r3, [r7, #4]
 3020 00cc 9B6F     		ldr	r3, [r3, #120]
 3021              		.loc 1 1955 42
 3022 00ce 0022     		movs	r2, #0
 3023 00d0 1A65     		str	r2, [r3, #80]
 3024 00d2 01E0     		b	.L148
 3025              	.L149:
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
 3026              		.loc 1 1959 19
 3027 00d4 0023     		movs	r3, #0
 3028 00d6 FB60     		str	r3, [r7, #12]
 3029              	.L148:
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3030              		.loc 1 1965 7
 3031 00d8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 88


 3032 00da 1B68     		ldr	r3, [r3]
 3033 00dc 9B68     		ldr	r3, [r3, #8]
 3034 00de 03F04003 		and	r3, r3, #64
 3035              		.loc 1 1965 6
 3036 00e2 402B     		cmp	r3, #64
 3037 00e4 1CD1     		bne	.L150
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3038              		.loc 1 1967 5
 3039 00e6 7B68     		ldr	r3, [r7, #4]
 3040 00e8 1B68     		ldr	r3, [r3]
 3041 00ea 9A68     		ldr	r2, [r3, #8]
 3042 00ec 7B68     		ldr	r3, [r7, #4]
 3043 00ee 1B68     		ldr	r3, [r3]
 3044 00f0 22F04002 		bic	r2, r2, #64
 3045 00f4 9A60     		str	r2, [r3, #8]
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3046              		.loc 1 1970 14
 3047 00f6 7B68     		ldr	r3, [r7, #4]
 3048 00f8 DB6F     		ldr	r3, [r3, #124]
 3049              		.loc 1 1970 8
 3050 00fa 002B     		cmp	r3, #0
 3051 00fc 10D0     		beq	.L150
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3052              		.loc 1 1976 11
 3053 00fe 7B68     		ldr	r3, [r7, #4]
 3054 0100 DB6F     		ldr	r3, [r3, #124]
 3055 0102 1846     		mov	r0, r3
 3056 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3057 0108 0346     		mov	r3, r0
 3058              		.loc 1 1976 10
 3059 010a 002B     		cmp	r3, #0
 3060 010c 06D0     		beq	.L151
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3061              		.loc 1 1978 14
 3062 010e 7B68     		ldr	r3, [r7, #4]
 3063 0110 DB6F     		ldr	r3, [r3, #124]
 3064              		.loc 1 1978 42
 3065 0112 0022     		movs	r2, #0
 3066 0114 1A65     		str	r2, [r3, #80]
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
 3067              		.loc 1 1979 19
 3068 0116 0123     		movs	r3, #1
 3069 0118 FB60     		str	r3, [r7, #12]
 3070 011a 01E0     		b	.L150
 3071              	.L151:
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  /tmp/ccp35uGD.s 			page 89


1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
 3072              		.loc 1 1983 19
 3073 011c 0023     		movs	r3, #0
 3074 011e FB60     		str	r3, [r7, #12]
 3075              	.L150:
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (abortcplt == 1U)
 3076              		.loc 1 1989 6
 3077 0120 FB68     		ldr	r3, [r7, #12]
 3078 0122 012B     		cmp	r3, #1
 3079 0124 38D1     		bne	.L152
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3080              		.loc 1 1992 24
 3081 0126 7B68     		ldr	r3, [r7, #4]
 3082 0128 0022     		movs	r2, #0
 3083 012a A3F85620 		strh	r2, [r3, #86]	@ movhi
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3084              		.loc 1 1993 24
 3085 012e 7B68     		ldr	r3, [r7, #4]
 3086 0130 0022     		movs	r2, #0
 3087 0132 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear ISR function pointers */
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR = NULL;
 3088              		.loc 1 1996 18
 3089 0136 7B68     		ldr	r3, [r7, #4]
 3090 0138 0022     		movs	r2, #0
 3091 013a 1A67     		str	r2, [r3, #112]
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 3092              		.loc 1 1997 18
 3093 013c 7B68     		ldr	r3, [r7, #4]
 3094 013e 0022     		movs	r2, #0
 3095 0140 5A67     		str	r2, [r3, #116]
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset errorCode */
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3096              		.loc 1 2000 22
 3097 0142 7B68     		ldr	r3, [r7, #4]
 3098 0144 0022     		movs	r2, #0
 3099 0146 C3F88C20 		str	r2, [r3, #140]
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3100              		.loc 1 2003 5
 3101 014a 7B68     		ldr	r3, [r7, #4]
 3102 014c 1B68     		ldr	r3, [r3]
 3103 014e 0F22     		movs	r2, #15
 3104 0150 1A62     		str	r2, [r3, #32]
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
ARM GAS  /tmp/ccp35uGD.s 			page 90


 3105              		.loc 1 2006 14
 3106 0152 7B68     		ldr	r3, [r7, #4]
 3107 0154 5B6E     		ldr	r3, [r3, #100]
 3108              		.loc 1 2006 8
 3109 0156 B3F1005F 		cmp	r3, #536870912
 3110 015a 07D1     		bne	.L153
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3111              		.loc 1 2008 7
 3112 015c 7B68     		ldr	r3, [r7, #4]
 3113 015e 1B68     		ldr	r3, [r3]
 3114 0160 9A69     		ldr	r2, [r3, #24]
 3115 0162 7B68     		ldr	r3, [r7, #4]
 3116 0164 1B68     		ldr	r3, [r3]
 3117 0166 42F01002 		orr	r2, r2, #16
 3118 016a 9A61     		str	r2, [r3, #24]
 3119              	.L153:
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Discard the received data */
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3120              		.loc 1 2012 5
 3121 016c 7B68     		ldr	r3, [r7, #4]
 3122 016e 1B68     		ldr	r3, [r3]
 3123 0170 9A69     		ldr	r2, [r3, #24]
 3124 0172 7B68     		ldr	r3, [r7, #4]
 3125 0174 1B68     		ldr	r3, [r3]
 3126 0176 42F00802 		orr	r2, r2, #8
 3127 017a 9A61     		str	r2, [r3, #24]
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3128              		.loc 1 2015 20
 3129 017c 7B68     		ldr	r3, [r7, #4]
 3130 017e 2022     		movs	r2, #32
 3131 0180 C3F88420 		str	r2, [r3, #132]
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3132              		.loc 1 2016 20
 3133 0184 7B68     		ldr	r3, [r7, #4]
 3134 0186 2022     		movs	r2, #32
 3135 0188 C3F88820 		str	r2, [r3, #136]
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3136              		.loc 1 2017 26
 3137 018c 7B68     		ldr	r3, [r7, #4]
 3138 018e 0022     		movs	r2, #0
 3139 0190 DA66     		str	r2, [r3, #108]
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort complete callback */
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3140              		.loc 1 2025 5
 3141 0192 7868     		ldr	r0, [r7, #4]
 3142 0194 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
ARM GAS  /tmp/ccp35uGD.s 			page 91


 3143              	.L152:
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3144              		.loc 1 2029 10
 3145 0198 0023     		movs	r3, #0
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3146              		.loc 1 2030 1
 3147 019a 1846     		mov	r0, r3
 3148 019c 1037     		adds	r7, r7, #16
 3149              	.LCFI103:
 3150              		.cfi_def_cfa_offset 8
 3151 019e BD46     		mov	sp, r7
 3152              	.LCFI104:
 3153              		.cfi_def_cfa_register 13
 3154              		@ sp needed
 3155 01a0 80BD     		pop	{r7, pc}
 3156              	.L156:
 3157 01a2 00BF     		.align	2
 3158              	.L155:
 3159 01a4 FEFF7FEF 		.word	-276824066
 3160 01a8 00000000 		.word	UART_DMATxAbortCallback
 3161 01ac 00000000 		.word	UART_DMARxAbortCallback
 3162              		.cfi_endproc
 3163              	.LFE350:
 3165              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3166              		.align	1
 3167              		.global	HAL_UART_AbortTransmit_IT
 3168              		.syntax unified
 3169              		.thumb
 3170              		.thumb_func
 3171              		.fpu fpv5-d16
 3173              	HAL_UART_AbortTransmit_IT:
 3174              	.LFB351:
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3175              		.loc 1 2047 1
 3176              		.cfi_startproc
 3177              		@ args = 0, pretend = 0, frame = 8
 3178              		@ frame_needed = 1, uses_anonymous_args = 0
 3179 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccp35uGD.s 			page 92


 3180              	.LCFI105:
 3181              		.cfi_def_cfa_offset 8
 3182              		.cfi_offset 7, -8
 3183              		.cfi_offset 14, -4
 3184 0002 82B0     		sub	sp, sp, #8
 3185              	.LCFI106:
 3186              		.cfi_def_cfa_offset 16
 3187 0004 00AF     		add	r7, sp, #0
 3188              	.LCFI107:
 3189              		.cfi_def_cfa_register 7
 3190 0006 7860     		str	r0, [r7, #4]
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 3191              		.loc 1 2049 3
 3192 0008 7B68     		ldr	r3, [r7, #4]
 3193 000a 1B68     		ldr	r3, [r3]
 3194 000c 1A68     		ldr	r2, [r3]
 3195 000e 7B68     		ldr	r3, [r7, #4]
 3196 0010 1B68     		ldr	r3, [r3]
 3197 0012 22F0C002 		bic	r2, r2, #192
 3198 0016 1A60     		str	r2, [r3]
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3199              		.loc 1 2050 3
 3200 0018 7B68     		ldr	r3, [r7, #4]
 3201 001a 1B68     		ldr	r3, [r3]
 3202 001c 9A68     		ldr	r2, [r3, #8]
 3203 001e 7B68     		ldr	r3, [r7, #4]
 3204 0020 1B68     		ldr	r3, [r3]
 3205 0022 22F40002 		bic	r2, r2, #8388608
 3206 0026 9A60     		str	r2, [r3, #8]
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3207              		.loc 1 2053 7
 3208 0028 7B68     		ldr	r3, [r7, #4]
 3209 002a 1B68     		ldr	r3, [r3]
 3210 002c 9B68     		ldr	r3, [r3, #8]
 3211 002e 03F08003 		and	r3, r3, #128
 3212              		.loc 1 2053 6
 3213 0032 802B     		cmp	r3, #128
 3214 0034 2ED1     		bne	.L158
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3215              		.loc 1 2055 5
 3216 0036 7B68     		ldr	r3, [r7, #4]
 3217 0038 1B68     		ldr	r3, [r3]
 3218 003a 9A68     		ldr	r2, [r3, #8]
 3219 003c 7B68     		ldr	r3, [r7, #4]
 3220 003e 1B68     		ldr	r3, [r3]
 3221 0040 22F08002 		bic	r2, r2, #128
 3222 0044 9A60     		str	r2, [r3, #8]
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3223              		.loc 1 2058 14
 3224 0046 7B68     		ldr	r3, [r7, #4]
 3225 0048 9B6F     		ldr	r3, [r3, #120]
ARM GAS  /tmp/ccp35uGD.s 			page 93


 3226              		.loc 1 2058 8
 3227 004a 002B     		cmp	r3, #0
 3228 004c 13D0     		beq	.L159
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3229              		.loc 1 2062 12
 3230 004e 7B68     		ldr	r3, [r7, #4]
 3231 0050 9B6F     		ldr	r3, [r3, #120]
 3232              		.loc 1 2062 40
 3233 0052 204A     		ldr	r2, .L163
 3234 0054 1A65     		str	r2, [r3, #80]
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3235              		.loc 1 2065 11
 3236 0056 7B68     		ldr	r3, [r7, #4]
 3237 0058 9B6F     		ldr	r3, [r3, #120]
 3238 005a 1846     		mov	r0, r3
 3239 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3240 0060 0346     		mov	r3, r0
 3241              		.loc 1 2065 10
 3242 0062 002B     		cmp	r3, #0
 3243 0064 31D0     		beq	.L160
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3244              		.loc 1 2068 14
 3245 0066 7B68     		ldr	r3, [r7, #4]
 3246 0068 9B6F     		ldr	r3, [r3, #120]
 3247              		.loc 1 2068 22
 3248 006a 1B6D     		ldr	r3, [r3, #80]
 3249              		.loc 1 2068 47
 3250 006c 7A68     		ldr	r2, [r7, #4]
 3251 006e 926F     		ldr	r2, [r2, #120]
 3252              		.loc 1 2068 9
 3253 0070 1046     		mov	r0, r2
 3254 0072 9847     		blx	r3
 3255              	.LVL0:
 3256 0074 29E0     		b	.L160
 3257              	.L159:
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Tx transfer counter */
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3258              		.loc 1 2074 26
 3259 0076 7B68     		ldr	r3, [r7, #4]
 3260 0078 0022     		movs	r2, #0
 3261 007a A3F85620 		strh	r2, [r3, #86]	@ movhi
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear TxISR function pointers */
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR = NULL;
 3262              		.loc 1 2077 20
 3263 007e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 94


 3264 0080 0022     		movs	r2, #0
 3265 0082 5A67     		str	r2, [r3, #116]
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3266              		.loc 1 2080 21
 3267 0084 7B68     		ldr	r3, [r7, #4]
 3268 0086 2022     		movs	r2, #32
 3269 0088 C3F88420 		str	r2, [r3, #132]
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3270              		.loc 1 2088 7
 3271 008c 7868     		ldr	r0, [r7, #4]
 3272 008e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3273 0092 1AE0     		b	.L160
 3274              	.L158:
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx transfer counter */
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3275              		.loc 1 2095 24
 3276 0094 7B68     		ldr	r3, [r7, #4]
 3277 0096 0022     		movs	r2, #0
 3278 0098 A3F85620 		strh	r2, [r3, #86]	@ movhi
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear TxISR function pointers */
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 3279              		.loc 1 2098 18
 3280 009c 7B68     		ldr	r3, [r7, #4]
 3281 009e 0022     		movs	r2, #0
 3282 00a0 5A67     		str	r2, [r3, #116]
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3283              		.loc 1 2101 14
 3284 00a2 7B68     		ldr	r3, [r7, #4]
 3285 00a4 5B6E     		ldr	r3, [r3, #100]
 3286              		.loc 1 2101 8
 3287 00a6 B3F1005F 		cmp	r3, #536870912
 3288 00aa 07D1     		bne	.L161
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3289              		.loc 1 2103 7
 3290 00ac 7B68     		ldr	r3, [r7, #4]
 3291 00ae 1B68     		ldr	r3, [r3]
 3292 00b0 9A69     		ldr	r2, [r3, #24]
 3293 00b2 7B68     		ldr	r3, [r7, #4]
 3294 00b4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 95


 3295 00b6 42F01002 		orr	r2, r2, #16
 3296 00ba 9A61     		str	r2, [r3, #24]
 3297              	.L161:
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3298              		.loc 1 2107 19
 3299 00bc 7B68     		ldr	r3, [r7, #4]
 3300 00be 2022     		movs	r2, #32
 3301 00c0 C3F88420 		str	r2, [r3, #132]
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3302              		.loc 1 2115 5
 3303 00c4 7868     		ldr	r0, [r7, #4]
 3304 00c6 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3305              	.L160:
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3306              		.loc 1 2119 10
 3307 00ca 0023     		movs	r3, #0
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3308              		.loc 1 2120 1
 3309 00cc 1846     		mov	r0, r3
 3310 00ce 0837     		adds	r7, r7, #8
 3311              	.LCFI108:
 3312              		.cfi_def_cfa_offset 8
 3313 00d0 BD46     		mov	sp, r7
 3314              	.LCFI109:
 3315              		.cfi_def_cfa_register 13
 3316              		@ sp needed
 3317 00d2 80BD     		pop	{r7, pc}
 3318              	.L164:
 3319              		.align	2
 3320              	.L163:
 3321 00d4 00000000 		.word	UART_DMATxOnlyAbortCallback
 3322              		.cfi_endproc
 3323              	.LFE351:
 3325              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3326              		.align	1
 3327              		.global	HAL_UART_AbortReceive_IT
 3328              		.syntax unified
 3329              		.thumb
 3330              		.thumb_func
 3331              		.fpu fpv5-d16
 3333              	HAL_UART_AbortReceive_IT:
 3334              	.LFB352:
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccp35uGD.s 			page 96


2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3335              		.loc 1 2137 1
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 8
 3338              		@ frame_needed = 1, uses_anonymous_args = 0
 3339 0000 80B5     		push	{r7, lr}
 3340              	.LCFI110:
 3341              		.cfi_def_cfa_offset 8
 3342              		.cfi_offset 7, -8
 3343              		.cfi_offset 14, -4
 3344 0002 82B0     		sub	sp, sp, #8
 3345              	.LCFI111:
 3346              		.cfi_def_cfa_offset 16
 3347 0004 00AF     		add	r7, sp, #0
 3348              	.LCFI112:
 3349              		.cfi_def_cfa_register 7
 3350 0006 7860     		str	r0, [r7, #4]
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 3351              		.loc 1 2139 3
 3352 0008 7B68     		ldr	r3, [r7, #4]
 3353 000a 1B68     		ldr	r3, [r3]
 3354 000c 1A68     		ldr	r2, [r3]
 3355 000e 7B68     		ldr	r3, [r7, #4]
 3356 0010 1B68     		ldr	r3, [r3]
 3357 0012 22F49072 		bic	r2, r2, #288
 3358 0016 1A60     		str	r2, [r3]
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3359              		.loc 1 2140 3
 3360 0018 7B68     		ldr	r3, [r7, #4]
 3361 001a 1B68     		ldr	r3, [r3]
 3362 001c 9968     		ldr	r1, [r3, #8]
 3363 001e 7B68     		ldr	r3, [r7, #4]
 3364 0020 1A68     		ldr	r2, [r3]
 3365 0022 374B     		ldr	r3, .L171
 3366 0024 0B40     		ands	r3, r3, r1
 3367 0026 9360     		str	r3, [r2, #8]
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3368              		.loc 1 2143 12
 3369 0028 7B68     		ldr	r3, [r7, #4]
 3370 002a DB6E     		ldr	r3, [r3, #108]
ARM GAS  /tmp/ccp35uGD.s 			page 97


 3371              		.loc 1 2143 6
 3372 002c 012B     		cmp	r3, #1
 3373 002e 07D1     		bne	.L166
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3374              		.loc 1 2145 5
 3375 0030 7B68     		ldr	r3, [r7, #4]
 3376 0032 1B68     		ldr	r3, [r3]
 3377 0034 1A68     		ldr	r2, [r3]
 3378 0036 7B68     		ldr	r3, [r7, #4]
 3379 0038 1B68     		ldr	r3, [r3]
 3380 003a 22F01002 		bic	r2, r2, #16
 3381 003e 1A60     		str	r2, [r3]
 3382              	.L166:
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3383              		.loc 1 2149 7
 3384 0040 7B68     		ldr	r3, [r7, #4]
 3385 0042 1B68     		ldr	r3, [r3]
 3386 0044 9B68     		ldr	r3, [r3, #8]
 3387 0046 03F04003 		and	r3, r3, #64
 3388              		.loc 1 2149 6
 3389 004a 402B     		cmp	r3, #64
 3390 004c 3DD1     		bne	.L167
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3391              		.loc 1 2151 5
 3392 004e 7B68     		ldr	r3, [r7, #4]
 3393 0050 1B68     		ldr	r3, [r3]
 3394 0052 9A68     		ldr	r2, [r3, #8]
 3395 0054 7B68     		ldr	r3, [r7, #4]
 3396 0056 1B68     		ldr	r3, [r3]
 3397 0058 22F04002 		bic	r2, r2, #64
 3398 005c 9A60     		str	r2, [r3, #8]
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3399              		.loc 1 2154 14
 3400 005e 7B68     		ldr	r3, [r7, #4]
 3401 0060 DB6F     		ldr	r3, [r3, #124]
 3402              		.loc 1 2154 8
 3403 0062 002B     		cmp	r3, #0
 3404 0064 13D0     		beq	.L168
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3405              		.loc 1 2158 12
 3406 0066 7B68     		ldr	r3, [r7, #4]
 3407 0068 DB6F     		ldr	r3, [r3, #124]
 3408              		.loc 1 2158 40
 3409 006a 264A     		ldr	r2, .L171+4
 3410 006c 1A65     		str	r2, [r3, #80]
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
ARM GAS  /tmp/ccp35uGD.s 			page 98


2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3411              		.loc 1 2161 11
 3412 006e 7B68     		ldr	r3, [r7, #4]
 3413 0070 DB6F     		ldr	r3, [r3, #124]
 3414 0072 1846     		mov	r0, r3
 3415 0074 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3416 0078 0346     		mov	r3, r0
 3417              		.loc 1 2161 10
 3418 007a 002B     		cmp	r3, #0
 3419 007c 3AD0     		beq	.L169
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3420              		.loc 1 2164 14
 3421 007e 7B68     		ldr	r3, [r7, #4]
 3422 0080 DB6F     		ldr	r3, [r3, #124]
 3423              		.loc 1 2164 22
 3424 0082 1B6D     		ldr	r3, [r3, #80]
 3425              		.loc 1 2164 47
 3426 0084 7A68     		ldr	r2, [r7, #4]
 3427 0086 D26F     		ldr	r2, [r2, #124]
 3428              		.loc 1 2164 9
 3429 0088 1046     		mov	r0, r2
 3430 008a 9847     		blx	r3
 3431              	.LVL1:
 3432 008c 32E0     		b	.L169
 3433              	.L168:
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Rx transfer counter */
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3434              		.loc 1 2170 26
 3435 008e 7B68     		ldr	r3, [r7, #4]
 3436 0090 0022     		movs	r2, #0
 3437 0092 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3438              		.loc 1 2173 25
 3439 0096 7B68     		ldr	r3, [r7, #4]
 3440 0098 0022     		movs	r2, #0
 3441 009a 9A65     		str	r2, [r3, #88]
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3442              		.loc 1 2176 7
 3443 009c 7B68     		ldr	r3, [r7, #4]
 3444 009e 1B68     		ldr	r3, [r3]
 3445 00a0 0F22     		movs	r2, #15
 3446 00a2 1A62     		str	r2, [r3, #32]
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Discard the received data */
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3447              		.loc 1 2179 7
 3448 00a4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 99


 3449 00a6 1B68     		ldr	r3, [r3]
 3450 00a8 9A69     		ldr	r2, [r3, #24]
 3451 00aa 7B68     		ldr	r3, [r7, #4]
 3452 00ac 1B68     		ldr	r3, [r3]
 3453 00ae 42F00802 		orr	r2, r2, #8
 3454 00b2 9A61     		str	r2, [r3, #24]
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3455              		.loc 1 2182 22
 3456 00b4 7B68     		ldr	r3, [r7, #4]
 3457 00b6 2022     		movs	r2, #32
 3458 00b8 C3F88820 		str	r2, [r3, #136]
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3459              		.loc 1 2183 28
 3460 00bc 7B68     		ldr	r3, [r7, #4]
 3461 00be 0022     		movs	r2, #0
 3462 00c0 DA66     		str	r2, [r3, #108]
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3463              		.loc 1 2191 7
 3464 00c2 7868     		ldr	r0, [r7, #4]
 3465 00c4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3466 00c8 14E0     		b	.L169
 3467              	.L167:
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Rx transfer counter */
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3468              		.loc 1 2198 24
 3469 00ca 7B68     		ldr	r3, [r7, #4]
 3470 00cc 0022     		movs	r2, #0
 3471 00ce A3F85E20 		strh	r2, [r3, #94]	@ movhi
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RxISR function pointer */
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3472              		.loc 1 2201 23
 3473 00d2 7B68     		ldr	r3, [r7, #4]
 3474 00d4 0022     		movs	r2, #0
 3475 00d6 9A65     		str	r2, [r3, #88]
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3476              		.loc 1 2204 5
 3477 00d8 7B68     		ldr	r3, [r7, #4]
 3478 00da 1B68     		ldr	r3, [r3]
 3479 00dc 0F22     		movs	r2, #15
 3480 00de 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccp35uGD.s 			page 100


2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3481              		.loc 1 2207 20
 3482 00e0 7B68     		ldr	r3, [r7, #4]
 3483 00e2 2022     		movs	r2, #32
 3484 00e4 C3F88820 		str	r2, [r3, #136]
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3485              		.loc 1 2208 26
 3486 00e8 7B68     		ldr	r3, [r7, #4]
 3487 00ea 0022     		movs	r2, #0
 3488 00ec DA66     		str	r2, [r3, #108]
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3489              		.loc 1 2216 5
 3490 00ee 7868     		ldr	r0, [r7, #4]
 3491 00f0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3492              	.L169:
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3493              		.loc 1 2220 10
 3494 00f4 0023     		movs	r3, #0
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3495              		.loc 1 2221 1
 3496 00f6 1846     		mov	r0, r3
 3497 00f8 0837     		adds	r7, r7, #8
 3498              	.LCFI113:
 3499              		.cfi_def_cfa_offset 8
 3500 00fa BD46     		mov	sp, r7
 3501              	.LCFI114:
 3502              		.cfi_def_cfa_register 13
 3503              		@ sp needed
 3504 00fc 80BD     		pop	{r7, pc}
 3505              	.L172:
 3506 00fe 00BF     		.align	2
 3507              	.L171:
 3508 0100 FEFFFFEF 		.word	-268435458
 3509 0104 00000000 		.word	UART_DMARxOnlyAbortCallback
 3510              		.cfi_endproc
 3511              	.LFE352:
 3513              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3514              		.align	1
 3515              		.global	HAL_UART_IRQHandler
 3516              		.syntax unified
 3517              		.thumb
 3518              		.thumb_func
 3519              		.fpu fpv5-d16
 3521              	HAL_UART_IRQHandler:
 3522              	.LFB353:
ARM GAS  /tmp/ccp35uGD.s 			page 101


2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3523              		.loc 1 2229 1
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 32
 3526              		@ frame_needed = 1, uses_anonymous_args = 0
 3527 0000 80B5     		push	{r7, lr}
 3528              	.LCFI115:
 3529              		.cfi_def_cfa_offset 8
 3530              		.cfi_offset 7, -8
 3531              		.cfi_offset 14, -4
 3532 0002 88B0     		sub	sp, sp, #32
 3533              	.LCFI116:
 3534              		.cfi_def_cfa_offset 40
 3535 0004 00AF     		add	r7, sp, #0
 3536              	.LCFI117:
 3537              		.cfi_def_cfa_register 7
 3538 0006 7860     		str	r0, [r7, #4]
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3539              		.loc 1 2230 25
 3540 0008 7B68     		ldr	r3, [r7, #4]
 3541 000a 1B68     		ldr	r3, [r3]
 3542              		.loc 1 2230 12
 3543 000c DB69     		ldr	r3, [r3, #28]
 3544 000e FB61     		str	r3, [r7, #28]
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3545              		.loc 1 2231 25
 3546 0010 7B68     		ldr	r3, [r7, #4]
 3547 0012 1B68     		ldr	r3, [r3]
 3548              		.loc 1 2231 12
 3549 0014 1B68     		ldr	r3, [r3]
 3550 0016 BB61     		str	r3, [r7, #24]
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3551              		.loc 1 2232 25
 3552 0018 7B68     		ldr	r3, [r7, #4]
 3553 001a 1B68     		ldr	r3, [r3]
 3554              		.loc 1 2232 12
 3555 001c 9B68     		ldr	r3, [r3, #8]
 3556 001e 7B61     		str	r3, [r7, #20]
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorcode;
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If no error occurs */
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 3557              		.loc 1 2238 14
 3558 0020 FA69     		ldr	r2, [r7, #28]
 3559 0022 40F60F03 		movw	r3, #2063
 3560 0026 1340     		ands	r3, r3, r2
 3561 0028 3B61     		str	r3, [r7, #16]
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
ARM GAS  /tmp/ccp35uGD.s 			page 102


 3562              		.loc 1 2239 6
 3563 002a 3B69     		ldr	r3, [r7, #16]
 3564 002c 002B     		cmp	r3, #0
 3565 002e 18D1     		bne	.L174
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 3566              		.loc 1 2242 20
 3567 0030 FB69     		ldr	r3, [r7, #28]
 3568 0032 03F02003 		and	r3, r3, #32
 3569              		.loc 1 2242 8
 3570 0036 002B     		cmp	r3, #0
 3571 0038 13D0     		beq	.L174
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3572              		.loc 1 2243 22
 3573 003a BB69     		ldr	r3, [r7, #24]
 3574 003c 03F02003 		and	r3, r3, #32
 3575              		.loc 1 2243 9
 3576 0040 002B     		cmp	r3, #0
 3577 0042 04D1     		bne	.L175
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3578              		.loc 1 2244 25
 3579 0044 7B69     		ldr	r3, [r7, #20]
 3580 0046 03F08053 		and	r3, r3, #268435456
 3581              		.loc 1 2244 13
 3582 004a 002B     		cmp	r3, #0
 3583 004c 09D0     		beq	.L174
 3584              	.L175:
2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3585              		.loc 1 2246 16
 3586 004e 7B68     		ldr	r3, [r7, #4]
 3587 0050 1B6F     		ldr	r3, [r3, #112]
 3588              		.loc 1 2246 10
 3589 0052 002B     		cmp	r3, #0
 3590 0054 00F08282 		beq	.L208
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR(huart);
 3591              		.loc 1 2248 14
 3592 0058 7B68     		ldr	r3, [r7, #4]
 3593 005a 1B6F     		ldr	r3, [r3, #112]
 3594              		.loc 1 2248 9
 3595 005c 7868     		ldr	r0, [r7, #4]
 3596 005e 9847     		blx	r3
 3597              	.LVL2:
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 3598              		.loc 1 2250 7
 3599 0060 7CE2     		b	.L208
 3600              	.L174:
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If some errors occur */
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((errorflags != 0U)
 3601              		.loc 1 2255 6
 3602 0062 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccp35uGD.s 			page 103


 3603 0064 002B     		cmp	r3, #0
 3604 0066 00F0EF80 		beq	.L178
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 3605              		.loc 1 2256 21
 3606 006a 7A69     		ldr	r2, [r7, #20]
 3607 006c 734B     		ldr	r3, .L214
 3608 006e 1340     		ands	r3, r3, r2
 3609              		.loc 1 2256 7
 3610 0070 002B     		cmp	r3, #0
 3611 0072 05D1     		bne	.L179
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 3612              		.loc 1 2257 24
 3613 0074 BA69     		ldr	r2, [r7, #24]
 3614 0076 724B     		ldr	r3, .L214+4
 3615 0078 1340     		ands	r3, r3, r2
 3616              		.loc 1 2257 12
 3617 007a 002B     		cmp	r3, #0
 3618 007c 00F0E480 		beq	.L178
 3619              	.L179:
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3620              		.loc 1 2260 20
 3621 0080 FB69     		ldr	r3, [r7, #28]
 3622 0082 03F00103 		and	r3, r3, #1
 3623              		.loc 1 2260 8
 3624 0086 002B     		cmp	r3, #0
 3625 0088 10D0     		beq	.L180
 3626              		.loc 1 2260 55 discriminator 1
 3627 008a BB69     		ldr	r3, [r7, #24]
 3628 008c 03F48073 		and	r3, r3, #256
 3629              		.loc 1 2260 43 discriminator 1
 3630 0090 002B     		cmp	r3, #0
 3631 0092 0BD0     		beq	.L180
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3632              		.loc 1 2262 7
 3633 0094 7B68     		ldr	r3, [r7, #4]
 3634 0096 1B68     		ldr	r3, [r3]
 3635 0098 0122     		movs	r2, #1
 3636 009a 1A62     		str	r2, [r3, #32]
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3637              		.loc 1 2264 24
 3638 009c 7B68     		ldr	r3, [r7, #4]
 3639 009e D3F88C30 		ldr	r3, [r3, #140]
 3640 00a2 43F00102 		orr	r2, r3, #1
 3641 00a6 7B68     		ldr	r3, [r7, #4]
 3642 00a8 C3F88C20 		str	r2, [r3, #140]
 3643              	.L180:
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3644              		.loc 1 2268 20
 3645 00ac FB69     		ldr	r3, [r7, #28]
 3646 00ae 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccp35uGD.s 			page 104


 3647              		.loc 1 2268 8
 3648 00b2 002B     		cmp	r3, #0
 3649 00b4 10D0     		beq	.L181
 3650              		.loc 1 2268 55 discriminator 1
 3651 00b6 7B69     		ldr	r3, [r7, #20]
 3652 00b8 03F00103 		and	r3, r3, #1
 3653              		.loc 1 2268 43 discriminator 1
 3654 00bc 002B     		cmp	r3, #0
 3655 00be 0BD0     		beq	.L181
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3656              		.loc 1 2270 7
 3657 00c0 7B68     		ldr	r3, [r7, #4]
 3658 00c2 1B68     		ldr	r3, [r3]
 3659 00c4 0222     		movs	r2, #2
 3660 00c6 1A62     		str	r2, [r3, #32]
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3661              		.loc 1 2272 24
 3662 00c8 7B68     		ldr	r3, [r7, #4]
 3663 00ca D3F88C30 		ldr	r3, [r3, #140]
 3664 00ce 43F00402 		orr	r2, r3, #4
 3665 00d2 7B68     		ldr	r3, [r7, #4]
 3666 00d4 C3F88C20 		str	r2, [r3, #140]
 3667              	.L181:
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3668              		.loc 1 2276 20
 3669 00d8 FB69     		ldr	r3, [r7, #28]
 3670 00da 03F00403 		and	r3, r3, #4
 3671              		.loc 1 2276 8
 3672 00de 002B     		cmp	r3, #0
 3673 00e0 10D0     		beq	.L182
 3674              		.loc 1 2276 55 discriminator 1
 3675 00e2 7B69     		ldr	r3, [r7, #20]
 3676 00e4 03F00103 		and	r3, r3, #1
 3677              		.loc 1 2276 43 discriminator 1
 3678 00e8 002B     		cmp	r3, #0
 3679 00ea 0BD0     		beq	.L182
2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3680              		.loc 1 2278 7
 3681 00ec 7B68     		ldr	r3, [r7, #4]
 3682 00ee 1B68     		ldr	r3, [r3]
 3683 00f0 0422     		movs	r2, #4
 3684 00f2 1A62     		str	r2, [r3, #32]
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3685              		.loc 1 2280 24
 3686 00f4 7B68     		ldr	r3, [r7, #4]
 3687 00f6 D3F88C30 		ldr	r3, [r3, #140]
 3688 00fa 43F00202 		orr	r2, r3, #2
 3689 00fe 7B68     		ldr	r3, [r7, #4]
 3690 0100 C3F88C20 		str	r2, [r3, #140]
 3691              	.L182:
ARM GAS  /tmp/ccp35uGD.s 			page 105


2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3692              		.loc 1 2284 20
 3693 0104 FB69     		ldr	r3, [r7, #28]
 3694 0106 03F00803 		and	r3, r3, #8
 3695              		.loc 1 2284 8
 3696 010a 002B     		cmp	r3, #0
 3697 010c 15D0     		beq	.L183
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 3698              		.loc 1 2285 22
 3699 010e BB69     		ldr	r3, [r7, #24]
 3700 0110 03F02003 		and	r3, r3, #32
 3701              		.loc 1 2285 9
 3702 0114 002B     		cmp	r3, #0
 3703 0116 04D1     		bne	.L184
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 3704              		.loc 1 2286 22 discriminator 1
 3705 0118 7A69     		ldr	r2, [r7, #20]
 3706 011a 484B     		ldr	r3, .L214
 3707 011c 1340     		ands	r3, r3, r2
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 3708              		.loc 1 2285 57 discriminator 1
 3709 011e 002B     		cmp	r3, #0
 3710 0120 0BD0     		beq	.L183
 3711              	.L184:
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3712              		.loc 1 2288 7
 3713 0122 7B68     		ldr	r3, [r7, #4]
 3714 0124 1B68     		ldr	r3, [r3]
 3715 0126 0822     		movs	r2, #8
 3716 0128 1A62     		str	r2, [r3, #32]
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3717              		.loc 1 2290 24
 3718 012a 7B68     		ldr	r3, [r7, #4]
 3719 012c D3F88C30 		ldr	r3, [r3, #140]
 3720 0130 43F00802 		orr	r2, r3, #8
 3721 0134 7B68     		ldr	r3, [r7, #4]
 3722 0136 C3F88C20 		str	r2, [r3, #140]
 3723              	.L183:
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 3724              		.loc 1 2294 20
 3725 013a FB69     		ldr	r3, [r7, #28]
 3726 013c 03F40063 		and	r3, r3, #2048
 3727              		.loc 1 2294 8
 3728 0140 002B     		cmp	r3, #0
 3729 0142 11D0     		beq	.L185
 3730              		.loc 1 2294 57 discriminator 1
 3731 0144 BB69     		ldr	r3, [r7, #24]
 3732 0146 03F08063 		and	r3, r3, #67108864
 3733              		.loc 1 2294 45 discriminator 1
ARM GAS  /tmp/ccp35uGD.s 			page 106


 3734 014a 002B     		cmp	r3, #0
 3735 014c 0CD0     		beq	.L185
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 3736              		.loc 1 2296 7
 3737 014e 7B68     		ldr	r3, [r7, #4]
 3738 0150 1B68     		ldr	r3, [r3]
 3739 0152 4FF40062 		mov	r2, #2048
 3740 0156 1A62     		str	r2, [r3, #32]
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 3741              		.loc 1 2298 24
 3742 0158 7B68     		ldr	r3, [r7, #4]
 3743 015a D3F88C30 		ldr	r3, [r3, #140]
 3744 015e 43F02002 		orr	r2, r3, #32
 3745 0162 7B68     		ldr	r3, [r7, #4]
 3746 0164 C3F88C20 		str	r2, [r3, #140]
 3747              	.L185:
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3748              		.loc 1 2302 14
 3749 0168 7B68     		ldr	r3, [r7, #4]
 3750 016a D3F88C30 		ldr	r3, [r3, #140]
 3751              		.loc 1 2302 8
 3752 016e 002B     		cmp	r3, #0
 3753 0170 00F0F681 		beq	.L209
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 3754              		.loc 1 2305 22
 3755 0174 FB69     		ldr	r3, [r7, #28]
 3756 0176 03F02003 		and	r3, r3, #32
 3757              		.loc 1 2305 10
 3758 017a 002B     		cmp	r3, #0
 3759 017c 11D0     		beq	.L187
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3760              		.loc 1 2306 24
 3761 017e BB69     		ldr	r3, [r7, #24]
 3762 0180 03F02003 		and	r3, r3, #32
 3763              		.loc 1 2306 11
 3764 0184 002B     		cmp	r3, #0
 3765 0186 04D1     		bne	.L188
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3766              		.loc 1 2307 27
 3767 0188 7B69     		ldr	r3, [r7, #20]
 3768 018a 03F08053 		and	r3, r3, #268435456
 3769              		.loc 1 2307 15
 3770 018e 002B     		cmp	r3, #0
 3771 0190 07D0     		beq	.L187
 3772              	.L188:
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3773              		.loc 1 2309 18
 3774 0192 7B68     		ldr	r3, [r7, #4]
 3775 0194 1B6F     		ldr	r3, [r3, #112]
ARM GAS  /tmp/ccp35uGD.s 			page 107


 3776              		.loc 1 2309 12
 3777 0196 002B     		cmp	r3, #0
 3778 0198 03D0     		beq	.L187
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxISR(huart);
 3779              		.loc 1 2311 16
 3780 019a 7B68     		ldr	r3, [r7, #4]
 3781 019c 1B6F     		ldr	r3, [r3, #112]
 3782              		.loc 1 2311 11
 3783 019e 7868     		ldr	r0, [r7, #4]
 3784 01a0 9847     		blx	r3
 3785              	.LVL3:
 3786              	.L187:
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Receiver Timeout error in Reception
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Overrun error in Reception
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - any error occurs in DMA mode reception
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       */
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3787              		.loc 1 2320 17
 3788 01a2 7B68     		ldr	r3, [r7, #4]
 3789 01a4 D3F88C30 		ldr	r3, [r3, #140]
 3790 01a8 FB60     		str	r3, [r7, #12]
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3791              		.loc 1 2321 12
 3792 01aa 7B68     		ldr	r3, [r7, #4]
 3793 01ac 1B68     		ldr	r3, [r3]
 3794 01ae 9B68     		ldr	r3, [r3, #8]
 3795 01b0 03F04003 		and	r3, r3, #64
 3796              		.loc 1 2321 10
 3797 01b4 402B     		cmp	r3, #64
 3798 01b6 04D0     		beq	.L189
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 3799              		.loc 1 2322 23 discriminator 1
 3800 01b8 FB68     		ldr	r3, [r7, #12]
 3801 01ba 03F02803 		and	r3, r3, #40
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3802              		.loc 1 2321 66 discriminator 1
 3803 01be 002B     		cmp	r3, #0
 3804 01c0 31D0     		beq	.L190
 3805              	.L189:
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3806              		.loc 1 2327 9
 3807 01c2 7868     		ldr	r0, [r7, #4]
 3808 01c4 FFF7FEFF 		bl	UART_EndRxTransfer
2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3809              		.loc 1 2330 13
 3810 01c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 108


 3811 01ca 1B68     		ldr	r3, [r3]
 3812 01cc 9B68     		ldr	r3, [r3, #8]
 3813 01ce 03F04003 		and	r3, r3, #64
 3814              		.loc 1 2330 12
 3815 01d2 402B     		cmp	r3, #64
 3816 01d4 23D1     		bne	.L191
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3817              		.loc 1 2332 11
 3818 01d6 7B68     		ldr	r3, [r7, #4]
 3819 01d8 1B68     		ldr	r3, [r3]
 3820 01da 9A68     		ldr	r2, [r3, #8]
 3821 01dc 7B68     		ldr	r3, [r7, #4]
 3822 01de 1B68     		ldr	r3, [r3]
 3823 01e0 22F04002 		bic	r2, r2, #64
 3824 01e4 9A60     		str	r2, [r3, #8]
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3825              		.loc 1 2335 20
 3826 01e6 7B68     		ldr	r3, [r7, #4]
 3827 01e8 DB6F     		ldr	r3, [r3, #124]
 3828              		.loc 1 2335 14
 3829 01ea 002B     		cmp	r3, #0
 3830 01ec 13D0     		beq	.L192
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3831              		.loc 1 2339 18
 3832 01ee 7B68     		ldr	r3, [r7, #4]
 3833 01f0 DB6F     		ldr	r3, [r3, #124]
 3834              		.loc 1 2339 46
 3835 01f2 144A     		ldr	r2, .L214+8
 3836 01f4 1A65     		str	r2, [r3, #80]
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Abort DMA RX */
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3837              		.loc 1 2342 17
 3838 01f6 7B68     		ldr	r3, [r7, #4]
 3839 01f8 DB6F     		ldr	r3, [r3, #124]
 3840 01fa 1846     		mov	r0, r3
 3841 01fc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3842 0200 0346     		mov	r3, r0
 3843              		.loc 1 2342 16
 3844 0202 002B     		cmp	r3, #0
 3845 0204 17D0     		beq	.L210
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3846              		.loc 1 2345 20
 3847 0206 7B68     		ldr	r3, [r7, #4]
 3848 0208 DB6F     		ldr	r3, [r3, #124]
 3849              		.loc 1 2345 28
 3850 020a 1B6D     		ldr	r3, [r3, #80]
 3851              		.loc 1 2345 53
 3852 020c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 109


 3853 020e D26F     		ldr	r2, [r2, #124]
 3854              		.loc 1 2345 15
 3855 0210 1046     		mov	r0, r2
 3856 0212 9847     		blx	r3
 3857              	.LVL4:
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3858              		.loc 1 2330 12
 3859 0214 0FE0     		b	.L210
 3860              	.L192:
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Call user error callback */
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call registered error callback*/
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->ErrorCallback(huart);
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call legacy weak error callback*/
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3861              		.loc 1 2356 13
 3862 0216 7868     		ldr	r0, [r7, #4]
 3863 0218 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3864              		.loc 1 2330 12
 3865 021c 0BE0     		b	.L210
 3866              	.L191:
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Call user error callback */
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3867              		.loc 1 2369 11
 3868 021e 7868     		ldr	r0, [r7, #4]
 3869 0220 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3870              		.loc 1 2330 12
 3871 0224 07E0     		b	.L210
 3872              	.L190:
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error is notified to user through user error callback */
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered error callback*/
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback(huart);
ARM GAS  /tmp/ccp35uGD.s 			page 110


2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak error callback*/
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3873              		.loc 1 2382 9
 3874 0226 7868     		ldr	r0, [r7, #4]
 3875 0228 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3876              		.loc 1 2384 26
 3877 022c 7B68     		ldr	r3, [r7, #4]
 3878 022e 0022     		movs	r2, #0
 3879 0230 C3F88C20 		str	r2, [r3, #140]
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 3880              		.loc 1 2387 5
 3881 0234 94E1     		b	.L209
 3882              	.L210:
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3883              		.loc 1 2330 12
 3884 0236 00BF     		nop
 3885              		.loc 1 2387 5
 3886 0238 92E1     		b	.L209
 3887              	.L215:
 3888 023a 00BF     		.align	2
 3889              	.L214:
 3890 023c 01000010 		.word	268435457
 3891 0240 20010004 		.word	67109152
 3892 0244 00000000 		.word	UART_DMAAbortOnError
 3893              	.L178:
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   } /* End if some error occurs */
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3894              		.loc 1 2393 13
 3895 0248 7B68     		ldr	r3, [r7, #4]
 3896 024a DB6E     		ldr	r3, [r3, #108]
 3897              		.loc 1 2393 6
 3898 024c 012B     		cmp	r3, #1
 3899 024e 40F00F81 		bne	.L194
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 3900              		.loc 1 2394 21
 3901 0252 FB69     		ldr	r3, [r7, #28]
 3902 0254 03F01003 		and	r3, r3, #16
 3903              		.loc 1 2394 7
 3904 0258 002B     		cmp	r3, #0
 3905 025a 00F00981 		beq	.L194
2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 3906              		.loc 1 2395 19
 3907 025e BB69     		ldr	r3, [r7, #24]
 3908 0260 03F01003 		and	r3, r3, #16
 3909              		.loc 1 2395 7
 3910 0264 002B     		cmp	r3, #0
 3911 0266 00F00381 		beq	.L194
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccp35uGD.s 			page 111


2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 3912              		.loc 1 2397 5
 3913 026a 7B68     		ldr	r3, [r7, #4]
 3914 026c 1B68     		ldr	r3, [r3]
 3915 026e 1022     		movs	r2, #16
 3916 0270 1A62     		str	r2, [r3, #32]
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3917              		.loc 1 2400 9
 3918 0272 7B68     		ldr	r3, [r7, #4]
 3919 0274 1B68     		ldr	r3, [r3]
 3920 0276 9B68     		ldr	r3, [r3, #8]
 3921 0278 03F04003 		and	r3, r3, #64
 3922              		.loc 1 2400 8
 3923 027c 402B     		cmp	r3, #64
 3924 027e 40F0BB80 		bne	.L195
 3925              	.LBB2:
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* DMA mode enabled */
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          (DMA cplt callback will be called).
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 3926              		.loc 1 2406 50
 3927 0282 7B68     		ldr	r3, [r7, #4]
 3928 0284 DB6F     		ldr	r3, [r3, #124]
 3929 0286 1B68     		ldr	r3, [r3]
 3930              		.loc 1 2406 39
 3931 0288 964A     		ldr	r2, .L216
 3932 028a 9342     		cmp	r3, r2
 3933 028c 59D0     		beq	.L196
 3934              		.loc 1 2406 50 discriminator 2
 3935 028e 7B68     		ldr	r3, [r7, #4]
 3936 0290 DB6F     		ldr	r3, [r3, #124]
 3937 0292 1B68     		ldr	r3, [r3]
 3938 0294 944A     		ldr	r2, .L216+4
 3939 0296 9342     		cmp	r3, r2
 3940 0298 53D0     		beq	.L196
 3941              		.loc 1 2406 50 is_stmt 0 discriminator 4
 3942 029a 7B68     		ldr	r3, [r7, #4]
 3943 029c DB6F     		ldr	r3, [r3, #124]
 3944 029e 1B68     		ldr	r3, [r3]
 3945 02a0 924A     		ldr	r2, .L216+8
 3946 02a2 9342     		cmp	r3, r2
 3947 02a4 4DD0     		beq	.L196
 3948              		.loc 1 2406 50 discriminator 6
 3949 02a6 7B68     		ldr	r3, [r7, #4]
 3950 02a8 DB6F     		ldr	r3, [r3, #124]
 3951 02aa 1B68     		ldr	r3, [r3]
 3952 02ac 904A     		ldr	r2, .L216+12
 3953 02ae 9342     		cmp	r3, r2
 3954 02b0 47D0     		beq	.L196
 3955              		.loc 1 2406 50 discriminator 8
 3956 02b2 7B68     		ldr	r3, [r7, #4]
 3957 02b4 DB6F     		ldr	r3, [r3, #124]
 3958 02b6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 112


 3959 02b8 8E4A     		ldr	r2, .L216+16
 3960 02ba 9342     		cmp	r3, r2
 3961 02bc 41D0     		beq	.L196
 3962              		.loc 1 2406 50 discriminator 10
 3963 02be 7B68     		ldr	r3, [r7, #4]
 3964 02c0 DB6F     		ldr	r3, [r3, #124]
 3965 02c2 1B68     		ldr	r3, [r3]
 3966 02c4 8C4A     		ldr	r2, .L216+20
 3967 02c6 9342     		cmp	r3, r2
 3968 02c8 3BD0     		beq	.L196
 3969              		.loc 1 2406 50 discriminator 12
 3970 02ca 7B68     		ldr	r3, [r7, #4]
 3971 02cc DB6F     		ldr	r3, [r3, #124]
 3972 02ce 1B68     		ldr	r3, [r3]
 3973 02d0 8A4A     		ldr	r2, .L216+24
 3974 02d2 9342     		cmp	r3, r2
 3975 02d4 35D0     		beq	.L196
 3976              		.loc 1 2406 50 discriminator 14
 3977 02d6 7B68     		ldr	r3, [r7, #4]
 3978 02d8 DB6F     		ldr	r3, [r3, #124]
 3979 02da 1B68     		ldr	r3, [r3]
 3980 02dc 884A     		ldr	r2, .L216+28
 3981 02de 9342     		cmp	r3, r2
 3982 02e0 2FD0     		beq	.L196
 3983              		.loc 1 2406 50 discriminator 16
 3984 02e2 7B68     		ldr	r3, [r7, #4]
 3985 02e4 DB6F     		ldr	r3, [r3, #124]
 3986 02e6 1B68     		ldr	r3, [r3]
 3987 02e8 864A     		ldr	r2, .L216+32
 3988 02ea 9342     		cmp	r3, r2
 3989 02ec 29D0     		beq	.L196
 3990              		.loc 1 2406 50 discriminator 18
 3991 02ee 7B68     		ldr	r3, [r7, #4]
 3992 02f0 DB6F     		ldr	r3, [r3, #124]
 3993 02f2 1B68     		ldr	r3, [r3]
 3994 02f4 844A     		ldr	r2, .L216+36
 3995 02f6 9342     		cmp	r3, r2
 3996 02f8 23D0     		beq	.L196
 3997              		.loc 1 2406 50 discriminator 20
 3998 02fa 7B68     		ldr	r3, [r7, #4]
 3999 02fc DB6F     		ldr	r3, [r3, #124]
 4000 02fe 1B68     		ldr	r3, [r3]
 4001 0300 824A     		ldr	r2, .L216+40
 4002 0302 9342     		cmp	r3, r2
 4003 0304 1DD0     		beq	.L196
 4004              		.loc 1 2406 50 discriminator 22
 4005 0306 7B68     		ldr	r3, [r7, #4]
 4006 0308 DB6F     		ldr	r3, [r3, #124]
 4007 030a 1B68     		ldr	r3, [r3]
 4008 030c 804A     		ldr	r2, .L216+44
 4009 030e 9342     		cmp	r3, r2
 4010 0310 17D0     		beq	.L196
 4011              		.loc 1 2406 50 discriminator 24
 4012 0312 7B68     		ldr	r3, [r7, #4]
 4013 0314 DB6F     		ldr	r3, [r3, #124]
 4014 0316 1B68     		ldr	r3, [r3]
 4015 0318 7E4A     		ldr	r2, .L216+48
ARM GAS  /tmp/ccp35uGD.s 			page 113


 4016 031a 9342     		cmp	r3, r2
 4017 031c 11D0     		beq	.L196
 4018              		.loc 1 2406 50 discriminator 26
 4019 031e 7B68     		ldr	r3, [r7, #4]
 4020 0320 DB6F     		ldr	r3, [r3, #124]
 4021 0322 1B68     		ldr	r3, [r3]
 4022 0324 7C4A     		ldr	r2, .L216+52
 4023 0326 9342     		cmp	r3, r2
 4024 0328 0BD0     		beq	.L196
 4025              		.loc 1 2406 50 discriminator 28
 4026 032a 7B68     		ldr	r3, [r7, #4]
 4027 032c DB6F     		ldr	r3, [r3, #124]
 4028 032e 1B68     		ldr	r3, [r3]
 4029 0330 7A4A     		ldr	r2, .L216+56
 4030 0332 9342     		cmp	r3, r2
 4031 0334 05D0     		beq	.L196
 4032              		.loc 1 2406 50 discriminator 30
 4033 0336 7B68     		ldr	r3, [r7, #4]
 4034 0338 DB6F     		ldr	r3, [r3, #124]
 4035 033a 1B68     		ldr	r3, [r3]
 4036 033c 784A     		ldr	r2, .L216+60
 4037 033e 9342     		cmp	r3, r2
 4038 0340 05D1     		bne	.L197
 4039              	.L196:
 4040              		.loc 1 2406 50 discriminator 31
 4041 0342 7B68     		ldr	r3, [r7, #4]
 4042 0344 DB6F     		ldr	r3, [r3, #124]
 4043 0346 1B68     		ldr	r3, [r3]
 4044 0348 5B68     		ldr	r3, [r3, #4]
 4045              		.loc 1 2406 39 is_stmt 1 discriminator 31
 4046 034a 9BB2     		uxth	r3, r3
 4047 034c 04E0     		b	.L198
 4048              	.L197:
 4049              		.loc 1 2406 50 discriminator 32
 4050 034e 7B68     		ldr	r3, [r7, #4]
 4051 0350 DB6F     		ldr	r3, [r3, #124]
 4052 0352 1B68     		ldr	r3, [r3]
 4053 0354 5B68     		ldr	r3, [r3, #4]
 4054              		.loc 1 2406 39 discriminator 32
 4055 0356 9BB2     		uxth	r3, r3
 4056              	.L198:
 4057              		.loc 1 2406 16 discriminator 34
 4058 0358 3B81     		strh	r3, [r7, #8]	@ movhi
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 4059              		.loc 1 2407 10 discriminator 34
 4060 035a 3B89     		ldrh	r3, [r7, #8]
 4061 035c 002B     		cmp	r3, #0
 4062 035e 00F00181 		beq	.L211
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 4063              		.loc 1 2408 43
 4064 0362 7B68     		ldr	r3, [r7, #4]
 4065 0364 B3F85C30 		ldrh	r3, [r3, #92]
 4066              		.loc 1 2408 11
 4067 0368 3A89     		ldrh	r2, [r7, #8]
 4068 036a 9A42     		cmp	r2, r3
 4069 036c 80F0FA80 		bcs	.L211
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  /tmp/ccp35uGD.s 			page 114


2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Reception is not complete */
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 4070              		.loc 1 2411 28
 4071 0370 7B68     		ldr	r3, [r7, #4]
 4072 0372 3A89     		ldrh	r2, [r7, #8]	@ movhi
 4073 0374 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 4074              		.loc 1 2414 18
 4075 0378 7B68     		ldr	r3, [r7, #4]
 4076 037a DB6F     		ldr	r3, [r3, #124]
 4077              		.loc 1 2414 32
 4078 037c DB69     		ldr	r3, [r3, #28]
 4079              		.loc 1 2414 12
 4080 037e B3F5807F 		cmp	r3, #256
 4081 0382 2BD0     		beq	.L200
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4082              		.loc 1 2417 11
 4083 0384 7B68     		ldr	r3, [r7, #4]
 4084 0386 1B68     		ldr	r3, [r3]
 4085 0388 1A68     		ldr	r2, [r3]
 4086 038a 7B68     		ldr	r3, [r7, #4]
 4087 038c 1B68     		ldr	r3, [r3]
 4088 038e 22F48072 		bic	r2, r2, #256
 4089 0392 1A60     		str	r2, [r3]
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4090              		.loc 1 2418 11
 4091 0394 7B68     		ldr	r3, [r7, #4]
 4092 0396 1B68     		ldr	r3, [r3]
 4093 0398 9A68     		ldr	r2, [r3, #8]
 4094 039a 7B68     		ldr	r3, [r7, #4]
 4095 039c 1B68     		ldr	r3, [r3]
 4096 039e 22F00102 		bic	r2, r2, #1
 4097 03a2 9A60     		str	r2, [r3, #8]
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the UART CR3 register */
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4098              		.loc 1 2422 11
 4099 03a4 7B68     		ldr	r3, [r7, #4]
 4100 03a6 1B68     		ldr	r3, [r3]
 4101 03a8 9A68     		ldr	r2, [r3, #8]
 4102 03aa 7B68     		ldr	r3, [r7, #4]
 4103 03ac 1B68     		ldr	r3, [r3]
 4104 03ae 22F04002 		bic	r2, r2, #64
 4105 03b2 9A60     		str	r2, [r3, #8]
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4106              		.loc 1 2425 26
 4107 03b4 7B68     		ldr	r3, [r7, #4]
 4108 03b6 2022     		movs	r2, #32
 4109 03b8 C3F88820 		str	r2, [r3, #136]
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  /tmp/ccp35uGD.s 			page 115


 4110              		.loc 1 2426 32
 4111 03bc 7B68     		ldr	r3, [r7, #4]
 4112 03be 0022     		movs	r2, #0
 4113 03c0 DA66     		str	r2, [r3, #108]
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4114              		.loc 1 2428 11
 4115 03c2 7B68     		ldr	r3, [r7, #4]
 4116 03c4 1B68     		ldr	r3, [r3]
 4117 03c6 1A68     		ldr	r2, [r3]
 4118 03c8 7B68     		ldr	r3, [r7, #4]
 4119 03ca 1B68     		ldr	r3, [r3]
 4120 03cc 22F01002 		bic	r2, r2, #16
 4121 03d0 1A60     		str	r2, [r3]
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 4122              		.loc 1 2431 17
 4123 03d2 7B68     		ldr	r3, [r7, #4]
 4124 03d4 DB6F     		ldr	r3, [r3, #124]
 4125 03d6 1846     		mov	r0, r3
 4126 03d8 FFF7FEFF 		bl	HAL_DMA_Abort
 4127              	.L200:
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 4128              		.loc 1 2438 49
 4129 03dc 7B68     		ldr	r3, [r7, #4]
 4130 03de B3F85C20 		ldrh	r2, [r3, #92]
 4131              		.loc 1 2438 69
 4132 03e2 7B68     		ldr	r3, [r7, #4]
 4133 03e4 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 4134 03e8 9BB2     		uxth	r3, r3
 4135              		.loc 1 2438 9
 4136 03ea D31A     		subs	r3, r2, r3
 4137 03ec 9BB2     		uxth	r3, r3
 4138 03ee 1946     		mov	r1, r3
 4139 03f0 7868     		ldr	r0, [r7, #4]
 4140 03f2 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 4141              		.loc 1 2441 7
 4142 03f6 B5E0     		b	.L211
 4143              	.L195:
 4144              	.LBE2:
 4145              	.LBB3:
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* DMA mode not enabled */
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
ARM GAS  /tmp/ccp35uGD.s 			page 116


2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 4146              		.loc 1 2448 34
 4147 03f8 7B68     		ldr	r3, [r7, #4]
 4148 03fa B3F85C20 		ldrh	r2, [r3, #92]
 4149              		.loc 1 2448 54
 4150 03fe 7B68     		ldr	r3, [r7, #4]
 4151 0400 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 4152 0404 9BB2     		uxth	r3, r3
 4153              		.loc 1 2448 16
 4154 0406 D31A     		subs	r3, r2, r3
 4155 0408 7B81     		strh	r3, [r7, #10]	@ movhi
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 4156              		.loc 1 2449 17
 4157 040a 7B68     		ldr	r3, [r7, #4]
 4158 040c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 4159 0410 9BB2     		uxth	r3, r3
 4160              		.loc 1 2449 10
 4161 0412 002B     		cmp	r3, #0
 4162 0414 00F0A880 		beq	.L212
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (nb_rx_data > 0U))
 4163              		.loc 1 2450 11
 4164 0418 7B89     		ldrh	r3, [r7, #10]
 4165 041a 002B     		cmp	r3, #0
 4166 041c 00F0A480 		beq	.L212
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 4167              		.loc 1 2453 9
 4168 0420 7B68     		ldr	r3, [r7, #4]
 4169 0422 1B68     		ldr	r3, [r3]
 4170 0424 1A68     		ldr	r2, [r3]
 4171 0426 7B68     		ldr	r3, [r7, #4]
 4172 0428 1B68     		ldr	r3, [r3]
 4173 042a 22F49072 		bic	r2, r2, #288
 4174 042e 1A60     		str	r2, [r3]
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 4175              		.loc 1 2456 9
 4176 0430 7B68     		ldr	r3, [r7, #4]
 4177 0432 1B68     		ldr	r3, [r3]
 4178 0434 9968     		ldr	r1, [r3, #8]
 4179 0436 7B68     		ldr	r3, [r7, #4]
 4180 0438 1A68     		ldr	r2, [r3]
 4181 043a 3A4B     		ldr	r3, .L216+64
 4182 043c 0B40     		ands	r3, r3, r1
 4183 043e 9360     		str	r3, [r2, #8]
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4184              		.loc 1 2459 24
 4185 0440 7B68     		ldr	r3, [r7, #4]
 4186 0442 2022     		movs	r2, #32
 4187 0444 C3F88820 		str	r2, [r3, #136]
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4188              		.loc 1 2460 30
 4189 0448 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 117


 4190 044a 0022     		movs	r2, #0
 4191 044c DA66     		str	r2, [r3, #108]
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 4192              		.loc 1 2463 22
 4193 044e 7B68     		ldr	r3, [r7, #4]
 4194 0450 0022     		movs	r2, #0
 4195 0452 1A67     		str	r2, [r3, #112]
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4196              		.loc 1 2465 9
 4197 0454 7B68     		ldr	r3, [r7, #4]
 4198 0456 1B68     		ldr	r3, [r3]
 4199 0458 1A68     		ldr	r2, [r3]
 4200 045a 7B68     		ldr	r3, [r7, #4]
 4201 045c 1B68     		ldr	r3, [r3]
 4202 045e 22F01002 		bic	r2, r2, #16
 4203 0462 1A60     		str	r2, [r3]
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 4204              		.loc 1 2471 9
 4205 0464 7B89     		ldrh	r3, [r7, #10]
 4206 0466 1946     		mov	r1, r3
 4207 0468 7868     		ldr	r0, [r7, #4]
 4208 046a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 4209              		.loc 1 2474 7
 4210 046e 7BE0     		b	.L212
 4211              	.L194:
 4212              	.LBE3:
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 4213              		.loc 1 2479 18
 4214 0470 FB69     		ldr	r3, [r7, #28]
 4215 0472 03F48013 		and	r3, r3, #1048576
 4216              		.loc 1 2479 6
 4217 0476 002B     		cmp	r3, #0
 4218 0478 0DD0     		beq	.L202
 4219              		.loc 1 2479 54 discriminator 1
 4220 047a 7B69     		ldr	r3, [r7, #20]
 4221 047c 03F48003 		and	r3, r3, #4194304
 4222              		.loc 1 2479 42 discriminator 1
 4223 0480 002B     		cmp	r3, #0
 4224 0482 08D0     		beq	.L202
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 4225              		.loc 1 2481 5
ARM GAS  /tmp/ccp35uGD.s 			page 118


 4226 0484 7B68     		ldr	r3, [r7, #4]
 4227 0486 1B68     		ldr	r3, [r3]
 4228 0488 4FF48012 		mov	r2, #1048576
 4229 048c 1A62     		str	r2, [r3, #32]
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->WakeupCallback(huart);
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4230              		.loc 1 2491 5
 4231 048e 7868     		ldr	r0, [r7, #4]
 4232 0490 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 4233              		.loc 1 2493 5
 4234 0494 6BE0     		b	.L173
 4235              	.L202:
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 4236              		.loc 1 2497 18
 4237 0496 FB69     		ldr	r3, [r7, #28]
 4238 0498 03F08003 		and	r3, r3, #128
 4239              		.loc 1 2497 6
 4240 049c 002B     		cmp	r3, #0
 4241 049e 12D0     		beq	.L203
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 4242              		.loc 1 2498 20
 4243 04a0 BB69     		ldr	r3, [r7, #24]
 4244 04a2 03F08003 		and	r3, r3, #128
 4245              		.loc 1 2498 7
 4246 04a6 002B     		cmp	r3, #0
 4247 04a8 04D1     		bne	.L204
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 4248              		.loc 1 2499 23
 4249 04aa 7B69     		ldr	r3, [r7, #20]
 4250 04ac 03F40003 		and	r3, r3, #8388608
 4251              		.loc 1 2499 11
 4252 04b0 002B     		cmp	r3, #0
 4253 04b2 08D0     		beq	.L203
 4254              	.L204:
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxISR != NULL)
 4255              		.loc 1 2501 14
 4256 04b4 7B68     		ldr	r3, [r7, #4]
 4257 04b6 5B6F     		ldr	r3, [r3, #116]
 4258              		.loc 1 2501 8
 4259 04b8 002B     		cmp	r3, #0
 4260 04ba 57D0     		beq	.L213
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR(huart);
ARM GAS  /tmp/ccp35uGD.s 			page 119


 4261              		.loc 1 2503 12
 4262 04bc 7B68     		ldr	r3, [r7, #4]
 4263 04be 5B6F     		ldr	r3, [r3, #116]
 4264              		.loc 1 2503 7
 4265 04c0 7868     		ldr	r0, [r7, #4]
 4266 04c2 9847     		blx	r3
 4267              	.LVL5:
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 4268              		.loc 1 2505 5
 4269 04c4 52E0     		b	.L213
 4270              	.L203:
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 4271              		.loc 1 2509 18
 4272 04c6 FB69     		ldr	r3, [r7, #28]
 4273 04c8 03F04003 		and	r3, r3, #64
 4274              		.loc 1 2509 6
 4275 04cc 002B     		cmp	r3, #0
 4276 04ce 2BD0     		beq	.L206
 4277              		.loc 1 2509 53 discriminator 1
 4278 04d0 BB69     		ldr	r3, [r7, #24]
 4279 04d2 03F04003 		and	r3, r3, #64
 4280              		.loc 1 2509 41 discriminator 1
 4281 04d6 002B     		cmp	r3, #0
 4282 04d8 26D0     		beq	.L206
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 4283              		.loc 1 2511 5
 4284 04da 7868     		ldr	r0, [r7, #4]
 4285 04dc FFF7FEFF 		bl	UART_EndTransmit_IT
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 4286              		.loc 1 2512 5
 4287 04e0 45E0     		b	.L173
 4288              	.L217:
 4289 04e2 00BF     		.align	2
 4290              	.L216:
 4291 04e4 10000240 		.word	1073872912
 4292 04e8 28000240 		.word	1073872936
 4293 04ec 40000240 		.word	1073872960
 4294 04f0 58000240 		.word	1073872984
 4295 04f4 70000240 		.word	1073873008
 4296 04f8 88000240 		.word	1073873032
 4297 04fc A0000240 		.word	1073873056
 4298 0500 B8000240 		.word	1073873080
 4299 0504 10040240 		.word	1073873936
 4300 0508 28040240 		.word	1073873960
 4301 050c 40040240 		.word	1073873984
 4302 0510 58040240 		.word	1073874008
 4303 0514 70040240 		.word	1073874032
 4304 0518 88040240 		.word	1073874056
 4305 051c A0040240 		.word	1073874080
 4306 0520 B8040240 		.word	1073874104
 4307 0524 FEFFFFEF 		.word	-268435458
 4308              	.L206:
ARM GAS  /tmp/ccp35uGD.s 			page 120


2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 4309              		.loc 1 2516 18
 4310 0528 FB69     		ldr	r3, [r7, #28]
 4311 052a 03F40003 		and	r3, r3, #8388608
 4312              		.loc 1 2516 6
 4313 052e 002B     		cmp	r3, #0
 4314 0530 08D0     		beq	.L207
 4315              		.loc 1 2516 55 discriminator 1
 4316 0532 BB69     		ldr	r3, [r7, #24]
 4317 0534 03F08043 		and	r3, r3, #1073741824
 4318              		.loc 1 2516 43 discriminator 1
 4319 0538 002B     		cmp	r3, #0
 4320 053a 03D0     		beq	.L207
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
 4321              		.loc 1 2523 5
 4322 053c 7868     		ldr	r0, [r7, #4]
 4323 053e FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 4324              		.loc 1 2525 5
 4325 0542 14E0     		b	.L173
 4326              	.L207:
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 4327              		.loc 1 2529 18
 4328 0544 FB69     		ldr	r3, [r7, #28]
 4329 0546 03F08073 		and	r3, r3, #16777216
 4330              		.loc 1 2529 6
 4331 054a 002B     		cmp	r3, #0
 4332 054c 0FD0     		beq	.L173
 4333              		.loc 1 2529 75 discriminator 1
 4334 054e BB69     		ldr	r3, [r7, #24]
 4335              		.loc 1 2529 43 discriminator 1
 4336 0550 002B     		cmp	r3, #0
 4337 0552 0CDA     		bge	.L173
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
 4338              		.loc 1 2536 5
 4339 0554 7868     		ldr	r0, [r7, #4]
 4340 0556 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccp35uGD.s 			page 121


2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 4341              		.loc 1 2538 5
 4342 055a 08E0     		b	.L173
 4343              	.L208:
2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4344              		.loc 1 2250 7
 4345 055c 00BF     		nop
 4346 055e 06E0     		b	.L173
 4347              	.L209:
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4348              		.loc 1 2387 5
 4349 0560 00BF     		nop
 4350 0562 04E0     		b	.L173
 4351              	.L211:
 4352              	.LBB4:
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4353              		.loc 1 2441 7
 4354 0564 00BF     		nop
 4355 0566 02E0     		b	.L173
 4356              	.L212:
 4357              	.LBE4:
 4358              	.LBB5:
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4359              		.loc 1 2474 7
 4360 0568 00BF     		nop
 4361 056a 00E0     		b	.L173
 4362              	.L213:
 4363              	.LBE5:
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4364              		.loc 1 2505 5
 4365 056c 00BF     		nop
 4366              	.L173:
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4367              		.loc 1 2540 1
 4368 056e 2037     		adds	r7, r7, #32
 4369              	.LCFI118:
 4370              		.cfi_def_cfa_offset 8
 4371 0570 BD46     		mov	sp, r7
 4372              	.LCFI119:
 4373              		.cfi_def_cfa_register 13
 4374              		@ sp needed
 4375 0572 80BD     		pop	{r7, pc}
 4376              		.cfi_endproc
 4377              	.LFE353:
 4379              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 4380              		.align	1
 4381              		.weak	HAL_UART_TxCpltCallback
 4382              		.syntax unified
 4383              		.thumb
 4384              		.thumb_func
 4385              		.fpu fpv5-d16
 4387              	HAL_UART_TxCpltCallback:
 4388              	.LFB354:
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
ARM GAS  /tmp/ccp35uGD.s 			page 122


2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4389              		.loc 1 2548 1
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 8
 4392              		@ frame_needed = 1, uses_anonymous_args = 0
 4393              		@ link register save eliminated.
 4394 0000 80B4     		push	{r7}
 4395              	.LCFI120:
 4396              		.cfi_def_cfa_offset 4
 4397              		.cfi_offset 7, -4
 4398 0002 83B0     		sub	sp, sp, #12
 4399              	.LCFI121:
 4400              		.cfi_def_cfa_offset 16
 4401 0004 00AF     		add	r7, sp, #0
 4402              	.LCFI122:
 4403              		.cfi_def_cfa_register 7
 4404 0006 7860     		str	r0, [r7, #4]
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4405              		.loc 1 2555 1
 4406 0008 00BF     		nop
 4407 000a 0C37     		adds	r7, r7, #12
 4408              	.LCFI123:
 4409              		.cfi_def_cfa_offset 4
 4410 000c BD46     		mov	sp, r7
 4411              	.LCFI124:
 4412              		.cfi_def_cfa_register 13
 4413              		@ sp needed
 4414 000e 5DF8047B 		ldr	r7, [sp], #4
 4415              	.LCFI125:
 4416              		.cfi_restore 7
 4417              		.cfi_def_cfa_offset 0
 4418 0012 7047     		bx	lr
 4419              		.cfi_endproc
 4420              	.LFE354:
 4422              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 4423              		.align	1
 4424              		.weak	HAL_UART_TxHalfCpltCallback
 4425              		.syntax unified
 4426              		.thumb
 4427              		.thumb_func
 4428              		.fpu fpv5-d16
 4430              	HAL_UART_TxHalfCpltCallback:
 4431              	.LFB355:
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccp35uGD.s 			page 123


2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4432              		.loc 1 2563 1
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 8
 4435              		@ frame_needed = 1, uses_anonymous_args = 0
 4436              		@ link register save eliminated.
 4437 0000 80B4     		push	{r7}
 4438              	.LCFI126:
 4439              		.cfi_def_cfa_offset 4
 4440              		.cfi_offset 7, -4
 4441 0002 83B0     		sub	sp, sp, #12
 4442              	.LCFI127:
 4443              		.cfi_def_cfa_offset 16
 4444 0004 00AF     		add	r7, sp, #0
 4445              	.LCFI128:
 4446              		.cfi_def_cfa_register 7
 4447 0006 7860     		str	r0, [r7, #4]
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4448              		.loc 1 2570 1
 4449 0008 00BF     		nop
 4450 000a 0C37     		adds	r7, r7, #12
 4451              	.LCFI129:
 4452              		.cfi_def_cfa_offset 4
 4453 000c BD46     		mov	sp, r7
 4454              	.LCFI130:
 4455              		.cfi_def_cfa_register 13
 4456              		@ sp needed
 4457 000e 5DF8047B 		ldr	r7, [sp], #4
 4458              	.LCFI131:
 4459              		.cfi_restore 7
 4460              		.cfi_def_cfa_offset 0
 4461 0012 7047     		bx	lr
 4462              		.cfi_endproc
 4463              	.LFE355:
 4465              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4466              		.align	1
 4467              		.weak	HAL_UART_RxCpltCallback
 4468              		.syntax unified
 4469              		.thumb
 4470              		.thumb_func
 4471              		.fpu fpv5-d16
 4473              	HAL_UART_RxCpltCallback:
 4474              	.LFB356:
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccp35uGD.s 			page 124


2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4475              		.loc 1 2578 1
 4476              		.cfi_startproc
 4477              		@ args = 0, pretend = 0, frame = 8
 4478              		@ frame_needed = 1, uses_anonymous_args = 0
 4479              		@ link register save eliminated.
 4480 0000 80B4     		push	{r7}
 4481              	.LCFI132:
 4482              		.cfi_def_cfa_offset 4
 4483              		.cfi_offset 7, -4
 4484 0002 83B0     		sub	sp, sp, #12
 4485              	.LCFI133:
 4486              		.cfi_def_cfa_offset 16
 4487 0004 00AF     		add	r7, sp, #0
 4488              	.LCFI134:
 4489              		.cfi_def_cfa_register 7
 4490 0006 7860     		str	r0, [r7, #4]
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4491              		.loc 1 2585 1
 4492 0008 00BF     		nop
 4493 000a 0C37     		adds	r7, r7, #12
 4494              	.LCFI135:
 4495              		.cfi_def_cfa_offset 4
 4496 000c BD46     		mov	sp, r7
 4497              	.LCFI136:
 4498              		.cfi_def_cfa_register 13
 4499              		@ sp needed
 4500 000e 5DF8047B 		ldr	r7, [sp], #4
 4501              	.LCFI137:
 4502              		.cfi_restore 7
 4503              		.cfi_def_cfa_offset 0
 4504 0012 7047     		bx	lr
 4505              		.cfi_endproc
 4506              	.LFE356:
 4508              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4509              		.align	1
 4510              		.weak	HAL_UART_RxHalfCpltCallback
 4511              		.syntax unified
 4512              		.thumb
 4513              		.thumb_func
 4514              		.fpu fpv5-d16
 4516              	HAL_UART_RxHalfCpltCallback:
 4517              	.LFB357:
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  /tmp/ccp35uGD.s 			page 125


2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4518              		.loc 1 2593 1
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 8
 4521              		@ frame_needed = 1, uses_anonymous_args = 0
 4522              		@ link register save eliminated.
 4523 0000 80B4     		push	{r7}
 4524              	.LCFI138:
 4525              		.cfi_def_cfa_offset 4
 4526              		.cfi_offset 7, -4
 4527 0002 83B0     		sub	sp, sp, #12
 4528              	.LCFI139:
 4529              		.cfi_def_cfa_offset 16
 4530 0004 00AF     		add	r7, sp, #0
 4531              	.LCFI140:
 4532              		.cfi_def_cfa_register 7
 4533 0006 7860     		str	r0, [r7, #4]
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4534              		.loc 1 2600 1
 4535 0008 00BF     		nop
 4536 000a 0C37     		adds	r7, r7, #12
 4537              	.LCFI141:
 4538              		.cfi_def_cfa_offset 4
 4539 000c BD46     		mov	sp, r7
 4540              	.LCFI142:
 4541              		.cfi_def_cfa_register 13
 4542              		@ sp needed
 4543 000e 5DF8047B 		ldr	r7, [sp], #4
 4544              	.LCFI143:
 4545              		.cfi_restore 7
 4546              		.cfi_def_cfa_offset 0
 4547 0012 7047     		bx	lr
 4548              		.cfi_endproc
 4549              	.LFE357:
 4551              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4552              		.align	1
 4553              		.weak	HAL_UART_ErrorCallback
 4554              		.syntax unified
 4555              		.thumb
 4556              		.thumb_func
 4557              		.fpu fpv5-d16
 4559              	HAL_UART_ErrorCallback:
 4560              	.LFB358:
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART error callback.
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccp35uGD.s 			page 126


2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4561              		.loc 1 2608 1
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 8
 4564              		@ frame_needed = 1, uses_anonymous_args = 0
 4565              		@ link register save eliminated.
 4566 0000 80B4     		push	{r7}
 4567              	.LCFI144:
 4568              		.cfi_def_cfa_offset 4
 4569              		.cfi_offset 7, -4
 4570 0002 83B0     		sub	sp, sp, #12
 4571              	.LCFI145:
 4572              		.cfi_def_cfa_offset 16
 4573 0004 00AF     		add	r7, sp, #0
 4574              	.LCFI146:
 4575              		.cfi_def_cfa_register 7
 4576 0006 7860     		str	r0, [r7, #4]
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4577              		.loc 1 2615 1
 4578 0008 00BF     		nop
 4579 000a 0C37     		adds	r7, r7, #12
 4580              	.LCFI147:
 4581              		.cfi_def_cfa_offset 4
 4582 000c BD46     		mov	sp, r7
 4583              	.LCFI148:
 4584              		.cfi_def_cfa_register 13
 4585              		@ sp needed
 4586 000e 5DF8047B 		ldr	r7, [sp], #4
 4587              	.LCFI149:
 4588              		.cfi_restore 7
 4589              		.cfi_def_cfa_offset 0
 4590 0012 7047     		bx	lr
 4591              		.cfi_endproc
 4592              	.LFE358:
 4594              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4595              		.align	1
 4596              		.weak	HAL_UART_AbortCpltCallback
 4597              		.syntax unified
 4598              		.thumb
 4599              		.thumb_func
 4600              		.fpu fpv5-d16
 4602              	HAL_UART_AbortCpltCallback:
 4603              	.LFB359:
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  /tmp/ccp35uGD.s 			page 127


 4604              		.loc 1 2623 1
 4605              		.cfi_startproc
 4606              		@ args = 0, pretend = 0, frame = 8
 4607              		@ frame_needed = 1, uses_anonymous_args = 0
 4608              		@ link register save eliminated.
 4609 0000 80B4     		push	{r7}
 4610              	.LCFI150:
 4611              		.cfi_def_cfa_offset 4
 4612              		.cfi_offset 7, -4
 4613 0002 83B0     		sub	sp, sp, #12
 4614              	.LCFI151:
 4615              		.cfi_def_cfa_offset 16
 4616 0004 00AF     		add	r7, sp, #0
 4617              	.LCFI152:
 4618              		.cfi_def_cfa_register 7
 4619 0006 7860     		str	r0, [r7, #4]
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4620              		.loc 1 2630 1
 4621 0008 00BF     		nop
 4622 000a 0C37     		adds	r7, r7, #12
 4623              	.LCFI153:
 4624              		.cfi_def_cfa_offset 4
 4625 000c BD46     		mov	sp, r7
 4626              	.LCFI154:
 4627              		.cfi_def_cfa_register 13
 4628              		@ sp needed
 4629 000e 5DF8047B 		ldr	r7, [sp], #4
 4630              	.LCFI155:
 4631              		.cfi_restore 7
 4632              		.cfi_def_cfa_offset 0
 4633 0012 7047     		bx	lr
 4634              		.cfi_endproc
 4635              	.LFE359:
 4637              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4638              		.align	1
 4639              		.weak	HAL_UART_AbortTransmitCpltCallback
 4640              		.syntax unified
 4641              		.thumb
 4642              		.thumb_func
 4643              		.fpu fpv5-d16
 4645              	HAL_UART_AbortTransmitCpltCallback:
 4646              	.LFB360:
2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4647              		.loc 1 2638 1
ARM GAS  /tmp/ccp35uGD.s 			page 128


 4648              		.cfi_startproc
 4649              		@ args = 0, pretend = 0, frame = 8
 4650              		@ frame_needed = 1, uses_anonymous_args = 0
 4651              		@ link register save eliminated.
 4652 0000 80B4     		push	{r7}
 4653              	.LCFI156:
 4654              		.cfi_def_cfa_offset 4
 4655              		.cfi_offset 7, -4
 4656 0002 83B0     		sub	sp, sp, #12
 4657              	.LCFI157:
 4658              		.cfi_def_cfa_offset 16
 4659 0004 00AF     		add	r7, sp, #0
 4660              	.LCFI158:
 4661              		.cfi_def_cfa_register 7
 4662 0006 7860     		str	r0, [r7, #4]
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4663              		.loc 1 2645 1
 4664 0008 00BF     		nop
 4665 000a 0C37     		adds	r7, r7, #12
 4666              	.LCFI159:
 4667              		.cfi_def_cfa_offset 4
 4668 000c BD46     		mov	sp, r7
 4669              	.LCFI160:
 4670              		.cfi_def_cfa_register 13
 4671              		@ sp needed
 4672 000e 5DF8047B 		ldr	r7, [sp], #4
 4673              	.LCFI161:
 4674              		.cfi_restore 7
 4675              		.cfi_def_cfa_offset 0
 4676 0012 7047     		bx	lr
 4677              		.cfi_endproc
 4678              	.LFE360:
 4680              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4681              		.align	1
 4682              		.weak	HAL_UART_AbortReceiveCpltCallback
 4683              		.syntax unified
 4684              		.thumb
 4685              		.thumb_func
 4686              		.fpu fpv5-d16
 4688              	HAL_UART_AbortReceiveCpltCallback:
 4689              	.LFB361:
2646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4690              		.loc 1 2653 1
 4691              		.cfi_startproc
ARM GAS  /tmp/ccp35uGD.s 			page 129


 4692              		@ args = 0, pretend = 0, frame = 8
 4693              		@ frame_needed = 1, uses_anonymous_args = 0
 4694              		@ link register save eliminated.
 4695 0000 80B4     		push	{r7}
 4696              	.LCFI162:
 4697              		.cfi_def_cfa_offset 4
 4698              		.cfi_offset 7, -4
 4699 0002 83B0     		sub	sp, sp, #12
 4700              	.LCFI163:
 4701              		.cfi_def_cfa_offset 16
 4702 0004 00AF     		add	r7, sp, #0
 4703              	.LCFI164:
 4704              		.cfi_def_cfa_register 7
 4705 0006 7860     		str	r0, [r7, #4]
2654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4706              		.loc 1 2660 1
 4707 0008 00BF     		nop
 4708 000a 0C37     		adds	r7, r7, #12
 4709              	.LCFI165:
 4710              		.cfi_def_cfa_offset 4
 4711 000c BD46     		mov	sp, r7
 4712              	.LCFI166:
 4713              		.cfi_def_cfa_register 13
 4714              		@ sp needed
 4715 000e 5DF8047B 		ldr	r7, [sp], #4
 4716              	.LCFI167:
 4717              		.cfi_restore 7
 4718              		.cfi_def_cfa_offset 0
 4719 0012 7047     		bx	lr
 4720              		.cfi_endproc
 4721              	.LFE361:
 4723              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4724              		.align	1
 4725              		.weak	HAL_UARTEx_RxEventCallback
 4726              		.syntax unified
 4727              		.thumb
 4728              		.thumb_func
 4729              		.fpu fpv5-d16
 4731              	HAL_UARTEx_RxEventCallback:
 4732              	.LFB362:
2661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle
2665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               reception buffer until which, data are available)
2667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4733              		.loc 1 2670 1
ARM GAS  /tmp/ccp35uGD.s 			page 130


 4734              		.cfi_startproc
 4735              		@ args = 0, pretend = 0, frame = 8
 4736              		@ frame_needed = 1, uses_anonymous_args = 0
 4737              		@ link register save eliminated.
 4738 0000 80B4     		push	{r7}
 4739              	.LCFI168:
 4740              		.cfi_def_cfa_offset 4
 4741              		.cfi_offset 7, -4
 4742 0002 83B0     		sub	sp, sp, #12
 4743              	.LCFI169:
 4744              		.cfi_def_cfa_offset 16
 4745 0004 00AF     		add	r7, sp, #0
 4746              	.LCFI170:
 4747              		.cfi_def_cfa_register 7
 4748 0006 7860     		str	r0, [r7, #4]
 4749 0008 0B46     		mov	r3, r1
 4750 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(Size);
2674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4751              		.loc 1 2678 1
 4752 000c 00BF     		nop
 4753 000e 0C37     		adds	r7, r7, #12
 4754              	.LCFI171:
 4755              		.cfi_def_cfa_offset 4
 4756 0010 BD46     		mov	sp, r7
 4757              	.LCFI172:
 4758              		.cfi_def_cfa_register 13
 4759              		@ sp needed
 4760 0012 5DF8047B 		ldr	r7, [sp], #4
 4761              	.LCFI173:
 4762              		.cfi_restore 7
 4763              		.cfi_def_cfa_offset 0
 4764 0016 7047     		bx	lr
 4765              		.cfi_endproc
 4766              	.LFE362:
 4768              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 4769              		.align	1
 4770              		.global	HAL_UART_ReceiverTimeout_Config
 4771              		.syntax unified
 4772              		.thumb
 4773              		.thumb_func
 4774              		.fpu fpv5-d16
 4776              	HAL_UART_ReceiverTimeout_Config:
 4777              	.LFB363:
2679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART control functions
ARM GAS  /tmp/ccp35uGD.s 			page 131


2686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4778              		.loc 1 2718 1
 4779              		.cfi_startproc
 4780              		@ args = 0, pretend = 0, frame = 8
 4781              		@ frame_needed = 1, uses_anonymous_args = 0
 4782              		@ link register save eliminated.
 4783 0000 80B4     		push	{r7}
 4784              	.LCFI174:
 4785              		.cfi_def_cfa_offset 4
 4786              		.cfi_offset 7, -4
 4787 0002 83B0     		sub	sp, sp, #12
 4788              	.LCFI175:
 4789              		.cfi_def_cfa_offset 16
 4790 0004 00AF     		add	r7, sp, #0
 4791              	.LCFI176:
 4792              		.cfi_def_cfa_register 7
 4793 0006 7860     		str	r0, [r7, #4]
 4794 0008 3960     		str	r1, [r7]
2719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4795              		.loc 1 2719 9
 4796 000a 7B68     		ldr	r3, [r7, #4]
 4797 000c 1B68     		ldr	r3, [r3]
 4798              		.loc 1 2719 6
 4799 000e 094A     		ldr	r2, .L230
 4800 0010 9342     		cmp	r3, r2
ARM GAS  /tmp/ccp35uGD.s 			page 132


 4801 0012 09D0     		beq	.L229
2720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 4802              		.loc 1 2722 5
 4803 0014 7B68     		ldr	r3, [r7, #4]
 4804 0016 1B68     		ldr	r3, [r3]
 4805 0018 5B69     		ldr	r3, [r3, #20]
 4806 001a 03F07F41 		and	r1, r3, #-16777216
 4807 001e 7B68     		ldr	r3, [r7, #4]
 4808 0020 1B68     		ldr	r3, [r3]
 4809 0022 3A68     		ldr	r2, [r7]
 4810 0024 0A43     		orrs	r2, r2, r1
 4811 0026 5A61     		str	r2, [r3, #20]
 4812              	.L229:
2723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4813              		.loc 1 2724 1
 4814 0028 00BF     		nop
 4815 002a 0C37     		adds	r7, r7, #12
 4816              	.LCFI177:
 4817              		.cfi_def_cfa_offset 4
 4818 002c BD46     		mov	sp, r7
 4819              	.LCFI178:
 4820              		.cfi_def_cfa_register 13
 4821              		@ sp needed
 4822 002e 5DF8047B 		ldr	r7, [sp], #4
 4823              	.LCFI179:
 4824              		.cfi_restore 7
 4825              		.cfi_def_cfa_offset 0
 4826 0032 7047     		bx	lr
 4827              	.L231:
 4828              		.align	2
 4829              	.L230:
 4830 0034 000C0058 		.word	1476398080
 4831              		.cfi_endproc
 4832              	.LFE363:
 4834              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 4835              		.align	1
 4836              		.global	HAL_UART_EnableReceiverTimeout
 4837              		.syntax unified
 4838              		.thumb
 4839              		.thumb_func
 4840              		.fpu fpv5-d16
 4842              	HAL_UART_EnableReceiverTimeout:
 4843              	.LFB364:
2725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4844              		.loc 1 2733 1
 4845              		.cfi_startproc
ARM GAS  /tmp/ccp35uGD.s 			page 133


 4846              		@ args = 0, pretend = 0, frame = 8
 4847              		@ frame_needed = 1, uses_anonymous_args = 0
 4848              		@ link register save eliminated.
 4849 0000 80B4     		push	{r7}
 4850              	.LCFI180:
 4851              		.cfi_def_cfa_offset 4
 4852              		.cfi_offset 7, -4
 4853 0002 83B0     		sub	sp, sp, #12
 4854              	.LCFI181:
 4855              		.cfi_def_cfa_offset 16
 4856 0004 00AF     		add	r7, sp, #0
 4857              	.LCFI182:
 4858              		.cfi_def_cfa_register 7
 4859 0006 7860     		str	r0, [r7, #4]
2734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4860              		.loc 1 2734 9
 4861 0008 7B68     		ldr	r3, [r7, #4]
 4862 000a 1B68     		ldr	r3, [r3]
 4863              		.loc 1 2734 6
 4864 000c 184A     		ldr	r2, .L237
 4865 000e 9342     		cmp	r3, r2
 4866 0010 27D0     		beq	.L233
2735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 4867              		.loc 1 2736 14
 4868 0012 7B68     		ldr	r3, [r7, #4]
 4869 0014 D3F88430 		ldr	r3, [r3, #132]
 4870              		.loc 1 2736 8
 4871 0018 202B     		cmp	r3, #32
 4872 001a 20D1     		bne	.L234
2737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
 4873              		.loc 1 2739 7
 4874 001c 7B68     		ldr	r3, [r7, #4]
 4875 001e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 4876 0022 012B     		cmp	r3, #1
 4877 0024 01D1     		bne	.L235
 4878              		.loc 1 2739 7 is_stmt 0 discriminator 1
 4879 0026 0223     		movs	r3, #2
 4880 0028 1CE0     		b	.L236
 4881              	.L235:
 4882              		.loc 1 2739 7 discriminator 2
 4883 002a 7B68     		ldr	r3, [r7, #4]
 4884 002c 0122     		movs	r2, #1
 4885 002e 83F88020 		strb	r2, [r3, #128]
2740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 4886              		.loc 1 2741 21 is_stmt 1 discriminator 2
 4887 0032 7B68     		ldr	r3, [r7, #4]
 4888 0034 2422     		movs	r2, #36
 4889 0036 C3F88420 		str	r2, [r3, #132]
2742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4890              		.loc 1 2744 7 discriminator 2
 4891 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 134


 4892 003c 1B68     		ldr	r3, [r3]
 4893 003e 5A68     		ldr	r2, [r3, #4]
 4894 0040 7B68     		ldr	r3, [r7, #4]
 4895 0042 1B68     		ldr	r3, [r3]
 4896 0044 42F40002 		orr	r2, r2, #8388608
 4897 0048 5A60     		str	r2, [r3, #4]
2745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4898              		.loc 1 2746 21 discriminator 2
 4899 004a 7B68     		ldr	r3, [r7, #4]
 4900 004c 2022     		movs	r2, #32
 4901 004e C3F88420 		str	r2, [r3, #132]
2747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 4902              		.loc 1 2749 7 discriminator 2
 4903 0052 7B68     		ldr	r3, [r7, #4]
 4904 0054 0022     		movs	r2, #0
 4905 0056 83F88020 		strb	r2, [r3, #128]
2750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 4906              		.loc 1 2751 14 discriminator 2
 4907 005a 0023     		movs	r3, #0
 4908 005c 02E0     		b	.L236
 4909              	.L234:
2752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
 4910              		.loc 1 2755 14
 4911 005e 0223     		movs	r3, #2
 4912 0060 00E0     		b	.L236
 4913              	.L233:
2756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 4914              		.loc 1 2760 12
 4915 0062 0123     		movs	r3, #1
 4916              	.L236:
2761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4917              		.loc 1 2762 1
 4918 0064 1846     		mov	r0, r3
 4919 0066 0C37     		adds	r7, r7, #12
 4920              	.LCFI183:
 4921              		.cfi_def_cfa_offset 4
 4922 0068 BD46     		mov	sp, r7
 4923              	.LCFI184:
 4924              		.cfi_def_cfa_register 13
 4925              		@ sp needed
 4926 006a 5DF8047B 		ldr	r7, [sp], #4
 4927              	.LCFI185:
 4928              		.cfi_restore 7
 4929              		.cfi_def_cfa_offset 0
 4930 006e 7047     		bx	lr
ARM GAS  /tmp/ccp35uGD.s 			page 135


 4931              	.L238:
 4932              		.align	2
 4933              	.L237:
 4934 0070 000C0058 		.word	1476398080
 4935              		.cfi_endproc
 4936              	.LFE364:
 4938              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 4939              		.align	1
 4940              		.global	HAL_UART_DisableReceiverTimeout
 4941              		.syntax unified
 4942              		.thumb
 4943              		.thumb_func
 4944              		.fpu fpv5-d16
 4946              	HAL_UART_DisableReceiverTimeout:
 4947              	.LFB365:
2763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4948              		.loc 1 2771 1
 4949              		.cfi_startproc
 4950              		@ args = 0, pretend = 0, frame = 8
 4951              		@ frame_needed = 1, uses_anonymous_args = 0
 4952              		@ link register save eliminated.
 4953 0000 80B4     		push	{r7}
 4954              	.LCFI186:
 4955              		.cfi_def_cfa_offset 4
 4956              		.cfi_offset 7, -4
 4957 0002 83B0     		sub	sp, sp, #12
 4958              	.LCFI187:
 4959              		.cfi_def_cfa_offset 16
 4960 0004 00AF     		add	r7, sp, #0
 4961              	.LCFI188:
 4962              		.cfi_def_cfa_register 7
 4963 0006 7860     		str	r0, [r7, #4]
2772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 4964              		.loc 1 2772 9
 4965 0008 7B68     		ldr	r3, [r7, #4]
 4966 000a 1B68     		ldr	r3, [r3]
 4967              		.loc 1 2772 6
 4968 000c 184A     		ldr	r2, .L244
 4969 000e 9342     		cmp	r3, r2
 4970 0010 27D0     		beq	.L240
2773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 4971              		.loc 1 2774 14
 4972 0012 7B68     		ldr	r3, [r7, #4]
 4973 0014 D3F88430 		ldr	r3, [r3, #132]
 4974              		.loc 1 2774 8
 4975 0018 202B     		cmp	r3, #32
 4976 001a 20D1     		bne	.L241
2775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  /tmp/ccp35uGD.s 			page 136


2776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
 4977              		.loc 1 2777 7
 4978 001c 7B68     		ldr	r3, [r7, #4]
 4979 001e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 4980 0022 012B     		cmp	r3, #1
 4981 0024 01D1     		bne	.L242
 4982              		.loc 1 2777 7 is_stmt 0 discriminator 1
 4983 0026 0223     		movs	r3, #2
 4984 0028 1CE0     		b	.L243
 4985              	.L242:
 4986              		.loc 1 2777 7 discriminator 2
 4987 002a 7B68     		ldr	r3, [r7, #4]
 4988 002c 0122     		movs	r2, #1
 4989 002e 83F88020 		strb	r2, [r3, #128]
2778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 4990              		.loc 1 2779 21 is_stmt 1 discriminator 2
 4991 0032 7B68     		ldr	r3, [r7, #4]
 4992 0034 2422     		movs	r2, #36
 4993 0036 C3F88420 		str	r2, [r3, #132]
2780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 4994              		.loc 1 2782 7 discriminator 2
 4995 003a 7B68     		ldr	r3, [r7, #4]
 4996 003c 1B68     		ldr	r3, [r3]
 4997 003e 5A68     		ldr	r2, [r3, #4]
 4998 0040 7B68     		ldr	r3, [r7, #4]
 4999 0042 1B68     		ldr	r3, [r3]
 5000 0044 22F40002 		bic	r2, r2, #8388608
 5001 0048 5A60     		str	r2, [r3, #4]
2783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 5002              		.loc 1 2784 21 discriminator 2
 5003 004a 7B68     		ldr	r3, [r7, #4]
 5004 004c 2022     		movs	r2, #32
 5005 004e C3F88420 		str	r2, [r3, #132]
2785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 5006              		.loc 1 2787 7 discriminator 2
 5007 0052 7B68     		ldr	r3, [r7, #4]
 5008 0054 0022     		movs	r2, #0
 5009 0056 83F88020 		strb	r2, [r3, #128]
2788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 5010              		.loc 1 2789 14 discriminator 2
 5011 005a 0023     		movs	r3, #0
 5012 005c 02E0     		b	.L243
 5013              	.L241:
2790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
 5014              		.loc 1 2793 14
 5015 005e 0223     		movs	r3, #2
ARM GAS  /tmp/ccp35uGD.s 			page 137


 5016 0060 00E0     		b	.L243
 5017              	.L240:
2794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 5018              		.loc 1 2798 12
 5019 0062 0123     		movs	r3, #1
 5020              	.L243:
2799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5021              		.loc 1 2800 1
 5022 0064 1846     		mov	r0, r3
 5023 0066 0C37     		adds	r7, r7, #12
 5024              	.LCFI189:
 5025              		.cfi_def_cfa_offset 4
 5026 0068 BD46     		mov	sp, r7
 5027              	.LCFI190:
 5028              		.cfi_def_cfa_register 13
 5029              		@ sp needed
 5030 006a 5DF8047B 		ldr	r7, [sp], #4
 5031              	.LCFI191:
 5032              		.cfi_restore 7
 5033              		.cfi_def_cfa_offset 0
 5034 006e 7047     		bx	lr
 5035              	.L245:
 5036              		.align	2
 5037              	.L244:
 5038 0070 000C0058 		.word	1476398080
 5039              		.cfi_endproc
 5040              	.LFE365:
 5042              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5043              		.align	1
 5044              		.global	HAL_MultiProcessor_EnableMuteMode
 5045              		.syntax unified
 5046              		.thumb
 5047              		.thumb_func
 5048              		.fpu fpv5-d16
 5050              	HAL_MultiProcessor_EnableMuteMode:
 5051              	.LFB366:
2801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5052              		.loc 1 2809 1
 5053              		.cfi_startproc
 5054              		@ args = 0, pretend = 0, frame = 8
 5055              		@ frame_needed = 1, uses_anonymous_args = 0
 5056 0000 80B5     		push	{r7, lr}
 5057              	.LCFI192:
 5058              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccp35uGD.s 			page 138


 5059              		.cfi_offset 7, -8
 5060              		.cfi_offset 14, -4
 5061 0002 82B0     		sub	sp, sp, #8
 5062              	.LCFI193:
 5063              		.cfi_def_cfa_offset 16
 5064 0004 00AF     		add	r7, sp, #0
 5065              	.LCFI194:
 5066              		.cfi_def_cfa_register 7
 5067 0006 7860     		str	r0, [r7, #4]
2810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5068              		.loc 1 2810 3
 5069 0008 7B68     		ldr	r3, [r7, #4]
 5070 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5071 000e 012B     		cmp	r3, #1
 5072 0010 01D1     		bne	.L247
 5073              		.loc 1 2810 3 is_stmt 0 discriminator 1
 5074 0012 0223     		movs	r3, #2
 5075 0014 17E0     		b	.L248
 5076              	.L247:
 5077              		.loc 1 2810 3 discriminator 2
 5078 0016 7B68     		ldr	r3, [r7, #4]
 5079 0018 0122     		movs	r2, #1
 5080 001a 83F88020 		strb	r2, [r3, #128]
2811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5081              		.loc 1 2812 17 is_stmt 1 discriminator 2
 5082 001e 7B68     		ldr	r3, [r7, #4]
 5083 0020 2422     		movs	r2, #36
 5084 0022 C3F88420 		str	r2, [r3, #132]
2813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 5085              		.loc 1 2815 3 discriminator 2
 5086 0026 7B68     		ldr	r3, [r7, #4]
 5087 0028 1B68     		ldr	r3, [r3]
 5088 002a 1A68     		ldr	r2, [r3]
 5089 002c 7B68     		ldr	r3, [r7, #4]
 5090 002e 1B68     		ldr	r3, [r3]
 5091 0030 42F40052 		orr	r2, r2, #8192
 5092 0034 1A60     		str	r2, [r3]
2816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5093              		.loc 1 2817 17 discriminator 2
 5094 0036 7B68     		ldr	r3, [r7, #4]
 5095 0038 2022     		movs	r2, #32
 5096 003a C3F88420 		str	r2, [r3, #132]
2818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 5097              		.loc 1 2819 11 discriminator 2
 5098 003e 7868     		ldr	r0, [r7, #4]
 5099 0040 FFF7FEFF 		bl	UART_CheckIdleState
 5100 0044 0346     		mov	r3, r0
 5101              	.L248:
2820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5102              		.loc 1 2820 1
 5103 0046 1846     		mov	r0, r3
 5104 0048 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccp35uGD.s 			page 139


 5105              	.LCFI195:
 5106              		.cfi_def_cfa_offset 8
 5107 004a BD46     		mov	sp, r7
 5108              	.LCFI196:
 5109              		.cfi_def_cfa_register 13
 5110              		@ sp needed
 5111 004c 80BD     		pop	{r7, pc}
 5112              		.cfi_endproc
 5113              	.LFE366:
 5115              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5116              		.align	1
 5117              		.global	HAL_MultiProcessor_DisableMuteMode
 5118              		.syntax unified
 5119              		.thumb
 5120              		.thumb_func
 5121              		.fpu fpv5-d16
 5123              	HAL_MultiProcessor_DisableMuteMode:
 5124              	.LFB367:
2821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5125              		.loc 1 2829 1
 5126              		.cfi_startproc
 5127              		@ args = 0, pretend = 0, frame = 8
 5128              		@ frame_needed = 1, uses_anonymous_args = 0
 5129 0000 80B5     		push	{r7, lr}
 5130              	.LCFI197:
 5131              		.cfi_def_cfa_offset 8
 5132              		.cfi_offset 7, -8
 5133              		.cfi_offset 14, -4
 5134 0002 82B0     		sub	sp, sp, #8
 5135              	.LCFI198:
 5136              		.cfi_def_cfa_offset 16
 5137 0004 00AF     		add	r7, sp, #0
 5138              	.LCFI199:
 5139              		.cfi_def_cfa_register 7
 5140 0006 7860     		str	r0, [r7, #4]
2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5141              		.loc 1 2830 3
 5142 0008 7B68     		ldr	r3, [r7, #4]
 5143 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5144 000e 012B     		cmp	r3, #1
 5145 0010 01D1     		bne	.L250
 5146              		.loc 1 2830 3 is_stmt 0 discriminator 1
 5147 0012 0223     		movs	r3, #2
 5148 0014 17E0     		b	.L251
 5149              	.L250:
 5150              		.loc 1 2830 3 discriminator 2
 5151 0016 7B68     		ldr	r3, [r7, #4]
 5152 0018 0122     		movs	r2, #1
 5153 001a 83F88020 		strb	r2, [r3, #128]
ARM GAS  /tmp/ccp35uGD.s 			page 140


2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5154              		.loc 1 2832 17 is_stmt 1 discriminator 2
 5155 001e 7B68     		ldr	r3, [r7, #4]
 5156 0020 2422     		movs	r2, #36
 5157 0022 C3F88420 		str	r2, [r3, #132]
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 5158              		.loc 1 2835 3 discriminator 2
 5159 0026 7B68     		ldr	r3, [r7, #4]
 5160 0028 1B68     		ldr	r3, [r3]
 5161 002a 1A68     		ldr	r2, [r3]
 5162 002c 7B68     		ldr	r3, [r7, #4]
 5163 002e 1B68     		ldr	r3, [r3]
 5164 0030 22F40052 		bic	r2, r2, #8192
 5165 0034 1A60     		str	r2, [r3]
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5166              		.loc 1 2837 17 discriminator 2
 5167 0036 7B68     		ldr	r3, [r7, #4]
 5168 0038 2022     		movs	r2, #32
 5169 003a C3F88420 		str	r2, [r3, #132]
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 5170              		.loc 1 2839 11 discriminator 2
 5171 003e 7868     		ldr	r0, [r7, #4]
 5172 0040 FFF7FEFF 		bl	UART_CheckIdleState
 5173 0044 0346     		mov	r3, r0
 5174              	.L251:
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5175              		.loc 1 2840 1
 5176 0046 1846     		mov	r0, r3
 5177 0048 0837     		adds	r7, r7, #8
 5178              	.LCFI200:
 5179              		.cfi_def_cfa_offset 8
 5180 004a BD46     		mov	sp, r7
 5181              	.LCFI201:
 5182              		.cfi_def_cfa_register 13
 5183              		@ sp needed
 5184 004c 80BD     		pop	{r7, pc}
 5185              		.cfi_endproc
 5186              	.LFE367:
 5188              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5189              		.align	1
 5190              		.global	HAL_MultiProcessor_EnterMuteMode
 5191              		.syntax unified
 5192              		.thumb
 5193              		.thumb_func
 5194              		.fpu fpv5-d16
 5196              	HAL_MultiProcessor_EnterMuteMode:
 5197              	.LFB368:
2841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccp35uGD.s 			page 141


2846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5198              		.loc 1 2849 1
 5199              		.cfi_startproc
 5200              		@ args = 0, pretend = 0, frame = 8
 5201              		@ frame_needed = 1, uses_anonymous_args = 0
 5202              		@ link register save eliminated.
 5203 0000 80B4     		push	{r7}
 5204              	.LCFI202:
 5205              		.cfi_def_cfa_offset 4
 5206              		.cfi_offset 7, -4
 5207 0002 83B0     		sub	sp, sp, #12
 5208              	.LCFI203:
 5209              		.cfi_def_cfa_offset 16
 5210 0004 00AF     		add	r7, sp, #0
 5211              	.LCFI204:
 5212              		.cfi_def_cfa_register 7
 5213 0006 7860     		str	r0, [r7, #4]
2850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 5214              		.loc 1 2850 3
 5215 0008 7B68     		ldr	r3, [r7, #4]
 5216 000a 1B68     		ldr	r3, [r3]
 5217 000c 9A69     		ldr	r2, [r3, #24]
 5218 000e 7B68     		ldr	r3, [r7, #4]
 5219 0010 1B68     		ldr	r3, [r3]
 5220 0012 42F00402 		orr	r2, r2, #4
 5221 0016 9A61     		str	r2, [r3, #24]
2851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5222              		.loc 1 2851 1
 5223 0018 00BF     		nop
 5224 001a 0C37     		adds	r7, r7, #12
 5225              	.LCFI205:
 5226              		.cfi_def_cfa_offset 4
 5227 001c BD46     		mov	sp, r7
 5228              	.LCFI206:
 5229              		.cfi_def_cfa_register 13
 5230              		@ sp needed
 5231 001e 5DF8047B 		ldr	r7, [sp], #4
 5232              	.LCFI207:
 5233              		.cfi_restore 7
 5234              		.cfi_def_cfa_offset 0
 5235 0022 7047     		bx	lr
 5236              		.cfi_endproc
 5237              	.LFE368:
 5239              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5240              		.align	1
 5241              		.global	HAL_HalfDuplex_EnableTransmitter
 5242              		.syntax unified
 5243              		.thumb
 5244              		.thumb_func
 5245              		.fpu fpv5-d16
 5247              	HAL_HalfDuplex_EnableTransmitter:
 5248              	.LFB369:
2852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  /tmp/ccp35uGD.s 			page 142


2854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5249              		.loc 1 2859 1
 5250              		.cfi_startproc
 5251              		@ args = 0, pretend = 0, frame = 8
 5252              		@ frame_needed = 1, uses_anonymous_args = 0
 5253              		@ link register save eliminated.
 5254 0000 80B4     		push	{r7}
 5255              	.LCFI208:
 5256              		.cfi_def_cfa_offset 4
 5257              		.cfi_offset 7, -4
 5258 0002 83B0     		sub	sp, sp, #12
 5259              	.LCFI209:
 5260              		.cfi_def_cfa_offset 16
 5261 0004 00AF     		add	r7, sp, #0
 5262              	.LCFI210:
 5263              		.cfi_def_cfa_register 7
 5264 0006 7860     		str	r0, [r7, #4]
2860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5265              		.loc 1 2860 3
 5266 0008 7B68     		ldr	r3, [r7, #4]
 5267 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5268 000e 012B     		cmp	r3, #1
 5269 0010 01D1     		bne	.L254
 5270              		.loc 1 2860 3 is_stmt 0 discriminator 1
 5271 0012 0223     		movs	r3, #2
 5272 0014 20E0     		b	.L255
 5273              	.L254:
 5274              		.loc 1 2860 3 discriminator 2
 5275 0016 7B68     		ldr	r3, [r7, #4]
 5276 0018 0122     		movs	r2, #1
 5277 001a 83F88020 		strb	r2, [r3, #128]
2861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5278              		.loc 1 2861 17 is_stmt 1 discriminator 2
 5279 001e 7B68     		ldr	r3, [r7, #4]
 5280 0020 2422     		movs	r2, #36
 5281 0022 C3F88420 		str	r2, [r3, #132]
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5282              		.loc 1 2864 3 discriminator 2
 5283 0026 7B68     		ldr	r3, [r7, #4]
 5284 0028 1B68     		ldr	r3, [r3]
 5285 002a 1A68     		ldr	r2, [r3]
 5286 002c 7B68     		ldr	r3, [r7, #4]
 5287 002e 1B68     		ldr	r3, [r3]
 5288 0030 22F00C02 		bic	r2, r2, #12
 5289 0034 1A60     		str	r2, [r3]
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 5290              		.loc 1 2867 3 discriminator 2
 5291 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 143


 5292 0038 1B68     		ldr	r3, [r3]
 5293 003a 1A68     		ldr	r2, [r3]
 5294 003c 7B68     		ldr	r3, [r7, #4]
 5295 003e 1B68     		ldr	r3, [r3]
 5296 0040 42F00802 		orr	r2, r2, #8
 5297 0044 1A60     		str	r2, [r3]
2868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5298              		.loc 1 2869 17 discriminator 2
 5299 0046 7B68     		ldr	r3, [r7, #4]
 5300 0048 2022     		movs	r2, #32
 5301 004a C3F88420 		str	r2, [r3, #132]
2870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5302              		.loc 1 2871 3 discriminator 2
 5303 004e 7B68     		ldr	r3, [r7, #4]
 5304 0050 0022     		movs	r2, #0
 5305 0052 83F88020 		strb	r2, [r3, #128]
2872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 5306              		.loc 1 2873 10 discriminator 2
 5307 0056 0023     		movs	r3, #0
 5308              	.L255:
2874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5309              		.loc 1 2874 1
 5310 0058 1846     		mov	r0, r3
 5311 005a 0C37     		adds	r7, r7, #12
 5312              	.LCFI211:
 5313              		.cfi_def_cfa_offset 4
 5314 005c BD46     		mov	sp, r7
 5315              	.LCFI212:
 5316              		.cfi_def_cfa_register 13
 5317              		@ sp needed
 5318 005e 5DF8047B 		ldr	r7, [sp], #4
 5319              	.LCFI213:
 5320              		.cfi_restore 7
 5321              		.cfi_def_cfa_offset 0
 5322 0062 7047     		bx	lr
 5323              		.cfi_endproc
 5324              	.LFE369:
 5326              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5327              		.align	1
 5328              		.global	HAL_HalfDuplex_EnableReceiver
 5329              		.syntax unified
 5330              		.thumb
 5331              		.thumb_func
 5332              		.fpu fpv5-d16
 5334              	HAL_HalfDuplex_EnableReceiver:
 5335              	.LFB370:
2875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status.
2880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  /tmp/ccp35uGD.s 			page 144


 5336              		.loc 1 2882 1
 5337              		.cfi_startproc
 5338              		@ args = 0, pretend = 0, frame = 8
 5339              		@ frame_needed = 1, uses_anonymous_args = 0
 5340              		@ link register save eliminated.
 5341 0000 80B4     		push	{r7}
 5342              	.LCFI214:
 5343              		.cfi_def_cfa_offset 4
 5344              		.cfi_offset 7, -4
 5345 0002 83B0     		sub	sp, sp, #12
 5346              	.LCFI215:
 5347              		.cfi_def_cfa_offset 16
 5348 0004 00AF     		add	r7, sp, #0
 5349              	.LCFI216:
 5350              		.cfi_def_cfa_register 7
 5351 0006 7860     		str	r0, [r7, #4]
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5352              		.loc 1 2883 3
 5353 0008 7B68     		ldr	r3, [r7, #4]
 5354 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5355 000e 012B     		cmp	r3, #1
 5356 0010 01D1     		bne	.L257
 5357              		.loc 1 2883 3 is_stmt 0 discriminator 1
 5358 0012 0223     		movs	r3, #2
 5359 0014 20E0     		b	.L258
 5360              	.L257:
 5361              		.loc 1 2883 3 discriminator 2
 5362 0016 7B68     		ldr	r3, [r7, #4]
 5363 0018 0122     		movs	r2, #1
 5364 001a 83F88020 		strb	r2, [r3, #128]
2884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5365              		.loc 1 2884 17 is_stmt 1 discriminator 2
 5366 001e 7B68     		ldr	r3, [r7, #4]
 5367 0020 2422     		movs	r2, #36
 5368 0022 C3F88420 		str	r2, [r3, #132]
2885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 5369              		.loc 1 2887 3 discriminator 2
 5370 0026 7B68     		ldr	r3, [r7, #4]
 5371 0028 1B68     		ldr	r3, [r3]
 5372 002a 1A68     		ldr	r2, [r3]
 5373 002c 7B68     		ldr	r3, [r7, #4]
 5374 002e 1B68     		ldr	r3, [r3]
 5375 0030 22F00C02 		bic	r2, r2, #12
 5376 0034 1A60     		str	r2, [r3]
2888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 5377              		.loc 1 2890 3 discriminator 2
 5378 0036 7B68     		ldr	r3, [r7, #4]
 5379 0038 1B68     		ldr	r3, [r3]
 5380 003a 1A68     		ldr	r2, [r3]
 5381 003c 7B68     		ldr	r3, [r7, #4]
 5382 003e 1B68     		ldr	r3, [r3]
 5383 0040 42F00402 		orr	r2, r2, #4
 5384 0044 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 145


2891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5385              		.loc 1 2892 17 discriminator 2
 5386 0046 7B68     		ldr	r3, [r7, #4]
 5387 0048 2022     		movs	r2, #32
 5388 004a C3F88420 		str	r2, [r3, #132]
2893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5389              		.loc 1 2894 3 discriminator 2
 5390 004e 7B68     		ldr	r3, [r7, #4]
 5391 0050 0022     		movs	r2, #0
 5392 0052 83F88020 		strb	r2, [r3, #128]
2895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 5393              		.loc 1 2896 10 discriminator 2
 5394 0056 0023     		movs	r3, #0
 5395              	.L258:
2897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5396              		.loc 1 2897 1
 5397 0058 1846     		mov	r0, r3
 5398 005a 0C37     		adds	r7, r7, #12
 5399              	.LCFI217:
 5400              		.cfi_def_cfa_offset 4
 5401 005c BD46     		mov	sp, r7
 5402              	.LCFI218:
 5403              		.cfi_def_cfa_register 13
 5404              		@ sp needed
 5405 005e 5DF8047B 		ldr	r7, [sp], #4
 5406              	.LCFI219:
 5407              		.cfi_restore 7
 5408              		.cfi_def_cfa_offset 0
 5409 0062 7047     		bx	lr
 5410              		.cfi_endproc
 5411              	.LFE370:
 5413              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5414              		.align	1
 5415              		.global	HAL_LIN_SendBreak
 5416              		.syntax unified
 5417              		.thumb
 5418              		.thumb_func
 5419              		.fpu fpv5-d16
 5421              	HAL_LIN_SendBreak:
 5422              	.LFB371:
2898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Transmit break characters.
2902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5423              		.loc 1 2906 1
 5424              		.cfi_startproc
 5425              		@ args = 0, pretend = 0, frame = 8
 5426              		@ frame_needed = 1, uses_anonymous_args = 0
 5427              		@ link register save eliminated.
ARM GAS  /tmp/ccp35uGD.s 			page 146


 5428 0000 80B4     		push	{r7}
 5429              	.LCFI220:
 5430              		.cfi_def_cfa_offset 4
 5431              		.cfi_offset 7, -4
 5432 0002 83B0     		sub	sp, sp, #12
 5433              	.LCFI221:
 5434              		.cfi_def_cfa_offset 16
 5435 0004 00AF     		add	r7, sp, #0
 5436              	.LCFI222:
 5437              		.cfi_def_cfa_register 7
 5438 0006 7860     		str	r0, [r7, #4]
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 5439              		.loc 1 2910 3
 5440 0008 7B68     		ldr	r3, [r7, #4]
 5441 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 5442 000e 012B     		cmp	r3, #1
 5443 0010 01D1     		bne	.L260
 5444              		.loc 1 2910 3 is_stmt 0 discriminator 1
 5445 0012 0223     		movs	r3, #2
 5446 0014 18E0     		b	.L261
 5447              	.L260:
 5448              		.loc 1 2910 3 discriminator 2
 5449 0016 7B68     		ldr	r3, [r7, #4]
 5450 0018 0122     		movs	r2, #1
 5451 001a 83F88020 		strb	r2, [r3, #128]
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5452              		.loc 1 2912 17 is_stmt 1 discriminator 2
 5453 001e 7B68     		ldr	r3, [r7, #4]
 5454 0020 2422     		movs	r2, #36
 5455 0022 C3F88420 		str	r2, [r3, #132]
2913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Send break characters */
2915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 5456              		.loc 1 2915 3 discriminator 2
 5457 0026 7B68     		ldr	r3, [r7, #4]
 5458 0028 1B68     		ldr	r3, [r3]
 5459 002a 9A69     		ldr	r2, [r3, #24]
 5460 002c 7B68     		ldr	r3, [r7, #4]
 5461 002e 1B68     		ldr	r3, [r3]
 5462 0030 42F00202 		orr	r2, r2, #2
 5463 0034 9A61     		str	r2, [r3, #24]
2916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5464              		.loc 1 2917 17 discriminator 2
 5465 0036 7B68     		ldr	r3, [r7, #4]
 5466 0038 2022     		movs	r2, #32
 5467 003a C3F88420 		str	r2, [r3, #132]
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5468              		.loc 1 2919 3 discriminator 2
 5469 003e 7B68     		ldr	r3, [r7, #4]
 5470 0040 0022     		movs	r2, #0
 5471 0042 83F88020 		strb	r2, [r3, #128]
ARM GAS  /tmp/ccp35uGD.s 			page 147


2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 5472              		.loc 1 2921 10 discriminator 2
 5473 0046 0023     		movs	r3, #0
 5474              	.L261:
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5475              		.loc 1 2922 1
 5476 0048 1846     		mov	r0, r3
 5477 004a 0C37     		adds	r7, r7, #12
 5478              	.LCFI223:
 5479              		.cfi_def_cfa_offset 4
 5480 004c BD46     		mov	sp, r7
 5481              	.LCFI224:
 5482              		.cfi_def_cfa_register 13
 5483              		@ sp needed
 5484 004e 5DF8047B 		ldr	r7, [sp], #4
 5485              	.LCFI225:
 5486              		.cfi_restore 7
 5487              		.cfi_def_cfa_offset 0
 5488 0052 7047     		bx	lr
 5489              		.cfi_endproc
 5490              	.LFE371:
 5492              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5493              		.align	1
 5494              		.global	HAL_UART_GetState
 5495              		.syntax unified
 5496              		.thumb
 5497              		.thumb_func
 5498              		.fpu fpv5-d16
 5500              	HAL_UART_GetState:
 5501              	.LFB372:
2923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides functions allowing to :
2937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle state.
2938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle error code
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Return the UART handle state.
2946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL state
ARM GAS  /tmp/ccp35uGD.s 			page 148


2949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5502              		.loc 1 2951 1
 5503              		.cfi_startproc
 5504              		@ args = 0, pretend = 0, frame = 16
 5505              		@ frame_needed = 1, uses_anonymous_args = 0
 5506              		@ link register save eliminated.
 5507 0000 80B4     		push	{r7}
 5508              	.LCFI226:
 5509              		.cfi_def_cfa_offset 4
 5510              		.cfi_offset 7, -4
 5511 0002 85B0     		sub	sp, sp, #20
 5512              	.LCFI227:
 5513              		.cfi_def_cfa_offset 24
 5514 0004 00AF     		add	r7, sp, #0
 5515              	.LCFI228:
 5516              		.cfi_def_cfa_register 7
 5517 0006 7860     		str	r0, [r7, #4]
2952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
2953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp2;
2954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp1 = huart->gState;
 5518              		.loc 1 2954 9
 5519 0008 7B68     		ldr	r3, [r7, #4]
 5520 000a D3F88430 		ldr	r3, [r3, #132]
 5521 000e FB60     		str	r3, [r7, #12]
2955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
 5522              		.loc 1 2955 9
 5523 0010 7B68     		ldr	r3, [r7, #4]
 5524 0012 D3F88830 		ldr	r3, [r3, #136]
 5525 0016 BB60     		str	r3, [r7, #8]
2956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 5526              		.loc 1 2957 10
 5527 0018 FA68     		ldr	r2, [r7, #12]
 5528 001a BB68     		ldr	r3, [r7, #8]
 5529 001c 1343     		orrs	r3, r3, r2
2958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5530              		.loc 1 2958 1
 5531 001e 1846     		mov	r0, r3
 5532 0020 1437     		adds	r7, r7, #20
 5533              	.LCFI229:
 5534              		.cfi_def_cfa_offset 4
 5535 0022 BD46     		mov	sp, r7
 5536              	.LCFI230:
 5537              		.cfi_def_cfa_register 13
 5538              		@ sp needed
 5539 0024 5DF8047B 		ldr	r7, [sp], #4
 5540              	.LCFI231:
 5541              		.cfi_restore 7
 5542              		.cfi_def_cfa_offset 0
 5543 0028 7047     		bx	lr
 5544              		.cfi_endproc
 5545              	.LFE372:
 5547              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5548              		.align	1
 5549              		.global	HAL_UART_GetError
ARM GAS  /tmp/ccp35uGD.s 			page 149


 5550              		.syntax unified
 5551              		.thumb
 5552              		.thumb_func
 5553              		.fpu fpv5-d16
 5555              	HAL_UART_GetError:
 5556              	.LFB373:
2959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval UART Error Code
2965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5557              		.loc 1 2967 1
 5558              		.cfi_startproc
 5559              		@ args = 0, pretend = 0, frame = 8
 5560              		@ frame_needed = 1, uses_anonymous_args = 0
 5561              		@ link register save eliminated.
 5562 0000 80B4     		push	{r7}
 5563              	.LCFI232:
 5564              		.cfi_def_cfa_offset 4
 5565              		.cfi_offset 7, -4
 5566 0002 83B0     		sub	sp, sp, #12
 5567              	.LCFI233:
 5568              		.cfi_def_cfa_offset 16
 5569 0004 00AF     		add	r7, sp, #0
 5570              	.LCFI234:
 5571              		.cfi_def_cfa_register 7
 5572 0006 7860     		str	r0, [r7, #4]
2968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
 5573              		.loc 1 2968 15
 5574 0008 7B68     		ldr	r3, [r7, #4]
 5575 000a D3F88C30 		ldr	r3, [r3, #140]
2969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5576              		.loc 1 2969 1
 5577 000e 1846     		mov	r0, r3
 5578 0010 0C37     		adds	r7, r7, #12
 5579              	.LCFI235:
 5580              		.cfi_def_cfa_offset 4
 5581 0012 BD46     		mov	sp, r7
 5582              	.LCFI236:
 5583              		.cfi_def_cfa_register 13
 5584              		@ sp needed
 5585 0014 5DF8047B 		ldr	r7, [sp], #4
 5586              	.LCFI237:
 5587              		.cfi_restore 7
 5588              		.cfi_def_cfa_offset 0
 5589 0018 7047     		bx	lr
 5590              		.cfi_endproc
 5591              	.LFE373:
 5593              		.global	__aeabi_uldivmod
 5594              		.section	.text.UART_SetConfig,"ax",%progbits
 5595              		.align	1
 5596              		.global	UART_SetConfig
 5597              		.syntax unified
ARM GAS  /tmp/ccp35uGD.s 			page 150


 5598              		.thumb
 5599              		.thumb_func
 5600              		.fpu fpv5-d16
 5602              	UART_SetConfig:
 5603              	.LFB374:
2970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval none
2986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init the UART Callback settings */
2991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5604              		.loc 1 3013 1
 5605              		.cfi_startproc
 5606              		@ args = 0, pretend = 0, frame = 56
 5607              		@ frame_needed = 1, uses_anonymous_args = 0
 5608 0000 B0B5     		push	{r4, r5, r7, lr}
 5609              	.LCFI238:
 5610              		.cfi_def_cfa_offset 16
 5611              		.cfi_offset 4, -16
ARM GAS  /tmp/ccp35uGD.s 			page 151


 5612              		.cfi_offset 5, -12
 5613              		.cfi_offset 7, -8
 5614              		.cfi_offset 14, -4
 5615 0002 8EB0     		sub	sp, sp, #56
 5616              	.LCFI239:
 5617              		.cfi_def_cfa_offset 72
 5618 0004 00AF     		add	r7, sp, #0
 5619              	.LCFI240:
 5620              		.cfi_def_cfa_register 7
 5621 0006 7860     		str	r0, [r7, #4]
3014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
3015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp;
3016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t usartdiv;
3018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5622              		.loc 1 3018 21
 5623 0008 0023     		movs	r3, #0
 5624 000a 87F83230 		strb	r3, [r7, #50]
3019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
3021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL3_ClocksTypeDef pll3_clocks;
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t pclk;
3023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5625              		.loc 1 3050 33
 5626 000e 7B68     		ldr	r3, [r7, #4]
 5627 0010 9A68     		ldr	r2, [r3, #8]
 5628              		.loc 1 3050 58
 5629 0012 7B68     		ldr	r3, [r7, #4]
 5630 0014 1B69     		ldr	r3, [r3, #16]
 5631              		.loc 1 3050 45
ARM GAS  /tmp/ccp35uGD.s 			page 152


 5632 0016 1A43     		orrs	r2, r2, r3
 5633              		.loc 1 3050 79
 5634 0018 7B68     		ldr	r3, [r7, #4]
 5635 001a 5B69     		ldr	r3, [r3, #20]
 5636              		.loc 1 3050 66
 5637 001c 1A43     		orrs	r2, r2, r3
 5638              		.loc 1 3050 98
 5639 001e 7B68     		ldr	r3, [r7, #4]
 5640 0020 DB69     		ldr	r3, [r3, #28]
 5641              		.loc 1 3050 10
 5642 0022 1343     		orrs	r3, r3, r2
 5643 0024 7B63     		str	r3, [r7, #52]
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 5644              		.loc 1 3051 3
 5645 0026 7B68     		ldr	r3, [r7, #4]
 5646 0028 1B68     		ldr	r3, [r3]
 5647 002a 1A68     		ldr	r2, [r3]
 5648 002c BF4B     		ldr	r3, .L408
 5649 002e 1340     		ands	r3, r3, r2
 5650 0030 7A68     		ldr	r2, [r7, #4]
 5651 0032 1268     		ldr	r2, [r2]
 5652 0034 796B     		ldr	r1, [r7, #52]
 5653 0036 0B43     		orrs	r3, r3, r1
 5654 0038 1360     		str	r3, [r2]
3052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * to huart->Init.StopBits value */
3056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5655              		.loc 1 3056 3
 5656 003a 7B68     		ldr	r3, [r7, #4]
 5657 003c 1B68     		ldr	r3, [r3]
 5658 003e 5B68     		ldr	r3, [r3, #4]
 5659 0040 23F44051 		bic	r1, r3, #12288
 5660 0044 7B68     		ldr	r3, [r7, #4]
 5661 0046 DA68     		ldr	r2, [r3, #12]
 5662 0048 7B68     		ldr	r3, [r7, #4]
 5663 004a 1B68     		ldr	r3, [r3]
 5664 004c 0A43     		orrs	r2, r2, r1
 5665 004e 5A60     		str	r2, [r3, #4]
3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
3060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 5666              		.loc 1 3064 10
 5667 0050 7B68     		ldr	r3, [r7, #4]
 5668 0052 9B69     		ldr	r3, [r3, #24]
 5669 0054 7B63     		str	r3, [r7, #52]
3065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 5670              		.loc 1 3066 9
 5671 0056 7B68     		ldr	r3, [r7, #4]
 5672 0058 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 153


 5673              		.loc 1 3066 6
 5674 005a B54A     		ldr	r2, .L408+4
 5675 005c 9342     		cmp	r3, r2
 5676 005e 04D0     		beq	.L267
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 5677              		.loc 1 3068 26
 5678 0060 7B68     		ldr	r3, [r7, #4]
 5679 0062 1B6A     		ldr	r3, [r3, #32]
 5680              		.loc 1 3068 12
 5681 0064 7A6B     		ldr	r2, [r7, #52]
 5682 0066 1343     		orrs	r3, r3, r2
 5683 0068 7B63     		str	r3, [r7, #52]
 5684              	.L267:
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 5685              		.loc 1 3070 3
 5686 006a 7B68     		ldr	r3, [r7, #4]
 5687 006c 1B68     		ldr	r3, [r3]
 5688 006e 9A68     		ldr	r2, [r3, #8]
 5689 0070 B04B     		ldr	r3, .L408+8
 5690 0072 1340     		ands	r3, r3, r2
 5691 0074 7A68     		ldr	r2, [r7, #4]
 5692 0076 1268     		ldr	r2, [r2]
 5693 0078 796B     		ldr	r1, [r7, #52]
 5694 007a 0B43     		orrs	r3, r3, r1
 5695 007c 9360     		str	r3, [r2, #8]
3071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
3074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 5696              		.loc 1 3075 3
 5697 007e 7B68     		ldr	r3, [r7, #4]
 5698 0080 1B68     		ldr	r3, [r3]
 5699 0082 DB6A     		ldr	r3, [r3, #44]
 5700 0084 23F00F01 		bic	r1, r3, #15
 5701 0088 7B68     		ldr	r3, [r7, #4]
 5702 008a 5A6A     		ldr	r2, [r3, #36]
 5703 008c 7B68     		ldr	r3, [r7, #4]
 5704 008e 1B68     		ldr	r3, [r3]
 5705 0090 0A43     		orrs	r2, r2, r1
 5706 0092 DA62     		str	r2, [r3, #44]
3076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 5707              		.loc 1 3078 3
 5708 0094 7B68     		ldr	r3, [r7, #4]
 5709 0096 1B68     		ldr	r3, [r3]
 5710 0098 A74A     		ldr	r2, .L408+12
 5711 009a 9342     		cmp	r3, r2
 5712 009c 76D1     		bne	.L268
 5713              		.loc 1 3078 3 is_stmt 0 discriminator 1
 5714 009e A74B     		ldr	r3, .L408+16
 5715 00a0 5B6D     		ldr	r3, [r3, #84]
 5716 00a2 03F03803 		and	r3, r3, #56
 5717 00a6 282B     		cmp	r3, #40
ARM GAS  /tmp/ccp35uGD.s 			page 154


 5718 00a8 6CD8     		bhi	.L269
 5719 00aa 01A2     		adr	r2, .L271
 5720 00ac 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5721              		.p2align 2
 5722              	.L271:
 5723 00b0 55010000 		.word	.L276+1
 5724 00b4 85010000 		.word	.L269+1
 5725 00b8 85010000 		.word	.L269+1
 5726 00bc 85010000 		.word	.L269+1
 5727 00c0 85010000 		.word	.L269+1
 5728 00c4 85010000 		.word	.L269+1
 5729 00c8 85010000 		.word	.L269+1
 5730 00cc 85010000 		.word	.L269+1
 5731 00d0 5D010000 		.word	.L275+1
 5732 00d4 85010000 		.word	.L269+1
 5733 00d8 85010000 		.word	.L269+1
 5734 00dc 85010000 		.word	.L269+1
 5735 00e0 85010000 		.word	.L269+1
 5736 00e4 85010000 		.word	.L269+1
 5737 00e8 85010000 		.word	.L269+1
 5738 00ec 85010000 		.word	.L269+1
 5739 00f0 65010000 		.word	.L274+1
 5740 00f4 85010000 		.word	.L269+1
 5741 00f8 85010000 		.word	.L269+1
 5742 00fc 85010000 		.word	.L269+1
 5743 0100 85010000 		.word	.L269+1
 5744 0104 85010000 		.word	.L269+1
 5745 0108 85010000 		.word	.L269+1
 5746 010c 85010000 		.word	.L269+1
 5747 0110 6D010000 		.word	.L273+1
 5748 0114 85010000 		.word	.L269+1
 5749 0118 85010000 		.word	.L269+1
 5750 011c 85010000 		.word	.L269+1
 5751 0120 85010000 		.word	.L269+1
 5752 0124 85010000 		.word	.L269+1
 5753 0128 85010000 		.word	.L269+1
 5754 012c 85010000 		.word	.L269+1
 5755 0130 75010000 		.word	.L272+1
 5756 0134 85010000 		.word	.L269+1
 5757 0138 85010000 		.word	.L269+1
 5758 013c 85010000 		.word	.L269+1
 5759 0140 85010000 		.word	.L269+1
 5760 0144 85010000 		.word	.L269+1
 5761 0148 85010000 		.word	.L269+1
 5762 014c 85010000 		.word	.L269+1
 5763 0150 7D010000 		.word	.L270+1
 5764              		.p2align 1
 5765              	.L276:
 5766              		.loc 1 3078 3 discriminator 4
 5767 0154 0123     		movs	r3, #1
 5768 0156 87F83330 		strb	r3, [r7, #51]
 5769 015a 22E2     		b	.L278
 5770              	.L275:
 5771              		.loc 1 3078 3 discriminator 5
 5772 015c 0423     		movs	r3, #4
 5773 015e 87F83330 		strb	r3, [r7, #51]
 5774 0162 1EE2     		b	.L278
ARM GAS  /tmp/ccp35uGD.s 			page 155


 5775              	.L274:
 5776              		.loc 1 3078 3 discriminator 6
 5777 0164 0823     		movs	r3, #8
 5778 0166 87F83330 		strb	r3, [r7, #51]
 5779 016a 1AE2     		b	.L278
 5780              	.L273:
 5781              		.loc 1 3078 3 discriminator 7
 5782 016c 1023     		movs	r3, #16
 5783 016e 87F83330 		strb	r3, [r7, #51]
 5784 0172 16E2     		b	.L278
 5785              	.L272:
 5786              		.loc 1 3078 3 discriminator 8
 5787 0174 2023     		movs	r3, #32
 5788 0176 87F83330 		strb	r3, [r7, #51]
 5789 017a 12E2     		b	.L278
 5790              	.L270:
 5791              		.loc 1 3078 3 discriminator 9
 5792 017c 4023     		movs	r3, #64
 5793 017e 87F83330 		strb	r3, [r7, #51]
 5794 0182 0EE2     		b	.L278
 5795              	.L269:
 5796              		.loc 1 3078 3 discriminator 3
 5797 0184 8023     		movs	r3, #128
 5798 0186 87F83330 		strb	r3, [r7, #51]
 5799 018a 0AE2     		b	.L278
 5800              	.L268:
 5801              		.loc 1 3078 3 discriminator 2
 5802 018c 7B68     		ldr	r3, [r7, #4]
 5803 018e 1B68     		ldr	r3, [r3]
 5804 0190 6B4A     		ldr	r2, .L408+20
 5805 0192 9342     		cmp	r3, r2
 5806 0194 30D1     		bne	.L279
 5807              		.loc 1 3078 3 discriminator 17
 5808 0196 694B     		ldr	r3, .L408+16
 5809 0198 5B6D     		ldr	r3, [r3, #84]
 5810 019a 03F00703 		and	r3, r3, #7
 5811 019e 052B     		cmp	r3, #5
 5812 01a0 26D8     		bhi	.L280
 5813 01a2 01A2     		adr	r2, .L282
 5814 01a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5815              		.p2align 2
 5816              	.L282:
 5817 01a8 C1010000 		.word	.L287+1
 5818 01ac C9010000 		.word	.L286+1
 5819 01b0 D1010000 		.word	.L285+1
 5820 01b4 D9010000 		.word	.L284+1
 5821 01b8 E1010000 		.word	.L283+1
 5822 01bc E9010000 		.word	.L281+1
 5823              		.p2align 1
 5824              	.L287:
 5825              		.loc 1 3078 3 discriminator 20
 5826 01c0 0023     		movs	r3, #0
 5827 01c2 87F83330 		strb	r3, [r7, #51]
 5828 01c6 ECE1     		b	.L278
 5829              	.L286:
 5830              		.loc 1 3078 3 discriminator 21
 5831 01c8 0423     		movs	r3, #4
ARM GAS  /tmp/ccp35uGD.s 			page 156


 5832 01ca 87F83330 		strb	r3, [r7, #51]
 5833 01ce E8E1     		b	.L278
 5834              	.L285:
 5835              		.loc 1 3078 3 discriminator 22
 5836 01d0 0823     		movs	r3, #8
 5837 01d2 87F83330 		strb	r3, [r7, #51]
 5838 01d6 E4E1     		b	.L278
 5839              	.L284:
 5840              		.loc 1 3078 3 discriminator 23
 5841 01d8 1023     		movs	r3, #16
 5842 01da 87F83330 		strb	r3, [r7, #51]
 5843 01de E0E1     		b	.L278
 5844              	.L283:
 5845              		.loc 1 3078 3 discriminator 24
 5846 01e0 2023     		movs	r3, #32
 5847 01e2 87F83330 		strb	r3, [r7, #51]
 5848 01e6 DCE1     		b	.L278
 5849              	.L281:
 5850              		.loc 1 3078 3 discriminator 25
 5851 01e8 4023     		movs	r3, #64
 5852 01ea 87F83330 		strb	r3, [r7, #51]
 5853 01ee D8E1     		b	.L278
 5854              	.L280:
 5855              		.loc 1 3078 3 discriminator 19
 5856 01f0 8023     		movs	r3, #128
 5857 01f2 87F83330 		strb	r3, [r7, #51]
 5858 01f6 D4E1     		b	.L278
 5859              	.L279:
 5860              		.loc 1 3078 3 discriminator 18
 5861 01f8 7B68     		ldr	r3, [r7, #4]
 5862 01fa 1B68     		ldr	r3, [r3]
 5863 01fc 514A     		ldr	r2, .L408+24
 5864 01fe 9342     		cmp	r3, r2
 5865 0200 30D1     		bne	.L289
 5866              		.loc 1 3078 3 discriminator 33
 5867 0202 4E4B     		ldr	r3, .L408+16
 5868 0204 5B6D     		ldr	r3, [r3, #84]
 5869 0206 03F00703 		and	r3, r3, #7
 5870 020a 052B     		cmp	r3, #5
 5871 020c 26D8     		bhi	.L290
 5872 020e 01A2     		adr	r2, .L292
 5873 0210 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5874              		.p2align 2
 5875              	.L292:
 5876 0214 2D020000 		.word	.L297+1
 5877 0218 35020000 		.word	.L296+1
 5878 021c 3D020000 		.word	.L295+1
 5879 0220 45020000 		.word	.L294+1
 5880 0224 4D020000 		.word	.L293+1
 5881 0228 55020000 		.word	.L291+1
 5882              		.p2align 1
 5883              	.L297:
 5884              		.loc 1 3078 3 discriminator 36
 5885 022c 0023     		movs	r3, #0
 5886 022e 87F83330 		strb	r3, [r7, #51]
 5887 0232 B6E1     		b	.L278
 5888              	.L296:
ARM GAS  /tmp/ccp35uGD.s 			page 157


 5889              		.loc 1 3078 3 discriminator 37
 5890 0234 0423     		movs	r3, #4
 5891 0236 87F83330 		strb	r3, [r7, #51]
 5892 023a B2E1     		b	.L278
 5893              	.L295:
 5894              		.loc 1 3078 3 discriminator 38
 5895 023c 0823     		movs	r3, #8
 5896 023e 87F83330 		strb	r3, [r7, #51]
 5897 0242 AEE1     		b	.L278
 5898              	.L294:
 5899              		.loc 1 3078 3 discriminator 39
 5900 0244 1023     		movs	r3, #16
 5901 0246 87F83330 		strb	r3, [r7, #51]
 5902 024a AAE1     		b	.L278
 5903              	.L293:
 5904              		.loc 1 3078 3 discriminator 40
 5905 024c 2023     		movs	r3, #32
 5906 024e 87F83330 		strb	r3, [r7, #51]
 5907 0252 A6E1     		b	.L278
 5908              	.L291:
 5909              		.loc 1 3078 3 discriminator 41
 5910 0254 4023     		movs	r3, #64
 5911 0256 87F83330 		strb	r3, [r7, #51]
 5912 025a A2E1     		b	.L278
 5913              	.L290:
 5914              		.loc 1 3078 3 discriminator 35
 5915 025c 8023     		movs	r3, #128
 5916 025e 87F83330 		strb	r3, [r7, #51]
 5917 0262 9EE1     		b	.L278
 5918              	.L289:
 5919              		.loc 1 3078 3 discriminator 34
 5920 0264 7B68     		ldr	r3, [r7, #4]
 5921 0266 1B68     		ldr	r3, [r3]
 5922 0268 374A     		ldr	r2, .L408+28
 5923 026a 9342     		cmp	r3, r2
 5924 026c 30D1     		bne	.L299
 5925              		.loc 1 3078 3 discriminator 49
 5926 026e 334B     		ldr	r3, .L408+16
 5927 0270 5B6D     		ldr	r3, [r3, #84]
 5928 0272 03F00703 		and	r3, r3, #7
 5929 0276 052B     		cmp	r3, #5
 5930 0278 26D8     		bhi	.L300
 5931 027a 01A2     		adr	r2, .L302
 5932 027c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5933              		.p2align 2
 5934              	.L302:
 5935 0280 99020000 		.word	.L307+1
 5936 0284 A1020000 		.word	.L306+1
 5937 0288 A9020000 		.word	.L305+1
 5938 028c B1020000 		.word	.L304+1
 5939 0290 B9020000 		.word	.L303+1
 5940 0294 C1020000 		.word	.L301+1
 5941              		.p2align 1
 5942              	.L307:
 5943              		.loc 1 3078 3 discriminator 52
 5944 0298 0023     		movs	r3, #0
 5945 029a 87F83330 		strb	r3, [r7, #51]
ARM GAS  /tmp/ccp35uGD.s 			page 158


 5946 029e 80E1     		b	.L278
 5947              	.L306:
 5948              		.loc 1 3078 3 discriminator 53
 5949 02a0 0423     		movs	r3, #4
 5950 02a2 87F83330 		strb	r3, [r7, #51]
 5951 02a6 7CE1     		b	.L278
 5952              	.L305:
 5953              		.loc 1 3078 3 discriminator 54
 5954 02a8 0823     		movs	r3, #8
 5955 02aa 87F83330 		strb	r3, [r7, #51]
 5956 02ae 78E1     		b	.L278
 5957              	.L304:
 5958              		.loc 1 3078 3 discriminator 55
 5959 02b0 1023     		movs	r3, #16
 5960 02b2 87F83330 		strb	r3, [r7, #51]
 5961 02b6 74E1     		b	.L278
 5962              	.L303:
 5963              		.loc 1 3078 3 discriminator 56
 5964 02b8 2023     		movs	r3, #32
 5965 02ba 87F83330 		strb	r3, [r7, #51]
 5966 02be 70E1     		b	.L278
 5967              	.L301:
 5968              		.loc 1 3078 3 discriminator 57
 5969 02c0 4023     		movs	r3, #64
 5970 02c2 87F83330 		strb	r3, [r7, #51]
 5971 02c6 6CE1     		b	.L278
 5972              	.L300:
 5973              		.loc 1 3078 3 discriminator 51
 5974 02c8 8023     		movs	r3, #128
 5975 02ca 87F83330 		strb	r3, [r7, #51]
 5976 02ce 68E1     		b	.L278
 5977              	.L299:
 5978              		.loc 1 3078 3 discriminator 50
 5979 02d0 7B68     		ldr	r3, [r7, #4]
 5980 02d2 1B68     		ldr	r3, [r3]
 5981 02d4 1D4A     		ldr	r2, .L408+32
 5982 02d6 9342     		cmp	r3, r2
 5983 02d8 42D1     		bne	.L309
 5984              		.loc 1 3078 3 discriminator 65
 5985 02da 184B     		ldr	r3, .L408+16
 5986 02dc 5B6D     		ldr	r3, [r3, #84]
 5987 02de 03F00703 		and	r3, r3, #7
 5988 02e2 052B     		cmp	r3, #5
 5989 02e4 38D8     		bhi	.L310
 5990 02e6 01A2     		adr	r2, .L312
 5991 02e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5992              		.p2align 2
 5993              	.L312:
 5994 02ec 05030000 		.word	.L317+1
 5995 02f0 0D030000 		.word	.L316+1
 5996 02f4 15030000 		.word	.L315+1
 5997 02f8 1D030000 		.word	.L314+1
 5998 02fc 25030000 		.word	.L313+1
 5999 0300 51030000 		.word	.L311+1
 6000              		.p2align 1
 6001              	.L317:
 6002              		.loc 1 3078 3 discriminator 68
ARM GAS  /tmp/ccp35uGD.s 			page 159


 6003 0304 0023     		movs	r3, #0
 6004 0306 87F83330 		strb	r3, [r7, #51]
 6005 030a 4AE1     		b	.L278
 6006              	.L316:
 6007              		.loc 1 3078 3 discriminator 69
 6008 030c 0423     		movs	r3, #4
 6009 030e 87F83330 		strb	r3, [r7, #51]
 6010 0312 46E1     		b	.L278
 6011              	.L315:
 6012              		.loc 1 3078 3 discriminator 70
 6013 0314 0823     		movs	r3, #8
 6014 0316 87F83330 		strb	r3, [r7, #51]
 6015 031a 42E1     		b	.L278
 6016              	.L314:
 6017              		.loc 1 3078 3 discriminator 71
 6018 031c 1023     		movs	r3, #16
 6019 031e 87F83330 		strb	r3, [r7, #51]
 6020 0322 3EE1     		b	.L278
 6021              	.L313:
 6022              		.loc 1 3078 3 discriminator 72
 6023 0324 2023     		movs	r3, #32
 6024 0326 87F83330 		strb	r3, [r7, #51]
 6025 032a 3AE1     		b	.L278
 6026              	.L409:
 6027              		.align	2
 6028              	.L408:
 6029 032c F369FFCF 		.word	-805344781
 6030 0330 000C0058 		.word	1476398080
 6031 0334 FFF4FF11 		.word	301987071
 6032 0338 00100140 		.word	1073811456
 6033 033c 00440258 		.word	1476543488
 6034 0340 00440040 		.word	1073759232
 6035 0344 00480040 		.word	1073760256
 6036 0348 004C0040 		.word	1073761280
 6037 034c 00500040 		.word	1073762304
 6038              	.L311:
 6039              		.loc 1 3078 3 discriminator 73
 6040 0350 4023     		movs	r3, #64
 6041 0352 87F83330 		strb	r3, [r7, #51]
 6042 0356 24E1     		b	.L278
 6043              	.L310:
 6044              		.loc 1 3078 3 discriminator 67
 6045 0358 8023     		movs	r3, #128
 6046 035a 87F83330 		strb	r3, [r7, #51]
 6047 035e 20E1     		b	.L278
 6048              	.L309:
 6049              		.loc 1 3078 3 discriminator 66
 6050 0360 7B68     		ldr	r3, [r7, #4]
 6051 0362 1B68     		ldr	r3, [r3]
 6052 0364 CC4A     		ldr	r2, .L410
 6053 0366 9342     		cmp	r3, r2
 6054 0368 76D1     		bne	.L319
 6055              		.loc 1 3078 3 discriminator 81
 6056 036a CC4B     		ldr	r3, .L410+4
 6057 036c 5B6D     		ldr	r3, [r3, #84]
 6058 036e 03F03803 		and	r3, r3, #56
 6059 0372 282B     		cmp	r3, #40
ARM GAS  /tmp/ccp35uGD.s 			page 160


 6060 0374 6CD8     		bhi	.L320
 6061 0376 01A2     		adr	r2, .L322
 6062 0378 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6063              		.p2align 2
 6064              	.L322:
 6065 037c 21040000 		.word	.L327+1
 6066 0380 51040000 		.word	.L320+1
 6067 0384 51040000 		.word	.L320+1
 6068 0388 51040000 		.word	.L320+1
 6069 038c 51040000 		.word	.L320+1
 6070 0390 51040000 		.word	.L320+1
 6071 0394 51040000 		.word	.L320+1
 6072 0398 51040000 		.word	.L320+1
 6073 039c 29040000 		.word	.L326+1
 6074 03a0 51040000 		.word	.L320+1
 6075 03a4 51040000 		.word	.L320+1
 6076 03a8 51040000 		.word	.L320+1
 6077 03ac 51040000 		.word	.L320+1
 6078 03b0 51040000 		.word	.L320+1
 6079 03b4 51040000 		.word	.L320+1
 6080 03b8 51040000 		.word	.L320+1
 6081 03bc 31040000 		.word	.L325+1
 6082 03c0 51040000 		.word	.L320+1
 6083 03c4 51040000 		.word	.L320+1
 6084 03c8 51040000 		.word	.L320+1
 6085 03cc 51040000 		.word	.L320+1
 6086 03d0 51040000 		.word	.L320+1
 6087 03d4 51040000 		.word	.L320+1
 6088 03d8 51040000 		.word	.L320+1
 6089 03dc 39040000 		.word	.L324+1
 6090 03e0 51040000 		.word	.L320+1
 6091 03e4 51040000 		.word	.L320+1
 6092 03e8 51040000 		.word	.L320+1
 6093 03ec 51040000 		.word	.L320+1
 6094 03f0 51040000 		.word	.L320+1
 6095 03f4 51040000 		.word	.L320+1
 6096 03f8 51040000 		.word	.L320+1
 6097 03fc 41040000 		.word	.L323+1
 6098 0400 51040000 		.word	.L320+1
 6099 0404 51040000 		.word	.L320+1
 6100 0408 51040000 		.word	.L320+1
 6101 040c 51040000 		.word	.L320+1
 6102 0410 51040000 		.word	.L320+1
 6103 0414 51040000 		.word	.L320+1
 6104 0418 51040000 		.word	.L320+1
 6105 041c 49040000 		.word	.L321+1
 6106              		.p2align 1
 6107              	.L327:
 6108              		.loc 1 3078 3 discriminator 84
 6109 0420 0123     		movs	r3, #1
 6110 0422 87F83330 		strb	r3, [r7, #51]
 6111 0426 BCE0     		b	.L278
 6112              	.L326:
 6113              		.loc 1 3078 3 discriminator 85
 6114 0428 0423     		movs	r3, #4
 6115 042a 87F83330 		strb	r3, [r7, #51]
 6116 042e B8E0     		b	.L278
ARM GAS  /tmp/ccp35uGD.s 			page 161


 6117              	.L325:
 6118              		.loc 1 3078 3 discriminator 86
 6119 0430 0823     		movs	r3, #8
 6120 0432 87F83330 		strb	r3, [r7, #51]
 6121 0436 B4E0     		b	.L278
 6122              	.L324:
 6123              		.loc 1 3078 3 discriminator 87
 6124 0438 1023     		movs	r3, #16
 6125 043a 87F83330 		strb	r3, [r7, #51]
 6126 043e B0E0     		b	.L278
 6127              	.L323:
 6128              		.loc 1 3078 3 discriminator 88
 6129 0440 2023     		movs	r3, #32
 6130 0442 87F83330 		strb	r3, [r7, #51]
 6131 0446 ACE0     		b	.L278
 6132              	.L321:
 6133              		.loc 1 3078 3 discriminator 89
 6134 0448 4023     		movs	r3, #64
 6135 044a 87F83330 		strb	r3, [r7, #51]
 6136 044e A8E0     		b	.L278
 6137              	.L320:
 6138              		.loc 1 3078 3 discriminator 83
 6139 0450 8023     		movs	r3, #128
 6140 0452 87F83330 		strb	r3, [r7, #51]
 6141 0456 A4E0     		b	.L278
 6142              	.L319:
 6143              		.loc 1 3078 3 discriminator 82
 6144 0458 7B68     		ldr	r3, [r7, #4]
 6145 045a 1B68     		ldr	r3, [r3]
 6146 045c 904A     		ldr	r2, .L410+8
 6147 045e 9342     		cmp	r3, r2
 6148 0460 30D1     		bne	.L329
 6149              		.loc 1 3078 3 discriminator 97
 6150 0462 8E4B     		ldr	r3, .L410+4
 6151 0464 5B6D     		ldr	r3, [r3, #84]
 6152 0466 03F00703 		and	r3, r3, #7
 6153 046a 052B     		cmp	r3, #5
 6154 046c 26D8     		bhi	.L330
 6155 046e 01A2     		adr	r2, .L332
 6156 0470 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6157              		.p2align 2
 6158              	.L332:
 6159 0474 8D040000 		.word	.L337+1
 6160 0478 95040000 		.word	.L336+1
 6161 047c 9D040000 		.word	.L335+1
 6162 0480 A5040000 		.word	.L334+1
 6163 0484 AD040000 		.word	.L333+1
 6164 0488 B5040000 		.word	.L331+1
 6165              		.p2align 1
 6166              	.L337:
 6167              		.loc 1 3078 3 discriminator 100
 6168 048c 0023     		movs	r3, #0
 6169 048e 87F83330 		strb	r3, [r7, #51]
 6170 0492 86E0     		b	.L278
 6171              	.L336:
 6172              		.loc 1 3078 3 discriminator 101
 6173 0494 0423     		movs	r3, #4
ARM GAS  /tmp/ccp35uGD.s 			page 162


 6174 0496 87F83330 		strb	r3, [r7, #51]
 6175 049a 82E0     		b	.L278
 6176              	.L335:
 6177              		.loc 1 3078 3 discriminator 102
 6178 049c 0823     		movs	r3, #8
 6179 049e 87F83330 		strb	r3, [r7, #51]
 6180 04a2 7EE0     		b	.L278
 6181              	.L334:
 6182              		.loc 1 3078 3 discriminator 103
 6183 04a4 1023     		movs	r3, #16
 6184 04a6 87F83330 		strb	r3, [r7, #51]
 6185 04aa 7AE0     		b	.L278
 6186              	.L333:
 6187              		.loc 1 3078 3 discriminator 104
 6188 04ac 2023     		movs	r3, #32
 6189 04ae 87F83330 		strb	r3, [r7, #51]
 6190 04b2 76E0     		b	.L278
 6191              	.L331:
 6192              		.loc 1 3078 3 discriminator 105
 6193 04b4 4023     		movs	r3, #64
 6194 04b6 87F83330 		strb	r3, [r7, #51]
 6195 04ba 72E0     		b	.L278
 6196              	.L330:
 6197              		.loc 1 3078 3 discriminator 99
 6198 04bc 8023     		movs	r3, #128
 6199 04be 87F83330 		strb	r3, [r7, #51]
 6200 04c2 6EE0     		b	.L278
 6201              	.L329:
 6202              		.loc 1 3078 3 discriminator 98
 6203 04c4 7B68     		ldr	r3, [r7, #4]
 6204 04c6 1B68     		ldr	r3, [r3]
 6205 04c8 764A     		ldr	r2, .L410+12
 6206 04ca 9342     		cmp	r3, r2
 6207 04cc 30D1     		bne	.L339
 6208              		.loc 1 3078 3 discriminator 113
 6209 04ce 734B     		ldr	r3, .L410+4
 6210 04d0 5B6D     		ldr	r3, [r3, #84]
 6211 04d2 03F00703 		and	r3, r3, #7
 6212 04d6 052B     		cmp	r3, #5
 6213 04d8 26D8     		bhi	.L340
 6214 04da 01A2     		adr	r2, .L342
 6215 04dc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6216              		.p2align 2
 6217              	.L342:
 6218 04e0 F9040000 		.word	.L347+1
 6219 04e4 01050000 		.word	.L346+1
 6220 04e8 09050000 		.word	.L345+1
 6221 04ec 11050000 		.word	.L344+1
 6222 04f0 19050000 		.word	.L343+1
 6223 04f4 21050000 		.word	.L341+1
 6224              		.p2align 1
 6225              	.L347:
 6226              		.loc 1 3078 3 discriminator 116
 6227 04f8 0023     		movs	r3, #0
 6228 04fa 87F83330 		strb	r3, [r7, #51]
 6229 04fe 50E0     		b	.L278
 6230              	.L346:
ARM GAS  /tmp/ccp35uGD.s 			page 163


 6231              		.loc 1 3078 3 discriminator 117
 6232 0500 0423     		movs	r3, #4
 6233 0502 87F83330 		strb	r3, [r7, #51]
 6234 0506 4CE0     		b	.L278
 6235              	.L345:
 6236              		.loc 1 3078 3 discriminator 118
 6237 0508 0823     		movs	r3, #8
 6238 050a 87F83330 		strb	r3, [r7, #51]
 6239 050e 48E0     		b	.L278
 6240              	.L344:
 6241              		.loc 1 3078 3 discriminator 119
 6242 0510 1023     		movs	r3, #16
 6243 0512 87F83330 		strb	r3, [r7, #51]
 6244 0516 44E0     		b	.L278
 6245              	.L343:
 6246              		.loc 1 3078 3 discriminator 120
 6247 0518 2023     		movs	r3, #32
 6248 051a 87F83330 		strb	r3, [r7, #51]
 6249 051e 40E0     		b	.L278
 6250              	.L341:
 6251              		.loc 1 3078 3 discriminator 121
 6252 0520 4023     		movs	r3, #64
 6253 0522 87F83330 		strb	r3, [r7, #51]
 6254 0526 3CE0     		b	.L278
 6255              	.L340:
 6256              		.loc 1 3078 3 discriminator 115
 6257 0528 8023     		movs	r3, #128
 6258 052a 87F83330 		strb	r3, [r7, #51]
 6259 052e 38E0     		b	.L278
 6260              	.L339:
 6261              		.loc 1 3078 3 discriminator 114
 6262 0530 7B68     		ldr	r3, [r7, #4]
 6263 0532 1B68     		ldr	r3, [r3]
 6264 0534 5C4A     		ldr	r2, .L410+16
 6265 0536 9342     		cmp	r3, r2
 6266 0538 30D1     		bne	.L349
 6267              		.loc 1 3078 3 discriminator 129
 6268 053a 584B     		ldr	r3, .L410+4
 6269 053c 9B6D     		ldr	r3, [r3, #88]
 6270 053e 03F00703 		and	r3, r3, #7
 6271 0542 052B     		cmp	r3, #5
 6272 0544 26D8     		bhi	.L350
 6273 0546 01A2     		adr	r2, .L352
 6274 0548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6275              		.p2align 2
 6276              	.L352:
 6277 054c 65050000 		.word	.L357+1
 6278 0550 6D050000 		.word	.L356+1
 6279 0554 75050000 		.word	.L355+1
 6280 0558 7D050000 		.word	.L354+1
 6281 055c 85050000 		.word	.L353+1
 6282 0560 8D050000 		.word	.L351+1
 6283              		.p2align 1
 6284              	.L357:
 6285              		.loc 1 3078 3 discriminator 132
 6286 0564 0223     		movs	r3, #2
 6287 0566 87F83330 		strb	r3, [r7, #51]
ARM GAS  /tmp/ccp35uGD.s 			page 164


 6288 056a 1AE0     		b	.L278
 6289              	.L356:
 6290              		.loc 1 3078 3 discriminator 133
 6291 056c 0423     		movs	r3, #4
 6292 056e 87F83330 		strb	r3, [r7, #51]
 6293 0572 16E0     		b	.L278
 6294              	.L355:
 6295              		.loc 1 3078 3 discriminator 134
 6296 0574 0823     		movs	r3, #8
 6297 0576 87F83330 		strb	r3, [r7, #51]
 6298 057a 12E0     		b	.L278
 6299              	.L354:
 6300              		.loc 1 3078 3 discriminator 135
 6301 057c 1023     		movs	r3, #16
 6302 057e 87F83330 		strb	r3, [r7, #51]
 6303 0582 0EE0     		b	.L278
 6304              	.L353:
 6305              		.loc 1 3078 3 discriminator 136
 6306 0584 2023     		movs	r3, #32
 6307 0586 87F83330 		strb	r3, [r7, #51]
 6308 058a 0AE0     		b	.L278
 6309              	.L351:
 6310              		.loc 1 3078 3 discriminator 137
 6311 058c 4023     		movs	r3, #64
 6312 058e 87F83330 		strb	r3, [r7, #51]
 6313 0592 06E0     		b	.L278
 6314              	.L350:
 6315              		.loc 1 3078 3 discriminator 131
 6316 0594 8023     		movs	r3, #128
 6317 0596 87F83330 		strb	r3, [r7, #51]
 6318 059a 02E0     		b	.L278
 6319              	.L349:
 6320              		.loc 1 3078 3 discriminator 130
 6321 059c 8023     		movs	r3, #128
 6322 059e 87F83330 		strb	r3, [r7, #51]
 6323              	.L278:
3079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check LPUART instance */
3081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 6324              		.loc 1 3081 7 is_stmt 1
 6325 05a2 7B68     		ldr	r3, [r7, #4]
 6326 05a4 1B68     		ldr	r3, [r3]
 6327              		.loc 1 3081 6
 6328 05a6 404A     		ldr	r2, .L410+16
 6329 05a8 9342     		cmp	r3, r2
 6330 05aa 40F0EF80 		bne	.L359
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Retrieve frequency clock */
3084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 6331              		.loc 1 3084 5
 6332 05ae 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 6333 05b2 202B     		cmp	r3, #32
 6334 05b4 46DC     		bgt	.L360
 6335 05b6 022B     		cmp	r3, #2
 6336 05b8 C0F28180 		blt	.L361
 6337 05bc 023B     		subs	r3, r3, #2
 6338 05be 1E2B     		cmp	r3, #30
ARM GAS  /tmp/ccp35uGD.s 			page 165


 6339 05c0 7DD8     		bhi	.L361
 6340 05c2 01A2     		adr	r2, .L363
 6341 05c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6342              		.p2align 2
 6343              	.L363:
 6344 05c8 4B060000 		.word	.L367+1
 6345 05cc BF060000 		.word	.L361+1
 6346 05d0 53060000 		.word	.L366+1
 6347 05d4 BF060000 		.word	.L361+1
 6348 05d8 BF060000 		.word	.L361+1
 6349 05dc BF060000 		.word	.L361+1
 6350 05e0 63060000 		.word	.L365+1
 6351 05e4 BF060000 		.word	.L361+1
 6352 05e8 BF060000 		.word	.L361+1
 6353 05ec BF060000 		.word	.L361+1
 6354 05f0 BF060000 		.word	.L361+1
 6355 05f4 BF060000 		.word	.L361+1
 6356 05f8 BF060000 		.word	.L361+1
 6357 05fc BF060000 		.word	.L361+1
 6358 0600 73060000 		.word	.L364+1
 6359 0604 BF060000 		.word	.L361+1
 6360 0608 BF060000 		.word	.L361+1
 6361 060c BF060000 		.word	.L361+1
 6362 0610 BF060000 		.word	.L361+1
 6363 0614 BF060000 		.word	.L361+1
 6364 0618 BF060000 		.word	.L361+1
 6365 061c BF060000 		.word	.L361+1
 6366 0620 BF060000 		.word	.L361+1
 6367 0624 BF060000 		.word	.L361+1
 6368 0628 BF060000 		.word	.L361+1
 6369 062c BF060000 		.word	.L361+1
 6370 0630 BF060000 		.word	.L361+1
 6371 0634 BF060000 		.word	.L361+1
 6372 0638 BF060000 		.word	.L361+1
 6373 063c BF060000 		.word	.L361+1
 6374 0640 B1060000 		.word	.L362+1
 6375              		.p2align 1
 6376              	.L360:
 6377 0644 402B     		cmp	r3, #64
 6378 0646 36D0     		beq	.L368
 6379 0648 39E0     		b	.L361
 6380              	.L367:
3085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D3PCLK1:
3087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCCEx_GetD3PCLK1Freq();
 6381              		.loc 1 3087 16
 6382 064a FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 6383 064e F862     		str	r0, [r7, #44]
3088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6384              		.loc 1 3088 9
 6385 0650 3BE0     		b	.L369
 6386              	.L366:
3089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 6387              		.loc 1 3090 9
 6388 0652 07F11403 		add	r3, r7, #20
 6389 0656 1846     		mov	r0, r3
ARM GAS  /tmp/ccp35uGD.s 			page 166


 6390 0658 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 6391              		.loc 1 3091 14
 6392 065c BB69     		ldr	r3, [r7, #24]
 6393 065e FB62     		str	r3, [r7, #44]
3092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6394              		.loc 1 3092 9
 6395 0660 33E0     		b	.L369
 6396              	.L365:
3093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 6397              		.loc 1 3094 9
 6398 0662 07F10803 		add	r3, r7, #8
 6399 0666 1846     		mov	r0, r3
 6400 0668 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 6401              		.loc 1 3095 14
 6402 066c FB68     		ldr	r3, [r7, #12]
 6403 066e FB62     		str	r3, [r7, #44]
3096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6404              		.loc 1 3096 9
 6405 0670 2BE0     		b	.L369
 6406              	.L364:
3097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 6407              		.loc 1 3098 13
 6408 0672 0A4B     		ldr	r3, .L410+4
 6409 0674 1B68     		ldr	r3, [r3]
 6410 0676 03F02003 		and	r3, r3, #32
 6411              		.loc 1 3098 12
 6412 067a 002B     		cmp	r3, #0
 6413 067c 09D0     		beq	.L370
3099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 6414              		.loc 1 3100 43
 6415 067e 074B     		ldr	r3, .L410+4
 6416 0680 1B68     		ldr	r3, [r3]
 6417              		.loc 1 3100 71
 6418 0682 DB08     		lsrs	r3, r3, #3
 6419 0684 03F00303 		and	r3, r3, #3
 6420              		.loc 1 3100 16
 6421 0688 084A     		ldr	r2, .L410+20
 6422 068a 22FA03F3 		lsr	r3, r2, r3
 6423 068e FB62     		str	r3, [r7, #44]
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6424              		.loc 1 3106 9
 6425 0690 1BE0     		b	.L369
 6426              	.L370:
3104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 6427              		.loc 1 3104 16
 6428 0692 064B     		ldr	r3, .L410+20
 6429 0694 FB62     		str	r3, [r7, #44]
ARM GAS  /tmp/ccp35uGD.s 			page 167


 6430              		.loc 1 3106 9
 6431 0696 18E0     		b	.L369
 6432              	.L411:
 6433              		.align	2
 6434              	.L410:
 6435 0698 00140140 		.word	1073812480
 6436 069c 00440258 		.word	1476543488
 6437 06a0 00780040 		.word	1073772544
 6438 06a4 007C0040 		.word	1073773568
 6439 06a8 000C0058 		.word	1476398080
 6440 06ac 0090D003 		.word	64000000
 6441              	.L362:
3107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 6442              		.loc 1 3108 14
 6443 06b0 C44B     		ldr	r3, .L412
 6444 06b2 FB62     		str	r3, [r7, #44]
3109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6445              		.loc 1 3109 9
 6446 06b4 09E0     		b	.L369
 6447              	.L368:
3110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 6448              		.loc 1 3111 14
 6449 06b6 4FF40043 		mov	r3, #32768
 6450 06ba FB62     		str	r3, [r7, #44]
3112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6451              		.loc 1 3112 9
 6452 06bc 05E0     		b	.L369
 6453              	.L361:
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 6454              		.loc 1 3114 14
 6455 06be 0023     		movs	r3, #0
 6456 06c0 FB62     		str	r3, [r7, #44]
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6457              		.loc 1 3115 13
 6458 06c2 0123     		movs	r3, #1
 6459 06c4 87F83230 		strb	r3, [r7, #50]
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6460              		.loc 1 3116 9
 6461 06c8 00BF     		nop
 6462              	.L369:
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If proper clock source reported */
3120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 6463              		.loc 1 3120 8
 6464 06ca FB6A     		ldr	r3, [r7, #44]
 6465 06cc 002B     		cmp	r3, #0
 6466 06ce 00F0DA81 		beq	.L376
3121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Compute clock after Prescaler */
3123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 6467              		.loc 1 3123 62
 6468 06d2 7B68     		ldr	r3, [r7, #4]
 6469 06d4 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccp35uGD.s 			page 168


 6470              		.loc 1 3123 50
 6471 06d6 BC4A     		ldr	r2, .L412+4
 6472 06d8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6473 06dc 1A46     		mov	r2, r3
 6474              		.loc 1 3123 26
 6475 06de FB6A     		ldr	r3, [r7, #44]
 6476 06e0 B3FBF2F3 		udiv	r3, r3, r2
 6477 06e4 3B62     		str	r3, [r7, #32]
3124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 6478              		.loc 1 3126 50
 6479 06e6 7B68     		ldr	r3, [r7, #4]
 6480 06e8 5A68     		ldr	r2, [r3, #4]
 6481              		.loc 1 3126 37
 6482 06ea 1346     		mov	r3, r2
 6483 06ec 5B00     		lsls	r3, r3, #1
 6484 06ee 1344     		add	r3, r3, r2
 6485              		.loc 1 3126 10
 6486 06f0 3A6A     		ldr	r2, [r7, #32]
 6487 06f2 9A42     		cmp	r2, r3
 6488 06f4 05D3     		bcc	.L373
3127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 6489              		.loc 1 3127 53 discriminator 1
 6490 06f6 7B68     		ldr	r3, [r7, #4]
 6491 06f8 5B68     		ldr	r3, [r3, #4]
 6492              		.loc 1 3127 40 discriminator 1
 6493 06fa 1B03     		lsls	r3, r3, #12
3126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 6494              		.loc 1 3126 62 discriminator 1
 6495 06fc 3A6A     		ldr	r2, [r7, #32]
 6496 06fe 9A42     		cmp	r2, r3
 6497 0700 03D9     		bls	.L374
 6498              	.L373:
3128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6499              		.loc 1 3129 13
 6500 0702 0123     		movs	r3, #1
 6501 0704 87F83230 		strb	r3, [r7, #50]
 6502 0708 BDE1     		b	.L376
 6503              	.L374:
3130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
 6504              		.loc 1 3135 31
 6505 070a FB6A     		ldr	r3, [r7, #44]
 6506 070c 1846     		mov	r0, r3
 6507 070e 4FF00001 		mov	r1, #0
 6508 0712 7B68     		ldr	r3, [r7, #4]
 6509 0714 5B6A     		ldr	r3, [r3, #36]
 6510 0716 AC4A     		ldr	r2, .L412+4
 6511 0718 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6512 071c 9AB2     		uxth	r2, r3
 6513 071e 4FF00003 		mov	r3, #0
ARM GAS  /tmp/ccp35uGD.s 			page 169


 6514 0722 FFF7FEFF 		bl	__aeabi_uldivmod
 6515              	.LVL6:
 6516 0726 0246     		mov	r2, r0
 6517 0728 0B46     		mov	r3, r1
 6518 072a 1046     		mov	r0, r2
 6519 072c 1946     		mov	r1, r3
 6520 072e 4FF00002 		mov	r2, #0
 6521 0732 4FF00003 		mov	r3, #0
 6522 0736 0B02     		lsls	r3, r1, #8
 6523 0738 43EA1063 		orr	r3, r3, r0, lsr #24
 6524 073c 0202     		lsls	r2, r0, #8
 6525 073e 7968     		ldr	r1, [r7, #4]
 6526 0740 4968     		ldr	r1, [r1, #4]
 6527 0742 4908     		lsrs	r1, r1, #1
 6528 0744 0846     		mov	r0, r1
 6529 0746 4FF00001 		mov	r1, #0
 6530 074a 1418     		adds	r4, r2, r0
 6531 074c 43EB0105 		adc	r5, r3, r1
 6532 0750 7B68     		ldr	r3, [r7, #4]
 6533 0752 5B68     		ldr	r3, [r3, #4]
 6534 0754 1A46     		mov	r2, r3
 6535 0756 4FF00003 		mov	r3, #0
 6536 075a 2046     		mov	r0, r4
 6537 075c 2946     		mov	r1, r5
 6538 075e FFF7FEFF 		bl	__aeabi_uldivmod
 6539              	.LVL7:
 6540 0762 0246     		mov	r2, r0
 6541 0764 0B46     		mov	r3, r1
 6542              		.loc 1 3135 18
 6543 0766 1346     		mov	r3, r2
 6544 0768 BB62     		str	r3, [r7, #40]
3136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 6545              		.loc 1 3136 12
 6546 076a BB6A     		ldr	r3, [r7, #40]
 6547 076c B3F5407F 		cmp	r3, #768
 6548 0770 08D3     		bcc	.L375
 6549              		.loc 1 3136 42 discriminator 1
 6550 0772 BB6A     		ldr	r3, [r7, #40]
 6551 0774 B3F5801F 		cmp	r3, #1048576
 6552 0778 04D2     		bcs	.L375
3137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 6553              		.loc 1 3138 16
 6554 077a 7B68     		ldr	r3, [r7, #4]
 6555 077c 1B68     		ldr	r3, [r3]
 6556              		.loc 1 3138 32
 6557 077e BA6A     		ldr	r2, [r7, #40]
 6558 0780 DA60     		str	r2, [r3, #12]
 6559 0782 80E1     		b	.L376
 6560              	.L375:
3139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
 6561              		.loc 1 3142 15
 6562 0784 0123     		movs	r3, #1
 6563 0786 87F83230 		strb	r3, [r7, #50]
ARM GAS  /tmp/ccp35uGD.s 			page 170


 6564 078a 7CE1     		b	.L376
 6565              	.L359:
3143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     } /* if (pclk != 0) */
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 6566              		.loc 1 3149 23
 6567 078c 7B68     		ldr	r3, [r7, #4]
 6568 078e DB69     		ldr	r3, [r3, #28]
 6569              		.loc 1 3149 11
 6570 0790 B3F5004F 		cmp	r3, #32768
 6571 0794 40F0BF80 		bne	.L377
3150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 6572              		.loc 1 3151 5
 6573 0798 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 6574 079c 202B     		cmp	r3, #32
 6575 079e 49DC     		bgt	.L378
 6576 07a0 002B     		cmp	r3, #0
 6577 07a2 7CDB     		blt	.L379
 6578 07a4 202B     		cmp	r3, #32
 6579 07a6 7AD8     		bhi	.L379
 6580 07a8 01A2     		adr	r2, .L381
 6581 07aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6582 07ae 00BF     		.p2align 2
 6583              	.L381:
 6584 07b0 3B080000 		.word	.L386+1
 6585 07b4 43080000 		.word	.L385+1
 6586 07b8 9F080000 		.word	.L379+1
 6587 07bc 9F080000 		.word	.L379+1
 6588 07c0 4B080000 		.word	.L384+1
 6589 07c4 9F080000 		.word	.L379+1
 6590 07c8 9F080000 		.word	.L379+1
 6591 07cc 9F080000 		.word	.L379+1
 6592 07d0 5B080000 		.word	.L383+1
 6593 07d4 9F080000 		.word	.L379+1
 6594 07d8 9F080000 		.word	.L379+1
 6595 07dc 9F080000 		.word	.L379+1
 6596 07e0 9F080000 		.word	.L379+1
 6597 07e4 9F080000 		.word	.L379+1
 6598 07e8 9F080000 		.word	.L379+1
 6599 07ec 9F080000 		.word	.L379+1
 6600 07f0 6B080000 		.word	.L382+1
 6601 07f4 9F080000 		.word	.L379+1
 6602 07f8 9F080000 		.word	.L379+1
 6603 07fc 9F080000 		.word	.L379+1
 6604 0800 9F080000 		.word	.L379+1
 6605 0804 9F080000 		.word	.L379+1
 6606 0808 9F080000 		.word	.L379+1
 6607 080c 9F080000 		.word	.L379+1
 6608 0810 9F080000 		.word	.L379+1
 6609 0814 9F080000 		.word	.L379+1
 6610 0818 9F080000 		.word	.L379+1
 6611 081c 9F080000 		.word	.L379+1
ARM GAS  /tmp/ccp35uGD.s 			page 171


 6612 0820 9F080000 		.word	.L379+1
 6613 0824 9F080000 		.word	.L379+1
 6614 0828 9F080000 		.word	.L379+1
 6615 082c 9F080000 		.word	.L379+1
 6616 0830 91080000 		.word	.L380+1
 6617              		.p2align 1
 6618              	.L378:
 6619 0834 402B     		cmp	r3, #64
 6620 0836 2ED0     		beq	.L387
 6621 0838 31E0     		b	.L379
 6622              	.L386:
3152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 6623              		.loc 1 3154 16
 6624 083a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6625 083e F862     		str	r0, [r7, #44]
3155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6626              		.loc 1 3155 9
 6627 0840 33E0     		b	.L388
 6628              	.L385:
3156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 6629              		.loc 1 3157 16
 6630 0842 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6631 0846 F862     		str	r0, [r7, #44]
3158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6632              		.loc 1 3158 9
 6633 0848 2FE0     		b	.L388
 6634              	.L384:
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 6635              		.loc 1 3160 9
 6636 084a 07F11403 		add	r3, r7, #20
 6637 084e 1846     		mov	r0, r3
 6638 0850 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 6639              		.loc 1 3161 14
 6640 0854 BB69     		ldr	r3, [r7, #24]
 6641 0856 FB62     		str	r3, [r7, #44]
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6642              		.loc 1 3162 9
 6643 0858 27E0     		b	.L388
 6644              	.L383:
3163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 6645              		.loc 1 3164 9
 6646 085a 07F10803 		add	r3, r7, #8
 6647 085e 1846     		mov	r0, r3
 6648 0860 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 6649              		.loc 1 3165 14
 6650 0864 FB68     		ldr	r3, [r7, #12]
 6651 0866 FB62     		str	r3, [r7, #44]
3166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6652              		.loc 1 3166 9
 6653 0868 1FE0     		b	.L388
ARM GAS  /tmp/ccp35uGD.s 			page 172


 6654              	.L382:
3167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 6655              		.loc 1 3168 13
 6656 086a 584B     		ldr	r3, .L412+8
 6657 086c 1B68     		ldr	r3, [r3]
 6658 086e 03F02003 		and	r3, r3, #32
 6659              		.loc 1 3168 12
 6660 0872 002B     		cmp	r3, #0
 6661 0874 09D0     		beq	.L389
3169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 6662              		.loc 1 3170 43
 6663 0876 554B     		ldr	r3, .L412+8
 6664 0878 1B68     		ldr	r3, [r3]
 6665              		.loc 1 3170 71
 6666 087a DB08     		lsrs	r3, r3, #3
 6667 087c 03F00303 		and	r3, r3, #3
 6668              		.loc 1 3170 16
 6669 0880 534A     		ldr	r2, .L412+12
 6670 0882 22FA03F3 		lsr	r3, r2, r3
 6671 0886 FB62     		str	r3, [r7, #44]
3171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6672              		.loc 1 3176 9
 6673 0888 0FE0     		b	.L388
 6674              	.L389:
3174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 6675              		.loc 1 3174 16
 6676 088a 514B     		ldr	r3, .L412+12
 6677 088c FB62     		str	r3, [r7, #44]
 6678              		.loc 1 3176 9
 6679 088e 0CE0     		b	.L388
 6680              	.L380:
3177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 6681              		.loc 1 3178 14
 6682 0890 4C4B     		ldr	r3, .L412
 6683 0892 FB62     		str	r3, [r7, #44]
3179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6684              		.loc 1 3179 9
 6685 0894 09E0     		b	.L388
 6686              	.L387:
3180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 6687              		.loc 1 3181 14
 6688 0896 4FF40043 		mov	r3, #32768
 6689 089a FB62     		str	r3, [r7, #44]
3182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6690              		.loc 1 3182 9
 6691 089c 05E0     		b	.L388
 6692              	.L379:
3183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
ARM GAS  /tmp/ccp35uGD.s 			page 173


3184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 6693              		.loc 1 3184 14
 6694 089e 0023     		movs	r3, #0
 6695 08a0 FB62     		str	r3, [r7, #44]
3185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6696              		.loc 1 3185 13
 6697 08a2 0123     		movs	r3, #1
 6698 08a4 87F83230 		strb	r3, [r7, #50]
3186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6699              		.loc 1 3186 9
 6700 08a8 00BF     		nop
 6701              	.L388:
3187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 6702              		.loc 1 3190 8
 6703 08aa FB6A     		ldr	r3, [r7, #44]
 6704 08ac 002B     		cmp	r3, #0
 6705 08ae 00F0EA80 		beq	.L376
3191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
 6706              		.loc 1 3192 29
 6707 08b2 7B68     		ldr	r3, [r7, #4]
 6708 08b4 5B6A     		ldr	r3, [r3, #36]
 6709 08b6 444A     		ldr	r2, .L412+4
 6710 08b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6711 08bc 1A46     		mov	r2, r3
 6712 08be FB6A     		ldr	r3, [r7, #44]
 6713 08c0 B3FBF2F3 		udiv	r3, r3, r2
 6714 08c4 5A00     		lsls	r2, r3, #1
 6715 08c6 7B68     		ldr	r3, [r7, #4]
 6716 08c8 5B68     		ldr	r3, [r3, #4]
 6717 08ca 5B08     		lsrs	r3, r3, #1
 6718 08cc 1A44     		add	r2, r2, r3
 6719 08ce 7B68     		ldr	r3, [r7, #4]
 6720 08d0 5B68     		ldr	r3, [r3, #4]
 6721 08d2 B2FBF3F3 		udiv	r3, r2, r3
 6722              		.loc 1 3192 18
 6723 08d6 9BB2     		uxth	r3, r3
 6724              		.loc 1 3192 16
 6725 08d8 BB62     		str	r3, [r7, #40]
3193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 6726              		.loc 1 3193 10
 6727 08da BB6A     		ldr	r3, [r7, #40]
 6728 08dc 0F2B     		cmp	r3, #15
 6729 08de 16D9     		bls	.L392
 6730              		.loc 1 3193 38 discriminator 1
 6731 08e0 BB6A     		ldr	r3, [r7, #40]
 6732 08e2 B3F5803F 		cmp	r3, #65536
 6733 08e6 12D2     		bcs	.L392
3194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 6734              		.loc 1 3195 19
 6735 08e8 BB6A     		ldr	r3, [r7, #40]
 6736 08ea 9BB2     		uxth	r3, r3
 6737              		.loc 1 3195 17
ARM GAS  /tmp/ccp35uGD.s 			page 174


 6738 08ec 23F00F03 		bic	r3, r3, #15
 6739 08f0 FB84     		strh	r3, [r7, #38]	@ movhi
3196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 6740              		.loc 1 3196 62
 6741 08f2 BB6A     		ldr	r3, [r7, #40]
 6742 08f4 5B08     		lsrs	r3, r3, #1
 6743              		.loc 1 3196 20
 6744 08f6 9BB2     		uxth	r3, r3
 6745 08f8 03F00703 		and	r3, r3, #7
 6746 08fc 9AB2     		uxth	r2, r3
 6747              		.loc 1 3196 17
 6748 08fe FB8C     		ldrh	r3, [r7, #38]	@ movhi
 6749 0900 1343     		orrs	r3, r3, r2
 6750 0902 FB84     		strh	r3, [r7, #38]	@ movhi
3197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 6751              		.loc 1 3197 14
 6752 0904 7B68     		ldr	r3, [r7, #4]
 6753 0906 1B68     		ldr	r3, [r3]
 6754              		.loc 1 3197 30
 6755 0908 FA8C     		ldrh	r2, [r7, #38]
 6756 090a DA60     		str	r2, [r3, #12]
 6757 090c BBE0     		b	.L376
 6758              	.L392:
3198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6759              		.loc 1 3201 13
 6760 090e 0123     		movs	r3, #1
 6761 0910 87F83230 		strb	r3, [r7, #50]
 6762 0914 B7E0     		b	.L376
 6763              	.L377:
3202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 6764              		.loc 1 3207 5
 6765 0916 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 6766 091a 202B     		cmp	r3, #32
 6767 091c 4ADC     		bgt	.L393
 6768 091e 002B     		cmp	r3, #0
 6769 0920 C0F28680 		blt	.L394
 6770 0924 202B     		cmp	r3, #32
 6771 0926 00F28380 		bhi	.L394
 6772 092a 01A2     		adr	r2, .L396
 6773 092c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6774              		.p2align 2
 6775              	.L396:
 6776 0930 BB090000 		.word	.L401+1
 6777 0934 D5090000 		.word	.L400+1
 6778 0938 310A0000 		.word	.L394+1
 6779 093c 310A0000 		.word	.L394+1
 6780 0940 DD090000 		.word	.L399+1
 6781 0944 310A0000 		.word	.L394+1
 6782 0948 310A0000 		.word	.L394+1
ARM GAS  /tmp/ccp35uGD.s 			page 175


 6783 094c 310A0000 		.word	.L394+1
 6784 0950 ED090000 		.word	.L398+1
 6785 0954 310A0000 		.word	.L394+1
 6786 0958 310A0000 		.word	.L394+1
 6787 095c 310A0000 		.word	.L394+1
 6788 0960 310A0000 		.word	.L394+1
 6789 0964 310A0000 		.word	.L394+1
 6790 0968 310A0000 		.word	.L394+1
 6791 096c 310A0000 		.word	.L394+1
 6792 0970 FD090000 		.word	.L397+1
 6793 0974 310A0000 		.word	.L394+1
 6794 0978 310A0000 		.word	.L394+1
 6795 097c 310A0000 		.word	.L394+1
 6796 0980 310A0000 		.word	.L394+1
 6797 0984 310A0000 		.word	.L394+1
 6798 0988 310A0000 		.word	.L394+1
 6799 098c 310A0000 		.word	.L394+1
 6800 0990 310A0000 		.word	.L394+1
 6801 0994 310A0000 		.word	.L394+1
 6802 0998 310A0000 		.word	.L394+1
 6803 099c 310A0000 		.word	.L394+1
 6804 09a0 310A0000 		.word	.L394+1
 6805 09a4 310A0000 		.word	.L394+1
 6806 09a8 310A0000 		.word	.L394+1
 6807 09ac 310A0000 		.word	.L394+1
 6808 09b0 230A0000 		.word	.L395+1
 6809              		.p2align 1
 6810              	.L393:
 6811 09b4 402B     		cmp	r3, #64
 6812 09b6 37D0     		beq	.L402
 6813 09b8 3AE0     		b	.L394
 6814              	.L401:
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 6815              		.loc 1 3210 16
 6816 09ba FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6817 09be F862     		str	r0, [r7, #44]
3211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6818              		.loc 1 3211 9
 6819 09c0 3CE0     		b	.L403
 6820              	.L413:
 6821 09c2 00BF     		.align	2
 6822              	.L412:
 6823 09c4 00093D00 		.word	4000000
 6824 09c8 00000000 		.word	UARTPrescTable
 6825 09cc 00440258 		.word	1476543488
 6826 09d0 0090D003 		.word	64000000
 6827              	.L400:
3212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 6828              		.loc 1 3213 16
 6829 09d4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6830 09d8 F862     		str	r0, [r7, #44]
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6831              		.loc 1 3214 9
 6832 09da 2FE0     		b	.L403
ARM GAS  /tmp/ccp35uGD.s 			page 176


 6833              	.L399:
3215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 6834              		.loc 1 3216 9
 6835 09dc 07F11403 		add	r3, r7, #20
 6836 09e0 1846     		mov	r0, r3
 6837 09e2 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 6838              		.loc 1 3217 14
 6839 09e6 BB69     		ldr	r3, [r7, #24]
 6840 09e8 FB62     		str	r3, [r7, #44]
3218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6841              		.loc 1 3218 9
 6842 09ea 27E0     		b	.L403
 6843              	.L398:
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 6844              		.loc 1 3220 9
 6845 09ec 07F10803 		add	r3, r7, #8
 6846 09f0 1846     		mov	r0, r3
 6847 09f2 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 6848              		.loc 1 3221 14
 6849 09f6 FB68     		ldr	r3, [r7, #12]
 6850 09f8 FB62     		str	r3, [r7, #44]
3222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6851              		.loc 1 3222 9
 6852 09fa 1FE0     		b	.L403
 6853              	.L397:
3223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 6854              		.loc 1 3224 13
 6855 09fc 2C4B     		ldr	r3, .L414
 6856 09fe 1B68     		ldr	r3, [r3]
 6857 0a00 03F02003 		and	r3, r3, #32
 6858              		.loc 1 3224 12
 6859 0a04 002B     		cmp	r3, #0
 6860 0a06 09D0     		beq	.L404
3225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 6861              		.loc 1 3226 43
 6862 0a08 294B     		ldr	r3, .L414
 6863 0a0a 1B68     		ldr	r3, [r3]
 6864              		.loc 1 3226 71
 6865 0a0c DB08     		lsrs	r3, r3, #3
 6866 0a0e 03F00303 		and	r3, r3, #3
 6867              		.loc 1 3226 16
 6868 0a12 284A     		ldr	r2, .L414+4
 6869 0a14 22FA03F3 		lsr	r3, r2, r3
 6870 0a18 FB62     		str	r3, [r7, #44]
3227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6871              		.loc 1 3232 9
ARM GAS  /tmp/ccp35uGD.s 			page 177


 6872 0a1a 0FE0     		b	.L403
 6873              	.L404:
3230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 6874              		.loc 1 3230 16
 6875 0a1c 254B     		ldr	r3, .L414+4
 6876 0a1e FB62     		str	r3, [r7, #44]
 6877              		.loc 1 3232 9
 6878 0a20 0CE0     		b	.L403
 6879              	.L395:
3233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 6880              		.loc 1 3234 14
 6881 0a22 254B     		ldr	r3, .L414+8
 6882 0a24 FB62     		str	r3, [r7, #44]
3235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6883              		.loc 1 3235 9
 6884 0a26 09E0     		b	.L403
 6885              	.L402:
3236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 6886              		.loc 1 3237 14
 6887 0a28 4FF40043 		mov	r3, #32768
 6888 0a2c FB62     		str	r3, [r7, #44]
3238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6889              		.loc 1 3238 9
 6890 0a2e 05E0     		b	.L403
 6891              	.L394:
3239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 6892              		.loc 1 3240 14
 6893 0a30 0023     		movs	r3, #0
 6894 0a32 FB62     		str	r3, [r7, #44]
3241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6895              		.loc 1 3241 13
 6896 0a34 0123     		movs	r3, #1
 6897 0a36 87F83230 		strb	r3, [r7, #50]
3242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 6898              		.loc 1 3242 9
 6899 0a3a 00BF     		nop
 6900              	.L403:
3243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 6901              		.loc 1 3245 8
 6902 0a3c FB6A     		ldr	r3, [r7, #44]
 6903 0a3e 002B     		cmp	r3, #0
 6904 0a40 21D0     		beq	.L376
3246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
 6905              		.loc 1 3248 29
 6906 0a42 7B68     		ldr	r3, [r7, #4]
 6907 0a44 5B6A     		ldr	r3, [r3, #36]
 6908 0a46 1D4A     		ldr	r2, .L414+12
 6909 0a48 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 6910 0a4c 1A46     		mov	r2, r3
 6911 0a4e FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/ccp35uGD.s 			page 178


 6912 0a50 B3FBF2F2 		udiv	r2, r3, r2
 6913 0a54 7B68     		ldr	r3, [r7, #4]
 6914 0a56 5B68     		ldr	r3, [r3, #4]
 6915 0a58 5B08     		lsrs	r3, r3, #1
 6916 0a5a 1A44     		add	r2, r2, r3
 6917 0a5c 7B68     		ldr	r3, [r7, #4]
 6918 0a5e 5B68     		ldr	r3, [r3, #4]
 6919 0a60 B2FBF3F3 		udiv	r3, r2, r3
 6920              		.loc 1 3248 18
 6921 0a64 9BB2     		uxth	r3, r3
 6922              		.loc 1 3248 16
 6923 0a66 BB62     		str	r3, [r7, #40]
3249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 6924              		.loc 1 3249 10
 6925 0a68 BB6A     		ldr	r3, [r7, #40]
 6926 0a6a 0F2B     		cmp	r3, #15
 6927 0a6c 08D9     		bls	.L406
 6928              		.loc 1 3249 38 discriminator 1
 6929 0a6e BB6A     		ldr	r3, [r7, #40]
 6930 0a70 B3F5803F 		cmp	r3, #65536
 6931 0a74 04D2     		bcs	.L406
3250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
 6932              		.loc 1 3251 14
 6933 0a76 7B68     		ldr	r3, [r7, #4]
 6934 0a78 1B68     		ldr	r3, [r3]
 6935              		.loc 1 3251 30
 6936 0a7a BA6A     		ldr	r2, [r7, #40]
 6937 0a7c DA60     		str	r2, [r3, #12]
 6938 0a7e 02E0     		b	.L376
 6939              	.L406:
3252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 6940              		.loc 1 3255 13
 6941 0a80 0123     		movs	r3, #1
 6942 0a82 87F83230 		strb	r3, [r7, #50]
 6943              	.L376:
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
 6944              		.loc 1 3261 28
 6945 0a86 7B68     		ldr	r3, [r7, #4]
 6946 0a88 0122     		movs	r2, #1
 6947 0a8a A3F86A20 		strh	r2, [r3, #106]	@ movhi
3262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 6948              		.loc 1 3262 28
 6949 0a8e 7B68     		ldr	r3, [r7, #4]
 6950 0a90 0122     		movs	r2, #1
 6951 0a92 A3F86820 		strh	r2, [r3, #104]	@ movhi
3263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear ISR function pointers */
3265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
ARM GAS  /tmp/ccp35uGD.s 			page 179


 6952              		.loc 1 3265 16
 6953 0a96 7B68     		ldr	r3, [r7, #4]
 6954 0a98 0022     		movs	r2, #0
 6955 0a9a 1A67     		str	r2, [r3, #112]
3266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 6956              		.loc 1 3266 16
 6957 0a9c 7B68     		ldr	r3, [r7, #4]
 6958 0a9e 0022     		movs	r2, #0
 6959 0aa0 5A67     		str	r2, [r3, #116]
3267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return ret;
 6960              		.loc 1 3268 10
 6961 0aa2 97F83230 		ldrb	r3, [r7, #50]	@ zero_extendqisi2
3269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6962              		.loc 1 3269 1
 6963 0aa6 1846     		mov	r0, r3
 6964 0aa8 3837     		adds	r7, r7, #56
 6965              	.LCFI241:
 6966              		.cfi_def_cfa_offset 16
 6967 0aaa BD46     		mov	sp, r7
 6968              	.LCFI242:
 6969              		.cfi_def_cfa_register 13
 6970              		@ sp needed
 6971 0aac B0BD     		pop	{r4, r5, r7, pc}
 6972              	.L415:
 6973 0aae 00BF     		.align	2
 6974              	.L414:
 6975 0ab0 00440258 		.word	1476543488
 6976 0ab4 0090D003 		.word	64000000
 6977 0ab8 00093D00 		.word	4000000
 6978 0abc 00000000 		.word	UARTPrescTable
 6979              		.cfi_endproc
 6980              	.LFE374:
 6982              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 6983              		.align	1
 6984              		.global	UART_AdvFeatureConfig
 6985              		.syntax unified
 6986              		.thumb
 6987              		.thumb_func
 6988              		.fpu fpv5-d16
 6990              	UART_AdvFeatureConfig:
 6991              	.LFB375:
3270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6992              		.loc 1 3277 1
 6993              		.cfi_startproc
 6994              		@ args = 0, pretend = 0, frame = 8
 6995              		@ frame_needed = 1, uses_anonymous_args = 0
 6996              		@ link register save eliminated.
 6997 0000 80B4     		push	{r7}
 6998              	.LCFI243:
ARM GAS  /tmp/ccp35uGD.s 			page 180


 6999              		.cfi_def_cfa_offset 4
 7000              		.cfi_offset 7, -4
 7001 0002 83B0     		sub	sp, sp, #12
 7002              	.LCFI244:
 7003              		.cfi_def_cfa_offset 16
 7004 0004 00AF     		add	r7, sp, #0
 7005              	.LCFI245:
 7006              		.cfi_def_cfa_register 7
 7007 0006 7860     		str	r0, [r7, #4]
3278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 7008              		.loc 1 3282 7
 7009 0008 7B68     		ldr	r3, [r7, #4]
 7010 000a 9B6A     		ldr	r3, [r3, #40]
 7011 000c 03F00103 		and	r3, r3, #1
 7012              		.loc 1 3282 6
 7013 0010 002B     		cmp	r3, #0
 7014 0012 0AD0     		beq	.L417
3283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 7015              		.loc 1 3285 5
 7016 0014 7B68     		ldr	r3, [r7, #4]
 7017 0016 1B68     		ldr	r3, [r3]
 7018 0018 5B68     		ldr	r3, [r3, #4]
 7019 001a 23F40031 		bic	r1, r3, #131072
 7020 001e 7B68     		ldr	r3, [r7, #4]
 7021 0020 DA6A     		ldr	r2, [r3, #44]
 7022 0022 7B68     		ldr	r3, [r7, #4]
 7023 0024 1B68     		ldr	r3, [r3]
 7024 0026 0A43     		orrs	r2, r2, r1
 7025 0028 5A60     		str	r2, [r3, #4]
 7026              	.L417:
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 7027              		.loc 1 3289 7
 7028 002a 7B68     		ldr	r3, [r7, #4]
 7029 002c 9B6A     		ldr	r3, [r3, #40]
 7030 002e 03F00203 		and	r3, r3, #2
 7031              		.loc 1 3289 6
 7032 0032 002B     		cmp	r3, #0
 7033 0034 0AD0     		beq	.L418
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 7034              		.loc 1 3292 5
 7035 0036 7B68     		ldr	r3, [r7, #4]
 7036 0038 1B68     		ldr	r3, [r3]
 7037 003a 5B68     		ldr	r3, [r3, #4]
 7038 003c 23F48031 		bic	r1, r3, #65536
 7039 0040 7B68     		ldr	r3, [r7, #4]
 7040 0042 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccp35uGD.s 			page 181


 7041 0044 7B68     		ldr	r3, [r7, #4]
 7042 0046 1B68     		ldr	r3, [r3]
 7043 0048 0A43     		orrs	r2, r2, r1
 7044 004a 5A60     		str	r2, [r3, #4]
 7045              	.L418:
3293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure data inversion */
3296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 7046              		.loc 1 3296 7
 7047 004c 7B68     		ldr	r3, [r7, #4]
 7048 004e 9B6A     		ldr	r3, [r3, #40]
 7049 0050 03F00403 		and	r3, r3, #4
 7050              		.loc 1 3296 6
 7051 0054 002B     		cmp	r3, #0
 7052 0056 0AD0     		beq	.L419
3297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 7053              		.loc 1 3299 5
 7054 0058 7B68     		ldr	r3, [r7, #4]
 7055 005a 1B68     		ldr	r3, [r3]
 7056 005c 5B68     		ldr	r3, [r3, #4]
 7057 005e 23F48021 		bic	r1, r3, #262144
 7058 0062 7B68     		ldr	r3, [r7, #4]
 7059 0064 5A6B     		ldr	r2, [r3, #52]
 7060 0066 7B68     		ldr	r3, [r7, #4]
 7061 0068 1B68     		ldr	r3, [r3]
 7062 006a 0A43     		orrs	r2, r2, r1
 7063 006c 5A60     		str	r2, [r3, #4]
 7064              	.L419:
3300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 7065              		.loc 1 3303 7
 7066 006e 7B68     		ldr	r3, [r7, #4]
 7067 0070 9B6A     		ldr	r3, [r3, #40]
 7068 0072 03F00803 		and	r3, r3, #8
 7069              		.loc 1 3303 6
 7070 0076 002B     		cmp	r3, #0
 7071 0078 0AD0     		beq	.L420
3304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 7072              		.loc 1 3306 5
 7073 007a 7B68     		ldr	r3, [r7, #4]
 7074 007c 1B68     		ldr	r3, [r3]
 7075 007e 5B68     		ldr	r3, [r3, #4]
 7076 0080 23F40041 		bic	r1, r3, #32768
 7077 0084 7B68     		ldr	r3, [r7, #4]
 7078 0086 9A6B     		ldr	r2, [r3, #56]
 7079 0088 7B68     		ldr	r3, [r7, #4]
 7080 008a 1B68     		ldr	r3, [r3]
 7081 008c 0A43     		orrs	r2, r2, r1
 7082 008e 5A60     		str	r2, [r3, #4]
 7083              	.L420:
ARM GAS  /tmp/ccp35uGD.s 			page 182


3307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 7084              		.loc 1 3310 7
 7085 0090 7B68     		ldr	r3, [r7, #4]
 7086 0092 9B6A     		ldr	r3, [r3, #40]
 7087 0094 03F01003 		and	r3, r3, #16
 7088              		.loc 1 3310 6
 7089 0098 002B     		cmp	r3, #0
 7090 009a 0AD0     		beq	.L421
3311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 7091              		.loc 1 3313 5
 7092 009c 7B68     		ldr	r3, [r7, #4]
 7093 009e 1B68     		ldr	r3, [r3]
 7094 00a0 9B68     		ldr	r3, [r3, #8]
 7095 00a2 23F48051 		bic	r1, r3, #4096
 7096 00a6 7B68     		ldr	r3, [r7, #4]
 7097 00a8 DA6B     		ldr	r2, [r3, #60]
 7098 00aa 7B68     		ldr	r3, [r7, #4]
 7099 00ac 1B68     		ldr	r3, [r3]
 7100 00ae 0A43     		orrs	r2, r2, r1
 7101 00b0 9A60     		str	r2, [r3, #8]
 7102              	.L421:
3314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 7103              		.loc 1 3317 7
 7104 00b2 7B68     		ldr	r3, [r7, #4]
 7105 00b4 9B6A     		ldr	r3, [r3, #40]
 7106 00b6 03F02003 		and	r3, r3, #32
 7107              		.loc 1 3317 6
 7108 00ba 002B     		cmp	r3, #0
 7109 00bc 0AD0     		beq	.L422
3318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 7110              		.loc 1 3320 5
 7111 00be 7B68     		ldr	r3, [r7, #4]
 7112 00c0 1B68     		ldr	r3, [r3]
 7113 00c2 9B68     		ldr	r3, [r3, #8]
 7114 00c4 23F40051 		bic	r1, r3, #8192
 7115 00c8 7B68     		ldr	r3, [r7, #4]
 7116 00ca 1A6C     		ldr	r2, [r3, #64]
 7117 00cc 7B68     		ldr	r3, [r7, #4]
 7118 00ce 1B68     		ldr	r3, [r3]
 7119 00d0 0A43     		orrs	r2, r2, r1
 7120 00d2 9A60     		str	r2, [r3, #8]
 7121              	.L422:
3321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 7122              		.loc 1 3324 7
ARM GAS  /tmp/ccp35uGD.s 			page 183


 7123 00d4 7B68     		ldr	r3, [r7, #4]
 7124 00d6 9B6A     		ldr	r3, [r3, #40]
 7125 00d8 03F04003 		and	r3, r3, #64
 7126              		.loc 1 3324 6
 7127 00dc 002B     		cmp	r3, #0
 7128 00de 1AD0     		beq	.L423
3325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 7129              		.loc 1 3328 5
 7130 00e0 7B68     		ldr	r3, [r7, #4]
 7131 00e2 1B68     		ldr	r3, [r3]
 7132 00e4 5B68     		ldr	r3, [r3, #4]
 7133 00e6 23F48011 		bic	r1, r3, #1048576
 7134 00ea 7B68     		ldr	r3, [r7, #4]
 7135 00ec 5A6C     		ldr	r2, [r3, #68]
 7136 00ee 7B68     		ldr	r3, [r7, #4]
 7137 00f0 1B68     		ldr	r3, [r3]
 7138 00f2 0A43     		orrs	r2, r2, r1
 7139 00f4 5A60     		str	r2, [r3, #4]
3329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 7140              		.loc 1 3330 28
 7141 00f6 7B68     		ldr	r3, [r7, #4]
 7142 00f8 5B6C     		ldr	r3, [r3, #68]
 7143              		.loc 1 3330 8
 7144 00fa B3F5801F 		cmp	r3, #1048576
 7145 00fe 0AD1     		bne	.L423
3331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 7146              		.loc 1 3333 7
 7147 0100 7B68     		ldr	r3, [r7, #4]
 7148 0102 1B68     		ldr	r3, [r3]
 7149 0104 5B68     		ldr	r3, [r3, #4]
 7150 0106 23F4C001 		bic	r1, r3, #6291456
 7151 010a 7B68     		ldr	r3, [r7, #4]
 7152 010c 9A6C     		ldr	r2, [r3, #72]
 7153 010e 7B68     		ldr	r3, [r7, #4]
 7154 0110 1B68     		ldr	r3, [r3]
 7155 0112 0A43     		orrs	r2, r2, r1
 7156 0114 5A60     		str	r2, [r3, #4]
 7157              	.L423:
3334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 7158              		.loc 1 3338 7
 7159 0116 7B68     		ldr	r3, [r7, #4]
 7160 0118 9B6A     		ldr	r3, [r3, #40]
 7161 011a 03F08003 		and	r3, r3, #128
 7162              		.loc 1 3338 6
 7163 011e 002B     		cmp	r3, #0
 7164 0120 0AD0     		beq	.L425
3339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  /tmp/ccp35uGD.s 			page 184


3340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 7165              		.loc 1 3341 5
 7166 0122 7B68     		ldr	r3, [r7, #4]
 7167 0124 1B68     		ldr	r3, [r3]
 7168 0126 5B68     		ldr	r3, [r3, #4]
 7169 0128 23F40021 		bic	r1, r3, #524288
 7170 012c 7B68     		ldr	r3, [r7, #4]
 7171 012e DA6C     		ldr	r2, [r3, #76]
 7172 0130 7B68     		ldr	r3, [r7, #4]
 7173 0132 1B68     		ldr	r3, [r3]
 7174 0134 0A43     		orrs	r2, r2, r1
 7175 0136 5A60     		str	r2, [r3, #4]
 7176              	.L425:
3342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7177              		.loc 1 3343 1
 7178 0138 00BF     		nop
 7179 013a 0C37     		adds	r7, r7, #12
 7180              	.LCFI246:
 7181              		.cfi_def_cfa_offset 4
 7182 013c BD46     		mov	sp, r7
 7183              	.LCFI247:
 7184              		.cfi_def_cfa_register 13
 7185              		@ sp needed
 7186 013e 5DF8047B 		ldr	r7, [sp], #4
 7187              	.LCFI248:
 7188              		.cfi_restore 7
 7189              		.cfi_def_cfa_offset 0
 7190 0142 7047     		bx	lr
 7191              		.cfi_endproc
 7192              	.LFE375:
 7194              		.section	.text.UART_CheckIdleState,"ax",%progbits
 7195              		.align	1
 7196              		.global	UART_CheckIdleState
 7197              		.syntax unified
 7198              		.thumb
 7199              		.thumb_func
 7200              		.fpu fpv5-d16
 7202              	UART_CheckIdleState:
 7203              	.LFB376:
3344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Check the UART Idle State.
3347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7204              		.loc 1 3351 1
 7205              		.cfi_startproc
 7206              		@ args = 0, pretend = 0, frame = 16
 7207              		@ frame_needed = 1, uses_anonymous_args = 0
 7208 0000 80B5     		push	{r7, lr}
 7209              	.LCFI249:
 7210              		.cfi_def_cfa_offset 8
 7211              		.cfi_offset 7, -8
ARM GAS  /tmp/ccp35uGD.s 			page 185


 7212              		.cfi_offset 14, -4
 7213 0002 86B0     		sub	sp, sp, #24
 7214              	.LCFI250:
 7215              		.cfi_def_cfa_offset 32
 7216 0004 02AF     		add	r7, sp, #8
 7217              	.LCFI251:
 7218              		.cfi_def_cfa 7, 24
 7219 0006 7860     		str	r0, [r7, #4]
3352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
3353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7220              		.loc 1 3355 20
 7221 0008 7B68     		ldr	r3, [r7, #4]
 7222 000a 0022     		movs	r2, #0
 7223 000c C3F88C20 		str	r2, [r3, #140]
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init tickstart for timeout management */
3358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 7224              		.loc 1 3358 15
 7225 0010 FFF7FEFF 		bl	HAL_GetTick
 7226 0014 F860     		str	r0, [r7, #12]
3359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 7227              		.loc 1 3361 13
 7228 0016 7B68     		ldr	r3, [r7, #4]
 7229 0018 1B68     		ldr	r3, [r3]
 7230              		.loc 1 3361 23
 7231 001a 1B68     		ldr	r3, [r3]
 7232              		.loc 1 3361 29
 7233 001c 03F00803 		and	r3, r3, #8
 7234              		.loc 1 3361 6
 7235 0020 082B     		cmp	r3, #8
 7236 0022 0ED1     		bne	.L427
3362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 7237              		.loc 1 3364 9
 7238 0024 6FF07E43 		mvn	r3, #-33554432
 7239 0028 0093     		str	r3, [sp]
 7240 002a FB68     		ldr	r3, [r7, #12]
 7241 002c 0022     		movs	r2, #0
 7242 002e 4FF40011 		mov	r1, #2097152
 7243 0032 7868     		ldr	r0, [r7, #4]
 7244 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7245 0038 0346     		mov	r3, r0
 7246              		.loc 1 3364 8
 7247 003a 002B     		cmp	r3, #0
 7248 003c 01D0     		beq	.L427
3365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 7249              		.loc 1 3367 14
 7250 003e 0323     		movs	r3, #3
 7251 0040 25E0     		b	.L428
 7252              	.L427:
ARM GAS  /tmp/ccp35uGD.s 			page 186


3368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 7253              		.loc 1 3372 13
 7254 0042 7B68     		ldr	r3, [r7, #4]
 7255 0044 1B68     		ldr	r3, [r3]
 7256              		.loc 1 3372 23
 7257 0046 1B68     		ldr	r3, [r3]
 7258              		.loc 1 3372 29
 7259 0048 03F00403 		and	r3, r3, #4
 7260              		.loc 1 3372 6
 7261 004c 042B     		cmp	r3, #4
 7262 004e 0ED1     		bne	.L429
3373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until REACK flag is set */
3375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 7263              		.loc 1 3375 9
 7264 0050 6FF07E43 		mvn	r3, #-33554432
 7265 0054 0093     		str	r3, [sp]
 7266 0056 FB68     		ldr	r3, [r7, #12]
 7267 0058 0022     		movs	r2, #0
 7268 005a 4FF48001 		mov	r1, #4194304
 7269 005e 7868     		ldr	r0, [r7, #4]
 7270 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 7271 0064 0346     		mov	r3, r0
 7272              		.loc 1 3375 8
 7273 0066 002B     		cmp	r3, #0
 7274 0068 01D0     		beq	.L429
3376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 7275              		.loc 1 3378 14
 7276 006a 0323     		movs	r3, #3
 7277 006c 0FE0     		b	.L428
 7278              	.L429:
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART State */
3383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7279              		.loc 1 3383 17
 7280 006e 7B68     		ldr	r3, [r7, #4]
 7281 0070 2022     		movs	r2, #32
 7282 0072 C3F88420 		str	r2, [r3, #132]
3384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7283              		.loc 1 3384 18
 7284 0076 7B68     		ldr	r3, [r7, #4]
 7285 0078 2022     		movs	r2, #32
 7286 007a C3F88820 		str	r2, [r3, #136]
3385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7287              		.loc 1 3385 24
 7288 007e 7B68     		ldr	r3, [r7, #4]
 7289 0080 0022     		movs	r2, #0
 7290 0082 DA66     		str	r2, [r3, #108]
3386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 187


3387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7291              		.loc 1 3387 3
 7292 0084 7B68     		ldr	r3, [r7, #4]
 7293 0086 0022     		movs	r2, #0
 7294 0088 83F88020 		strb	r2, [r3, #128]
3388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7295              		.loc 1 3389 10
 7296 008c 0023     		movs	r3, #0
 7297              	.L428:
3390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7298              		.loc 1 3390 1
 7299 008e 1846     		mov	r0, r3
 7300 0090 1037     		adds	r7, r7, #16
 7301              	.LCFI252:
 7302              		.cfi_def_cfa_offset 8
 7303 0092 BD46     		mov	sp, r7
 7304              	.LCFI253:
 7305              		.cfi_def_cfa_register 13
 7306              		@ sp needed
 7307 0094 80BD     		pop	{r7, pc}
 7308              		.cfi_endproc
 7309              	.LFE376:
 7311              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7312              		.align	1
 7313              		.global	UART_WaitOnFlagUntilTimeout
 7314              		.syntax unified
 7315              		.thumb
 7316              		.thumb_func
 7317              		.fpu fpv5-d16
 7319              	UART_WaitOnFlagUntilTimeout:
 7320              	.LFB377:
3391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart     UART handle.
3395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Tickstart Tick start value
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout   Timeout duration
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7321              		.loc 1 3403 1
 7322              		.cfi_startproc
 7323              		@ args = 4, pretend = 0, frame = 16
 7324              		@ frame_needed = 1, uses_anonymous_args = 0
 7325 0000 80B5     		push	{r7, lr}
 7326              	.LCFI254:
 7327              		.cfi_def_cfa_offset 8
 7328              		.cfi_offset 7, -8
 7329              		.cfi_offset 14, -4
 7330 0002 84B0     		sub	sp, sp, #16
 7331              	.LCFI255:
 7332              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccp35uGD.s 			page 188


 7333 0004 00AF     		add	r7, sp, #0
 7334              	.LCFI256:
 7335              		.cfi_def_cfa_register 7
 7336 0006 F860     		str	r0, [r7, #12]
 7337 0008 B960     		str	r1, [r7, #8]
 7338 000a 3B60     		str	r3, [r7]
 7339 000c 1346     		mov	r3, r2
 7340 000e FB71     		strb	r3, [r7, #7]
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7341              		.loc 1 3405 9
 7342 0010 62E0     		b	.L431
 7343              	.L435:
3406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check for the Timeout */
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7344              		.loc 1 3408 8
 7345 0012 BB69     		ldr	r3, [r7, #24]
 7346 0014 B3F1FF3F 		cmp	r3, #-1
 7347 0018 5ED0     		beq	.L431
3409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 7348              		.loc 1 3410 13
 7349 001a FFF7FEFF 		bl	HAL_GetTick
 7350 001e 0246     		mov	r2, r0
 7351              		.loc 1 3410 27
 7352 0020 3B68     		ldr	r3, [r7]
 7353 0022 D31A     		subs	r3, r2, r3
 7354              		.loc 1 3410 10
 7355 0024 BA69     		ldr	r2, [r7, #24]
 7356 0026 9A42     		cmp	r2, r3
 7357 0028 02D3     		bcc	.L432
 7358              		.loc 1 3410 51 discriminator 1
 7359 002a BB69     		ldr	r3, [r7, #24]
 7360 002c 002B     		cmp	r3, #0
 7361 002e 1DD1     		bne	.L433
 7362              	.L432:
3411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            interrupts for the interrupt process */
3414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
 7363              		.loc 1 3414 9
 7364 0030 FB68     		ldr	r3, [r7, #12]
 7365 0032 1B68     		ldr	r3, [r3]
 7366 0034 1A68     		ldr	r2, [r3]
 7367 0036 FB68     		ldr	r3, [r7, #12]
 7368 0038 1B68     		ldr	r3, [r3]
 7369 003a 22F4D072 		bic	r2, r2, #416
 7370 003e 1A60     		str	r2, [r3]
3415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7371              		.loc 1 3415 9
 7372 0040 FB68     		ldr	r3, [r7, #12]
 7373 0042 1B68     		ldr	r3, [r3]
 7374 0044 9A68     		ldr	r2, [r3, #8]
 7375 0046 FB68     		ldr	r3, [r7, #12]
 7376 0048 1B68     		ldr	r3, [r3]
 7377 004a 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/ccp35uGD.s 			page 189


 7378 004e 9A60     		str	r2, [r3, #8]
3416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 7379              		.loc 1 3417 23
 7380 0050 FB68     		ldr	r3, [r7, #12]
 7381 0052 2022     		movs	r2, #32
 7382 0054 C3F88420 		str	r2, [r3, #132]
3418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 7383              		.loc 1 3418 24
 7384 0058 FB68     		ldr	r3, [r7, #12]
 7385 005a 2022     		movs	r2, #32
 7386 005c C3F88820 		str	r2, [r3, #136]
3419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 7387              		.loc 1 3420 9
 7388 0060 FB68     		ldr	r3, [r7, #12]
 7389 0062 0022     		movs	r2, #0
 7390 0064 83F88020 		strb	r2, [r3, #128]
3421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 7391              		.loc 1 3422 16
 7392 0068 0323     		movs	r3, #3
 7393 006a 45E0     		b	.L434
 7394              	.L433:
3423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 7395              		.loc 1 3425 11
 7396 006c FB68     		ldr	r3, [r7, #12]
 7397 006e 1B68     		ldr	r3, [r3]
 7398 0070 1B68     		ldr	r3, [r3]
 7399 0072 03F00403 		and	r3, r3, #4
 7400              		.loc 1 3425 10
 7401 0076 002B     		cmp	r3, #0
 7402 0078 2ED0     		beq	.L431
3426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 7403              		.loc 1 3427 13
 7404 007a FB68     		ldr	r3, [r7, #12]
 7405 007c 1B68     		ldr	r3, [r3]
 7406 007e DB69     		ldr	r3, [r3, #28]
 7407 0080 03F40063 		and	r3, r3, #2048
 7408              		.loc 1 3427 12
 7409 0084 B3F5006F 		cmp	r3, #2048
 7410 0088 26D1     		bne	.L431
3428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 7411              		.loc 1 3430 11
 7412 008a FB68     		ldr	r3, [r7, #12]
 7413 008c 1B68     		ldr	r3, [r3]
 7414 008e 4FF40062 		mov	r2, #2048
 7415 0092 1A62     		str	r2, [r3, #32]
3431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              interrupts for the interrupt process */
3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
ARM GAS  /tmp/ccp35uGD.s 			page 190


 7416              		.loc 1 3434 11
 7417 0094 FB68     		ldr	r3, [r7, #12]
 7418 0096 1B68     		ldr	r3, [r3]
 7419 0098 1A68     		ldr	r2, [r3]
 7420 009a FB68     		ldr	r3, [r7, #12]
 7421 009c 1B68     		ldr	r3, [r3]
 7422 009e 22F4D072 		bic	r2, r2, #416
 7423 00a2 1A60     		str	r2, [r3]
3435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7424              		.loc 1 3435 11
 7425 00a4 FB68     		ldr	r3, [r7, #12]
 7426 00a6 1B68     		ldr	r3, [r3]
 7427 00a8 9A68     		ldr	r2, [r3, #8]
 7428 00aa FB68     		ldr	r3, [r7, #12]
 7429 00ac 1B68     		ldr	r3, [r3]
 7430 00ae 22F00102 		bic	r2, r2, #1
 7431 00b2 9A60     		str	r2, [r3, #8]
3436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 7432              		.loc 1 3437 25
 7433 00b4 FB68     		ldr	r3, [r7, #12]
 7434 00b6 2022     		movs	r2, #32
 7435 00b8 C3F88420 		str	r2, [r3, #132]
3438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 7436              		.loc 1 3438 26
 7437 00bc FB68     		ldr	r3, [r7, #12]
 7438 00be 2022     		movs	r2, #32
 7439 00c0 C3F88820 		str	r2, [r3, #136]
3439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 7440              		.loc 1 3439 28
 7441 00c4 FB68     		ldr	r3, [r7, #12]
 7442 00c6 2022     		movs	r2, #32
 7443 00c8 C3F88C20 		str	r2, [r3, #140]
3440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Process Unlocked */
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 7444              		.loc 1 3442 11
 7445 00cc FB68     		ldr	r3, [r7, #12]
 7446 00ce 0022     		movs	r2, #0
 7447 00d0 83F88020 		strb	r2, [r3, #128]
3443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 7448              		.loc 1 3444 18
 7449 00d4 0323     		movs	r3, #3
 7450 00d6 0FE0     		b	.L434
 7451              	.L431:
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 7452              		.loc 1 3405 11
 7453 00d8 FB68     		ldr	r3, [r7, #12]
 7454 00da 1B68     		ldr	r3, [r3]
 7455 00dc DA69     		ldr	r2, [r3, #28]
 7456 00de BB68     		ldr	r3, [r7, #8]
 7457 00e0 1340     		ands	r3, r3, r2
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 7458              		.loc 1 3405 50
 7459 00e2 BA68     		ldr	r2, [r7, #8]
 7460 00e4 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccp35uGD.s 			page 191


 7461 00e6 0CBF     		ite	eq
 7462 00e8 0123     		moveq	r3, #1
 7463 00ea 0023     		movne	r3, #0
 7464 00ec DBB2     		uxtb	r3, r3
 7465 00ee 1A46     		mov	r2, r3
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 7466              		.loc 1 3405 59
 7467 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 7468              		.loc 1 3405 9
 7469 00f2 9A42     		cmp	r2, r3
 7470 00f4 8DD0     		beq	.L435
3445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7471              		.loc 1 3449 10
 7472 00f6 0023     		movs	r3, #0
 7473              	.L434:
3450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7474              		.loc 1 3450 1
 7475 00f8 1846     		mov	r0, r3
 7476 00fa 1037     		adds	r7, r7, #16
 7477              	.LCFI257:
 7478              		.cfi_def_cfa_offset 8
 7479 00fc BD46     		mov	sp, r7
 7480              	.LCFI258:
 7481              		.cfi_def_cfa_register 13
 7482              		@ sp needed
 7483 00fe 80BD     		pop	{r7, pc}
 7484              		.cfi_endproc
 7485              	.LFE377:
 7487              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 7488              		.align	1
 7489              		.global	UART_Start_Receive_IT
 7490              		.syntax unified
 7491              		.thumb
 7492              		.thumb_func
 7493              		.fpu fpv5-d16
 7495              	UART_Start_Receive_IT:
 7496              	.LFB378:
3451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7497              		.loc 1 3464 1
ARM GAS  /tmp/ccp35uGD.s 			page 192


 7498              		.cfi_startproc
 7499              		@ args = 0, pretend = 0, frame = 16
 7500              		@ frame_needed = 1, uses_anonymous_args = 0
 7501              		@ link register save eliminated.
 7502 0000 80B4     		push	{r7}
 7503              	.LCFI259:
 7504              		.cfi_def_cfa_offset 4
 7505              		.cfi_offset 7, -4
 7506 0002 85B0     		sub	sp, sp, #20
 7507              	.LCFI260:
 7508              		.cfi_def_cfa_offset 24
 7509 0004 00AF     		add	r7, sp, #0
 7510              	.LCFI261:
 7511              		.cfi_def_cfa_register 7
 7512 0006 F860     		str	r0, [r7, #12]
 7513 0008 B960     		str	r1, [r7, #8]
 7514 000a 1346     		mov	r3, r2
 7515 000c FB80     		strh	r3, [r7, #6]	@ movhi
3465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 7516              		.loc 1 3465 22
 7517 000e FB68     		ldr	r3, [r7, #12]
 7518 0010 BA68     		ldr	r2, [r7, #8]
 7519 0012 9A65     		str	r2, [r3, #88]
3466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferSize  = Size;
 7520              		.loc 1 3466 22
 7521 0014 FB68     		ldr	r3, [r7, #12]
 7522 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7523 0018 A3F85C20 		strh	r2, [r3, #92]	@ movhi
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = Size;
 7524              		.loc 1 3467 22
 7525 001c FB68     		ldr	r3, [r7, #12]
 7526 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 7527 0020 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR       = NULL;
 7528              		.loc 1 3468 22
 7529 0024 FB68     		ldr	r3, [r7, #12]
 7530 0026 0022     		movs	r2, #0
 7531 0028 1A67     		str	r2, [r3, #112]
3469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 7532              		.loc 1 3471 3
 7533 002a FB68     		ldr	r3, [r7, #12]
 7534 002c 9B68     		ldr	r3, [r3, #8]
 7535 002e B3F5805F 		cmp	r3, #4096
 7536 0032 0ED1     		bne	.L437
 7537              		.loc 1 3471 3 is_stmt 0 discriminator 1
 7538 0034 FB68     		ldr	r3, [r7, #12]
 7539 0036 1B69     		ldr	r3, [r3, #16]
 7540 0038 002B     		cmp	r3, #0
 7541 003a 05D1     		bne	.L438
 7542              		.loc 1 3471 3 discriminator 3
 7543 003c FB68     		ldr	r3, [r7, #12]
 7544 003e 40F2FF12 		movw	r2, #511
 7545 0042 A3F86020 		strh	r2, [r3, #96]	@ movhi
 7546 0046 2DE0     		b	.L439
 7547              	.L438:
ARM GAS  /tmp/ccp35uGD.s 			page 193


 7548              		.loc 1 3471 3 discriminator 4
 7549 0048 FB68     		ldr	r3, [r7, #12]
 7550 004a FF22     		movs	r2, #255
 7551 004c A3F86020 		strh	r2, [r3, #96]	@ movhi
 7552 0050 28E0     		b	.L439
 7553              	.L437:
 7554              		.loc 1 3471 3 discriminator 2
 7555 0052 FB68     		ldr	r3, [r7, #12]
 7556 0054 9B68     		ldr	r3, [r3, #8]
 7557 0056 002B     		cmp	r3, #0
 7558 0058 0DD1     		bne	.L440
 7559              		.loc 1 3471 3 discriminator 5
 7560 005a FB68     		ldr	r3, [r7, #12]
 7561 005c 1B69     		ldr	r3, [r3, #16]
 7562 005e 002B     		cmp	r3, #0
 7563 0060 04D1     		bne	.L441
 7564              		.loc 1 3471 3 discriminator 7
 7565 0062 FB68     		ldr	r3, [r7, #12]
 7566 0064 FF22     		movs	r2, #255
 7567 0066 A3F86020 		strh	r2, [r3, #96]	@ movhi
 7568 006a 1BE0     		b	.L439
 7569              	.L441:
 7570              		.loc 1 3471 3 discriminator 8
 7571 006c FB68     		ldr	r3, [r7, #12]
 7572 006e 7F22     		movs	r2, #127
 7573 0070 A3F86020 		strh	r2, [r3, #96]	@ movhi
 7574 0074 16E0     		b	.L439
 7575              	.L440:
 7576              		.loc 1 3471 3 discriminator 6
 7577 0076 FB68     		ldr	r3, [r7, #12]
 7578 0078 9B68     		ldr	r3, [r3, #8]
 7579 007a B3F1805F 		cmp	r3, #268435456
 7580 007e 0DD1     		bne	.L442
 7581              		.loc 1 3471 3 discriminator 9
 7582 0080 FB68     		ldr	r3, [r7, #12]
 7583 0082 1B69     		ldr	r3, [r3, #16]
 7584 0084 002B     		cmp	r3, #0
 7585 0086 04D1     		bne	.L443
 7586              		.loc 1 3471 3 discriminator 11
 7587 0088 FB68     		ldr	r3, [r7, #12]
 7588 008a 7F22     		movs	r2, #127
 7589 008c A3F86020 		strh	r2, [r3, #96]	@ movhi
 7590 0090 08E0     		b	.L439
 7591              	.L443:
 7592              		.loc 1 3471 3 discriminator 12
 7593 0092 FB68     		ldr	r3, [r7, #12]
 7594 0094 3F22     		movs	r2, #63
 7595 0096 A3F86020 		strh	r2, [r3, #96]	@ movhi
 7596 009a 03E0     		b	.L439
 7597              	.L442:
 7598              		.loc 1 3471 3 discriminator 10
 7599 009c FB68     		ldr	r3, [r7, #12]
 7600 009e 0022     		movs	r2, #0
 7601 00a0 A3F86020 		strh	r2, [r3, #96]	@ movhi
 7602              	.L439:
3472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccp35uGD.s 			page 194


 7603              		.loc 1 3473 20 is_stmt 1
 7604 00a4 FB68     		ldr	r3, [r7, #12]
 7605 00a6 0022     		movs	r2, #0
 7606 00a8 C3F88C20 		str	r2, [r3, #140]
3474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7607              		.loc 1 3474 18
 7608 00ac FB68     		ldr	r3, [r7, #12]
 7609 00ae 2222     		movs	r2, #34
 7610 00b0 C3F88820 		str	r2, [r3, #136]
3475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7611              		.loc 1 3477 3
 7612 00b4 FB68     		ldr	r3, [r7, #12]
 7613 00b6 1B68     		ldr	r3, [r3]
 7614 00b8 9A68     		ldr	r2, [r3, #8]
 7615 00ba FB68     		ldr	r3, [r7, #12]
 7616 00bc 1B68     		ldr	r3, [r3]
 7617 00be 42F00102 		orr	r2, r2, #1
 7618 00c2 9A60     		str	r2, [r3, #8]
3478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 7619              		.loc 1 3480 13
 7620 00c4 FB68     		ldr	r3, [r7, #12]
 7621 00c6 5B6E     		ldr	r3, [r3, #100]
 7622              		.loc 1 3480 6
 7623 00c8 B3F1005F 		cmp	r3, #536870912
 7624 00cc 2AD1     		bne	.L444
 7625              		.loc 1 3480 66 discriminator 1
 7626 00ce FB68     		ldr	r3, [r7, #12]
 7627 00d0 B3F86830 		ldrh	r3, [r3, #104]
 7628              		.loc 1 3480 49 discriminator 1
 7629 00d4 FA88     		ldrh	r2, [r7, #6]
 7630 00d6 9A42     		cmp	r2, r3
 7631 00d8 24D3     		bcc	.L444
3481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 7632              		.loc 1 3483 21
 7633 00da FB68     		ldr	r3, [r7, #12]
 7634 00dc 9B68     		ldr	r3, [r3, #8]
 7635              		.loc 1 3483 8
 7636 00de B3F5805F 		cmp	r3, #4096
 7637 00e2 07D1     		bne	.L445
 7638              		.loc 1 3483 71 discriminator 1
 7639 00e4 FB68     		ldr	r3, [r7, #12]
 7640 00e6 1B69     		ldr	r3, [r3, #16]
 7641              		.loc 1 3483 56 discriminator 1
 7642 00e8 002B     		cmp	r3, #0
 7643 00ea 03D1     		bne	.L445
3484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 7644              		.loc 1 3485 20
 7645 00ec FB68     		ldr	r3, [r7, #12]
 7646 00ee 1F4A     		ldr	r2, .L451
 7647 00f0 1A67     		str	r2, [r3, #112]
ARM GAS  /tmp/ccp35uGD.s 			page 195


 7648 00f2 02E0     		b	.L446
 7649              	.L445:
3486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 7650              		.loc 1 3489 20
 7651 00f4 FB68     		ldr	r3, [r7, #12]
 7652 00f6 1E4A     		ldr	r2, .L451+4
 7653 00f8 1A67     		str	r2, [r3, #112]
 7654              	.L446:
3490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 7655              		.loc 1 3492 5
 7656 00fa FB68     		ldr	r3, [r7, #12]
 7657 00fc 0022     		movs	r2, #0
 7658 00fe 83F88020 		strb	r2, [r3, #128]
3493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7659              		.loc 1 3495 5
 7660 0102 FB68     		ldr	r3, [r7, #12]
 7661 0104 1B68     		ldr	r3, [r3]
 7662 0106 1A68     		ldr	r2, [r3]
 7663 0108 FB68     		ldr	r3, [r7, #12]
 7664 010a 1B68     		ldr	r3, [r3]
 7665 010c 42F48072 		orr	r2, r2, #256
 7666 0110 1A60     		str	r2, [r3]
3496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 7667              		.loc 1 3496 5
 7668 0112 FB68     		ldr	r3, [r7, #12]
 7669 0114 1B68     		ldr	r3, [r3]
 7670 0116 9A68     		ldr	r2, [r3, #8]
 7671 0118 FB68     		ldr	r3, [r7, #12]
 7672 011a 1B68     		ldr	r3, [r3]
 7673 011c 42F08052 		orr	r2, r2, #268435456
 7674 0120 9A60     		str	r2, [r3, #8]
 7675 0122 1BE0     		b	.L447
 7676              	.L444:
3497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 7677              		.loc 1 3501 21
 7678 0124 FB68     		ldr	r3, [r7, #12]
 7679 0126 9B68     		ldr	r3, [r3, #8]
 7680              		.loc 1 3501 8
 7681 0128 B3F5805F 		cmp	r3, #4096
 7682 012c 07D1     		bne	.L448
 7683              		.loc 1 3501 71 discriminator 1
 7684 012e FB68     		ldr	r3, [r7, #12]
 7685 0130 1B69     		ldr	r3, [r3, #16]
 7686              		.loc 1 3501 56 discriminator 1
 7687 0132 002B     		cmp	r3, #0
 7688 0134 03D1     		bne	.L448
ARM GAS  /tmp/ccp35uGD.s 			page 196


3502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 7689              		.loc 1 3503 20
 7690 0136 FB68     		ldr	r3, [r7, #12]
 7691 0138 0E4A     		ldr	r2, .L451+8
 7692 013a 1A67     		str	r2, [r3, #112]
 7693 013c 02E0     		b	.L449
 7694              	.L448:
3504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 7695              		.loc 1 3507 20
 7696 013e FB68     		ldr	r3, [r7, #12]
 7697 0140 0D4A     		ldr	r2, .L451+12
 7698 0142 1A67     		str	r2, [r3, #112]
 7699              	.L449:
3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 7700              		.loc 1 3510 5
 7701 0144 FB68     		ldr	r3, [r7, #12]
 7702 0146 0022     		movs	r2, #0
 7703 0148 83F88020 		strb	r2, [r3, #128]
3511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 7704              		.loc 1 3513 5
 7705 014c FB68     		ldr	r3, [r7, #12]
 7706 014e 1B68     		ldr	r3, [r3]
 7707 0150 1A68     		ldr	r2, [r3]
 7708 0152 FB68     		ldr	r3, [r7, #12]
 7709 0154 1B68     		ldr	r3, [r3]
 7710 0156 42F49072 		orr	r2, r2, #288
 7711 015a 1A60     		str	r2, [r3]
 7712              	.L447:
3514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7713              		.loc 1 3515 10
 7714 015c 0023     		movs	r3, #0
3516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7715              		.loc 1 3516 1
 7716 015e 1846     		mov	r0, r3
 7717 0160 1437     		adds	r7, r7, #20
 7718              	.LCFI262:
 7719              		.cfi_def_cfa_offset 4
 7720 0162 BD46     		mov	sp, r7
 7721              	.LCFI263:
 7722              		.cfi_def_cfa_register 13
 7723              		@ sp needed
 7724 0164 5DF8047B 		ldr	r7, [sp], #4
 7725              	.LCFI264:
 7726              		.cfi_restore 7
 7727              		.cfi_def_cfa_offset 0
 7728 0168 7047     		bx	lr
 7729              	.L452:
 7730 016a 00BF     		.align	2
ARM GAS  /tmp/ccp35uGD.s 			page 197


 7731              	.L451:
 7732 016c 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 7733 0170 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 7734 0174 00000000 		.word	UART_RxISR_16BIT
 7735 0178 00000000 		.word	UART_RxISR_8BIT
 7736              		.cfi_endproc
 7737              	.LFE378:
 7739              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 7740              		.align	1
 7741              		.global	UART_Start_Receive_DMA
 7742              		.syntax unified
 7743              		.thumb
 7744              		.thumb_func
 7745              		.fpu fpv5-d16
 7747              	UART_Start_Receive_DMA:
 7748              	.LFB379:
3517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7749              		.loc 1 3530 1
 7750              		.cfi_startproc
 7751              		@ args = 0, pretend = 0, frame = 16
 7752              		@ frame_needed = 1, uses_anonymous_args = 0
 7753 0000 80B5     		push	{r7, lr}
 7754              	.LCFI265:
 7755              		.cfi_def_cfa_offset 8
 7756              		.cfi_offset 7, -8
 7757              		.cfi_offset 14, -4
 7758 0002 84B0     		sub	sp, sp, #16
 7759              	.LCFI266:
 7760              		.cfi_def_cfa_offset 24
 7761 0004 00AF     		add	r7, sp, #0
 7762              	.LCFI267:
 7763              		.cfi_def_cfa_register 7
 7764 0006 F860     		str	r0, [r7, #12]
 7765 0008 B960     		str	r1, [r7, #8]
 7766 000a 1346     		mov	r3, r2
 7767 000c FB80     		strh	r3, [r7, #6]	@ movhi
3531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 7768              		.loc 1 3531 21
 7769 000e FB68     		ldr	r3, [r7, #12]
 7770 0010 BA68     		ldr	r2, [r7, #8]
 7771 0012 9A65     		str	r2, [r3, #88]
3532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferSize = Size;
 7772              		.loc 1 3532 21
 7773 0014 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccp35uGD.s 			page 198


 7774 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7775 0018 A3F85C20 		strh	r2, [r3, #92]	@ movhi
3533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7776              		.loc 1 3534 20
 7777 001c FB68     		ldr	r3, [r7, #12]
 7778 001e 0022     		movs	r2, #0
 7779 0020 C3F88C20 		str	r2, [r3, #140]
3535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7780              		.loc 1 3535 18
 7781 0024 FB68     		ldr	r3, [r7, #12]
 7782 0026 2222     		movs	r2, #34
 7783 0028 C3F88820 		str	r2, [r3, #136]
3536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 7784              		.loc 1 3537 12
 7785 002c FB68     		ldr	r3, [r7, #12]
 7786 002e DB6F     		ldr	r3, [r3, #124]
 7787              		.loc 1 3537 6
 7788 0030 002B     		cmp	r3, #0
 7789 0032 2CD0     		beq	.L454
3538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 7790              		.loc 1 3540 10
 7791 0034 FB68     		ldr	r3, [r7, #12]
 7792 0036 DB6F     		ldr	r3, [r3, #124]
 7793              		.loc 1 3540 37
 7794 0038 254A     		ldr	r2, .L456
 7795 003a DA63     		str	r2, [r3, #60]
3541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 7796              		.loc 1 3543 10
 7797 003c FB68     		ldr	r3, [r7, #12]
 7798 003e DB6F     		ldr	r3, [r3, #124]
 7799              		.loc 1 3543 41
 7800 0040 244A     		ldr	r2, .L456+4
 7801 0042 1A64     		str	r2, [r3, #64]
3544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA error callback */
3546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 7802              		.loc 1 3546 10
 7803 0044 FB68     		ldr	r3, [r7, #12]
 7804 0046 DB6F     		ldr	r3, [r3, #124]
 7805              		.loc 1 3546 38
 7806 0048 234A     		ldr	r2, .L456+8
 7807 004a DA64     		str	r2, [r3, #76]
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA abort callback */
3549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 7808              		.loc 1 3549 10
 7809 004c FB68     		ldr	r3, [r7, #12]
 7810 004e DB6F     		ldr	r3, [r3, #124]
 7811              		.loc 1 3549 38
 7812 0050 0022     		movs	r2, #0
 7813 0052 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccp35uGD.s 			page 199


3550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA channel */
3552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
 7814              		.loc 1 3552 9
 7815 0054 FB68     		ldr	r3, [r7, #12]
 7816 0056 D86F     		ldr	r0, [r3, #124]
 7817              		.loc 1 3552 57
 7818 0058 FB68     		ldr	r3, [r7, #12]
 7819 005a 1B68     		ldr	r3, [r3]
 7820              		.loc 1 3552 51
 7821 005c 2433     		adds	r3, r3, #36
 7822              		.loc 1 3552 9
 7823 005e 1946     		mov	r1, r3
 7824              		.loc 1 3552 89
 7825 0060 FB68     		ldr	r3, [r7, #12]
 7826 0062 9B6D     		ldr	r3, [r3, #88]
 7827              		.loc 1 3552 9
 7828 0064 1A46     		mov	r2, r3
 7829 0066 FB88     		ldrh	r3, [r7, #6]
 7830 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7831 006c 0346     		mov	r3, r0
 7832              		.loc 1 3552 8
 7833 006e 002B     		cmp	r3, #0
 7834 0070 0DD0     		beq	.L454
3553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set error code to DMA */
3555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 7835              		.loc 1 3555 24
 7836 0072 FB68     		ldr	r3, [r7, #12]
 7837 0074 1022     		movs	r2, #16
 7838 0076 C3F88C20 		str	r2, [r3, #140]
3556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 7839              		.loc 1 3557 7
 7840 007a FB68     		ldr	r3, [r7, #12]
 7841 007c 0022     		movs	r2, #0
 7842 007e 83F88020 		strb	r2, [r3, #128]
3558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to ready */
3560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 7843              		.loc 1 3560 21
 7844 0082 FB68     		ldr	r3, [r7, #12]
 7845 0084 2022     		movs	r2, #32
 7846 0086 C3F88420 		str	r2, [r3, #132]
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 7847              		.loc 1 3562 14
 7848 008a 0123     		movs	r3, #1
 7849 008c 1CE0     		b	.L455
 7850              	.L454:
3563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7851              		.loc 1 3565 3
 7852 008e FB68     		ldr	r3, [r7, #12]
 7853 0090 0022     		movs	r2, #0
 7854 0092 83F88020 		strb	r2, [r3, #128]
ARM GAS  /tmp/ccp35uGD.s 			page 200


3566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7855              		.loc 1 3568 3
 7856 0096 FB68     		ldr	r3, [r7, #12]
 7857 0098 1B68     		ldr	r3, [r3]
 7858 009a 1A68     		ldr	r2, [r3]
 7859 009c FB68     		ldr	r3, [r7, #12]
 7860 009e 1B68     		ldr	r3, [r3]
 7861 00a0 42F48072 		orr	r2, r2, #256
 7862 00a4 1A60     		str	r2, [r3]
3569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7863              		.loc 1 3571 3
 7864 00a6 FB68     		ldr	r3, [r7, #12]
 7865 00a8 1B68     		ldr	r3, [r3]
 7866 00aa 9A68     		ldr	r2, [r3, #8]
 7867 00ac FB68     		ldr	r3, [r7, #12]
 7868 00ae 1B68     		ldr	r3, [r3]
 7869 00b0 42F00102 		orr	r2, r2, #1
 7870 00b4 9A60     		str	r2, [r3, #8]
3572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   in the UART CR3 register */
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7871              		.loc 1 3575 3
 7872 00b6 FB68     		ldr	r3, [r7, #12]
 7873 00b8 1B68     		ldr	r3, [r3]
 7874 00ba 9A68     		ldr	r2, [r3, #8]
 7875 00bc FB68     		ldr	r3, [r7, #12]
 7876 00be 1B68     		ldr	r3, [r3]
 7877 00c0 42F04002 		orr	r2, r2, #64
 7878 00c4 9A60     		str	r2, [r3, #8]
3576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7879              		.loc 1 3577 10
 7880 00c6 0023     		movs	r3, #0
 7881              	.L455:
3578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7882              		.loc 1 3578 1
 7883 00c8 1846     		mov	r0, r3
 7884 00ca 1037     		adds	r7, r7, #16
 7885              	.LCFI268:
 7886              		.cfi_def_cfa_offset 8
 7887 00cc BD46     		mov	sp, r7
 7888              	.LCFI269:
 7889              		.cfi_def_cfa_register 13
 7890              		@ sp needed
 7891 00ce 80BD     		pop	{r7, pc}
 7892              	.L457:
 7893              		.align	2
 7894              	.L456:
 7895 00d0 00000000 		.word	UART_DMAReceiveCplt
 7896 00d4 00000000 		.word	UART_DMARxHalfCplt
 7897 00d8 00000000 		.word	UART_DMAError
 7898              		.cfi_endproc
ARM GAS  /tmp/ccp35uGD.s 			page 201


 7899              	.LFE379:
 7901              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 7902              		.align	1
 7903              		.syntax unified
 7904              		.thumb
 7905              		.thumb_func
 7906              		.fpu fpv5-d16
 7908              	UART_EndTxTransfer:
 7909              	.LFB380:
3579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7910              		.loc 1 3587 1
 7911              		.cfi_startproc
 7912              		@ args = 0, pretend = 0, frame = 8
 7913              		@ frame_needed = 1, uses_anonymous_args = 0
 7914              		@ link register save eliminated.
 7915 0000 80B4     		push	{r7}
 7916              	.LCFI270:
 7917              		.cfi_def_cfa_offset 4
 7918              		.cfi_offset 7, -4
 7919 0002 83B0     		sub	sp, sp, #12
 7920              	.LCFI271:
 7921              		.cfi_def_cfa_offset 16
 7922 0004 00AF     		add	r7, sp, #0
 7923              	.LCFI272:
 7924              		.cfi_def_cfa_register 7
 7925 0006 7860     		str	r0, [r7, #4]
3588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 7926              		.loc 1 3589 3
 7927 0008 7B68     		ldr	r3, [r7, #4]
 7928 000a 1B68     		ldr	r3, [r3]
 7929 000c 1A68     		ldr	r2, [r3]
 7930 000e 7B68     		ldr	r3, [r7, #4]
 7931 0010 1B68     		ldr	r3, [r3]
 7932 0012 22F0C002 		bic	r2, r2, #192
 7933 0016 1A60     		str	r2, [r3]
3590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 7934              		.loc 1 3590 3
 7935 0018 7B68     		ldr	r3, [r7, #4]
 7936 001a 1B68     		ldr	r3, [r3]
 7937 001c 9A68     		ldr	r2, [r3, #8]
 7938 001e 7B68     		ldr	r3, [r7, #4]
 7939 0020 1B68     		ldr	r3, [r3]
 7940 0022 22F40002 		bic	r2, r2, #8388608
 7941 0026 9A60     		str	r2, [r3, #8]
3591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7942              		.loc 1 3593 17
ARM GAS  /tmp/ccp35uGD.s 			page 202


 7943 0028 7B68     		ldr	r3, [r7, #4]
 7944 002a 2022     		movs	r2, #32
 7945 002c C3F88420 		str	r2, [r3, #132]
3594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7946              		.loc 1 3594 1
 7947 0030 00BF     		nop
 7948 0032 0C37     		adds	r7, r7, #12
 7949              	.LCFI273:
 7950              		.cfi_def_cfa_offset 4
 7951 0034 BD46     		mov	sp, r7
 7952              	.LCFI274:
 7953              		.cfi_def_cfa_register 13
 7954              		@ sp needed
 7955 0036 5DF8047B 		ldr	r7, [sp], #4
 7956              	.LCFI275:
 7957              		.cfi_restore 7
 7958              		.cfi_def_cfa_offset 0
 7959 003a 7047     		bx	lr
 7960              		.cfi_endproc
 7961              	.LFE380:
 7963              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 7964              		.align	1
 7965              		.syntax unified
 7966              		.thumb
 7967              		.thumb_func
 7968              		.fpu fpv5-d16
 7970              	UART_EndRxTransfer:
 7971              	.LFB381:
3595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7972              		.loc 1 3603 1
 7973              		.cfi_startproc
 7974              		@ args = 0, pretend = 0, frame = 8
 7975              		@ frame_needed = 1, uses_anonymous_args = 0
 7976              		@ link register save eliminated.
 7977 0000 80B4     		push	{r7}
 7978              	.LCFI276:
 7979              		.cfi_def_cfa_offset 4
 7980              		.cfi_offset 7, -4
 7981 0002 83B0     		sub	sp, sp, #12
 7982              	.LCFI277:
 7983              		.cfi_def_cfa_offset 16
 7984 0004 00AF     		add	r7, sp, #0
 7985              	.LCFI278:
 7986              		.cfi_def_cfa_register 7
 7987 0006 7860     		str	r0, [r7, #4]
3604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 7988              		.loc 1 3605 3
 7989 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 203


 7990 000a 1B68     		ldr	r3, [r3]
 7991 000c 1A68     		ldr	r2, [r3]
 7992 000e 7B68     		ldr	r3, [r7, #4]
 7993 0010 1B68     		ldr	r3, [r3]
 7994 0012 22F49072 		bic	r2, r2, #288
 7995 0016 1A60     		str	r2, [r3]
3606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 7996              		.loc 1 3606 3
 7997 0018 7B68     		ldr	r3, [r7, #4]
 7998 001a 1B68     		ldr	r3, [r3]
 7999 001c 9968     		ldr	r1, [r3, #8]
 8000 001e 7B68     		ldr	r3, [r7, #4]
 8001 0020 1A68     		ldr	r2, [r3]
 8002 0022 0F4B     		ldr	r3, .L461
 8003 0024 0B40     		ands	r3, r3, r1
 8004 0026 9360     		str	r3, [r2, #8]
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8005              		.loc 1 3609 12
 8006 0028 7B68     		ldr	r3, [r7, #4]
 8007 002a DB6E     		ldr	r3, [r3, #108]
 8008              		.loc 1 3609 6
 8009 002c 012B     		cmp	r3, #1
 8010 002e 07D1     		bne	.L460
3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8011              		.loc 1 3611 5
 8012 0030 7B68     		ldr	r3, [r7, #4]
 8013 0032 1B68     		ldr	r3, [r3]
 8014 0034 1A68     		ldr	r2, [r3]
 8015 0036 7B68     		ldr	r3, [r7, #4]
 8016 0038 1B68     		ldr	r3, [r3]
 8017 003a 22F01002 		bic	r2, r2, #16
 8018 003e 1A60     		str	r2, [r3]
 8019              	.L460:
3612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8020              		.loc 1 3615 18
 8021 0040 7B68     		ldr	r3, [r7, #4]
 8022 0042 2022     		movs	r2, #32
 8023 0044 C3F88820 		str	r2, [r3, #136]
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8024              		.loc 1 3616 24
 8025 0048 7B68     		ldr	r3, [r7, #4]
 8026 004a 0022     		movs	r2, #0
 8027 004c DA66     		str	r2, [r3, #108]
3617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
 8028              		.loc 1 3619 16
 8029 004e 7B68     		ldr	r3, [r7, #4]
 8030 0050 0022     		movs	r2, #0
 8031 0052 1A67     		str	r2, [r3, #112]
3620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  /tmp/ccp35uGD.s 			page 204


 8032              		.loc 1 3620 1
 8033 0054 00BF     		nop
 8034 0056 0C37     		adds	r7, r7, #12
 8035              	.LCFI279:
 8036              		.cfi_def_cfa_offset 4
 8037 0058 BD46     		mov	sp, r7
 8038              	.LCFI280:
 8039              		.cfi_def_cfa_register 13
 8040              		@ sp needed
 8041 005a 5DF8047B 		ldr	r7, [sp], #4
 8042              	.LCFI281:
 8043              		.cfi_restore 7
 8044              		.cfi_def_cfa_offset 0
 8045 005e 7047     		bx	lr
 8046              	.L462:
 8047              		.align	2
 8048              	.L461:
 8049 0060 FEFFFFEF 		.word	-268435458
 8050              		.cfi_endproc
 8051              	.LFE381:
 8053              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 8054              		.align	1
 8055              		.syntax unified
 8056              		.thumb
 8057              		.thumb_func
 8058              		.fpu fpv5-d16
 8060              	UART_DMATransmitCplt:
 8061              	.LFB382:
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8062              		.loc 1 3629 1
 8063              		.cfi_startproc
 8064              		@ args = 0, pretend = 0, frame = 16
 8065              		@ frame_needed = 1, uses_anonymous_args = 0
 8066 0000 80B5     		push	{r7, lr}
 8067              	.LCFI282:
 8068              		.cfi_def_cfa_offset 8
 8069              		.cfi_offset 7, -8
 8070              		.cfi_offset 14, -4
 8071 0002 84B0     		sub	sp, sp, #16
 8072              	.LCFI283:
 8073              		.cfi_def_cfa_offset 24
 8074 0004 00AF     		add	r7, sp, #0
 8075              	.LCFI284:
 8076              		.cfi_def_cfa_register 7
 8077 0006 7860     		str	r0, [r7, #4]
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8078              		.loc 1 3630 23
 8079 0008 7B68     		ldr	r3, [r7, #4]
 8080 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccp35uGD.s 			page 205


 8081 000c FB60     		str	r3, [r7, #12]
3631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 8082              		.loc 1 3633 17
 8083 000e 7B68     		ldr	r3, [r7, #4]
 8084 0010 DB69     		ldr	r3, [r3, #28]
 8085              		.loc 1 3633 6
 8086 0012 B3F5807F 		cmp	r3, #256
 8087 0016 14D0     		beq	.L464
3634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 8088              		.loc 1 3635 24
 8089 0018 FB68     		ldr	r3, [r7, #12]
 8090 001a 0022     		movs	r2, #0
 8091 001c A3F85620 		strh	r2, [r3, #86]	@ movhi
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8092              		.loc 1 3639 5
 8093 0020 FB68     		ldr	r3, [r7, #12]
 8094 0022 1B68     		ldr	r3, [r3]
 8095 0024 9A68     		ldr	r2, [r3, #8]
 8096 0026 FB68     		ldr	r3, [r7, #12]
 8097 0028 1B68     		ldr	r3, [r3]
 8098 002a 22F08002 		bic	r2, r2, #128
 8099 002e 9A60     		str	r2, [r3, #8]
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8100              		.loc 1 3642 5
 8101 0030 FB68     		ldr	r3, [r7, #12]
 8102 0032 1B68     		ldr	r3, [r3]
 8103 0034 1A68     		ldr	r2, [r3]
 8104 0036 FB68     		ldr	r3, [r7, #12]
 8105 0038 1B68     		ldr	r3, [r3]
 8106 003a 42F04002 		orr	r2, r2, #64
 8107 003e 1A60     		str	r2, [r3]
3643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Circular mode */
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8108              		.loc 1 3655 1
 8109 0040 02E0     		b	.L466
 8110              	.L464:
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 8111              		.loc 1 3652 5
ARM GAS  /tmp/ccp35uGD.s 			page 206


 8112 0042 F868     		ldr	r0, [r7, #12]
 8113 0044 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 8114              	.L466:
 8115              		.loc 1 3655 1
 8116 0048 00BF     		nop
 8117 004a 1037     		adds	r7, r7, #16
 8118              	.LCFI285:
 8119              		.cfi_def_cfa_offset 8
 8120 004c BD46     		mov	sp, r7
 8121              	.LCFI286:
 8122              		.cfi_def_cfa_register 13
 8123              		@ sp needed
 8124 004e 80BD     		pop	{r7, pc}
 8125              		.cfi_endproc
 8126              	.LFE382:
 8128              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 8129              		.align	1
 8130              		.syntax unified
 8131              		.thumb
 8132              		.thumb_func
 8133              		.fpu fpv5-d16
 8135              	UART_DMATxHalfCplt:
 8136              	.LFB383:
3656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8137              		.loc 1 3663 1
 8138              		.cfi_startproc
 8139              		@ args = 0, pretend = 0, frame = 16
 8140              		@ frame_needed = 1, uses_anonymous_args = 0
 8141 0000 80B5     		push	{r7, lr}
 8142              	.LCFI287:
 8143              		.cfi_def_cfa_offset 8
 8144              		.cfi_offset 7, -8
 8145              		.cfi_offset 14, -4
 8146 0002 84B0     		sub	sp, sp, #16
 8147              	.LCFI288:
 8148              		.cfi_def_cfa_offset 24
 8149 0004 00AF     		add	r7, sp, #0
 8150              	.LCFI289:
 8151              		.cfi_def_cfa_register 7
 8152 0006 7860     		str	r0, [r7, #4]
3664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8153              		.loc 1 3664 23
 8154 0008 7B68     		ldr	r3, [r7, #4]
 8155 000a 9B6B     		ldr	r3, [r3, #56]
 8156 000c FB60     		str	r3, [r7, #12]
3665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
ARM GAS  /tmp/ccp35uGD.s 			page 207


3670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 8157              		.loc 1 3671 3
 8158 000e F868     		ldr	r0, [r7, #12]
 8159 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8160              		.loc 1 3673 1
 8161 0014 00BF     		nop
 8162 0016 1037     		adds	r7, r7, #16
 8163              	.LCFI290:
 8164              		.cfi_def_cfa_offset 8
 8165 0018 BD46     		mov	sp, r7
 8166              	.LCFI291:
 8167              		.cfi_def_cfa_register 13
 8168              		@ sp needed
 8169 001a 80BD     		pop	{r7, pc}
 8170              		.cfi_endproc
 8171              	.LFE383:
 8173              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 8174              		.align	1
 8175              		.syntax unified
 8176              		.thumb
 8177              		.thumb_func
 8178              		.fpu fpv5-d16
 8180              	UART_DMAReceiveCplt:
 8181              	.LFB384:
3674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8182              		.loc 1 3681 1
 8183              		.cfi_startproc
 8184              		@ args = 0, pretend = 0, frame = 16
 8185              		@ frame_needed = 1, uses_anonymous_args = 0
 8186 0000 80B5     		push	{r7, lr}
 8187              	.LCFI292:
 8188              		.cfi_def_cfa_offset 8
 8189              		.cfi_offset 7, -8
 8190              		.cfi_offset 14, -4
 8191 0002 84B0     		sub	sp, sp, #16
 8192              	.LCFI293:
 8193              		.cfi_def_cfa_offset 24
 8194 0004 00AF     		add	r7, sp, #0
 8195              	.LCFI294:
 8196              		.cfi_def_cfa_register 7
 8197 0006 7860     		str	r0, [r7, #4]
3682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8198              		.loc 1 3682 23
 8199 0008 7B68     		ldr	r3, [r7, #4]
 8200 000a 9B6B     		ldr	r3, [r3, #56]
 8201 000c FB60     		str	r3, [r7, #12]
3683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 208


3684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 8202              		.loc 1 3685 17
 8203 000e 7B68     		ldr	r3, [r7, #4]
 8204 0010 DB69     		ldr	r3, [r3, #28]
 8205              		.loc 1 3685 6
 8206 0012 B3F5807F 		cmp	r3, #256
 8207 0016 2BD0     		beq	.L469
3686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 8208              		.loc 1 3687 24
 8209 0018 FB68     		ldr	r3, [r7, #12]
 8210 001a 0022     		movs	r2, #0
 8211 001c A3F85E20 		strh	r2, [r3, #94]	@ movhi
3688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8212              		.loc 1 3690 5
 8213 0020 FB68     		ldr	r3, [r7, #12]
 8214 0022 1B68     		ldr	r3, [r3]
 8215 0024 1A68     		ldr	r2, [r3]
 8216 0026 FB68     		ldr	r3, [r7, #12]
 8217 0028 1B68     		ldr	r3, [r3]
 8218 002a 22F48072 		bic	r2, r2, #256
 8219 002e 1A60     		str	r2, [r3]
3691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8220              		.loc 1 3691 5
 8221 0030 FB68     		ldr	r3, [r7, #12]
 8222 0032 1B68     		ldr	r3, [r3]
 8223 0034 9A68     		ldr	r2, [r3, #8]
 8224 0036 FB68     		ldr	r3, [r7, #12]
 8225 0038 1B68     		ldr	r3, [r3]
 8226 003a 22F00102 		bic	r2, r2, #1
 8227 003e 9A60     		str	r2, [r3, #8]
3692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8228              		.loc 1 3695 5
 8229 0040 FB68     		ldr	r3, [r7, #12]
 8230 0042 1B68     		ldr	r3, [r3]
 8231 0044 9A68     		ldr	r2, [r3, #8]
 8232 0046 FB68     		ldr	r3, [r7, #12]
 8233 0048 1B68     		ldr	r3, [r3]
 8234 004a 22F04002 		bic	r2, r2, #64
 8235 004e 9A60     		str	r2, [r3, #8]
3696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 8236              		.loc 1 3698 20
 8237 0050 FB68     		ldr	r3, [r7, #12]
 8238 0052 2022     		movs	r2, #32
 8239 0054 C3F88820 		str	r2, [r3, #136]
3699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8240              		.loc 1 3701 14
ARM GAS  /tmp/ccp35uGD.s 			page 209


 8241 0058 FB68     		ldr	r3, [r7, #12]
 8242 005a DB6E     		ldr	r3, [r3, #108]
 8243              		.loc 1 3701 8
 8244 005c 012B     		cmp	r3, #1
 8245 005e 07D1     		bne	.L469
3702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8246              		.loc 1 3703 7
 8247 0060 FB68     		ldr	r3, [r7, #12]
 8248 0062 1B68     		ldr	r3, [r3]
 8249 0064 1A68     		ldr	r2, [r3]
 8250 0066 FB68     		ldr	r3, [r7, #12]
 8251 0068 1B68     		ldr	r3, [r3]
 8252 006a 22F01002 		bic	r2, r2, #16
 8253 006e 1A60     		str	r2, [r3]
 8254              	.L469:
3704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
3708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8255              		.loc 1 3709 12
 8256 0070 FB68     		ldr	r3, [r7, #12]
 8257 0072 DB6E     		ldr	r3, [r3, #108]
 8258              		.loc 1 3709 6
 8259 0074 012B     		cmp	r3, #1
 8260 0076 07D1     		bne	.L470
3710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8261              		.loc 1 3716 5
 8262 0078 FB68     		ldr	r3, [r7, #12]
 8263 007a B3F85C30 		ldrh	r3, [r3, #92]
 8264 007e 1946     		mov	r1, r3
 8265 0080 F868     		ldr	r0, [r7, #12]
 8266 0082 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8267              		.loc 1 3730 1
 8268 0086 02E0     		b	.L472
ARM GAS  /tmp/ccp35uGD.s 			page 210


 8269              	.L470:
3727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 8270              		.loc 1 3727 5
 8271 0088 F868     		ldr	r0, [r7, #12]
 8272 008a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 8273              	.L472:
 8274              		.loc 1 3730 1
 8275 008e 00BF     		nop
 8276 0090 1037     		adds	r7, r7, #16
 8277              	.LCFI295:
 8278              		.cfi_def_cfa_offset 8
 8279 0092 BD46     		mov	sp, r7
 8280              	.LCFI296:
 8281              		.cfi_def_cfa_register 13
 8282              		@ sp needed
 8283 0094 80BD     		pop	{r7, pc}
 8284              		.cfi_endproc
 8285              	.LFE384:
 8287              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 8288              		.align	1
 8289              		.syntax unified
 8290              		.thumb
 8291              		.thumb_func
 8292              		.fpu fpv5-d16
 8294              	UART_DMARxHalfCplt:
 8295              	.LFB385:
3731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8296              		.loc 1 3738 1
 8297              		.cfi_startproc
 8298              		@ args = 0, pretend = 0, frame = 16
 8299              		@ frame_needed = 1, uses_anonymous_args = 0
 8300 0000 80B5     		push	{r7, lr}
 8301              	.LCFI297:
 8302              		.cfi_def_cfa_offset 8
 8303              		.cfi_offset 7, -8
 8304              		.cfi_offset 14, -4
 8305 0002 84B0     		sub	sp, sp, #16
 8306              	.LCFI298:
 8307              		.cfi_def_cfa_offset 24
 8308 0004 00AF     		add	r7, sp, #0
 8309              	.LCFI299:
 8310              		.cfi_def_cfa_register 7
 8311 0006 7860     		str	r0, [r7, #4]
3739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8312              		.loc 1 3739 23
 8313 0008 7B68     		ldr	r3, [r7, #4]
 8314 000a 9B6B     		ldr	r3, [r3, #56]
 8315 000c FB60     		str	r3, [r7, #12]
3740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
ARM GAS  /tmp/ccp35uGD.s 			page 211


3742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8316              		.loc 1 3743 12
 8317 000e FB68     		ldr	r3, [r7, #12]
 8318 0010 DB6E     		ldr	r3, [r3, #108]
 8319              		.loc 1 3743 6
 8320 0012 012B     		cmp	r3, #1
 8321 0014 09D1     		bne	.L474
3744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 8322              		.loc 1 3750 44
 8323 0016 FB68     		ldr	r3, [r7, #12]
 8324 0018 B3F85C30 		ldrh	r3, [r3, #92]
 8325              		.loc 1 3750 5
 8326 001c 5B08     		lsrs	r3, r3, #1
 8327 001e 9BB2     		uxth	r3, r3
 8328 0020 1946     		mov	r1, r3
 8329 0022 F868     		ldr	r0, [r7, #12]
 8330 0024 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8331              		.loc 1 3764 1
 8332 0028 02E0     		b	.L476
 8333              	.L474:
3761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 8334              		.loc 1 3761 5
 8335 002a F868     		ldr	r0, [r7, #12]
 8336 002c FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 8337              	.L476:
 8338              		.loc 1 3764 1
 8339 0030 00BF     		nop
 8340 0032 1037     		adds	r7, r7, #16
 8341              	.LCFI300:
 8342              		.cfi_def_cfa_offset 8
 8343 0034 BD46     		mov	sp, r7
 8344              	.LCFI301:
 8345              		.cfi_def_cfa_register 13
 8346              		@ sp needed
 8347 0036 80BD     		pop	{r7, pc}
 8348              		.cfi_endproc
ARM GAS  /tmp/ccp35uGD.s 			page 212


 8349              	.LFE385:
 8351              		.section	.text.UART_DMAError,"ax",%progbits
 8352              		.align	1
 8353              		.syntax unified
 8354              		.thumb
 8355              		.thumb_func
 8356              		.fpu fpv5-d16
 8358              	UART_DMAError:
 8359              	.LFB386:
3765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8360              		.loc 1 3772 1
 8361              		.cfi_startproc
 8362              		@ args = 0, pretend = 0, frame = 24
 8363              		@ frame_needed = 1, uses_anonymous_args = 0
 8364 0000 80B5     		push	{r7, lr}
 8365              	.LCFI302:
 8366              		.cfi_def_cfa_offset 8
 8367              		.cfi_offset 7, -8
 8368              		.cfi_offset 14, -4
 8369 0002 86B0     		sub	sp, sp, #24
 8370              	.LCFI303:
 8371              		.cfi_def_cfa_offset 32
 8372 0004 00AF     		add	r7, sp, #0
 8373              	.LCFI304:
 8374              		.cfi_def_cfa_register 7
 8375 0006 7860     		str	r0, [r7, #4]
3773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8376              		.loc 1 3773 23
 8377 0008 7B68     		ldr	r3, [r7, #4]
 8378 000a 9B6B     		ldr	r3, [r3, #56]
 8379 000c 7B61     		str	r3, [r7, #20]
3774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 8380              		.loc 1 3775 31
 8381 000e 7B69     		ldr	r3, [r7, #20]
 8382 0010 D3F88430 		ldr	r3, [r3, #132]
 8383 0014 3B61     		str	r3, [r7, #16]
3776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 8384              		.loc 1 3776 31
 8385 0016 7B69     		ldr	r3, [r7, #20]
 8386 0018 D3F88830 		ldr	r3, [r3, #136]
 8387 001c FB60     		str	r3, [r7, #12]
3777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 8388              		.loc 1 3779 8
 8389 001e 7B69     		ldr	r3, [r7, #20]
 8390 0020 1B68     		ldr	r3, [r3]
 8391 0022 9B68     		ldr	r3, [r3, #8]
 8392 0024 03F08003 		and	r3, r3, #128
ARM GAS  /tmp/ccp35uGD.s 			page 213


 8393              		.loc 1 3779 6
 8394 0028 802B     		cmp	r3, #128
 8395 002a 09D1     		bne	.L478
 8396              		.loc 1 3779 62 discriminator 1
 8397 002c 3B69     		ldr	r3, [r7, #16]
 8398 002e 212B     		cmp	r3, #33
 8399 0030 06D1     		bne	.L478
3780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 8400              		.loc 1 3782 24
 8401 0032 7B69     		ldr	r3, [r7, #20]
 8402 0034 0022     		movs	r2, #0
 8403 0036 A3F85620 		strh	r2, [r3, #86]	@ movhi
3783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 8404              		.loc 1 3783 5
 8405 003a 7869     		ldr	r0, [r7, #20]
 8406 003c FFF7FEFF 		bl	UART_EndTxTransfer
 8407              	.L478:
3784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 8408              		.loc 1 3787 8
 8409 0040 7B69     		ldr	r3, [r7, #20]
 8410 0042 1B68     		ldr	r3, [r3]
 8411 0044 9B68     		ldr	r3, [r3, #8]
 8412 0046 03F04003 		and	r3, r3, #64
 8413              		.loc 1 3787 6
 8414 004a 402B     		cmp	r3, #64
 8415 004c 09D1     		bne	.L479
 8416              		.loc 1 3787 62 discriminator 1
 8417 004e FB68     		ldr	r3, [r7, #12]
 8418 0050 222B     		cmp	r3, #34
 8419 0052 06D1     		bne	.L479
3788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 8420              		.loc 1 3790 24
 8421 0054 7B69     		ldr	r3, [r7, #20]
 8422 0056 0022     		movs	r2, #0
 8423 0058 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 8424              		.loc 1 3791 5
 8425 005c 7869     		ldr	r0, [r7, #20]
 8426 005e FFF7FEFF 		bl	UART_EndRxTransfer
 8427              	.L479:
3792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 8428              		.loc 1 3794 20
 8429 0062 7B69     		ldr	r3, [r7, #20]
 8430 0064 D3F88C30 		ldr	r3, [r3, #140]
 8431 0068 43F01002 		orr	r2, r3, #16
 8432 006c 7B69     		ldr	r3, [r7, #20]
 8433 006e C3F88C20 		str	r2, [r3, #140]
3795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 214


3796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8434              		.loc 1 3801 3
 8435 0072 7869     		ldr	r0, [r7, #20]
 8436 0074 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8437              		.loc 1 3803 1
 8438 0078 00BF     		nop
 8439 007a 1837     		adds	r7, r7, #24
 8440              	.LCFI305:
 8441              		.cfi_def_cfa_offset 8
 8442 007c BD46     		mov	sp, r7
 8443              	.LCFI306:
 8444              		.cfi_def_cfa_register 13
 8445              		@ sp needed
 8446 007e 80BD     		pop	{r7, pc}
 8447              		.cfi_endproc
 8448              	.LFE386:
 8450              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8451              		.align	1
 8452              		.syntax unified
 8453              		.thumb
 8454              		.thumb_func
 8455              		.fpu fpv5-d16
 8457              	UART_DMAAbortOnError:
 8458              	.LFB387:
3804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8459              		.loc 1 3812 1
 8460              		.cfi_startproc
 8461              		@ args = 0, pretend = 0, frame = 16
 8462              		@ frame_needed = 1, uses_anonymous_args = 0
 8463 0000 80B5     		push	{r7, lr}
 8464              	.LCFI307:
 8465              		.cfi_def_cfa_offset 8
 8466              		.cfi_offset 7, -8
 8467              		.cfi_offset 14, -4
 8468 0002 84B0     		sub	sp, sp, #16
 8469              	.LCFI308:
 8470              		.cfi_def_cfa_offset 24
 8471 0004 00AF     		add	r7, sp, #0
 8472              	.LCFI309:
 8473              		.cfi_def_cfa_register 7
 8474 0006 7860     		str	r0, [r7, #4]
3813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /tmp/ccp35uGD.s 			page 215


 8475              		.loc 1 3813 23
 8476 0008 7B68     		ldr	r3, [r7, #4]
 8477 000a 9B6B     		ldr	r3, [r3, #56]
 8478 000c FB60     		str	r3, [r7, #12]
3814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 8479              		.loc 1 3814 22
 8480 000e FB68     		ldr	r3, [r7, #12]
 8481 0010 0022     		movs	r2, #0
 8482 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 8483              		.loc 1 3815 22
 8484 0016 FB68     		ldr	r3, [r7, #12]
 8485 0018 0022     		movs	r2, #0
 8486 001a A3F85620 		strh	r2, [r3, #86]	@ movhi
3816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8487              		.loc 1 3822 3
 8488 001e F868     		ldr	r0, [r7, #12]
 8489 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8490              		.loc 1 3824 1
 8491 0024 00BF     		nop
 8492 0026 1037     		adds	r7, r7, #16
 8493              	.LCFI310:
 8494              		.cfi_def_cfa_offset 8
 8495 0028 BD46     		mov	sp, r7
 8496              	.LCFI311:
 8497              		.cfi_def_cfa_register 13
 8498              		@ sp needed
 8499 002a 80BD     		pop	{r7, pc}
 8500              		.cfi_endproc
 8501              	.LFE387:
 8503              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8504              		.align	1
 8505              		.syntax unified
 8506              		.thumb
 8507              		.thumb_func
 8508              		.fpu fpv5-d16
 8510              	UART_DMATxAbortCallback:
 8511              	.LFB388:
3825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  /tmp/ccp35uGD.s 			page 216


 8512              		.loc 1 3835 1
 8513              		.cfi_startproc
 8514              		@ args = 0, pretend = 0, frame = 16
 8515              		@ frame_needed = 1, uses_anonymous_args = 0
 8516 0000 80B5     		push	{r7, lr}
 8517              	.LCFI312:
 8518              		.cfi_def_cfa_offset 8
 8519              		.cfi_offset 7, -8
 8520              		.cfi_offset 14, -4
 8521 0002 84B0     		sub	sp, sp, #16
 8522              	.LCFI313:
 8523              		.cfi_def_cfa_offset 24
 8524 0004 00AF     		add	r7, sp, #0
 8525              	.LCFI314:
 8526              		.cfi_def_cfa_register 7
 8527 0006 7860     		str	r0, [r7, #4]
3836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8528              		.loc 1 3836 23
 8529 0008 7B68     		ldr	r3, [r7, #4]
 8530 000a 9B6B     		ldr	r3, [r3, #56]
 8531 000c FB60     		str	r3, [r7, #12]
3837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8532              		.loc 1 3838 8
 8533 000e FB68     		ldr	r3, [r7, #12]
 8534 0010 9B6F     		ldr	r3, [r3, #120]
 8535              		.loc 1 3838 36
 8536 0012 0022     		movs	r2, #0
 8537 0014 1A65     		str	r2, [r3, #80]
3839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8538              		.loc 1 3841 12
 8539 0016 FB68     		ldr	r3, [r7, #12]
 8540 0018 DB6F     		ldr	r3, [r3, #124]
 8541              		.loc 1 3841 6
 8542 001a 002B     		cmp	r3, #0
 8543 001c 04D0     		beq	.L482
3842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8544              		.loc 1 3843 14
 8545 001e FB68     		ldr	r3, [r7, #12]
 8546 0020 DB6F     		ldr	r3, [r3, #124]
 8547              		.loc 1 3843 22
 8548 0022 1B6D     		ldr	r3, [r3, #80]
 8549              		.loc 1 3843 8
 8550 0024 002B     		cmp	r3, #0
 8551 0026 2BD1     		bne	.L485
 8552              	.L482:
3844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 8553              		.loc 1 3850 22
ARM GAS  /tmp/ccp35uGD.s 			page 217


 8554 0028 FB68     		ldr	r3, [r7, #12]
 8555 002a 0022     		movs	r2, #0
 8556 002c A3F85620 		strh	r2, [r3, #86]	@ movhi
3851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 8557              		.loc 1 3851 22
 8558 0030 FB68     		ldr	r3, [r7, #12]
 8559 0032 0022     		movs	r2, #0
 8560 0034 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8561              		.loc 1 3854 20
 8562 0038 FB68     		ldr	r3, [r7, #12]
 8563 003a 0022     		movs	r2, #0
 8564 003c C3F88C20 		str	r2, [r3, #140]
3855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 8565              		.loc 1 3857 3
 8566 0040 FB68     		ldr	r3, [r7, #12]
 8567 0042 1B68     		ldr	r3, [r3]
 8568 0044 0F22     		movs	r2, #15
 8569 0046 1A62     		str	r2, [r3, #32]
3858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 8570              		.loc 1 3860 12
 8571 0048 FB68     		ldr	r3, [r7, #12]
 8572 004a 5B6E     		ldr	r3, [r3, #100]
 8573              		.loc 1 3860 6
 8574 004c B3F1005F 		cmp	r3, #536870912
 8575 0050 07D1     		bne	.L484
3861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 8576              		.loc 1 3862 5
 8577 0052 FB68     		ldr	r3, [r7, #12]
 8578 0054 1B68     		ldr	r3, [r3]
 8579 0056 9A69     		ldr	r2, [r3, #24]
 8580 0058 FB68     		ldr	r3, [r7, #12]
 8581 005a 1B68     		ldr	r3, [r3]
 8582 005c 42F01002 		orr	r2, r2, #16
 8583 0060 9A61     		str	r2, [r3, #24]
 8584              	.L484:
3863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8585              		.loc 1 3866 18
 8586 0062 FB68     		ldr	r3, [r7, #12]
 8587 0064 2022     		movs	r2, #32
 8588 0066 C3F88420 		str	r2, [r3, #132]
3867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8589              		.loc 1 3867 18
 8590 006a FB68     		ldr	r3, [r7, #12]
 8591 006c 2022     		movs	r2, #32
 8592 006e C3F88820 		str	r2, [r3, #136]
3868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  /tmp/ccp35uGD.s 			page 218


 8593              		.loc 1 3868 24
 8594 0072 FB68     		ldr	r3, [r7, #12]
 8595 0074 0022     		movs	r2, #0
 8596 0076 DA66     		str	r2, [r3, #108]
3869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8597              		.loc 1 3876 3
 8598 0078 F868     		ldr	r0, [r7, #12]
 8599 007a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8600 007e 00E0     		b	.L481
 8601              	.L485:
3845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8602              		.loc 1 3845 7
 8603 0080 00BF     		nop
 8604              	.L481:
3877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8605              		.loc 1 3878 1
 8606 0082 1037     		adds	r7, r7, #16
 8607              	.LCFI315:
 8608              		.cfi_def_cfa_offset 8
 8609 0084 BD46     		mov	sp, r7
 8610              	.LCFI316:
 8611              		.cfi_def_cfa_register 13
 8612              		@ sp needed
 8613 0086 80BD     		pop	{r7, pc}
 8614              		.cfi_endproc
 8615              	.LFE388:
 8617              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8618              		.align	1
 8619              		.syntax unified
 8620              		.thumb
 8621              		.thumb_func
 8622              		.fpu fpv5-d16
 8624              	UART_DMARxAbortCallback:
 8625              	.LFB389:
3879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8626              		.loc 1 3890 1
 8627              		.cfi_startproc
 8628              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccp35uGD.s 			page 219


 8629              		@ frame_needed = 1, uses_anonymous_args = 0
 8630 0000 80B5     		push	{r7, lr}
 8631              	.LCFI317:
 8632              		.cfi_def_cfa_offset 8
 8633              		.cfi_offset 7, -8
 8634              		.cfi_offset 14, -4
 8635 0002 84B0     		sub	sp, sp, #16
 8636              	.LCFI318:
 8637              		.cfi_def_cfa_offset 24
 8638 0004 00AF     		add	r7, sp, #0
 8639              	.LCFI319:
 8640              		.cfi_def_cfa_register 7
 8641 0006 7860     		str	r0, [r7, #4]
3891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8642              		.loc 1 3891 23
 8643 0008 7B68     		ldr	r3, [r7, #4]
 8644 000a 9B6B     		ldr	r3, [r3, #56]
 8645 000c FB60     		str	r3, [r7, #12]
3892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8646              		.loc 1 3893 8
 8647 000e FB68     		ldr	r3, [r7, #12]
 8648 0010 DB6F     		ldr	r3, [r3, #124]
 8649              		.loc 1 3893 36
 8650 0012 0022     		movs	r2, #0
 8651 0014 1A65     		str	r2, [r3, #80]
3894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8652              		.loc 1 3896 12
 8653 0016 FB68     		ldr	r3, [r7, #12]
 8654 0018 9B6F     		ldr	r3, [r3, #120]
 8655              		.loc 1 3896 6
 8656 001a 002B     		cmp	r3, #0
 8657 001c 04D0     		beq	.L487
3897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8658              		.loc 1 3898 14
 8659 001e FB68     		ldr	r3, [r7, #12]
 8660 0020 9B6F     		ldr	r3, [r3, #120]
 8661              		.loc 1 3898 22
 8662 0022 1B6D     		ldr	r3, [r3, #80]
 8663              		.loc 1 3898 8
 8664 0024 002B     		cmp	r3, #0
 8665 0026 26D1     		bne	.L489
 8666              	.L487:
3899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 8667              		.loc 1 3905 22
 8668 0028 FB68     		ldr	r3, [r7, #12]
 8669 002a 0022     		movs	r2, #0
 8670 002c A3F85620 		strh	r2, [r3, #86]	@ movhi
ARM GAS  /tmp/ccp35uGD.s 			page 220


3906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 8671              		.loc 1 3906 22
 8672 0030 FB68     		ldr	r3, [r7, #12]
 8673 0032 0022     		movs	r2, #0
 8674 0034 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8675              		.loc 1 3909 20
 8676 0038 FB68     		ldr	r3, [r7, #12]
 8677 003a 0022     		movs	r2, #0
 8678 003c C3F88C20 		str	r2, [r3, #140]
3910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 8679              		.loc 1 3912 3
 8680 0040 FB68     		ldr	r3, [r7, #12]
 8681 0042 1B68     		ldr	r3, [r3]
 8682 0044 0F22     		movs	r2, #15
 8683 0046 1A62     		str	r2, [r3, #32]
3913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8684              		.loc 1 3915 3
 8685 0048 FB68     		ldr	r3, [r7, #12]
 8686 004a 1B68     		ldr	r3, [r3]
 8687 004c 9A69     		ldr	r2, [r3, #24]
 8688 004e FB68     		ldr	r3, [r7, #12]
 8689 0050 1B68     		ldr	r3, [r3]
 8690 0052 42F00802 		orr	r2, r2, #8
 8691 0056 9A61     		str	r2, [r3, #24]
3916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8692              		.loc 1 3918 18
 8693 0058 FB68     		ldr	r3, [r7, #12]
 8694 005a 2022     		movs	r2, #32
 8695 005c C3F88420 		str	r2, [r3, #132]
3919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8696              		.loc 1 3919 18
 8697 0060 FB68     		ldr	r3, [r7, #12]
 8698 0062 2022     		movs	r2, #32
 8699 0064 C3F88820 		str	r2, [r3, #136]
3920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8700              		.loc 1 3920 24
 8701 0068 FB68     		ldr	r3, [r7, #12]
 8702 006a 0022     		movs	r2, #0
 8703 006c DA66     		str	r2, [r3, #108]
3921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8704              		.loc 1 3928 3
ARM GAS  /tmp/ccp35uGD.s 			page 221


 8705 006e F868     		ldr	r0, [r7, #12]
 8706 0070 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8707 0074 00E0     		b	.L486
 8708              	.L489:
3900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8709              		.loc 1 3900 7
 8710 0076 00BF     		nop
 8711              	.L486:
3929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8712              		.loc 1 3930 1
 8713 0078 1037     		adds	r7, r7, #16
 8714              	.LCFI320:
 8715              		.cfi_def_cfa_offset 8
 8716 007a BD46     		mov	sp, r7
 8717              	.LCFI321:
 8718              		.cfi_def_cfa_register 13
 8719              		@ sp needed
 8720 007c 80BD     		pop	{r7, pc}
 8721              		.cfi_endproc
 8722              	.LFE389:
 8724              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8725              		.align	1
 8726              		.syntax unified
 8727              		.thumb
 8728              		.thumb_func
 8729              		.fpu fpv5-d16
 8731              	UART_DMATxOnlyAbortCallback:
 8732              	.LFB390:
3931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8733              		.loc 1 3942 1
 8734              		.cfi_startproc
 8735              		@ args = 0, pretend = 0, frame = 16
 8736              		@ frame_needed = 1, uses_anonymous_args = 0
 8737 0000 80B5     		push	{r7, lr}
 8738              	.LCFI322:
 8739              		.cfi_def_cfa_offset 8
 8740              		.cfi_offset 7, -8
 8741              		.cfi_offset 14, -4
 8742 0002 84B0     		sub	sp, sp, #16
 8743              	.LCFI323:
 8744              		.cfi_def_cfa_offset 24
 8745 0004 00AF     		add	r7, sp, #0
 8746              	.LCFI324:
 8747              		.cfi_def_cfa_register 7
 8748 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 222


3943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8749              		.loc 1 3943 23
 8750 0008 7B68     		ldr	r3, [r7, #4]
 8751 000a 9B6B     		ldr	r3, [r3, #56]
 8752 000c FB60     		str	r3, [r7, #12]
3944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 8753              		.loc 1 3945 22
 8754 000e FB68     		ldr	r3, [r7, #12]
 8755 0010 0022     		movs	r2, #0
 8756 0012 A3F85620 		strh	r2, [r3, #86]	@ movhi
3946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 8757              		.loc 1 3948 12
 8758 0016 FB68     		ldr	r3, [r7, #12]
 8759 0018 5B6E     		ldr	r3, [r3, #100]
 8760              		.loc 1 3948 6
 8761 001a B3F1005F 		cmp	r3, #536870912
 8762 001e 07D1     		bne	.L491
3949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 8763              		.loc 1 3950 5
 8764 0020 FB68     		ldr	r3, [r7, #12]
 8765 0022 1B68     		ldr	r3, [r3]
 8766 0024 9A69     		ldr	r2, [r3, #24]
 8767 0026 FB68     		ldr	r3, [r7, #12]
 8768 0028 1B68     		ldr	r3, [r3]
 8769 002a 42F01002 		orr	r2, r2, #16
 8770 002e 9A61     		str	r2, [r3, #24]
 8771              	.L491:
3951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8772              		.loc 1 3954 17
 8773 0030 FB68     		ldr	r3, [r7, #12]
 8774 0032 2022     		movs	r2, #32
 8775 0034 C3F88420 		str	r2, [r3, #132]
3955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 8776              		.loc 1 3962 3
 8777 0038 F868     		ldr	r0, [r7, #12]
 8778 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8779              		.loc 1 3964 1
 8780 003e 00BF     		nop
 8781 0040 1037     		adds	r7, r7, #16
 8782              	.LCFI325:
 8783              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccp35uGD.s 			page 223


 8784 0042 BD46     		mov	sp, r7
 8785              	.LCFI326:
 8786              		.cfi_def_cfa_register 13
 8787              		@ sp needed
 8788 0044 80BD     		pop	{r7, pc}
 8789              		.cfi_endproc
 8790              	.LFE390:
 8792              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 8793              		.align	1
 8794              		.syntax unified
 8795              		.thumb
 8796              		.thumb_func
 8797              		.fpu fpv5-d16
 8799              	UART_DMARxOnlyAbortCallback:
 8800              	.LFB391:
3965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8801              		.loc 1 3975 1
 8802              		.cfi_startproc
 8803              		@ args = 0, pretend = 0, frame = 16
 8804              		@ frame_needed = 1, uses_anonymous_args = 0
 8805 0000 80B5     		push	{r7, lr}
 8806              	.LCFI327:
 8807              		.cfi_def_cfa_offset 8
 8808              		.cfi_offset 7, -8
 8809              		.cfi_offset 14, -4
 8810 0002 84B0     		sub	sp, sp, #16
 8811              	.LCFI328:
 8812              		.cfi_def_cfa_offset 24
 8813 0004 00AF     		add	r7, sp, #0
 8814              	.LCFI329:
 8815              		.cfi_def_cfa_register 7
 8816 0006 7860     		str	r0, [r7, #4]
3976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8817              		.loc 1 3976 23
 8818 0008 7B68     		ldr	r3, [r7, #4]
 8819 000a 9B6B     		ldr	r3, [r3, #56]
 8820 000c FB60     		str	r3, [r7, #12]
3977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 8821              		.loc 1 3978 22
 8822 000e FB68     		ldr	r3, [r7, #12]
 8823 0010 0022     		movs	r2, #0
 8824 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 8825              		.loc 1 3981 3
ARM GAS  /tmp/ccp35uGD.s 			page 224


 8826 0016 FB68     		ldr	r3, [r7, #12]
 8827 0018 1B68     		ldr	r3, [r3]
 8828 001a 0F22     		movs	r2, #15
 8829 001c 1A62     		str	r2, [r3, #32]
3982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8830              		.loc 1 3984 3
 8831 001e FB68     		ldr	r3, [r7, #12]
 8832 0020 1B68     		ldr	r3, [r3]
 8833 0022 9A69     		ldr	r2, [r3, #24]
 8834 0024 FB68     		ldr	r3, [r7, #12]
 8835 0026 1B68     		ldr	r3, [r3]
 8836 0028 42F00802 		orr	r2, r2, #8
 8837 002c 9A61     		str	r2, [r3, #24]
3985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8838              		.loc 1 3987 18
 8839 002e FB68     		ldr	r3, [r7, #12]
 8840 0030 2022     		movs	r2, #32
 8841 0032 C3F88820 		str	r2, [r3, #136]
3988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8842              		.loc 1 3988 24
 8843 0036 FB68     		ldr	r3, [r7, #12]
 8844 0038 0022     		movs	r2, #0
 8845 003a DA66     		str	r2, [r3, #108]
3989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 8846              		.loc 1 3996 3
 8847 003c F868     		ldr	r0, [r7, #12]
 8848 003e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8849              		.loc 1 3998 1
 8850 0042 00BF     		nop
 8851 0044 1037     		adds	r7, r7, #16
 8852              	.LCFI330:
 8853              		.cfi_def_cfa_offset 8
 8854 0046 BD46     		mov	sp, r7
 8855              	.LCFI331:
 8856              		.cfi_def_cfa_register 13
 8857              		@ sp needed
 8858 0048 80BD     		pop	{r7, pc}
 8859              		.cfi_endproc
 8860              	.LFE391:
 8862              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 8863              		.align	1
 8864              		.syntax unified
 8865              		.thumb
 8866              		.thumb_func
ARM GAS  /tmp/ccp35uGD.s 			page 225


 8867              		.fpu fpv5-d16
 8869              	UART_TxISR_8BIT:
 8870              	.LFB392:
3999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8871              		.loc 1 4008 1
 8872              		.cfi_startproc
 8873              		@ args = 0, pretend = 0, frame = 8
 8874              		@ frame_needed = 1, uses_anonymous_args = 0
 8875              		@ link register save eliminated.
 8876 0000 80B4     		push	{r7}
 8877              	.LCFI332:
 8878              		.cfi_def_cfa_offset 4
 8879              		.cfi_offset 7, -4
 8880 0002 83B0     		sub	sp, sp, #12
 8881              	.LCFI333:
 8882              		.cfi_def_cfa_offset 16
 8883 0004 00AF     		add	r7, sp, #0
 8884              	.LCFI334:
 8885              		.cfi_def_cfa_register 7
 8886 0006 7860     		str	r0, [r7, #4]
4009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8887              		.loc 1 4010 12
 8888 0008 7B68     		ldr	r3, [r7, #4]
 8889 000a D3F88430 		ldr	r3, [r3, #132]
 8890              		.loc 1 4010 6
 8891 000e 212B     		cmp	r3, #33
 8892 0010 2AD1     		bne	.L496
4011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 8893              		.loc 1 4012 14
 8894 0012 7B68     		ldr	r3, [r7, #4]
 8895 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 8896 0018 9BB2     		uxth	r3, r3
 8897              		.loc 1 4012 8
 8898 001a 002B     		cmp	r3, #0
 8899 001c 10D1     		bne	.L495
4013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 8900              		.loc 1 4015 7
 8901 001e 7B68     		ldr	r3, [r7, #4]
 8902 0020 1B68     		ldr	r3, [r3]
 8903 0022 1A68     		ldr	r2, [r3]
 8904 0024 7B68     		ldr	r3, [r7, #4]
 8905 0026 1B68     		ldr	r3, [r3]
 8906 0028 22F08002 		bic	r2, r2, #128
 8907 002c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 226


4016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8908              		.loc 1 4018 7
 8909 002e 7B68     		ldr	r3, [r7, #4]
 8910 0030 1B68     		ldr	r3, [r3]
 8911 0032 1A68     		ldr	r2, [r3]
 8912 0034 7B68     		ldr	r3, [r7, #4]
 8913 0036 1B68     		ldr	r3, [r3]
 8914 0038 42F04002 		orr	r2, r2, #64
 8915 003c 1A60     		str	r2, [r3]
4019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
4021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
4024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
4025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 8916              		.loc 1 4027 1
 8917 003e 13E0     		b	.L496
 8918              	.L495:
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 8919              		.loc 1 4022 46
 8920 0040 7B68     		ldr	r3, [r7, #4]
 8921 0042 1B6D     		ldr	r3, [r3, #80]
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 8922              		.loc 1 4022 40
 8923 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 8924              		.loc 1 4022 12
 8925 0046 7B68     		ldr	r3, [r7, #4]
 8926 0048 1B68     		ldr	r3, [r3]
4022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 8927              		.loc 1 4022 28
 8928 004a 9A62     		str	r2, [r3, #40]
4023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 8929              		.loc 1 4023 12
 8930 004c 7B68     		ldr	r3, [r7, #4]
 8931 004e 1B6D     		ldr	r3, [r3, #80]
4023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 8932              		.loc 1 4023 24
 8933 0050 5A1C     		adds	r2, r3, #1
 8934 0052 7B68     		ldr	r3, [r7, #4]
 8935 0054 1A65     		str	r2, [r3, #80]
4024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8936              		.loc 1 4024 12
 8937 0056 7B68     		ldr	r3, [r7, #4]
 8938 0058 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 8939 005c 9BB2     		uxth	r3, r3
4024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 8940              		.loc 1 4024 25
 8941 005e 013B     		subs	r3, r3, #1
 8942 0060 9AB2     		uxth	r2, r3
 8943 0062 7B68     		ldr	r3, [r7, #4]
 8944 0064 A3F85620 		strh	r2, [r3, #86]	@ movhi
ARM GAS  /tmp/ccp35uGD.s 			page 227


 8945              	.L496:
 8946              		.loc 1 4027 1
 8947 0068 00BF     		nop
 8948 006a 0C37     		adds	r7, r7, #12
 8949              	.LCFI335:
 8950              		.cfi_def_cfa_offset 4
 8951 006c BD46     		mov	sp, r7
 8952              	.LCFI336:
 8953              		.cfi_def_cfa_register 13
 8954              		@ sp needed
 8955 006e 5DF8047B 		ldr	r7, [sp], #4
 8956              	.LCFI337:
 8957              		.cfi_restore 7
 8958              		.cfi_def_cfa_offset 0
 8959 0072 7047     		bx	lr
 8960              		.cfi_endproc
 8961              	.LFE392:
 8963              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 8964              		.align	1
 8965              		.syntax unified
 8966              		.thumb
 8967              		.thumb_func
 8968              		.fpu fpv5-d16
 8970              	UART_TxISR_16BIT:
 8971              	.LFB393:
4028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 8972              		.loc 1 4037 1
 8973              		.cfi_startproc
 8974              		@ args = 0, pretend = 0, frame = 16
 8975              		@ frame_needed = 1, uses_anonymous_args = 0
 8976              		@ link register save eliminated.
 8977 0000 80B4     		push	{r7}
 8978              	.LCFI338:
 8979              		.cfi_def_cfa_offset 4
 8980              		.cfi_offset 7, -4
 8981 0002 85B0     		sub	sp, sp, #20
 8982              	.LCFI339:
 8983              		.cfi_def_cfa_offset 24
 8984 0004 00AF     		add	r7, sp, #0
 8985              	.LCFI340:
 8986              		.cfi_def_cfa_register 7
 8987 0006 7860     		str	r0, [r7, #4]
4038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8988              		.loc 1 4041 12
 8989 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 228


 8990 000a D3F88430 		ldr	r3, [r3, #132]
 8991              		.loc 1 4041 6
 8992 000e 212B     		cmp	r3, #33
 8993 0010 2FD1     		bne	.L500
4042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 8994              		.loc 1 4043 14
 8995 0012 7B68     		ldr	r3, [r7, #4]
 8996 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 8997 0018 9BB2     		uxth	r3, r3
 8998              		.loc 1 4043 8
 8999 001a 002B     		cmp	r3, #0
 9000 001c 10D1     		bne	.L499
4044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 9001              		.loc 1 4046 7
 9002 001e 7B68     		ldr	r3, [r7, #4]
 9003 0020 1B68     		ldr	r3, [r3]
 9004 0022 1A68     		ldr	r2, [r3]
 9005 0024 7B68     		ldr	r3, [r7, #4]
 9006 0026 1B68     		ldr	r3, [r3]
 9007 0028 22F08002 		bic	r2, r2, #128
 9008 002c 1A60     		str	r2, [r3]
4047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9009              		.loc 1 4049 7
 9010 002e 7B68     		ldr	r3, [r7, #4]
 9011 0030 1B68     		ldr	r3, [r3]
 9012 0032 1A68     		ldr	r2, [r3]
 9013 0034 7B68     		ldr	r3, [r7, #4]
 9014 0036 1B68     		ldr	r3, [r3]
 9015 0038 42F04002 		orr	r2, r2, #64
 9016 003c 1A60     		str	r2, [r3]
4050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
4052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
4056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
4057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9017              		.loc 1 4059 1
 9018 003e 18E0     		b	.L500
 9019              	.L499:
4053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 9020              		.loc 1 4053 11
 9021 0040 7B68     		ldr	r3, [r7, #4]
 9022 0042 1B6D     		ldr	r3, [r3, #80]
 9023 0044 FB60     		str	r3, [r7, #12]
4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9024              		.loc 1 4054 43
 9025 0046 FB68     		ldr	r3, [r7, #12]
 9026 0048 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccp35uGD.s 			page 229


4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9027              		.loc 1 4054 50
 9028 004a 1A46     		mov	r2, r3
4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9029              		.loc 1 4054 12
 9030 004c 7B68     		ldr	r3, [r7, #4]
 9031 004e 1B68     		ldr	r3, [r3]
4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9032              		.loc 1 4054 50
 9033 0050 C2F30802 		ubfx	r2, r2, #0, #9
4054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9034              		.loc 1 4054 28
 9035 0054 9A62     		str	r2, [r3, #40]
4055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 9036              		.loc 1 4055 25
 9037 0056 7B68     		ldr	r3, [r7, #4]
 9038 0058 1B6D     		ldr	r3, [r3, #80]
 9039 005a 9A1C     		adds	r2, r3, #2
 9040 005c 7B68     		ldr	r3, [r7, #4]
 9041 005e 1A65     		str	r2, [r3, #80]
4056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 9042              		.loc 1 4056 12
 9043 0060 7B68     		ldr	r3, [r7, #4]
 9044 0062 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9045 0066 9BB2     		uxth	r3, r3
4056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 9046              		.loc 1 4056 25
 9047 0068 013B     		subs	r3, r3, #1
 9048 006a 9AB2     		uxth	r2, r3
 9049 006c 7B68     		ldr	r3, [r7, #4]
 9050 006e A3F85620 		strh	r2, [r3, #86]	@ movhi
 9051              	.L500:
 9052              		.loc 1 4059 1
 9053 0072 00BF     		nop
 9054 0074 1437     		adds	r7, r7, #20
 9055              	.LCFI341:
 9056              		.cfi_def_cfa_offset 4
 9057 0076 BD46     		mov	sp, r7
 9058              	.LCFI342:
 9059              		.cfi_def_cfa_register 13
 9060              		@ sp needed
 9061 0078 5DF8047B 		ldr	r7, [sp], #4
 9062              	.LCFI343:
 9063              		.cfi_restore 7
 9064              		.cfi_def_cfa_offset 0
 9065 007c 7047     		bx	lr
 9066              		.cfi_endproc
 9067              	.LFE393:
 9069              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 9070              		.align	1
 9071              		.syntax unified
 9072              		.thumb
 9073              		.thumb_func
 9074              		.fpu fpv5-d16
 9076              	UART_TxISR_8BIT_FIFOEN:
 9077              	.LFB394:
4060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 230


4061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9078              		.loc 1 4069 1
 9079              		.cfi_startproc
 9080              		@ args = 0, pretend = 0, frame = 16
 9081              		@ frame_needed = 1, uses_anonymous_args = 0
 9082              		@ link register save eliminated.
 9083 0000 80B4     		push	{r7}
 9084              	.LCFI344:
 9085              		.cfi_def_cfa_offset 4
 9086              		.cfi_offset 7, -4
 9087 0002 85B0     		sub	sp, sp, #20
 9088              	.LCFI345:
 9089              		.cfi_def_cfa_offset 24
 9090 0004 00AF     		add	r7, sp, #0
 9091              	.LCFI346:
 9092              		.cfi_def_cfa_register 7
 9093 0006 7860     		str	r0, [r7, #4]
4070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
4071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9094              		.loc 1 4073 12
 9095 0008 7B68     		ldr	r3, [r7, #4]
 9096 000a D3F88430 		ldr	r3, [r3, #132]
 9097              		.loc 1 4073 6
 9098 000e 212B     		cmp	r3, #33
 9099 0010 3DD1     		bne	.L507
4074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 9100              		.loc 1 4075 21
 9101 0012 7B68     		ldr	r3, [r7, #4]
 9102 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 9103 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 9104              		.loc 1 4075 5
 9105 001a 35E0     		b	.L503
 9106              	.L506:
4076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 9107              		.loc 1 4077 16
 9108 001c 7B68     		ldr	r3, [r7, #4]
 9109 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9110 0022 9BB2     		uxth	r3, r3
 9111              		.loc 1 4077 10
 9112 0024 002B     		cmp	r3, #0
 9113 0026 11D1     		bne	.L504
4078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 9114              		.loc 1 4080 9
ARM GAS  /tmp/ccp35uGD.s 			page 231


 9115 0028 7B68     		ldr	r3, [r7, #4]
 9116 002a 1B68     		ldr	r3, [r3]
 9117 002c 9A68     		ldr	r2, [r3, #8]
 9118 002e 7B68     		ldr	r3, [r7, #4]
 9119 0030 1B68     		ldr	r3, [r3]
 9120 0032 22F40002 		bic	r2, r2, #8388608
 9121 0036 9A60     		str	r2, [r3, #8]
4081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9122              		.loc 1 4083 9
 9123 0038 7B68     		ldr	r3, [r7, #4]
 9124 003a 1B68     		ldr	r3, [r3]
 9125 003c 1A68     		ldr	r2, [r3]
 9126 003e 7B68     		ldr	r3, [r7, #4]
 9127 0040 1B68     		ldr	r3, [r3]
 9128 0042 42F04002 		orr	r2, r2, #64
 9129 0046 1A60     		str	r2, [r3]
4084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 9130              		.loc 1 4085 9
 9131 0048 00BF     		nop
4086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
4091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
4092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
4096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9132              		.loc 1 4099 1
 9133 004a 20E0     		b	.L507
 9134              	.L504:
4087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 9135              		.loc 1 4087 16
 9136 004c 7B68     		ldr	r3, [r7, #4]
 9137 004e 1B68     		ldr	r3, [r3]
 9138 0050 DB69     		ldr	r3, [r3, #28]
 9139 0052 03F08003 		and	r3, r3, #128
4087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 9140              		.loc 1 4087 15
 9141 0056 002B     		cmp	r3, #0
 9142 0058 13D0     		beq	.L505
4089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9143              		.loc 1 4089 48
 9144 005a 7B68     		ldr	r3, [r7, #4]
 9145 005c 1B6D     		ldr	r3, [r3, #80]
4089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9146              		.loc 1 4089 42
 9147 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
4089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
ARM GAS  /tmp/ccp35uGD.s 			page 232


 9148              		.loc 1 4089 14
 9149 0060 7B68     		ldr	r3, [r7, #4]
 9150 0062 1B68     		ldr	r3, [r3]
4089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9151              		.loc 1 4089 30
 9152 0064 9A62     		str	r2, [r3, #40]
4090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 9153              		.loc 1 4090 14
 9154 0066 7B68     		ldr	r3, [r7, #4]
 9155 0068 1B6D     		ldr	r3, [r3, #80]
4090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 9156              		.loc 1 4090 26
 9157 006a 5A1C     		adds	r2, r3, #1
 9158 006c 7B68     		ldr	r3, [r7, #4]
 9159 006e 1A65     		str	r2, [r3, #80]
4091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 9160              		.loc 1 4091 14
 9161 0070 7B68     		ldr	r3, [r7, #4]
 9162 0072 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9163 0076 9BB2     		uxth	r3, r3
4091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 9164              		.loc 1 4091 27
 9165 0078 013B     		subs	r3, r3, #1
 9166 007a 9AB2     		uxth	r2, r3
 9167 007c 7B68     		ldr	r3, [r7, #4]
 9168 007e A3F85620 		strh	r2, [r3, #86]	@ movhi
 9169              	.L505:
4075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9170              		.loc 1 4075 78 discriminator 2
 9171 0082 FB89     		ldrh	r3, [r7, #14]
 9172 0084 013B     		subs	r3, r3, #1
 9173 0086 FB81     		strh	r3, [r7, #14]	@ movhi
 9174              	.L503:
4075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9175              		.loc 1 4075 5 discriminator 1
 9176 0088 FB89     		ldrh	r3, [r7, #14]
 9177 008a 002B     		cmp	r3, #0
 9178 008c C6D1     		bne	.L506
 9179              	.L507:
 9180              		.loc 1 4099 1
 9181 008e 00BF     		nop
 9182 0090 1437     		adds	r7, r7, #20
 9183              	.LCFI347:
 9184              		.cfi_def_cfa_offset 4
 9185 0092 BD46     		mov	sp, r7
 9186              	.LCFI348:
 9187              		.cfi_def_cfa_register 13
 9188              		@ sp needed
 9189 0094 5DF8047B 		ldr	r7, [sp], #4
 9190              	.LCFI349:
 9191              		.cfi_restore 7
 9192              		.cfi_def_cfa_offset 0
 9193 0098 7047     		bx	lr
 9194              		.cfi_endproc
 9195              	.LFE394:
 9197              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 9198              		.align	1
ARM GAS  /tmp/ccp35uGD.s 			page 233


 9199              		.syntax unified
 9200              		.thumb
 9201              		.thumb_func
 9202              		.fpu fpv5-d16
 9204              	UART_TxISR_16BIT_FIFOEN:
 9205              	.LFB395:
4100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9206              		.loc 1 4109 1
 9207              		.cfi_startproc
 9208              		@ args = 0, pretend = 0, frame = 16
 9209              		@ frame_needed = 1, uses_anonymous_args = 0
 9210              		@ link register save eliminated.
 9211 0000 80B4     		push	{r7}
 9212              	.LCFI350:
 9213              		.cfi_def_cfa_offset 4
 9214              		.cfi_offset 7, -4
 9215 0002 85B0     		sub	sp, sp, #20
 9216              	.LCFI351:
 9217              		.cfi_def_cfa_offset 24
 9218 0004 00AF     		add	r7, sp, #0
 9219              	.LCFI352:
 9220              		.cfi_def_cfa_register 7
 9221 0006 7860     		str	r0, [r7, #4]
4110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
4112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9222              		.loc 1 4114 12
 9223 0008 7B68     		ldr	r3, [r7, #4]
 9224 000a D3F88430 		ldr	r3, [r3, #132]
 9225              		.loc 1 4114 6
 9226 000e 212B     		cmp	r3, #33
 9227 0010 42D1     		bne	.L514
4115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 9228              		.loc 1 4116 21
 9229 0012 7B68     		ldr	r3, [r7, #4]
 9230 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 9231 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 9232              		.loc 1 4116 5
 9233 001a 3AE0     		b	.L510
 9234              	.L513:
4117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 9235              		.loc 1 4118 16
 9236 001c 7B68     		ldr	r3, [r7, #4]
 9237 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
ARM GAS  /tmp/ccp35uGD.s 			page 234


 9238 0022 9BB2     		uxth	r3, r3
 9239              		.loc 1 4118 10
 9240 0024 002B     		cmp	r3, #0
 9241 0026 11D1     		bne	.L511
4119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 9242              		.loc 1 4121 9
 9243 0028 7B68     		ldr	r3, [r7, #4]
 9244 002a 1B68     		ldr	r3, [r3]
 9245 002c 9A68     		ldr	r2, [r3, #8]
 9246 002e 7B68     		ldr	r3, [r7, #4]
 9247 0030 1B68     		ldr	r3, [r3]
 9248 0032 22F40002 		bic	r2, r2, #8388608
 9249 0036 9A60     		str	r2, [r3, #8]
4122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9250              		.loc 1 4124 9
 9251 0038 7B68     		ldr	r3, [r7, #4]
 9252 003a 1B68     		ldr	r3, [r3]
 9253 003c 1A68     		ldr	r2, [r3]
 9254 003e 7B68     		ldr	r3, [r7, #4]
 9255 0040 1B68     		ldr	r3, [r3]
 9256 0042 42F04002 		orr	r2, r2, #64
 9257 0046 1A60     		str	r2, [r3]
4125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 9258              		.loc 1 4126 9
 9259 0048 00BF     		nop
4127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
4133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
4134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
4138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9260              		.loc 1 4141 1
 9261 004a 25E0     		b	.L514
 9262              	.L511:
4128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 9263              		.loc 1 4128 16
 9264 004c 7B68     		ldr	r3, [r7, #4]
 9265 004e 1B68     		ldr	r3, [r3]
 9266 0050 DB69     		ldr	r3, [r3, #28]
 9267 0052 03F08003 		and	r3, r3, #128
4128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 9268              		.loc 1 4128 15
 9269 0056 002B     		cmp	r3, #0
ARM GAS  /tmp/ccp35uGD.s 			page 235


 9270 0058 18D0     		beq	.L512
4130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 9271              		.loc 1 4130 13
 9272 005a 7B68     		ldr	r3, [r7, #4]
 9273 005c 1B6D     		ldr	r3, [r3, #80]
 9274 005e BB60     		str	r3, [r7, #8]
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9275              		.loc 1 4131 45
 9276 0060 BB68     		ldr	r3, [r7, #8]
 9277 0062 1B88     		ldrh	r3, [r3]
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9278              		.loc 1 4131 52
 9279 0064 1A46     		mov	r2, r3
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9280              		.loc 1 4131 14
 9281 0066 7B68     		ldr	r3, [r7, #4]
 9282 0068 1B68     		ldr	r3, [r3]
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9283              		.loc 1 4131 52
 9284 006a C2F30802 		ubfx	r2, r2, #0, #9
4131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9285              		.loc 1 4131 30
 9286 006e 9A62     		str	r2, [r3, #40]
4132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 9287              		.loc 1 4132 27
 9288 0070 7B68     		ldr	r3, [r7, #4]
 9289 0072 1B6D     		ldr	r3, [r3, #80]
 9290 0074 9A1C     		adds	r2, r3, #2
 9291 0076 7B68     		ldr	r3, [r7, #4]
 9292 0078 1A65     		str	r2, [r3, #80]
4133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 9293              		.loc 1 4133 14
 9294 007a 7B68     		ldr	r3, [r7, #4]
 9295 007c B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9296 0080 9BB2     		uxth	r3, r3
4133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 9297              		.loc 1 4133 27
 9298 0082 013B     		subs	r3, r3, #1
 9299 0084 9AB2     		uxth	r2, r3
 9300 0086 7B68     		ldr	r3, [r7, #4]
 9301 0088 A3F85620 		strh	r2, [r3, #86]	@ movhi
 9302              	.L512:
4116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9303              		.loc 1 4116 78 discriminator 2
 9304 008c FB89     		ldrh	r3, [r7, #14]
 9305 008e 013B     		subs	r3, r3, #1
 9306 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 9307              	.L510:
4116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9308              		.loc 1 4116 5 discriminator 1
 9309 0092 FB89     		ldrh	r3, [r7, #14]
 9310 0094 002B     		cmp	r3, #0
 9311 0096 C1D1     		bne	.L513
 9312              	.L514:
 9313              		.loc 1 4141 1
 9314 0098 00BF     		nop
 9315 009a 1437     		adds	r7, r7, #20
ARM GAS  /tmp/ccp35uGD.s 			page 236


 9316              	.LCFI353:
 9317              		.cfi_def_cfa_offset 4
 9318 009c BD46     		mov	sp, r7
 9319              	.LCFI354:
 9320              		.cfi_def_cfa_register 13
 9321              		@ sp needed
 9322 009e 5DF8047B 		ldr	r7, [sp], #4
 9323              	.LCFI355:
 9324              		.cfi_restore 7
 9325              		.cfi_def_cfa_offset 0
 9326 00a2 7047     		bx	lr
 9327              		.cfi_endproc
 9328              	.LFE395:
 9330              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 9331              		.align	1
 9332              		.syntax unified
 9333              		.thumb
 9334              		.thumb_func
 9335              		.fpu fpv5-d16
 9337              	UART_EndTransmit_IT:
 9338              	.LFB396:
4142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9339              		.loc 1 4150 1
 9340              		.cfi_startproc
 9341              		@ args = 0, pretend = 0, frame = 8
 9342              		@ frame_needed = 1, uses_anonymous_args = 0
 9343 0000 80B5     		push	{r7, lr}
 9344              	.LCFI356:
 9345              		.cfi_def_cfa_offset 8
 9346              		.cfi_offset 7, -8
 9347              		.cfi_offset 14, -4
 9348 0002 82B0     		sub	sp, sp, #8
 9349              	.LCFI357:
 9350              		.cfi_def_cfa_offset 16
 9351 0004 00AF     		add	r7, sp, #0
 9352              	.LCFI358:
 9353              		.cfi_def_cfa_register 7
 9354 0006 7860     		str	r0, [r7, #4]
4151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9355              		.loc 1 4152 3
 9356 0008 7B68     		ldr	r3, [r7, #4]
 9357 000a 1B68     		ldr	r3, [r3]
 9358 000c 1A68     		ldr	r2, [r3]
 9359 000e 7B68     		ldr	r3, [r7, #4]
 9360 0010 1B68     		ldr	r3, [r3]
 9361 0012 22F04002 		bic	r2, r2, #64
 9362 0016 1A60     		str	r2, [r3]
4153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 237


4154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9363              		.loc 1 4155 17
 9364 0018 7B68     		ldr	r3, [r7, #4]
 9365 001a 2022     		movs	r2, #32
 9366 001c C3F88420 		str	r2, [r3, #132]
4156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 9367              		.loc 1 4158 16
 9368 0020 7B68     		ldr	r3, [r7, #4]
 9369 0022 0022     		movs	r2, #0
 9370 0024 5A67     		str	r2, [r3, #116]
4159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 9371              		.loc 1 4165 3
 9372 0026 7868     		ldr	r0, [r7, #4]
 9373 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
4166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9374              		.loc 1 4167 1
 9375 002c 00BF     		nop
 9376 002e 0837     		adds	r7, r7, #8
 9377              	.LCFI359:
 9378              		.cfi_def_cfa_offset 8
 9379 0030 BD46     		mov	sp, r7
 9380              	.LCFI360:
 9381              		.cfi_def_cfa_register 13
 9382              		@ sp needed
 9383 0032 80BD     		pop	{r7, pc}
 9384              		.cfi_endproc
 9385              	.LFE396:
 9387              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 9388              		.align	1
 9389              		.syntax unified
 9390              		.thumb
 9391              		.thumb_func
 9392              		.fpu fpv5-d16
 9394              	UART_RxISR_8BIT:
 9395              	.LFB397:
4168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9396              		.loc 1 4175 1
 9397              		.cfi_startproc
 9398              		@ args = 0, pretend = 0, frame = 16
 9399              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccp35uGD.s 			page 238


 9400 0000 80B5     		push	{r7, lr}
 9401              	.LCFI361:
 9402              		.cfi_def_cfa_offset 8
 9403              		.cfi_offset 7, -8
 9404              		.cfi_offset 14, -4
 9405 0002 84B0     		sub	sp, sp, #16
 9406              	.LCFI362:
 9407              		.cfi_def_cfa_offset 24
 9408 0004 00AF     		add	r7, sp, #0
 9409              	.LCFI363:
 9410              		.cfi_def_cfa_register 7
 9411 0006 7860     		str	r0, [r7, #4]
4176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 9412              		.loc 1 4176 12
 9413 0008 7B68     		ldr	r3, [r7, #4]
 9414 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 9415 000e FB81     		strh	r3, [r7, #14]	@ movhi
4177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9416              		.loc 1 4180 12
 9417 0010 7B68     		ldr	r3, [r7, #4]
 9418 0012 D3F88830 		ldr	r3, [r3, #136]
 9419              		.loc 1 4180 6
 9420 0016 222B     		cmp	r3, #34
 9421 0018 52D1     		bne	.L517
4181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 9422              		.loc 1 4182 25
 9423 001a 7B68     		ldr	r3, [r7, #4]
 9424 001c 1B68     		ldr	r3, [r3]
 9425 001e 5B6A     		ldr	r3, [r3, #36]
 9426              		.loc 1 4182 12
 9427 0020 BB81     		strh	r3, [r7, #12]	@ movhi
4183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 9428              		.loc 1 4183 26
 9429 0022 BB89     		ldrh	r3, [r7, #12]	@ movhi
 9430 0024 D9B2     		uxtb	r1, r3
 9431              		.loc 1 4183 45
 9432 0026 FB89     		ldrh	r3, [r7, #14]	@ movhi
 9433 0028 DAB2     		uxtb	r2, r3
 9434              		.loc 1 4183 11
 9435 002a 7B68     		ldr	r3, [r7, #4]
 9436 002c 9B6D     		ldr	r3, [r3, #88]
 9437              		.loc 1 4183 26
 9438 002e 0A40     		ands	r2, r2, r1
 9439 0030 D2B2     		uxtb	r2, r2
 9440              		.loc 1 4183 24
 9441 0032 1A70     		strb	r2, [r3]
4184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr++;
 9442              		.loc 1 4184 10
 9443 0034 7B68     		ldr	r3, [r7, #4]
 9444 0036 9B6D     		ldr	r3, [r3, #88]
 9445              		.loc 1 4184 22
 9446 0038 5A1C     		adds	r2, r3, #1
 9447 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 239


 9448 003c 9A65     		str	r2, [r3, #88]
4185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 9449              		.loc 1 4185 10
 9450 003e 7B68     		ldr	r3, [r7, #4]
 9451 0040 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9452 0044 9BB2     		uxth	r3, r3
 9453              		.loc 1 4185 23
 9454 0046 013B     		subs	r3, r3, #1
 9455 0048 9AB2     		uxth	r2, r3
 9456 004a 7B68     		ldr	r3, [r7, #4]
 9457 004c A3F85E20 		strh	r2, [r3, #94]	@ movhi
4186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 9458              		.loc 1 4187 14
 9459 0050 7B68     		ldr	r3, [r7, #4]
 9460 0052 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9461 0056 9BB2     		uxth	r3, r3
 9462              		.loc 1 4187 8
 9463 0058 002B     		cmp	r3, #0
 9464 005a 39D1     		bne	.L521
4188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 9465              		.loc 1 4190 7
 9466 005c 7B68     		ldr	r3, [r7, #4]
 9467 005e 1B68     		ldr	r3, [r3]
 9468 0060 1A68     		ldr	r2, [r3]
 9469 0062 7B68     		ldr	r3, [r7, #4]
 9470 0064 1B68     		ldr	r3, [r3]
 9471 0066 22F49072 		bic	r2, r2, #288
 9472 006a 1A60     		str	r2, [r3]
4191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9473              		.loc 1 4193 7
 9474 006c 7B68     		ldr	r3, [r7, #4]
 9475 006e 1B68     		ldr	r3, [r3]
 9476 0070 9A68     		ldr	r2, [r3, #8]
 9477 0072 7B68     		ldr	r3, [r7, #4]
 9478 0074 1B68     		ldr	r3, [r3]
 9479 0076 22F00102 		bic	r2, r2, #1
 9480 007a 9A60     		str	r2, [r3, #8]
4194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9481              		.loc 1 4196 22
 9482 007c 7B68     		ldr	r3, [r7, #4]
 9483 007e 2022     		movs	r2, #32
 9484 0080 C3F88820 		str	r2, [r3, #136]
4197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
4199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 9485              		.loc 1 4199 20
 9486 0084 7B68     		ldr	r3, [r7, #4]
 9487 0086 0022     		movs	r2, #0
 9488 0088 1A67     		str	r2, [r3, #112]
4200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 240


4201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check current reception Mode :
4202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9489              		.loc 1 4203 16
 9490 008a 7B68     		ldr	r3, [r7, #4]
 9491 008c DB6E     		ldr	r3, [r3, #108]
 9492              		.loc 1 4203 10
 9493 008e 012B     		cmp	r3, #1
 9494 0090 0FD1     		bne	.L519
4204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable IDLE interrupt */
4206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9495              		.loc 1 4206 9
 9496 0092 7B68     		ldr	r3, [r7, #4]
 9497 0094 1B68     		ldr	r3, [r3]
 9498 0096 1A68     		ldr	r2, [r3]
 9499 0098 7B68     		ldr	r3, [r7, #4]
 9500 009a 1B68     		ldr	r3, [r3]
 9501 009c 22F01002 		bic	r2, r2, #16
 9502 00a0 1A60     		str	r2, [r3]
4207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9503              		.loc 1 4213 9
 9504 00a2 7B68     		ldr	r3, [r7, #4]
 9505 00a4 B3F85C30 		ldrh	r3, [r3, #92]
 9506 00a8 1946     		mov	r1, r3
 9507 00aa 7868     		ldr	r0, [r7, #4]
 9508 00ac FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9509 00b0 02E0     		b	.L520
 9510              	.L519:
4214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Standard reception API called */
4219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9511              		.loc 1 4224 9
 9512 00b2 7868     		ldr	r0, [r7, #4]
 9513 00b4 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9514              	.L520:
4225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9515              		.loc 1 4227 28
 9516 00b8 7B68     		ldr	r3, [r7, #4]
 9517 00ba 0022     		movs	r2, #0
 9518 00bc DA66     		str	r2, [r3, #108]
ARM GAS  /tmp/ccp35uGD.s 			page 241


4228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9519              		.loc 1 4235 1
 9520 00be 07E0     		b	.L521
 9521              	.L517:
4233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9522              		.loc 1 4233 5
 9523 00c0 7B68     		ldr	r3, [r7, #4]
 9524 00c2 1B68     		ldr	r3, [r3]
 9525 00c4 9A69     		ldr	r2, [r3, #24]
 9526 00c6 7B68     		ldr	r3, [r7, #4]
 9527 00c8 1B68     		ldr	r3, [r3]
 9528 00ca 42F00802 		orr	r2, r2, #8
 9529 00ce 9A61     		str	r2, [r3, #24]
 9530              	.L521:
 9531              		.loc 1 4235 1
 9532 00d0 00BF     		nop
 9533 00d2 1037     		adds	r7, r7, #16
 9534              	.LCFI364:
 9535              		.cfi_def_cfa_offset 8
 9536 00d4 BD46     		mov	sp, r7
 9537              	.LCFI365:
 9538              		.cfi_def_cfa_register 13
 9539              		@ sp needed
 9540 00d6 80BD     		pop	{r7, pc}
 9541              		.cfi_endproc
 9542              	.LFE397:
 9544              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 9545              		.align	1
 9546              		.syntax unified
 9547              		.thumb
 9548              		.thumb_func
 9549              		.fpu fpv5-d16
 9551              	UART_RxISR_16BIT:
 9552              	.LFB398:
4236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9553              		.loc 1 4245 1
 9554              		.cfi_startproc
 9555              		@ args = 0, pretend = 0, frame = 16
 9556              		@ frame_needed = 1, uses_anonymous_args = 0
 9557 0000 80B5     		push	{r7, lr}
 9558              	.LCFI366:
ARM GAS  /tmp/ccp35uGD.s 			page 242


 9559              		.cfi_def_cfa_offset 8
 9560              		.cfi_offset 7, -8
 9561              		.cfi_offset 14, -4
 9562 0002 84B0     		sub	sp, sp, #16
 9563              	.LCFI367:
 9564              		.cfi_def_cfa_offset 24
 9565 0004 00AF     		add	r7, sp, #0
 9566              	.LCFI368:
 9567              		.cfi_def_cfa_register 7
 9568 0006 7860     		str	r0, [r7, #4]
4246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 9569              		.loc 1 4247 12
 9570 0008 7B68     		ldr	r3, [r7, #4]
 9571 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 9572 000e FB81     		strh	r3, [r7, #14]	@ movhi
4248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9573              		.loc 1 4251 12
 9574 0010 7B68     		ldr	r3, [r7, #4]
 9575 0012 D3F88830 		ldr	r3, [r3, #136]
 9576              		.loc 1 4251 6
 9577 0016 222B     		cmp	r3, #34
 9578 0018 52D1     		bne	.L523
4252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 9579              		.loc 1 4253 25
 9580 001a 7B68     		ldr	r3, [r7, #4]
 9581 001c 1B68     		ldr	r3, [r3]
 9582 001e 5B6A     		ldr	r3, [r3, #36]
 9583              		.loc 1 4253 12
 9584 0020 BB81     		strh	r3, [r7, #12]	@ movhi
4254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 9585              		.loc 1 4254 9
 9586 0022 7B68     		ldr	r3, [r7, #4]
 9587 0024 9B6D     		ldr	r3, [r3, #88]
 9588 0026 BB60     		str	r3, [r7, #8]
4255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 9589              		.loc 1 4255 12
 9590 0028 BA89     		ldrh	r2, [r7, #12]	@ movhi
 9591 002a FB89     		ldrh	r3, [r7, #14]	@ movhi
 9592 002c 1340     		ands	r3, r3, r2
 9593 002e 9AB2     		uxth	r2, r3
 9594              		.loc 1 4255 10
 9595 0030 BB68     		ldr	r3, [r7, #8]
 9596 0032 1A80     		strh	r2, [r3]	@ movhi
4256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 9597              		.loc 1 4256 23
 9598 0034 7B68     		ldr	r3, [r7, #4]
 9599 0036 9B6D     		ldr	r3, [r3, #88]
 9600 0038 9A1C     		adds	r2, r3, #2
 9601 003a 7B68     		ldr	r3, [r7, #4]
 9602 003c 9A65     		str	r2, [r3, #88]
4257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 9603              		.loc 1 4257 10
ARM GAS  /tmp/ccp35uGD.s 			page 243


 9604 003e 7B68     		ldr	r3, [r7, #4]
 9605 0040 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9606 0044 9BB2     		uxth	r3, r3
 9607              		.loc 1 4257 23
 9608 0046 013B     		subs	r3, r3, #1
 9609 0048 9AB2     		uxth	r2, r3
 9610 004a 7B68     		ldr	r3, [r7, #4]
 9611 004c A3F85E20 		strh	r2, [r3, #94]	@ movhi
4258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 9612              		.loc 1 4259 14
 9613 0050 7B68     		ldr	r3, [r7, #4]
 9614 0052 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9615 0056 9BB2     		uxth	r3, r3
 9616              		.loc 1 4259 8
 9617 0058 002B     		cmp	r3, #0
 9618 005a 39D1     		bne	.L527
4260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 9619              		.loc 1 4262 7
 9620 005c 7B68     		ldr	r3, [r7, #4]
 9621 005e 1B68     		ldr	r3, [r3]
 9622 0060 1A68     		ldr	r2, [r3]
 9623 0062 7B68     		ldr	r3, [r7, #4]
 9624 0064 1B68     		ldr	r3, [r3]
 9625 0066 22F49072 		bic	r2, r2, #288
 9626 006a 1A60     		str	r2, [r3]
4263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9627              		.loc 1 4265 7
 9628 006c 7B68     		ldr	r3, [r7, #4]
 9629 006e 1B68     		ldr	r3, [r3]
 9630 0070 9A68     		ldr	r2, [r3, #8]
 9631 0072 7B68     		ldr	r3, [r7, #4]
 9632 0074 1B68     		ldr	r3, [r3]
 9633 0076 22F00102 		bic	r2, r2, #1
 9634 007a 9A60     		str	r2, [r3, #8]
4266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9635              		.loc 1 4268 22
 9636 007c 7B68     		ldr	r3, [r7, #4]
 9637 007e 2022     		movs	r2, #32
 9638 0080 C3F88820 		str	r2, [r3, #136]
4269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
4271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 9639              		.loc 1 4271 20
 9640 0084 7B68     		ldr	r3, [r7, #4]
 9641 0086 0022     		movs	r2, #0
 9642 0088 1A67     		str	r2, [r3, #112]
4272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check current reception Mode :
4274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  /tmp/ccp35uGD.s 			page 244


 9643              		.loc 1 4275 16
 9644 008a 7B68     		ldr	r3, [r7, #4]
 9645 008c DB6E     		ldr	r3, [r3, #108]
 9646              		.loc 1 4275 10
 9647 008e 012B     		cmp	r3, #1
 9648 0090 0FD1     		bne	.L525
4276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable IDLE interrupt */
4278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9649              		.loc 1 4278 9
 9650 0092 7B68     		ldr	r3, [r7, #4]
 9651 0094 1B68     		ldr	r3, [r3]
 9652 0096 1A68     		ldr	r2, [r3]
 9653 0098 7B68     		ldr	r3, [r7, #4]
 9654 009a 1B68     		ldr	r3, [r3]
 9655 009c 22F01002 		bic	r2, r2, #16
 9656 00a0 1A60     		str	r2, [r3]
4279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9657              		.loc 1 4285 9
 9658 00a2 7B68     		ldr	r3, [r7, #4]
 9659 00a4 B3F85C30 		ldrh	r3, [r3, #92]
 9660 00a8 1946     		mov	r1, r3
 9661 00aa 7868     		ldr	r0, [r7, #4]
 9662 00ac FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9663 00b0 02E0     		b	.L526
 9664              	.L525:
4286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Standard reception API called */
4291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9665              		.loc 1 4296 9
 9666 00b2 7868     		ldr	r0, [r7, #4]
 9667 00b4 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9668              	.L526:
4297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9669              		.loc 1 4299 28
 9670 00b8 7B68     		ldr	r3, [r7, #4]
 9671 00ba 0022     		movs	r2, #0
 9672 00bc DA66     		str	r2, [r3, #108]
4300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
ARM GAS  /tmp/ccp35uGD.s 			page 245


4303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9673              		.loc 1 4307 1
 9674 00be 07E0     		b	.L527
 9675              	.L523:
4305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 9676              		.loc 1 4305 5
 9677 00c0 7B68     		ldr	r3, [r7, #4]
 9678 00c2 1B68     		ldr	r3, [r3]
 9679 00c4 9A69     		ldr	r2, [r3, #24]
 9680 00c6 7B68     		ldr	r3, [r7, #4]
 9681 00c8 1B68     		ldr	r3, [r3]
 9682 00ca 42F00802 		orr	r2, r2, #8
 9683 00ce 9A61     		str	r2, [r3, #24]
 9684              	.L527:
 9685              		.loc 1 4307 1
 9686 00d0 00BF     		nop
 9687 00d2 1037     		adds	r7, r7, #16
 9688              	.LCFI369:
 9689              		.cfi_def_cfa_offset 8
 9690 00d4 BD46     		mov	sp, r7
 9691              	.LCFI370:
 9692              		.cfi_def_cfa_register 13
 9693              		@ sp needed
 9694 00d6 80BD     		pop	{r7, pc}
 9695              		.cfi_endproc
 9696              	.LFE398:
 9698              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 9699              		.align	1
 9700              		.syntax unified
 9701              		.thumb
 9702              		.thumb_func
 9703              		.fpu fpv5-d16
 9705              	UART_RxISR_8BIT_FIFOEN:
 9706              	.LFB399:
4308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
4311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9707              		.loc 1 4317 1
 9708              		.cfi_startproc
 9709              		@ args = 0, pretend = 0, frame = 32
 9710              		@ frame_needed = 1, uses_anonymous_args = 0
 9711 0000 80B5     		push	{r7, lr}
 9712              	.LCFI371:
 9713              		.cfi_def_cfa_offset 8
 9714              		.cfi_offset 7, -8
 9715              		.cfi_offset 14, -4
ARM GAS  /tmp/ccp35uGD.s 			page 246


 9716 0002 88B0     		sub	sp, sp, #32
 9717              	.LCFI372:
 9718              		.cfi_def_cfa_offset 40
 9719 0004 00AF     		add	r7, sp, #0
 9720              	.LCFI373:
 9721              		.cfi_def_cfa_register 7
 9722 0006 7860     		str	r0, [r7, #4]
4318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 9723              		.loc 1 4318 13
 9724 0008 7B68     		ldr	r3, [r7, #4]
 9725 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 9726 000e 7B83     		strh	r3, [r7, #26]	@ movhi
4319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_rx_data;
4321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 9727              		.loc 1 4322 24
 9728 0010 7B68     		ldr	r3, [r7, #4]
 9729 0012 1B68     		ldr	r3, [r3]
 9730              		.loc 1 4322 13
 9731 0014 DB69     		ldr	r3, [r3, #28]
 9732 0016 FB61     		str	r3, [r7, #28]
4323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 9733              		.loc 1 4323 24
 9734 0018 7B68     		ldr	r3, [r7, #4]
 9735 001a 1B68     		ldr	r3, [r3]
 9736              		.loc 1 4323 13
 9737 001c 1B68     		ldr	r3, [r3]
 9738 001e 7B61     		str	r3, [r7, #20]
4324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 9739              		.loc 1 4324 24
 9740 0020 7B68     		ldr	r3, [r7, #4]
 9741 0022 1B68     		ldr	r3, [r3]
 9742              		.loc 1 4324 13
 9743 0024 9B68     		ldr	r3, [r3, #8]
 9744 0026 3B61     		str	r3, [r7, #16]
4325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9745              		.loc 1 4327 12
 9746 0028 7B68     		ldr	r3, [r7, #4]
 9747 002a D3F88830 		ldr	r3, [r3, #136]
 9748              		.loc 1 4327 6
 9749 002e 222B     		cmp	r3, #34
 9750 0030 40F0D880 		bne	.L529
4328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 9751              		.loc 1 4329 16
 9752 0034 7B68     		ldr	r3, [r7, #4]
 9753 0036 B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 9754 003a FB81     		strh	r3, [r7, #14]	@ movhi
4330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 9755              		.loc 1 4330 11
 9756 003c A8E0     		b	.L530
 9757              	.L538:
4331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
ARM GAS  /tmp/ccp35uGD.s 			page 247


 9758              		.loc 1 4332 27
 9759 003e 7B68     		ldr	r3, [r7, #4]
 9760 0040 1B68     		ldr	r3, [r3]
 9761 0042 5B6A     		ldr	r3, [r3, #36]
 9762              		.loc 1 4332 14
 9763 0044 BB81     		strh	r3, [r7, #12]	@ movhi
4333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 9764              		.loc 1 4333 28
 9765 0046 BB89     		ldrh	r3, [r7, #12]	@ movhi
 9766 0048 D9B2     		uxtb	r1, r3
 9767              		.loc 1 4333 47
 9768 004a 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 9769 004c DAB2     		uxtb	r2, r3
 9770              		.loc 1 4333 13
 9771 004e 7B68     		ldr	r3, [r7, #4]
 9772 0050 9B6D     		ldr	r3, [r3, #88]
 9773              		.loc 1 4333 28
 9774 0052 0A40     		ands	r2, r2, r1
 9775 0054 D2B2     		uxtb	r2, r2
 9776              		.loc 1 4333 26
 9777 0056 1A70     		strb	r2, [r3]
4334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr++;
 9778              		.loc 1 4334 12
 9779 0058 7B68     		ldr	r3, [r7, #4]
 9780 005a 9B6D     		ldr	r3, [r3, #88]
 9781              		.loc 1 4334 24
 9782 005c 5A1C     		adds	r2, r3, #1
 9783 005e 7B68     		ldr	r3, [r7, #4]
 9784 0060 9A65     		str	r2, [r3, #88]
4335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 9785              		.loc 1 4335 12
 9786 0062 7B68     		ldr	r3, [r7, #4]
 9787 0064 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9788 0068 9BB2     		uxth	r3, r3
 9789              		.loc 1 4335 25
 9790 006a 013B     		subs	r3, r3, #1
 9791 006c 9AB2     		uxth	r2, r3
 9792 006e 7B68     		ldr	r3, [r7, #4]
 9793 0070 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 9794              		.loc 1 4336 18
 9795 0074 7B68     		ldr	r3, [r7, #4]
 9796 0076 1B68     		ldr	r3, [r3]
 9797              		.loc 1 4336 16
 9798 0078 DB69     		ldr	r3, [r3, #28]
 9799 007a FB61     		str	r3, [r7, #28]
4337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If some non blocking errors occurred */
4339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 9800              		.loc 1 4339 21
 9801 007c FB69     		ldr	r3, [r7, #28]
 9802 007e 03F00703 		and	r3, r3, #7
 9803              		.loc 1 4339 10
 9804 0082 002B     		cmp	r3, #0
 9805 0084 4DD0     		beq	.L531
4340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
ARM GAS  /tmp/ccp35uGD.s 			page 248


4342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 9806              		.loc 1 4342 24
 9807 0086 FB69     		ldr	r3, [r7, #28]
 9808 0088 03F00103 		and	r3, r3, #1
 9809              		.loc 1 4342 12
 9810 008c 002B     		cmp	r3, #0
 9811 008e 10D0     		beq	.L532
 9812              		.loc 1 4342 59 discriminator 1
 9813 0090 7B69     		ldr	r3, [r7, #20]
 9814 0092 03F48073 		and	r3, r3, #256
 9815              		.loc 1 4342 47 discriminator 1
 9816 0096 002B     		cmp	r3, #0
 9817 0098 0BD0     		beq	.L532
4343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 9818              		.loc 1 4344 11
 9819 009a 7B68     		ldr	r3, [r7, #4]
 9820 009c 1B68     		ldr	r3, [r3]
 9821 009e 0122     		movs	r2, #1
 9822 00a0 1A62     		str	r2, [r3, #32]
4345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 9823              		.loc 1 4346 28
 9824 00a2 7B68     		ldr	r3, [r7, #4]
 9825 00a4 D3F88C30 		ldr	r3, [r3, #140]
 9826 00a8 43F00102 		orr	r2, r3, #1
 9827 00ac 7B68     		ldr	r3, [r7, #4]
 9828 00ae C3F88C20 		str	r2, [r3, #140]
 9829              	.L532:
4347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 9830              		.loc 1 4350 24
 9831 00b2 FB69     		ldr	r3, [r7, #28]
 9832 00b4 03F00203 		and	r3, r3, #2
 9833              		.loc 1 4350 12
 9834 00b8 002B     		cmp	r3, #0
 9835 00ba 10D0     		beq	.L533
 9836              		.loc 1 4350 59 discriminator 1
 9837 00bc 3B69     		ldr	r3, [r7, #16]
 9838 00be 03F00103 		and	r3, r3, #1
 9839              		.loc 1 4350 47 discriminator 1
 9840 00c2 002B     		cmp	r3, #0
 9841 00c4 0BD0     		beq	.L533
4351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 9842              		.loc 1 4352 11
 9843 00c6 7B68     		ldr	r3, [r7, #4]
 9844 00c8 1B68     		ldr	r3, [r3]
 9845 00ca 0222     		movs	r2, #2
 9846 00cc 1A62     		str	r2, [r3, #32]
4353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 9847              		.loc 1 4354 28
 9848 00ce 7B68     		ldr	r3, [r7, #4]
 9849 00d0 D3F88C30 		ldr	r3, [r3, #140]
ARM GAS  /tmp/ccp35uGD.s 			page 249


 9850 00d4 43F00402 		orr	r2, r3, #4
 9851 00d8 7B68     		ldr	r3, [r7, #4]
 9852 00da C3F88C20 		str	r2, [r3, #140]
 9853              	.L533:
4355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 9854              		.loc 1 4358 24
 9855 00de FB69     		ldr	r3, [r7, #28]
 9856 00e0 03F00403 		and	r3, r3, #4
 9857              		.loc 1 4358 12
 9858 00e4 002B     		cmp	r3, #0
 9859 00e6 10D0     		beq	.L534
 9860              		.loc 1 4358 59 discriminator 1
 9861 00e8 3B69     		ldr	r3, [r7, #16]
 9862 00ea 03F00103 		and	r3, r3, #1
 9863              		.loc 1 4358 47 discriminator 1
 9864 00ee 002B     		cmp	r3, #0
 9865 00f0 0BD0     		beq	.L534
4359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 9866              		.loc 1 4360 11
 9867 00f2 7B68     		ldr	r3, [r7, #4]
 9868 00f4 1B68     		ldr	r3, [r3]
 9869 00f6 0422     		movs	r2, #4
 9870 00f8 1A62     		str	r2, [r3, #32]
4361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 9871              		.loc 1 4362 28
 9872 00fa 7B68     		ldr	r3, [r7, #4]
 9873 00fc D3F88C30 		ldr	r3, [r3, #140]
 9874 0100 43F00202 		orr	r2, r3, #2
 9875 0104 7B68     		ldr	r3, [r7, #4]
 9876 0106 C3F88C20 		str	r2, [r3, #140]
 9877              	.L534:
4363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 9878              		.loc 1 4366 18
 9879 010a 7B68     		ldr	r3, [r7, #4]
 9880 010c D3F88C30 		ldr	r3, [r3, #140]
 9881              		.loc 1 4366 12
 9882 0110 002B     		cmp	r3, #0
 9883 0112 06D0     		beq	.L531
4367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Error is notified to user through user error callback */
4370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
4372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
4373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
4375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 9884              		.loc 1 4375 11
 9885 0114 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 250


 9886 0116 FFF7FEFF 		bl	HAL_UART_ErrorCallback
4376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 9887              		.loc 1 4377 28
 9888 011a 7B68     		ldr	r3, [r7, #4]
 9889 011c 0022     		movs	r2, #0
 9890 011e C3F88C20 		str	r2, [r3, #140]
 9891              	.L531:
4378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 9892              		.loc 1 4381 16
 9893 0122 7B68     		ldr	r3, [r7, #4]
 9894 0124 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9895 0128 9BB2     		uxth	r3, r3
 9896              		.loc 1 4381 10
 9897 012a 002B     		cmp	r3, #0
 9898 012c 30D1     		bne	.L530
4382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 9899              		.loc 1 4384 9
 9900 012e 7B68     		ldr	r3, [r7, #4]
 9901 0130 1B68     		ldr	r3, [r3]
 9902 0132 1A68     		ldr	r2, [r3]
 9903 0134 7B68     		ldr	r3, [r7, #4]
 9904 0136 1B68     		ldr	r3, [r3]
 9905 0138 22F48072 		bic	r2, r2, #256
 9906 013c 1A60     		str	r2, [r3]
4385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 9907              		.loc 1 4388 9
 9908 013e 7B68     		ldr	r3, [r7, #4]
 9909 0140 1B68     		ldr	r3, [r3]
 9910 0142 9968     		ldr	r1, [r3, #8]
 9911 0144 7B68     		ldr	r3, [r7, #4]
 9912 0146 1A68     		ldr	r2, [r3]
 9913 0148 2C4B     		ldr	r3, .L541
 9914 014a 0B40     		ands	r3, r3, r1
 9915 014c 9360     		str	r3, [r2, #8]
4389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 9916              		.loc 1 4391 24
 9917 014e 7B68     		ldr	r3, [r7, #4]
 9918 0150 2022     		movs	r2, #32
 9919 0152 C3F88820 		str	r2, [r3, #136]
4392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 9920              		.loc 1 4394 22
 9921 0156 7B68     		ldr	r3, [r7, #4]
 9922 0158 0022     		movs	r2, #0
 9923 015a 1A67     		str	r2, [r3, #112]
ARM GAS  /tmp/ccp35uGD.s 			page 251


4395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check current reception Mode :
4397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9924              		.loc 1 4398 18
 9925 015c 7B68     		ldr	r3, [r7, #4]
 9926 015e DB6E     		ldr	r3, [r3, #108]
 9927              		.loc 1 4398 12
 9928 0160 012B     		cmp	r3, #1
 9929 0162 0FD1     		bne	.L535
4399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable IDLE interrupt */
4401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9930              		.loc 1 4401 11
 9931 0164 7B68     		ldr	r3, [r7, #4]
 9932 0166 1B68     		ldr	r3, [r3]
 9933 0168 1A68     		ldr	r2, [r3]
 9934 016a 7B68     		ldr	r3, [r7, #4]
 9935 016c 1B68     		ldr	r3, [r3]
 9936 016e 22F01002 		bic	r2, r2, #16
 9937 0172 1A60     		str	r2, [r3]
4402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9938              		.loc 1 4408 11
 9939 0174 7B68     		ldr	r3, [r7, #4]
 9940 0176 B3F85C30 		ldrh	r3, [r3, #92]
 9941 017a 1946     		mov	r1, r3
 9942 017c 7868     		ldr	r0, [r7, #4]
 9943 017e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9944 0182 02E0     		b	.L536
 9945              	.L535:
4409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
4412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Standard reception API called */
4414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
 9946              		.loc 1 4419 11
 9947 0184 7868     		ldr	r0, [r7, #4]
 9948 0186 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9949              	.L536:
4420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9950              		.loc 1 4422 30
 9951 018a 7B68     		ldr	r3, [r7, #4]
 9952 018c 0022     		movs	r2, #0
ARM GAS  /tmp/ccp35uGD.s 			page 252


 9953 018e DA66     		str	r2, [r3, #108]
 9954              	.L530:
4330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9955              		.loc 1 4330 11
 9956 0190 FB89     		ldrh	r3, [r7, #14]
 9957 0192 002B     		cmp	r3, #0
 9958 0194 05D0     		beq	.L537
4330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9959              		.loc 1 4330 44 discriminator 1
 9960 0196 FB69     		ldr	r3, [r7, #28]
 9961 0198 03F02003 		and	r3, r3, #32
4330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 9962              		.loc 1 4330 30 discriminator 1
 9963 019c 002B     		cmp	r3, #0
 9964 019e 7FF44EAF 		bne	.L538
 9965              	.L537:
4423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 9966              		.loc 1 4430 17
 9967 01a2 7B68     		ldr	r3, [r7, #4]
 9968 01a4 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 9969 01a8 7B81     		strh	r3, [r7, #10]	@ movhi
4431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 9970              		.loc 1 4431 8
 9971 01aa 7B89     		ldrh	r3, [r7, #10]
 9972 01ac 002B     		cmp	r3, #0
 9973 01ae 21D0     		beq	.L540
 9974              		.loc 1 4431 52 discriminator 1
 9975 01b0 7B68     		ldr	r3, [r7, #4]
 9976 01b2 B3F86830 		ldrh	r3, [r3, #104]
 9977              		.loc 1 4431 29 discriminator 1
 9978 01b6 7A89     		ldrh	r2, [r7, #10]
 9979 01b8 9A42     		cmp	r2, r3
 9980 01ba 1BD2     		bcs	.L540
4432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 9981              		.loc 1 4434 7
 9982 01bc 7B68     		ldr	r3, [r7, #4]
 9983 01be 1B68     		ldr	r3, [r3]
 9984 01c0 9A68     		ldr	r2, [r3, #8]
 9985 01c2 7B68     		ldr	r3, [r7, #4]
 9986 01c4 1B68     		ldr	r3, [r3]
 9987 01c6 22F08052 		bic	r2, r2, #268435456
 9988 01ca 9A60     		str	r2, [r3, #8]
4435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 9989              		.loc 1 4437 20
 9990 01cc 7B68     		ldr	r3, [r7, #4]
 9991 01ce 0C4A     		ldr	r2, .L541+4
ARM GAS  /tmp/ccp35uGD.s 			page 253


 9992 01d0 1A67     		str	r2, [r3, #112]
4438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 9993              		.loc 1 4440 7
 9994 01d2 7B68     		ldr	r3, [r7, #4]
 9995 01d4 1B68     		ldr	r3, [r3]
 9996 01d6 1A68     		ldr	r2, [r3]
 9997 01d8 7B68     		ldr	r3, [r7, #4]
 9998 01da 1B68     		ldr	r3, [r3]
 9999 01dc 42F02002 		orr	r2, r2, #32
 10000 01e0 1A60     		str	r2, [r3]
4441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10001              		.loc 1 4448 1
 10002 01e2 07E0     		b	.L540
 10003              	.L529:
4446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 10004              		.loc 1 4446 5
 10005 01e4 7B68     		ldr	r3, [r7, #4]
 10006 01e6 1B68     		ldr	r3, [r3]
 10007 01e8 9A69     		ldr	r2, [r3, #24]
 10008 01ea 7B68     		ldr	r3, [r7, #4]
 10009 01ec 1B68     		ldr	r3, [r3]
 10010 01ee 42F00802 		orr	r2, r2, #8
 10011 01f2 9A61     		str	r2, [r3, #24]
 10012              	.L540:
 10013              		.loc 1 4448 1
 10014 01f4 00BF     		nop
 10015 01f6 2037     		adds	r7, r7, #32
 10016              	.LCFI374:
 10017              		.cfi_def_cfa_offset 8
 10018 01f8 BD46     		mov	sp, r7
 10019              	.LCFI375:
 10020              		.cfi_def_cfa_register 13
 10021              		@ sp needed
 10022 01fa 80BD     		pop	{r7, pc}
 10023              	.L542:
 10024              		.align	2
 10025              	.L541:
 10026 01fc FEFFFFEF 		.word	-268435458
 10027 0200 00000000 		.word	UART_RxISR_8BIT
 10028              		.cfi_endproc
 10029              	.LFE399:
 10031              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 10032              		.align	1
 10033              		.syntax unified
 10034              		.thumb
 10035              		.thumb_func
 10036              		.fpu fpv5-d16
 10038              	UART_RxISR_16BIT_FIFOEN:
ARM GAS  /tmp/ccp35uGD.s 			page 254


 10039              	.LFB400:
4449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 10040              		.loc 1 4458 1
 10041              		.cfi_startproc
 10042              		@ args = 0, pretend = 0, frame = 40
 10043              		@ frame_needed = 1, uses_anonymous_args = 0
 10044 0000 80B5     		push	{r7, lr}
 10045              	.LCFI376:
 10046              		.cfi_def_cfa_offset 8
 10047              		.cfi_offset 7, -8
 10048              		.cfi_offset 14, -4
 10049 0002 8AB0     		sub	sp, sp, #40
 10050              	.LCFI377:
 10051              		.cfi_def_cfa_offset 48
 10052 0004 00AF     		add	r7, sp, #0
 10053              	.LCFI378:
 10054              		.cfi_def_cfa_register 7
 10055 0006 7860     		str	r0, [r7, #4]
4459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 10056              		.loc 1 4460 13
 10057 0008 7B68     		ldr	r3, [r7, #4]
 10058 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 10059 000e 7B84     		strh	r3, [r7, #34]	@ movhi
4461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_rx_data;
4463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 10060              		.loc 1 4464 24
 10061 0010 7B68     		ldr	r3, [r7, #4]
 10062 0012 1B68     		ldr	r3, [r3]
 10063              		.loc 1 4464 13
 10064 0014 DB69     		ldr	r3, [r3, #28]
 10065 0016 7B62     		str	r3, [r7, #36]
4465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 10066              		.loc 1 4465 24
 10067 0018 7B68     		ldr	r3, [r7, #4]
 10068 001a 1B68     		ldr	r3, [r3]
 10069              		.loc 1 4465 13
 10070 001c 1B68     		ldr	r3, [r3]
 10071 001e FB61     		str	r3, [r7, #28]
4466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 10072              		.loc 1 4466 24
 10073 0020 7B68     		ldr	r3, [r7, #4]
 10074 0022 1B68     		ldr	r3, [r3]
 10075              		.loc 1 4466 13
 10076 0024 9B68     		ldr	r3, [r3, #8]
 10077 0026 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccp35uGD.s 			page 255


4467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 10078              		.loc 1 4469 12
 10079 0028 7B68     		ldr	r3, [r7, #4]
 10080 002a D3F88830 		ldr	r3, [r3, #136]
 10081              		.loc 1 4469 6
 10082 002e 222B     		cmp	r3, #34
 10083 0030 40F0D880 		bne	.L544
4470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 10084              		.loc 1 4471 16
 10085 0034 7B68     		ldr	r3, [r7, #4]
 10086 0036 B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 10087 003a FB82     		strh	r3, [r7, #22]	@ movhi
4472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 10088              		.loc 1 4472 11
 10089 003c A8E0     		b	.L545
 10090              	.L553:
4473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10091              		.loc 1 4474 27
 10092 003e 7B68     		ldr	r3, [r7, #4]
 10093 0040 1B68     		ldr	r3, [r3]
 10094 0042 5B6A     		ldr	r3, [r3, #36]
 10095              		.loc 1 4474 14
 10096 0044 BB82     		strh	r3, [r7, #20]	@ movhi
4475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 10097              		.loc 1 4475 11
 10098 0046 7B68     		ldr	r3, [r7, #4]
 10099 0048 9B6D     		ldr	r3, [r3, #88]
 10100 004a 3B61     		str	r3, [r7, #16]
4476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 10101              		.loc 1 4476 14
 10102 004c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 10103 004e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 10104 0050 1340     		ands	r3, r3, r2
 10105 0052 9AB2     		uxth	r2, r3
 10106              		.loc 1 4476 12
 10107 0054 3B69     		ldr	r3, [r7, #16]
 10108 0056 1A80     		strh	r2, [r3]	@ movhi
4477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 10109              		.loc 1 4477 25
 10110 0058 7B68     		ldr	r3, [r7, #4]
 10111 005a 9B6D     		ldr	r3, [r3, #88]
 10112 005c 9A1C     		adds	r2, r3, #2
 10113 005e 7B68     		ldr	r3, [r7, #4]
 10114 0060 9A65     		str	r2, [r3, #88]
4478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 10115              		.loc 1 4478 12
 10116 0062 7B68     		ldr	r3, [r7, #4]
 10117 0064 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10118 0068 9BB2     		uxth	r3, r3
 10119              		.loc 1 4478 25
 10120 006a 013B     		subs	r3, r3, #1
 10121 006c 9AB2     		uxth	r2, r3
 10122 006e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccp35uGD.s 			page 256


 10123 0070 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 10124              		.loc 1 4479 18
 10125 0074 7B68     		ldr	r3, [r7, #4]
 10126 0076 1B68     		ldr	r3, [r3]
 10127              		.loc 1 4479 16
 10128 0078 DB69     		ldr	r3, [r3, #28]
 10129 007a 7B62     		str	r3, [r7, #36]
4480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If some non blocking errors occurred */
4482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 10130              		.loc 1 4482 21
 10131 007c 7B6A     		ldr	r3, [r7, #36]
 10132 007e 03F00703 		and	r3, r3, #7
 10133              		.loc 1 4482 10
 10134 0082 002B     		cmp	r3, #0
 10135 0084 4DD0     		beq	.L546
4483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 10136              		.loc 1 4485 24
 10137 0086 7B6A     		ldr	r3, [r7, #36]
 10138 0088 03F00103 		and	r3, r3, #1
 10139              		.loc 1 4485 12
 10140 008c 002B     		cmp	r3, #0
 10141 008e 10D0     		beq	.L547
 10142              		.loc 1 4485 59 discriminator 1
 10143 0090 FB69     		ldr	r3, [r7, #28]
 10144 0092 03F48073 		and	r3, r3, #256
 10145              		.loc 1 4485 47 discriminator 1
 10146 0096 002B     		cmp	r3, #0
 10147 0098 0BD0     		beq	.L547
4486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 10148              		.loc 1 4487 11
 10149 009a 7B68     		ldr	r3, [r7, #4]
 10150 009c 1B68     		ldr	r3, [r3]
 10151 009e 0122     		movs	r2, #1
 10152 00a0 1A62     		str	r2, [r3, #32]
4488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 10153              		.loc 1 4489 28
 10154 00a2 7B68     		ldr	r3, [r7, #4]
 10155 00a4 D3F88C30 		ldr	r3, [r3, #140]
 10156 00a8 43F00102 		orr	r2, r3, #1
 10157 00ac 7B68     		ldr	r3, [r7, #4]
 10158 00ae C3F88C20 		str	r2, [r3, #140]
 10159              	.L547:
4490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 10160              		.loc 1 4493 24
 10161 00b2 7B6A     		ldr	r3, [r7, #36]
 10162 00b4 03F00203 		and	r3, r3, #2
 10163              		.loc 1 4493 12
 10164 00b8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccp35uGD.s 			page 257


 10165 00ba 10D0     		beq	.L548
 10166              		.loc 1 4493 59 discriminator 1
 10167 00bc BB69     		ldr	r3, [r7, #24]
 10168 00be 03F00103 		and	r3, r3, #1
 10169              		.loc 1 4493 47 discriminator 1
 10170 00c2 002B     		cmp	r3, #0
 10171 00c4 0BD0     		beq	.L548
4494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 10172              		.loc 1 4495 11
 10173 00c6 7B68     		ldr	r3, [r7, #4]
 10174 00c8 1B68     		ldr	r3, [r3]
 10175 00ca 0222     		movs	r2, #2
 10176 00cc 1A62     		str	r2, [r3, #32]
4496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 10177              		.loc 1 4497 28
 10178 00ce 7B68     		ldr	r3, [r7, #4]
 10179 00d0 D3F88C30 		ldr	r3, [r3, #140]
 10180 00d4 43F00402 		orr	r2, r3, #4
 10181 00d8 7B68     		ldr	r3, [r7, #4]
 10182 00da C3F88C20 		str	r2, [r3, #140]
 10183              	.L548:
4498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 10184              		.loc 1 4501 24
 10185 00de 7B6A     		ldr	r3, [r7, #36]
 10186 00e0 03F00403 		and	r3, r3, #4
 10187              		.loc 1 4501 12
 10188 00e4 002B     		cmp	r3, #0
 10189 00e6 10D0     		beq	.L549
 10190              		.loc 1 4501 59 discriminator 1
 10191 00e8 BB69     		ldr	r3, [r7, #24]
 10192 00ea 03F00103 		and	r3, r3, #1
 10193              		.loc 1 4501 47 discriminator 1
 10194 00ee 002B     		cmp	r3, #0
 10195 00f0 0BD0     		beq	.L549
4502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 10196              		.loc 1 4503 11
 10197 00f2 7B68     		ldr	r3, [r7, #4]
 10198 00f4 1B68     		ldr	r3, [r3]
 10199 00f6 0422     		movs	r2, #4
 10200 00f8 1A62     		str	r2, [r3, #32]
4504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 10201              		.loc 1 4505 28
 10202 00fa 7B68     		ldr	r3, [r7, #4]
 10203 00fc D3F88C30 		ldr	r3, [r3, #140]
 10204 0100 43F00202 		orr	r2, r3, #2
 10205 0104 7B68     		ldr	r3, [r7, #4]
 10206 0106 C3F88C20 		str	r2, [r3, #140]
 10207              	.L549:
4506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  /tmp/ccp35uGD.s 			page 258


4508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 10208              		.loc 1 4509 18
 10209 010a 7B68     		ldr	r3, [r7, #4]
 10210 010c D3F88C30 		ldr	r3, [r3, #140]
 10211              		.loc 1 4509 12
 10212 0110 002B     		cmp	r3, #0
 10213 0112 06D0     		beq	.L546
4510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Error is notified to user through user error callback */
4513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
4515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
4516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
4518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 10214              		.loc 1 4518 11
 10215 0114 7868     		ldr	r0, [r7, #4]
 10216 0116 FFF7FEFF 		bl	HAL_UART_ErrorCallback
4519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 10217              		.loc 1 4520 28
 10218 011a 7B68     		ldr	r3, [r7, #4]
 10219 011c 0022     		movs	r2, #0
 10220 011e C3F88C20 		str	r2, [r3, #140]
 10221              	.L546:
4521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 10222              		.loc 1 4524 16
 10223 0122 7B68     		ldr	r3, [r7, #4]
 10224 0124 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10225 0128 9BB2     		uxth	r3, r3
 10226              		.loc 1 4524 10
 10227 012a 002B     		cmp	r3, #0
 10228 012c 30D1     		bne	.L545
4525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10229              		.loc 1 4527 9
 10230 012e 7B68     		ldr	r3, [r7, #4]
 10231 0130 1B68     		ldr	r3, [r3]
 10232 0132 1A68     		ldr	r2, [r3]
 10233 0134 7B68     		ldr	r3, [r7, #4]
 10234 0136 1B68     		ldr	r3, [r3]
 10235 0138 22F48072 		bic	r2, r2, #256
 10236 013c 1A60     		str	r2, [r3]
4528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 10237              		.loc 1 4531 9
 10238 013e 7B68     		ldr	r3, [r7, #4]
 10239 0140 1B68     		ldr	r3, [r3]
 10240 0142 9968     		ldr	r1, [r3, #8]
ARM GAS  /tmp/ccp35uGD.s 			page 259


 10241 0144 7B68     		ldr	r3, [r7, #4]
 10242 0146 1A68     		ldr	r2, [r3]
 10243 0148 2C4B     		ldr	r3, .L556
 10244 014a 0B40     		ands	r3, r3, r1
 10245 014c 9360     		str	r3, [r2, #8]
4532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 10246              		.loc 1 4534 24
 10247 014e 7B68     		ldr	r3, [r7, #4]
 10248 0150 2022     		movs	r2, #32
 10249 0152 C3F88820 		str	r2, [r3, #136]
4535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 10250              		.loc 1 4537 22
 10251 0156 7B68     		ldr	r3, [r7, #4]
 10252 0158 0022     		movs	r2, #0
 10253 015a 1A67     		str	r2, [r3, #112]
4538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check current reception Mode :
4540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10254              		.loc 1 4541 18
 10255 015c 7B68     		ldr	r3, [r7, #4]
 10256 015e DB6E     		ldr	r3, [r3, #108]
 10257              		.loc 1 4541 12
 10258 0160 012B     		cmp	r3, #1
 10259 0162 0FD1     		bne	.L550
4542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable IDLE interrupt */
4544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 10260              		.loc 1 4544 11
 10261 0164 7B68     		ldr	r3, [r7, #4]
 10262 0166 1B68     		ldr	r3, [r3]
 10263 0168 1A68     		ldr	r2, [r3]
 10264 016a 7B68     		ldr	r3, [r7, #4]
 10265 016c 1B68     		ldr	r3, [r3]
 10266 016e 22F01002 		bic	r2, r2, #16
 10267 0172 1A60     		str	r2, [r3]
4545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 10268              		.loc 1 4551 11
 10269 0174 7B68     		ldr	r3, [r7, #4]
 10270 0176 B3F85C30 		ldrh	r3, [r3, #92]
 10271 017a 1946     		mov	r1, r3
 10272 017c 7868     		ldr	r0, [r7, #4]
 10273 017e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 10274 0182 02E0     		b	.L551
 10275              	.L550:
4552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  /tmp/ccp35uGD.s 			page 260


4554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
4555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Standard reception API called */
4557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
 10276              		.loc 1 4562 11
 10277 0184 7868     		ldr	r0, [r7, #4]
 10278 0186 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 10279              	.L551:
4563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10280              		.loc 1 4565 30
 10281 018a 7B68     		ldr	r3, [r7, #4]
 10282 018c 0022     		movs	r2, #0
 10283 018e DA66     		str	r2, [r3, #108]
 10284              	.L545:
4472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 10285              		.loc 1 4472 11
 10286 0190 FB8A     		ldrh	r3, [r7, #22]
 10287 0192 002B     		cmp	r3, #0
 10288 0194 05D0     		beq	.L552
4472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 10289              		.loc 1 4472 44 discriminator 1
 10290 0196 7B6A     		ldr	r3, [r7, #36]
 10291 0198 03F02003 		and	r3, r3, #32
4472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 10292              		.loc 1 4472 30 discriminator 1
 10293 019c 002B     		cmp	r3, #0
 10294 019e 7FF44EAF 		bne	.L553
 10295              	.L552:
4566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 10296              		.loc 1 4573 17
 10297 01a2 7B68     		ldr	r3, [r7, #4]
 10298 01a4 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10299 01a8 FB81     		strh	r3, [r7, #14]	@ movhi
4574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 10300              		.loc 1 4574 8
 10301 01aa FB89     		ldrh	r3, [r7, #14]
 10302 01ac 002B     		cmp	r3, #0
 10303 01ae 21D0     		beq	.L555
 10304              		.loc 1 4574 52 discriminator 1
 10305 01b0 7B68     		ldr	r3, [r7, #4]
 10306 01b2 B3F86830 		ldrh	r3, [r3, #104]
 10307              		.loc 1 4574 29 discriminator 1
 10308 01b6 FA89     		ldrh	r2, [r7, #14]
ARM GAS  /tmp/ccp35uGD.s 			page 261


 10309 01b8 9A42     		cmp	r2, r3
 10310 01ba 1BD2     		bcs	.L555
4575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 10311              		.loc 1 4577 7
 10312 01bc 7B68     		ldr	r3, [r7, #4]
 10313 01be 1B68     		ldr	r3, [r3]
 10314 01c0 9A68     		ldr	r2, [r3, #8]
 10315 01c2 7B68     		ldr	r3, [r7, #4]
 10316 01c4 1B68     		ldr	r3, [r3]
 10317 01c6 22F08052 		bic	r2, r2, #268435456
 10318 01ca 9A60     		str	r2, [r3, #8]
4578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 10319              		.loc 1 4580 20
 10320 01cc 7B68     		ldr	r3, [r7, #4]
 10321 01ce 0C4A     		ldr	r2, .L556+4
 10322 01d0 1A67     		str	r2, [r3, #112]
4581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 10323              		.loc 1 4583 7
 10324 01d2 7B68     		ldr	r3, [r7, #4]
 10325 01d4 1B68     		ldr	r3, [r3]
 10326 01d6 1A68     		ldr	r2, [r3]
 10327 01d8 7B68     		ldr	r3, [r7, #4]
 10328 01da 1B68     		ldr	r3, [r3]
 10329 01dc 42F02002 		orr	r2, r2, #32
 10330 01e0 1A60     		str	r2, [r3]
4584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10331              		.loc 1 4591 1
 10332 01e2 07E0     		b	.L555
 10333              	.L544:
4589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 10334              		.loc 1 4589 5
 10335 01e4 7B68     		ldr	r3, [r7, #4]
 10336 01e6 1B68     		ldr	r3, [r3]
 10337 01e8 9A69     		ldr	r2, [r3, #24]
 10338 01ea 7B68     		ldr	r3, [r7, #4]
 10339 01ec 1B68     		ldr	r3, [r3]
 10340 01ee 42F00802 		orr	r2, r2, #8
 10341 01f2 9A61     		str	r2, [r3, #24]
 10342              	.L555:
 10343              		.loc 1 4591 1
 10344 01f4 00BF     		nop
 10345 01f6 2837     		adds	r7, r7, #40
 10346              	.LCFI379:
 10347              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccp35uGD.s 			page 262


 10348 01f8 BD46     		mov	sp, r7
 10349              	.LCFI380:
 10350              		.cfi_def_cfa_register 13
 10351              		@ sp needed
 10352 01fa 80BD     		pop	{r7, pc}
 10353              	.L557:
 10354              		.align	2
 10355              	.L556:
 10356 01fc FEFFFFEF 		.word	-268435458
 10357 0200 00000000 		.word	UART_RxISR_16BIT
 10358              		.cfi_endproc
 10359              	.LFE400:
 10361              		.text
 10362              	.Letext0:
 10363              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 10364              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 10365              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 10366              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 10367              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 10368              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 10369              		.file 8 "/usr/include/newlib/sys/_types.h"
 10370              		.file 9 "/usr/include/newlib/sys/reent.h"
 10371              		.file 10 "/usr/include/newlib/sys/lock.h"
 10372              		.file 11 "/usr/include/newlib/math.h"
 10373              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 10374              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 10375              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 10376              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 10377              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 10378              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccp35uGD.s 			page 263


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_uart.c
     /tmp/ccp35uGD.s:21     .rodata.UARTPrescTable:0000000000000000 UARTPrescTable
     /tmp/ccp35uGD.s:18     .rodata.UARTPrescTable:0000000000000000 $d
     /tmp/ccp35uGD.s:35     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccp35uGD.s:43     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccp35uGD.s:715    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccp35uGD.s:5602   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccp35uGD.s:6990   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccp35uGD.s:7202   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccp35uGD.s:160    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccp35uGD.s:167    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccp35uGD.s:291    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccp35uGD.s:298    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccp35uGD.s:453    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccp35uGD.s:460    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccp35uGD.s:605    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccp35uGD.s:612    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccp35uGD.s:758    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccp35uGD.s:708    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccp35uGD.s:751    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccp35uGD.s:794    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccp35uGD.s:801    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccp35uGD.s:7319   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccp35uGD.s:1017   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccp35uGD.s:1024   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccp35uGD.s:1312   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:1319   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccp35uGD.s:1499   .text.HAL_UART_Transmit_IT:00000000000000f8 $d
     /tmp/ccp35uGD.s:9204   .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccp35uGD.s:9076   .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccp35uGD.s:8970   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccp35uGD.s:8869   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccp35uGD.s:1507   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:1514   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccp35uGD.s:7495   .text.UART_Start_Receive_IT:0000000000000000 UART_Start_Receive_IT
     /tmp/ccp35uGD.s:1620   .text.HAL_UART_Receive_IT:0000000000000088 $d
     /tmp/ccp35uGD.s:1625   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccp35uGD.s:1632   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccp35uGD.s:1809   .text.HAL_UART_Transmit_DMA:00000000000000f4 $d
     /tmp/ccp35uGD.s:8060   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccp35uGD.s:8135   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccp35uGD.s:8358   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccp35uGD.s:1816   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccp35uGD.s:1823   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccp35uGD.s:7747   .text.UART_Start_Receive_DMA:0000000000000000 UART_Start_Receive_DMA
     /tmp/ccp35uGD.s:1929   .text.HAL_UART_Receive_DMA:0000000000000088 $d
     /tmp/ccp35uGD.s:1934   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccp35uGD.s:1941   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccp35uGD.s:2063   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccp35uGD.s:2070   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccp35uGD.s:2177   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccp35uGD.s:2184   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccp35uGD.s:7908   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccp35uGD.s:7970   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccp35uGD.s:2339   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccp35uGD.s:2346   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
ARM GAS  /tmp/ccp35uGD.s 			page 264


     /tmp/ccp35uGD.s:2572   .text.HAL_UART_Abort:0000000000000160 $d
     /tmp/ccp35uGD.s:2577   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccp35uGD.s:2584   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccp35uGD.s:2712   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccp35uGD.s:2719   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccp35uGD.s:2864   .text.HAL_UART_AbortReceive:00000000000000d4 $d
     /tmp/ccp35uGD.s:2869   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:2876   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccp35uGD.s:4602   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccp35uGD.s:3159   .text.HAL_UART_Abort_IT:00000000000001a4 $d
     /tmp/ccp35uGD.s:8510   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccp35uGD.s:8624   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccp35uGD.s:3166   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:3173   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccp35uGD.s:4645   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccp35uGD.s:3321   .text.HAL_UART_AbortTransmit_IT:00000000000000d4 $d
     /tmp/ccp35uGD.s:8731   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccp35uGD.s:3326   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:3333   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccp35uGD.s:4688   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccp35uGD.s:3508   .text.HAL_UART_AbortReceive_IT:0000000000000100 $d
     /tmp/ccp35uGD.s:8799   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccp35uGD.s:3514   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccp35uGD.s:3521   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccp35uGD.s:4559   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccp35uGD.s:3890   .text.HAL_UART_IRQHandler:000000000000023c $d
     /tmp/ccp35uGD.s:8457   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccp35uGD.s:3895   .text.HAL_UART_IRQHandler:0000000000000248 $t
     /tmp/ccp35uGD.s:4731   .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
     /tmp/ccp35uGD.s:9337   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccp35uGD.s:4291   .text.HAL_UART_IRQHandler:00000000000004e4 $d
     /tmp/ccp35uGD.s:4310   .text.HAL_UART_IRQHandler:0000000000000528 $t
     /tmp/ccp35uGD.s:4380   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4387   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccp35uGD.s:4423   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4430   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccp35uGD.s:4466   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4473   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccp35uGD.s:4509   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4516   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccp35uGD.s:4552   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4595   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4638   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4681   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4724   .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:4769   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccp35uGD.s:4776   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccp35uGD.s:4830   .text.HAL_UART_ReceiverTimeout_Config:0000000000000034 $d
     /tmp/ccp35uGD.s:4835   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccp35uGD.s:4842   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccp35uGD.s:4934   .text.HAL_UART_EnableReceiverTimeout:0000000000000070 $d
     /tmp/ccp35uGD.s:4939   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/ccp35uGD.s:4946   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccp35uGD.s:5038   .text.HAL_UART_DisableReceiverTimeout:0000000000000070 $d
     /tmp/ccp35uGD.s:5043   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccp35uGD.s:5050   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccp35uGD.s:5116   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
ARM GAS  /tmp/ccp35uGD.s 			page 265


     /tmp/ccp35uGD.s:5123   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccp35uGD.s:5189   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccp35uGD.s:5196   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccp35uGD.s:5240   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccp35uGD.s:5247   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccp35uGD.s:5327   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccp35uGD.s:5334   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccp35uGD.s:5414   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccp35uGD.s:5421   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccp35uGD.s:5493   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccp35uGD.s:5500   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccp35uGD.s:5548   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccp35uGD.s:5555   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccp35uGD.s:5595   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccp35uGD.s:5723   .text.UART_SetConfig:00000000000000b0 $d
     /tmp/ccp35uGD.s:5764   .text.UART_SetConfig:0000000000000154 $t
     /tmp/ccp35uGD.s:5817   .text.UART_SetConfig:00000000000001a8 $d
     /tmp/ccp35uGD.s:5823   .text.UART_SetConfig:00000000000001c0 $t
     /tmp/ccp35uGD.s:5876   .text.UART_SetConfig:0000000000000214 $d
     /tmp/ccp35uGD.s:5882   .text.UART_SetConfig:000000000000022c $t
     /tmp/ccp35uGD.s:5935   .text.UART_SetConfig:0000000000000280 $d
     /tmp/ccp35uGD.s:5941   .text.UART_SetConfig:0000000000000298 $t
     /tmp/ccp35uGD.s:5994   .text.UART_SetConfig:00000000000002ec $d
     /tmp/ccp35uGD.s:6000   .text.UART_SetConfig:0000000000000304 $t
     /tmp/ccp35uGD.s:6029   .text.UART_SetConfig:000000000000032c $d
     /tmp/ccp35uGD.s:6040   .text.UART_SetConfig:0000000000000350 $t
     /tmp/ccp35uGD.s:6065   .text.UART_SetConfig:000000000000037c $d
     /tmp/ccp35uGD.s:6106   .text.UART_SetConfig:0000000000000420 $t
     /tmp/ccp35uGD.s:6159   .text.UART_SetConfig:0000000000000474 $d
     /tmp/ccp35uGD.s:6165   .text.UART_SetConfig:000000000000048c $t
     /tmp/ccp35uGD.s:6218   .text.UART_SetConfig:00000000000004e0 $d
     /tmp/ccp35uGD.s:6224   .text.UART_SetConfig:00000000000004f8 $t
     /tmp/ccp35uGD.s:6277   .text.UART_SetConfig:000000000000054c $d
     /tmp/ccp35uGD.s:6283   .text.UART_SetConfig:0000000000000564 $t
     /tmp/ccp35uGD.s:6344   .text.UART_SetConfig:00000000000005c8 $d
     /tmp/ccp35uGD.s:6375   .text.UART_SetConfig:0000000000000644 $t
     /tmp/ccp35uGD.s:6435   .text.UART_SetConfig:0000000000000698 $d
     /tmp/ccp35uGD.s:6443   .text.UART_SetConfig:00000000000006b0 $t
     /tmp/ccp35uGD.s:6584   .text.UART_SetConfig:00000000000007b0 $d
     /tmp/ccp35uGD.s:6617   .text.UART_SetConfig:0000000000000834 $t
     /tmp/ccp35uGD.s:6776   .text.UART_SetConfig:0000000000000930 $d
     /tmp/ccp35uGD.s:6809   .text.UART_SetConfig:00000000000009b4 $t
     /tmp/ccp35uGD.s:6823   .text.UART_SetConfig:00000000000009c4 $d
     /tmp/ccp35uGD.s:6829   .text.UART_SetConfig:00000000000009d4 $t
     /tmp/ccp35uGD.s:6975   .text.UART_SetConfig:0000000000000ab0 $d
     /tmp/ccp35uGD.s:6983   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccp35uGD.s:7195   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccp35uGD.s:7312   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccp35uGD.s:7488   .text.UART_Start_Receive_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:7732   .text.UART_Start_Receive_IT:000000000000016c $d
     /tmp/ccp35uGD.s:10038  .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccp35uGD.s:9705   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccp35uGD.s:9551   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccp35uGD.s:9394   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccp35uGD.s:7740   .text.UART_Start_Receive_DMA:0000000000000000 $t
     /tmp/ccp35uGD.s:7895   .text.UART_Start_Receive_DMA:00000000000000d0 $d
     /tmp/ccp35uGD.s:8180   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
ARM GAS  /tmp/ccp35uGD.s 			page 266


     /tmp/ccp35uGD.s:8294   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccp35uGD.s:7902   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccp35uGD.s:7964   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccp35uGD.s:8049   .text.UART_EndRxTransfer:0000000000000060 $d
     /tmp/ccp35uGD.s:8054   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccp35uGD.s:8129   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccp35uGD.s:8174   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccp35uGD.s:8288   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccp35uGD.s:8352   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccp35uGD.s:8451   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccp35uGD.s:8504   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:8618   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:8725   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:8793   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccp35uGD.s:8863   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccp35uGD.s:8964   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccp35uGD.s:9070   .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccp35uGD.s:9198   .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccp35uGD.s:9331   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccp35uGD.s:9388   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccp35uGD.s:9545   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccp35uGD.s:9699   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccp35uGD.s:10026  .text.UART_RxISR_8BIT_FIFOEN:00000000000001fc $d
     /tmp/ccp35uGD.s:10032  .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccp35uGD.s:10356  .text.UART_RxISR_16BIT_FIFOEN:00000000000001fc $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
HAL_RCCEx_GetD3PCLK1Freq
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetPLL3ClockFreq
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
