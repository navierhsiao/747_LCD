ARM GAS  /tmp/cc0Fr669.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_dot_prod_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_dot_prod_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_dot_prod_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_dot_prod_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Title:        arm_dot_prod_q15.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Description:  Q15 dot product
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
ARM GAS  /tmp/cc0Fr669.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @addtogroup BasicDotProd
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @brief         Dot product of Q15 vectors.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcA      points to the first input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     pSrcB      points to the second input vector
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[in]     blockSize  number of samples in each vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @param[out]    result     output result returned here
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    The intermediate multiplications are in 1.15 x 1.15 = 2.30 format and these
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    results are added to a 64-bit accumulator in 34.30 format.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    Nonsaturating additions are used and given that there are 33 guard bits in the a
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    there is no risk of overflow.
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****                    The return result is in 34.30 format.
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****  */
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** void arm_dot_prod_q15(
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcA,
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   const q15_t * pSrcB,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blockSize,
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t * result)
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** {
  28              		.loc 1 61 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 B0B4     		push	{r4, r5, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 7, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 F860     		str	r0, [r7, #12]
  46 0008 B960     		str	r1, [r7, #8]
  47 000a 7A60     		str	r2, [r7, #4]
  48 000c 3B60     		str	r3, [r7]
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****         q63_t sum = 0;                                 /* Temporary return variable */
  49              		.loc 1 63 15
  50 000e 4FF00002 		mov	r2, #0
  51 0012 4FF00003 		mov	r3, #0
  52 0016 C7E90423 		strd	r2, [r7, #16]
ARM GAS  /tmp/cc0Fr669.s 			page 3


  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize >> 2U;
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #if defined (ARM_MATH_DSP)
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia ((q15_t **) &pSrcA), read_q15x2_ia ((q15_t **) &pSrcB), sum);
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum = __SMLALD(read_q15x2_ia ((q15_t **) &pSrcA), read_q15x2_ia ((q15_t **) &pSrcB), sum);
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #else
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #endif
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   }
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Loop unrolling: Compute remaining outputs */
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize % 0x4U;
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #else
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Initialize blkCnt with number of samples */
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   blkCnt = blockSize;
  53              		.loc 1 95 10
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c FB61     		str	r3, [r7, #28]
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   while (blkCnt > 0U)
  56              		.loc 1 99 9
  57 001e 19E0     		b	.L2
  58              	.L3:
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Calculate dot product and store result in a temporary buffer. */
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#if defined (ARM_MATH_DSP)
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //    sum  = __SMLALD(*pSrcA++, *pSrcB++, sum);
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#else
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     sum += (q63_t)((q31_t) *pSrcA++ * *pSrcB++);
  59              		.loc 1 107 34
  60 0020 FB68     		ldr	r3, [r7, #12]
  61 0022 9A1C     		adds	r2, r3, #2
  62 0024 FA60     		str	r2, [r7, #12]
  63              		.loc 1 107 28
  64 0026 B3F90030 		ldrsh	r3, [r3]
  65              		.loc 1 107 20
ARM GAS  /tmp/cc0Fr669.s 			page 4


  66 002a 1946     		mov	r1, r3
  67              		.loc 1 107 45
  68 002c BB68     		ldr	r3, [r7, #8]
  69 002e 9A1C     		adds	r2, r3, #2
  70 0030 BA60     		str	r2, [r7, #8]
  71              		.loc 1 107 39
  72 0032 B3F90030 		ldrsh	r3, [r3]
  73              		.loc 1 107 37
  74 0036 03FB01F3 		mul	r3, r3, r1
  75              		.loc 1 107 12
  76 003a 1A46     		mov	r2, r3
  77 003c 4FEAE273 		asr	r3, r2, #31
  78              		.loc 1 107 9
  79 0040 D7E90401 		ldrd	r0, [r7, #16]
  80 0044 8418     		adds	r4, r0, r2
  81 0046 41EB0305 		adc	r5, r1, r3
  82 004a C7E90445 		strd	r4, [r7, #16]
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** //#endif
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     /* Decrement loop counter */
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****     blkCnt--;
  83              		.loc 1 111 11
  84 004e FB69     		ldr	r3, [r7, #28]
  85 0050 013B     		subs	r3, r3, #1
  86 0052 FB61     		str	r3, [r7, #28]
  87              	.L2:
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   {
  88              		.loc 1 99 9
  89 0054 FB69     		ldr	r3, [r7, #28]
  90 0056 002B     		cmp	r3, #0
  91 0058 E2D1     		bne	.L3
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   }
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** 
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   /* Store result in destination buffer in 34.30 format */
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c ****   *result = sum;
  92              		.loc 1 115 11
  93 005a 3968     		ldr	r1, [r7]
  94 005c D7E90423 		ldrd	r2, [r7, #16]
  95 0060 C1E90023 		strd	r2, [r1]
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q15.c **** }
  96              		.loc 1 116 1
  97 0064 00BF     		nop
  98 0066 2437     		adds	r7, r7, #36
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 12
 101 0068 BD46     		mov	sp, r7
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 006a B0BC     		pop	{r4, r5, r7}
 106              	.LCFI5:
 107              		.cfi_restore 7
 108              		.cfi_restore 5
 109              		.cfi_restore 4
 110              		.cfi_def_cfa_offset 0
 111 006c 7047     		bx	lr
 112              		.cfi_endproc
ARM GAS  /tmp/cc0Fr669.s 			page 5


 113              	.LFE145:
 115              		.text
 116              	.Letext0:
 117              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 118              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 119              		.file 4 "/usr/include/newlib/sys/_types.h"
 120              		.file 5 "/usr/include/newlib/sys/reent.h"
 121              		.file 6 "/usr/include/newlib/sys/lock.h"
 122              		.file 7 "/usr/include/newlib/math.h"
 123              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cc0Fr669.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_dot_prod_q15.c
     /tmp/cc0Fr669.s:17     .text.arm_dot_prod_q15:0000000000000000 $t
     /tmp/cc0Fr669.s:25     .text.arm_dot_prod_q15:0000000000000000 arm_dot_prod_q15

NO UNDEFINED SYMBOLS
