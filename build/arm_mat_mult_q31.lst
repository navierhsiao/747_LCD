ARM GAS  /tmp/ccDcRgFu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_mult_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_mult_q31,"ax",%progbits
  17              		.align	1
  18              		.global	arm_mat_mult_q31
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_mat_mult_q31:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c"
   1:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Title:        arm_mat_mult_q31.c
   4:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Description:  Q31 matrix multiplication
   5:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
ARM GAS  /tmp/ccDcRgFu.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @ingroup groupMatrix
  33:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @addtogroup MatrixMult
  37:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @brief         Q31 matrix multiplication.
  42:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[in]     pSrcA      points to the first input matrix structure
  43:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[in]     pSrcB      points to the second input matrix structure
  44:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[out]    pDst       points to output matrix structure
  45:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @return        execution status
  46:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  47:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  48:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  49:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @par           Scaling and Overflow Behavior
  50:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
  51:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
  52:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    multiplication results but provides only a single guard bit. There is no saturat
  53:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    on intermediate additions. Thus, if the accumulator overflows it wraps around an
  54:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    distorts the result. The input signals should be scaled down to avoid intermedia
  55:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    overflows. The input is thus scaled down by log2(numColsA) bits
  56:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    to avoid overflows, as a total of numColsA additions are performed internally.
  57:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to
  58:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @remark
  59:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    Refer to \ref arm_mat_mult_fast_q31() for a faster but less precise implementati
  60:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  61:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  62:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** arm_status arm_mat_mult_q31(
  63:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  64:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  65:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         arm_matrix_instance_q31 * pDst)
  66:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
  28              		.loc 1 66 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 F0B4     		push	{r4, r5, r6, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 7, -4
  40 0002 92B0     		sub	sp, sp, #72
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 88
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 F860     		str	r0, [r7, #12]
  47 0008 B960     		str	r1, [r7, #8]
  48 000a 7A60     		str	r2, [r7, #4]
  67:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* Input data matrix pointer A */
ARM GAS  /tmp/ccDcRgFu.s 			page 3


  49              		.loc 1 67 10
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 5B68     		ldr	r3, [r3, #4]
  52 0010 7B64     		str	r3, [r7, #68]
  68:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* Input data matrix pointer B */
  53              		.loc 1 68 10
  54 0012 BB68     		ldr	r3, [r7, #8]
  55 0014 5B68     		ldr	r3, [r3, #4]
  56 0016 3B64     		str	r3, [r7, #64]
  69:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  57              		.loc 1 69 10
  58 0018 FB68     		ldr	r3, [r7, #12]
  59 001a 5B68     		ldr	r3, [r3, #4]
  60 001c FB63     		str	r3, [r7, #60]
  70:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B */
  61              		.loc 1 70 10
  62 001e BB68     		ldr	r3, [r7, #8]
  63 0020 5B68     		ldr	r3, [r3, #4]
  64 0022 FB61     		str	r3, [r7, #28]
  71:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  65              		.loc 1 71 10
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 5B68     		ldr	r3, [r3, #4]
  68 0028 BB61     		str	r3, [r7, #24]
  72:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  73:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q63_t sum;                                     /* Accumulator */
  74:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  69              		.loc 1 74 12
  70 002a FB68     		ldr	r3, [r7, #12]
  71 002c 1B88     		ldrh	r3, [r3]	@ movhi
  72 002e FB82     		strh	r3, [r7, #22]	@ movhi
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  73              		.loc 1 75 12
  74 0030 BB68     		ldr	r3, [r7, #8]
  75 0032 5B88     		ldrh	r3, [r3, #2]	@ movhi
  76 0034 BB82     		strh	r3, [r7, #20]	@ movhi
  76:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  77              		.loc 1 76 12
  78 0036 FB68     		ldr	r3, [r7, #12]
  79 0038 5B88     		ldrh	r3, [r3, #2]	@ movhi
  80 003a 7B82     		strh	r3, [r7, #18]	@ movhi
  77:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint32_t col, i = 0U, row = numRowsA, colCnt;  /* Loop counters */
  81              		.loc 1 77 17
  82 003c 0023     		movs	r3, #0
  83 003e BB62     		str	r3, [r7, #40]
  84              		.loc 1 77 25
  85 0040 FB8A     		ldrh	r3, [r7, #22]
  86 0042 7B62     		str	r3, [r7, #36]
  87              	.L5:
  78:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* Status of matrix multiplication */
  79:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  80:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  81:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  82:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Check for matrix mismatch condition */
  83:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  84:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  85:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
ARM GAS  /tmp/ccDcRgFu.s 			page 4


  86:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
  87:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  88:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  89:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
  90:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   else
  91:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  92:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
  93:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  94:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
  95:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
  96:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* row loop */
  97:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     do
  98:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
  99:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Output pointer is set to starting address of row being processed */
 100:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       px = pOut + i;
  88              		.loc 1 100 17
  89 0044 BB6A     		ldr	r3, [r7, #40]
  90 0046 9B00     		lsls	r3, r3, #2
  91              		.loc 1 100 10
  92 0048 BA69     		ldr	r2, [r7, #24]
  93 004a 1344     		add	r3, r3, r2
  94 004c BB63     		str	r3, [r7, #56]
 101:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 102:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, column loop counter is to be initiated */
 103:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       col = numColsB;
  95              		.loc 1 103 11
  96 004e BB8A     		ldrh	r3, [r7, #20]
  97 0050 FB62     		str	r3, [r7, #44]
 104:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 105:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, pIn2 pointer is set to starting address of pSrcB data */
 106:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pIn2 = pSrcB->pData;
  98              		.loc 1 106 12
  99 0052 BB68     		ldr	r3, [r7, #8]
 100 0054 5B68     		ldr	r3, [r3, #4]
 101 0056 3B64     		str	r3, [r7, #64]
 102              	.L4:
 107:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 108:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* column loop */
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       do
 110:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       {
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 112:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         sum = 0;
 103              		.loc 1 112 13
 104 0058 4FF00002 		mov	r2, #0
 105 005c 4FF00003 		mov	r3, #0
 106 0060 C7E90C23 		strd	r2, [r7, #48]
 113:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 114:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initialize pointer pIn1 to point to starting address of column being processed */
 115:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn1 = pInA;
 107              		.loc 1 115 14
 108 0064 FB6B     		ldr	r3, [r7, #60]
 109 0066 7B64     		str	r3, [r7, #68]
 116:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 119:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Loop unrolling: Compute 4 MACs at a time. */
 120:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA >> 2U;
ARM GAS  /tmp/ccDcRgFu.s 			page 5


 121:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 122:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* matrix multiplication */
 123:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 124:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 125:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 126:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 127:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 128:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 129:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 130:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 131:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 132:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 133:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 134:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 135:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 136:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 137:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 138:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 139:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 140:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement loop counter */
 141:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 142:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 143:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 144:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Loop unrolling: Compute remaining MACs */
 145:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA % 0x4U;
 146:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 147:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #else
 148:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 149:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initialize cntCnt with number of columns */
 150:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA;
 110              		.loc 1 150 16
 111 0068 7B8A     		ldrh	r3, [r7, #18]
 112 006a 3B62     		str	r3, [r7, #32]
 151:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 152:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 153:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 154:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 113              		.loc 1 154 15
 114 006c 23E0     		b	.L2
 115              	.L3:
 155:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 156:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 157:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 158:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 159:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 116              		.loc 1 159 31
 117 006e 7B6C     		ldr	r3, [r7, #68]
 118 0070 1A1D     		adds	r2, r3, #4
 119 0072 7A64     		str	r2, [r7, #68]
 120              		.loc 1 159 26
 121 0074 1B68     		ldr	r3, [r3]
 122              		.loc 1 159 18
 123 0076 1846     		mov	r0, r3
 124 0078 4FEAE071 		asr	r1, r0, #31
 125              		.loc 1 159 36
 126 007c 3B6C     		ldr	r3, [r7, #64]
 127 007e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccDcRgFu.s 			page 6


 128 0080 1A46     		mov	r2, r3
 129 0082 4FEAE273 		asr	r3, r2, #31
 130              		.loc 1 159 34
 131 0086 02FB01FC 		mul	ip, r2, r1
 132 008a 00FB03F6 		mul	r6, r0, r3
 133 008e 6644     		add	r6, r6, ip
 134 0090 A0FB0223 		umull	r2, r3, r0, r2
 135 0094 F118     		adds	r1, r6, r3
 136 0096 0B46     		mov	r3, r1
 137              		.loc 1 159 15
 138 0098 D7E90C01 		ldrd	r0, [r7, #48]
 139 009c 8418     		adds	r4, r0, r2
 140 009e 41EB0305 		adc	r5, r1, r3
 141 00a2 C7E90C45 		strd	r4, [r7, #48]
 160:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 142              		.loc 1 160 16
 143 00a6 BB8A     		ldrh	r3, [r7, #20]
 144 00a8 9B00     		lsls	r3, r3, #2
 145 00aa 3A6C     		ldr	r2, [r7, #64]
 146 00ac 1344     		add	r3, r3, r2
 147 00ae 3B64     		str	r3, [r7, #64]
 161:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 162:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement loop counter */
 163:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 148              		.loc 1 163 17
 149 00b0 3B6A     		ldr	r3, [r7, #32]
 150 00b2 013B     		subs	r3, r3, #1
 151 00b4 3B62     		str	r3, [r7, #32]
 152              	.L2:
 154:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 153              		.loc 1 154 15
 154 00b6 3B6A     		ldr	r3, [r7, #32]
 155 00b8 002B     		cmp	r3, #0
 156 00ba D8D1     		bne	.L3
 164:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 165:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 166:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Convert result from 2.62 to 1.31 format and store in destination buffer */
 167:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         *px++ = (q31_t) (sum >> 31);
 157              		.loc 1 167 30
 158 00bc D7E90C01 		ldrd	r0, [r7, #48]
 159 00c0 4FF00002 		mov	r2, #0
 160 00c4 4FF00003 		mov	r3, #0
 161 00c8 C20F     		lsrs	r2, r0, #31
 162 00ca 42EA4102 		orr	r2, r2, r1, lsl #1
 163 00ce CB17     		asrs	r3, r1, #31
 164              		.loc 1 167 12
 165 00d0 B96B     		ldr	r1, [r7, #56]
 166 00d2 081D     		adds	r0, r1, #4
 167 00d4 B863     		str	r0, [r7, #56]
 168              		.loc 1 167 17
 169 00d6 1346     		mov	r3, r2
 170              		.loc 1 167 15
 171 00d8 0B60     		str	r3, [r1]
 168:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 169:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Decrement column loop counter */
 170:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col--;
 172              		.loc 1 170 12
ARM GAS  /tmp/ccDcRgFu.s 			page 7


 173 00da FB6A     		ldr	r3, [r7, #44]
 174 00dc 013B     		subs	r3, r3, #1
 175 00de FB62     		str	r3, [r7, #44]
 171:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 172:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Update pointer pIn2 to point to starting address of next column */
 173:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn2 = pInB + (numColsB - col);
 176              		.loc 1 173 33
 177 00e0 BA8A     		ldrh	r2, [r7, #20]
 178 00e2 FB6A     		ldr	r3, [r7, #44]
 179 00e4 D31A     		subs	r3, r2, r3
 180              		.loc 1 173 21
 181 00e6 9B00     		lsls	r3, r3, #2
 182              		.loc 1 173 14
 183 00e8 FA69     		ldr	r2, [r7, #28]
 184 00ea 1344     		add	r3, r3, r2
 185 00ec 3B64     		str	r3, [r7, #64]
 174:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 175:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       } while (col > 0U);
 186              		.loc 1 175 7
 187 00ee FB6A     		ldr	r3, [r7, #44]
 188 00f0 002B     		cmp	r3, #0
 189 00f2 B1D1     		bne	.L4
 176:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 177:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Update pointer pInA to point to starting address of next row */
 178:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       i = i + numColsB;
 190              		.loc 1 178 13
 191 00f4 BB8A     		ldrh	r3, [r7, #20]
 192              		.loc 1 178 9
 193 00f6 BA6A     		ldr	r2, [r7, #40]
 194 00f8 1344     		add	r3, r3, r2
 195 00fa BB62     		str	r3, [r7, #40]
 179:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pInA = pInA + numColsA;
 196              		.loc 1 179 19
 197 00fc 7B8A     		ldrh	r3, [r7, #18]
 198 00fe 9B00     		lsls	r3, r3, #2
 199              		.loc 1 179 12
 200 0100 FA6B     		ldr	r2, [r7, #60]
 201 0102 1344     		add	r3, r3, r2
 202 0104 FB63     		str	r3, [r7, #60]
 180:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 181:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Decrement row loop counter */
 182:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       row--;
 203              		.loc 1 182 10
 204 0106 7B6A     		ldr	r3, [r7, #36]
 205 0108 013B     		subs	r3, r3, #1
 206 010a 7B62     		str	r3, [r7, #36]
 183:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 184:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     } while (row > 0U);
 207              		.loc 1 184 5
 208 010c 7B6A     		ldr	r3, [r7, #36]
 209 010e 002B     		cmp	r3, #0
 210 0110 98D1     		bne	.L5
 185:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 186:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 187:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 211              		.loc 1 187 12
 212 0112 0023     		movs	r3, #0
ARM GAS  /tmp/ccDcRgFu.s 			page 8


 213 0114 7B74     		strb	r3, [r7, #17]
 188:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 189:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 190:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Return to application */
 191:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   return (status);
 214              		.loc 1 191 10
 215 0116 97F91130 		ldrsb	r3, [r7, #17]
 192:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 216              		.loc 1 192 1
 217 011a 1846     		mov	r0, r3
 218 011c 4837     		adds	r7, r7, #72
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 16
 221 011e BD46     		mov	sp, r7
 222              	.LCFI4:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0120 F0BC     		pop	{r4, r5, r6, r7}
 226              	.LCFI5:
 227              		.cfi_restore 7
 228              		.cfi_restore 6
 229              		.cfi_restore 5
 230              		.cfi_restore 4
 231              		.cfi_def_cfa_offset 0
 232 0122 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE145:
 236              		.text
 237              	.Letext0:
 238              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 239              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 240              		.file 4 "/usr/include/newlib/sys/_types.h"
 241              		.file 5 "/usr/include/newlib/sys/reent.h"
 242              		.file 6 "/usr/include/newlib/sys/lock.h"
 243              		.file 7 "/usr/include/newlib/math.h"
 244              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccDcRgFu.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_mult_q31.c
     /tmp/ccDcRgFu.s:17     .text.arm_mat_mult_q31:0000000000000000 $t
     /tmp/ccDcRgFu.s:25     .text.arm_mat_mult_q31:0000000000000000 arm_mat_mult_q31

NO UNDEFINED SYMBOLS
