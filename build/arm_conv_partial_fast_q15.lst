ARM GAS  /tmp/ccwCFmxn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_partial_fast_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_partial_fast_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_conv_partial_fast_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_conv_partial_fast_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Title:        arm_conv_partial_fast_q15.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Description:  Fast Q15 Partial convolution
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
ARM GAS  /tmp/ccwCFmxn.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @addtogroup PartialConv
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @brief         Partial convolution of Q15 sequences (fast version).
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     pSrcA      points to the first input sequence
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     srcALen    length of the first input sequence
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     pSrcB      points to the second input sequence
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     srcBLen    length of the second input sequence
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[out]    pDst       points to the location where the output result is written
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     firstIndex is the first output sample to start with
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @param[in]     numPoints  is the number of output points to be computed
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @return        execution status
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****                    - \ref ARM_MATH_SUCCESS        : Operation successful
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : requested subset is not in the range [0 srcALen
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   @remark
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****                    Refer to \ref arm_conv_partial_q15() for a slower implementation of this functio
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** arm_status arm_conv_partial_fast_q15(
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t * pSrcA,
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         uint32_t srcALen,
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t * pSrcB,
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         uint32_t srcBLen,
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         q15_t * pDst,
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         uint32_t firstIndex,
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         uint32_t numPoints)
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** {
  28              		.loc 1 64 1
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 848
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 90B4     		push	{r4, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 7, -4
  38 0002 ADF5547D 		sub	sp, sp, #848
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 856
  41 0006 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0008 07F10C04 		add	r4, r7, #12
  45 000c 2060     		str	r0, [r4]
  46 000e 07F10800 		add	r0, r7, #8
  47 0012 0160     		str	r1, [r0]
  48 0014 391D     		adds	r1, r7, #4
  49 0016 0A60     		str	r2, [r1]
  50 0018 3A46     		mov	r2, r7
  51 001a 1360     		str	r3, [r2]
ARM GAS  /tmp/ccwCFmxn.s 			page 3


  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t *pIn1;                                   /* InputA pointer */
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t *pIn2;                                   /* InputB pointer */
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         q15_t *pOut = pDst;                            /* Output pointer */
  52              		.loc 1 67 16
  53 001c 07F18003 		add	r3, r7, #128
  54 0020 D7F85823 		ldr	r2, [r7, #856]
  55 0024 1A60     		str	r2, [r3]
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t *px;                                     /* Intermediate inputA pointer */
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t *py;                                     /* Intermediate inputB pointer */
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   const q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         q31_t x0, x1, x2, x3, c0;                      /* Temporary input variables */
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         uint32_t j, k, count, blkCnt, check;
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         int32_t blockSize1, blockSize2, blockSize3;    /* Loop counters */
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         arm_status status;                             /* Status of Partial convolution */
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Check for range of output samples to be calculated */
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
  56              		.loc 1 78 19
  57 0026 D7F85C23 		ldr	r2, [r7, #860]
  58 002a D7F86033 		ldr	r3, [r7, #864]
  59 002e 1A44     		add	r2, r2, r3
  60              		.loc 1 78 44
  61 0030 3946     		mov	r1, r7
  62 0032 07F10803 		add	r3, r7, #8
  63 0036 0968     		ldr	r1, [r1]
  64 0038 1B68     		ldr	r3, [r3]
  65 003a 0B44     		add	r3, r3, r1
  66 003c 013B     		subs	r3, r3, #1
  67              		.loc 1 78 6
  68 003e 9A42     		cmp	r2, r3
  69 0040 04D9     		bls	.L2
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  70              		.loc 1 81 12
  71 0042 FF23     		movs	r3, #255
  72 0044 87F80B33 		strb	r3, [r7, #779]
  73 0048 01F09CBA 		b	.L3
  74              	.L2:
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   else
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* srcB is always made to slide across srcA. */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcALen >= srcBLen)
  75              		.loc 1 88 8
  76 004c 07F10802 		add	r2, r7, #8
  77 0050 3B46     		mov	r3, r7
  78 0052 1268     		ldr	r2, [r2]
  79 0054 1B68     		ldr	r3, [r3]
  80 0056 9A42     		cmp	r2, r3
  81 0058 09D3     		bcc	.L4
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcA;
ARM GAS  /tmp/ccwCFmxn.s 			page 4


  82              		.loc 1 91 12
  83 005a 07F10C03 		add	r3, r7, #12
  84 005e 1B68     		ldr	r3, [r3]
  85 0060 C7F84C33 		str	r3, [r7, #844]
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcB;
  86              		.loc 1 94 12
  87 0064 3B1D     		adds	r3, r7, #4
  88 0066 1B68     		ldr	r3, [r3]
  89 0068 C7F84833 		str	r3, [r7, #840]
  90 006c 16E0     		b	.L5
  91              	.L4:
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcB;
  92              		.loc 1 99 12
  93 006e 3B1D     		adds	r3, r7, #4
  94 0070 1B68     		ldr	r3, [r3]
  95 0072 C7F84C33 		str	r3, [r7, #844]
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcA;
  96              		.loc 1 102 12
  97 0076 07F10C03 		add	r3, r7, #12
  98 007a 1B68     		ldr	r3, [r3]
  99 007c C7F84833 		str	r3, [r7, #840]
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j = srcBLen;
 100              		.loc 1 105 9
 101 0080 3B46     		mov	r3, r7
 102 0082 1B68     		ldr	r3, [r3]
 103 0084 C7F82033 		str	r3, [r7, #800]
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcBLen = srcALen;
 104              		.loc 1 106 15
 105 0088 3B46     		mov	r3, r7
 106 008a 07F10802 		add	r2, r7, #8
 107 008e 1268     		ldr	r2, [r2]
 108 0090 1A60     		str	r2, [r3]
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcALen = j;
 109              		.loc 1 107 15
 110 0092 07F10803 		add	r3, r7, #8
 111 0096 D7F82023 		ldr	r2, [r7, #800]
 112 009a 1A60     		str	r2, [r3]
 113              	.L5:
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Conditions to check which loopCounter holds
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * the first and last indices of the output samples to be calculated. */
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     check = firstIndex + numPoints;
 114              		.loc 1 112 11
 115 009c D7F85C23 		ldr	r2, [r7, #860]
 116 00a0 D7F86033 		ldr	r3, [r7, #864]
 117 00a4 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccwCFmxn.s 			page 5


 118 00a6 C7F80433 		str	r3, [r7, #772]
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 119              		.loc 1 113 19
 120 00aa D7F80423 		ldr	r2, [r7, #772]
 121              		.loc 1 113 36
 122 00ae 07F10803 		add	r3, r7, #8
 123 00b2 1B68     		ldr	r3, [r3]
 124              		.loc 1 113 90
 125 00b4 9A42     		cmp	r2, r3
 126 00b6 06DD     		ble	.L6
 127              		.loc 1 113 56 discriminator 1
 128 00b8 D7F80423 		ldr	r2, [r7, #772]
 129              		.loc 1 113 73 discriminator 1
 130 00bc 07F10803 		add	r3, r7, #8
 131 00c0 1B68     		ldr	r3, [r3]
 132              		.loc 1 113 90 discriminator 1
 133 00c2 D31A     		subs	r3, r2, r3
 134 00c4 00E0     		b	.L7
 135              	.L6:
 136              		.loc 1 113 90 is_stmt 0 discriminator 2
 137 00c6 0023     		movs	r3, #0
 138              	.L7:
 139              		.loc 1 113 16 is_stmt 1 discriminator 4
 140 00c8 C7F80C33 		str	r3, [r7, #780]
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 141              		.loc 1 114 41 discriminator 4
 142 00cc 07F10803 		add	r3, r7, #8
 143 00d0 1A68     		ldr	r2, [r3]
 144              		.loc 1 114 19 discriminator 4
 145 00d2 D7F85C33 		ldr	r3, [r7, #860]
 146              		.loc 1 114 117 discriminator 4
 147 00d6 9A42     		cmp	r2, r3
 148 00d8 09DC     		bgt	.L8
 149              		.loc 1 114 78 discriminator 1
 150 00da D7F85C33 		ldr	r3, [r7, #860]
 151              		.loc 1 114 76 discriminator 1
 152 00de D7F80C23 		ldr	r2, [r7, #780]
 153 00e2 D21A     		subs	r2, r2, r3
 154              		.loc 1 114 100 discriminator 1
 155 00e4 07F10803 		add	r3, r7, #8
 156 00e8 1B68     		ldr	r3, [r3]
 157              		.loc 1 114 117 discriminator 1
 158 00ea 1344     		add	r3, r3, r2
 159 00ec 01E0     		b	.L9
 160              	.L8:
 161              		.loc 1 114 117 is_stmt 0 discriminator 2
 162 00ee D7F80C33 		ldr	r3, [r7, #780]
 163              	.L9:
 164              		.loc 1 114 16 is_stmt 1 discriminator 4
 165 00f2 C7F80C33 		str	r3, [r7, #780]
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 166              		.loc 1 115 42 discriminator 4
 167 00f6 3B46     		mov	r3, r7
 168 00f8 1A68     		ldr	r2, [r3]
 169 00fa D7F85C33 		ldr	r3, [r7, #860]
 170 00fe D31A     		subs	r3, r2, r3
 171 0100 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccwCFmxn.s 			page 6


 172              		.loc 1 115 16 discriminator 4
 173 0102 C7F81033 		str	r3, [r7, #784]
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1U)) ? blockSize1 : (int32_t) numPoints) :
 174              		.loc 1 116 99 discriminator 4
 175 0106 D7F81033 		ldr	r3, [r7, #784]
 176 010a 002B     		cmp	r3, #0
 177 010c 0CDD     		ble	.L10
 178              		.loc 1 116 56 discriminator 1
 179 010e 3B46     		mov	r3, r7
 180 0110 1B68     		ldr	r3, [r3]
 181 0112 013B     		subs	r3, r3, #1
 182              		.loc 1 116 76 discriminator 1
 183 0114 D7F80423 		ldr	r2, [r7, #772]
 184 0118 9A42     		cmp	r2, r3
 185 011a 02D9     		bls	.L11
 186              		.loc 1 116 76 is_stmt 0 discriminator 3
 187 011c D7F81033 		ldr	r3, [r7, #784]
 188 0120 03E0     		b	.L13
 189              	.L11:
 190              		.loc 1 116 76 discriminator 4
 191 0122 D7F86033 		ldr	r3, [r7, #864]
 192 0126 00E0     		b	.L13
 193              	.L10:
 194              		.loc 1 116 99 is_stmt 1 discriminator 2
 195 0128 0023     		movs	r3, #0
 196              	.L13:
 197              		.loc 1 116 16 discriminator 8
 198 012a C7F81033 		str	r3, [r7, #784]
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) + (int32_t) firstIndex);
 199              		.loc 1 117 18 discriminator 8
 200 012e D7F80423 		ldr	r2, [r7, #772]
 201              		.loc 1 117 49 discriminator 8
 202 0132 D7F80C13 		ldr	r1, [r7, #780]
 203 0136 D7F81033 		ldr	r3, [r7, #784]
 204 013a 1944     		add	r1, r1, r3
 205              		.loc 1 117 65 discriminator 8
 206 013c D7F85C33 		ldr	r3, [r7, #860]
 207              		.loc 1 117 63 discriminator 8
 208 0140 0B44     		add	r3, r3, r1
 209              		.loc 1 117 16 discriminator 8
 210 0142 D31A     		subs	r3, r2, r3
 211 0144 C7F80033 		str	r3, [r7, #768]
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 212              		.loc 1 118 16 discriminator 8
 213 0148 D7F80033 		ldr	r3, [r7, #768]
 214 014c 23EAE373 		bic	r3, r3, r3, asr #31
 215 0150 C7F80033 		str	r3, [r7, #768]
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The function is internally
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * divided into three stages according to the number of multiplications that has to be
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * algorithm, the multiplications increase by one for every iteration.
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * for every iteration. */
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 7


 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set the output pointer to point to the firstIndex
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * of the output sample to be calculated. */
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pOut = pDst + firstIndex;
 216              		.loc 1 131 17 discriminator 8
 217 0154 D7F85C33 		ldr	r3, [r7, #860]
 218 0158 5B00     		lsls	r3, r3, #1
 219 015a D7F85823 		ldr	r2, [r7, #856]
 220 015e 1A44     		add	r2, r2, r3
 221              		.loc 1 131 10 discriminator 8
 222 0160 07F18003 		add	r3, r7, #128
 223 0164 1A60     		str	r2, [r3]
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage1
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[0]
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed.
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Since the partial convolution starts from firstIndex
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 1U + firstIndex;
 224              		.loc 1 147 11 discriminator 8
 225 0166 D7F85C33 		ldr	r3, [r7, #860]
 226 016a 0133     		adds	r3, r3, #1
 227 016c C7F81833 		str	r3, [r7, #792]
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pIn1;
 228              		.loc 1 150 8 discriminator 8
 229 0170 07F17C03 		add	r3, r7, #124
 230 0174 D7F84C23 		ldr	r2, [r7, #844]
 231 0178 1A60     		str	r2, [r3]
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + firstIndex;
 232              		.loc 1 153 18 discriminator 8
 233 017a D7F85C33 		ldr	r3, [r7, #860]
 234 017e 5B00     		lsls	r3, r3, #1
 235              		.loc 1 153 11 discriminator 8
 236 0180 D7F84823 		ldr	r2, [r7, #840]
 237 0184 1344     		add	r3, r3, r2
 238 0186 C7F82C33 		str	r3, [r7, #812]
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 239              		.loc 1 154 8 discriminator 8
 240 018a 07F17803 		add	r3, r7, #120
 241 018e D7F82C23 		ldr	r2, [r7, #812]
 242 0192 1A60     		str	r2, [r3]
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* ------------------------
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage1 process
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ----------------------*/
ARM GAS  /tmp/ccwCFmxn.s 			page 8


 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while ((count < 4U) && (blockSize1 > 0))
 243              		.loc 1 165 11 discriminator 8
 244 0194 5FE0     		b	.L14
 245              	.L19:
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 246              		.loc 1 168 11
 247 0196 0023     		movs	r3, #0
 248 0198 C7F84433 		str	r3, [r7, #836]
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop over number of MAC operations between
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * inputA samples and inputB samples */
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 249              		.loc 1 172 9
 250 019c D7F81833 		ldr	r3, [r7, #792]
 251 01a0 C7F81C33 		str	r3, [r7, #796]
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 252              		.loc 1 174 13
 253 01a4 2EE0     		b	.L15
 254              	.L17:
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 255              		.loc 1 177 26
 256 01a6 07F17C03 		add	r3, r7, #124
 257 01aa 1B68     		ldr	r3, [r3]
 258 01ac 991C     		adds	r1, r3, #2
 259 01ae 07F17C02 		add	r2, r7, #124
 260 01b2 1160     		str	r1, [r2]
 261              		.loc 1 177 23
 262 01b4 B3F90030 		ldrsh	r3, [r3]
 263              		.loc 1 177 15
 264 01b8 1846     		mov	r0, r3
 265              		.loc 1 177 33
 266 01ba 07F17803 		add	r3, r7, #120
 267 01be 1B68     		ldr	r3, [r3]
 268 01c0 991E     		subs	r1, r3, #2
 269 01c2 07F17802 		add	r2, r7, #120
 270 01c6 1160     		str	r1, [r2]
 271              		.loc 1 177 30
 272 01c8 B3F90030 		ldrsh	r3, [r3]
 273              		.loc 1 177 15
 274 01cc 1A46     		mov	r2, r3
 275 01ce D7F84433 		ldr	r3, [r7, #836]
 276 01d2 C7F8F002 		str	r0, [r7, #752]
 277 01d6 C7F8EC22 		str	r2, [r7, #748]
 278 01da C7F8E832 		str	r3, [r7, #744]
 279              	.LBB118:
 280              	.LBB119:
ARM GAS  /tmp/ccwCFmxn.s 			page 9


 281              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /tmp/ccwCFmxn.s 			page 10


  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /tmp/ccwCFmxn.s 			page 11


 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
ARM GAS  /tmp/ccwCFmxn.s 			page 12


 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/ccwCFmxn.s 			page 13


 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
ARM GAS  /tmp/ccwCFmxn.s 			page 14


 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
ARM GAS  /tmp/ccwCFmxn.s 			page 15


 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
ARM GAS  /tmp/ccwCFmxn.s 			page 16


 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccwCFmxn.s 			page 17


 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccwCFmxn.s 			page 18


 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccwCFmxn.s 			page 19


 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
ARM GAS  /tmp/ccwCFmxn.s 			page 20


 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /tmp/ccwCFmxn.s 			page 21


 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
ARM GAS  /tmp/ccwCFmxn.s 			page 22


 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /tmp/ccwCFmxn.s 			page 23


 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccwCFmxn.s 			page 24


 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 25


 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccwCFmxn.s 			page 26


 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccwCFmxn.s 			page 27


1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
ARM GAS  /tmp/ccwCFmxn.s 			page 28


1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
ARM GAS  /tmp/ccwCFmxn.s 			page 29


1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
ARM GAS  /tmp/ccwCFmxn.s 			page 30


1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
ARM GAS  /tmp/ccwCFmxn.s 			page 31


1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /tmp/ccwCFmxn.s 			page 32


1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccwCFmxn.s 			page 33


1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  /tmp/ccwCFmxn.s 			page 34


1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccwCFmxn.s 			page 35


1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
ARM GAS  /tmp/ccwCFmxn.s 			page 36


1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /tmp/ccwCFmxn.s 			page 37


1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 38


1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 39


1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 40


1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/ccwCFmxn.s 			page 41


1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccwCFmxn.s 			page 42


1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
ARM GAS  /tmp/ccwCFmxn.s 			page 43


1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 282              		.loc 2 1993 3
ARM GAS  /tmp/ccwCFmxn.s 			page 44


 283 01de D7F8F032 		ldr	r3, [r7, #752]
 284 01e2 D7F8EC22 		ldr	r2, [r7, #748]
 285 01e6 D7F8E812 		ldr	r1, [r7, #744]
 286              		.syntax unified
 287              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 288 01ea 23FB0213 		smlad r3, r3, r2, r1
 289              	@ 0 "" 2
 290              		.thumb
 291              		.syntax unified
 292 01ee C7F8E432 		str	r3, [r7, #740]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 293              		.loc 2 1994 9
 294 01f2 D7F8E432 		ldr	r3, [r7, #740]
 295              	.LBE119:
 296              	.LBE118:
 297              		.loc 1 177 13
 298 01f6 C7F84433 		str	r3, [r7, #836]
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement loop counter */
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 299              		.loc 1 180 10
 300 01fa D7F81C33 		ldr	r3, [r7, #796]
 301 01fe 013B     		subs	r3, r3, #1
 302 0200 C7F81C33 		str	r3, [r7, #796]
 303              	.L15:
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 304              		.loc 1 174 13
 305 0204 D7F81C33 		ldr	r3, [r7, #796]
 306 0208 002B     		cmp	r3, #0
 307 020a CCD1     		bne	.L17
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 308              		.loc 1 184 30
 309 020c D7F84433 		ldr	r3, [r7, #836]
 310 0210 D813     		asrs	r0, r3, #15
 311              		.loc 1 184 12
 312 0212 07F18003 		add	r3, r7, #128
 313 0216 1B68     		ldr	r3, [r3]
 314 0218 991C     		adds	r1, r3, #2
 315 021a 07F18002 		add	r2, r7, #128
 316 021e 1160     		str	r1, [r2]
 317              		.loc 1 184 17
 318 0220 02B2     		sxth	r2, r0
 319              		.loc 1 184 15
 320 0222 1A80     		strh	r2, [r3]	@ movhi
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2;
 321              		.loc 1 187 10
 322 0224 D7F82C33 		ldr	r3, [r7, #812]
 323 0228 0233     		adds	r3, r3, #2
 324 022a C7F82C33 		str	r3, [r7, #812]
 325 022e 07F17803 		add	r3, r7, #120
 326 0232 D7F82C23 		ldr	r2, [r7, #812]
 327 0236 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 45


 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 328              		.loc 1 188 10
 329 0238 07F17C03 		add	r3, r7, #124
 330 023c D7F84C23 		ldr	r2, [r7, #844]
 331 0240 1A60     		str	r2, [r3]
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment MAC count */
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 332              		.loc 1 191 12
 333 0242 D7F81833 		ldr	r3, [r7, #792]
 334 0246 0133     		adds	r3, r3, #1
 335 0248 C7F81833 		str	r3, [r7, #792]
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement loop counter */
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 336              		.loc 1 194 17
 337 024c D7F81033 		ldr	r3, [r7, #784]
 338 0250 013B     		subs	r3, r3, #1
 339 0252 C7F81033 		str	r3, [r7, #784]
 340              	.L14:
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 341              		.loc 1 165 11
 342 0256 D7F81833 		ldr	r3, [r7, #792]
 343 025a 032B     		cmp	r3, #3
 344 025c 03D8     		bhi	.L18
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 345              		.loc 1 165 25 discriminator 1
 346 025e D7F81033 		ldr	r3, [r7, #784]
 347 0262 002B     		cmp	r3, #0
 348 0264 97DC     		bgt	.L19
 349              	.L18:
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* To, read the last two inputB samples using SIMD:
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py - 1;
 350              		.loc 1 201 13
 351 0266 07F17803 		add	r3, r7, #120
 352 026a 1B68     		ldr	r3, [r3]
 353 026c 9A1E     		subs	r2, r3, #2
 354              		.loc 1 201 8
 355 026e 07F17803 		add	r3, r7, #120
 356 0272 1A60     		str	r2, [r3]
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (blockSize1 > 0)
 357              		.loc 1 203 11
 358 0274 01E1     		b	.L20
 359              	.L32:
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 360              		.loc 1 206 11
 361 0276 0023     		movs	r3, #0
 362 0278 C7F84433 		str	r3, [r7, #836]
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 46


 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2U;
 363              		.loc 1 209 9
 364 027c D7F81833 		ldr	r3, [r7, #792]
 365 0280 9B08     		lsrs	r3, r3, #2
 366 0282 C7F81C33 		str	r3, [r7, #796]
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          a second loop below computes MACs for the remaining 1 to 3 samples. */
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 367              		.loc 1 213 13
 368 0286 8CE0     		b	.L21
 369              	.L28:
 370 0288 07F17C03 		add	r3, r7, #124
 371 028c C7F8B432 		str	r3, [r7, #692]
 372              	.LBB120:
 373              	.LBB121:
 374              		.file 3 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
ARM GAS  /tmp/ccwCFmxn.s 			page 47


  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
ARM GAS  /tmp/ccwCFmxn.s 			page 48


  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccwCFmxn.s 			page 49


 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
ARM GAS  /tmp/ccwCFmxn.s 			page 50


 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccwCFmxn.s 			page 51


 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 52


 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
ARM GAS  /tmp/ccwCFmxn.s 			page 53


 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
ARM GAS  /tmp/ccwCFmxn.s 			page 54


 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 375              		.loc 3 474 3
 376 0290 D7F8B432 		ldr	r3, [r7, #692]
 377 0294 1B68     		ldr	r3, [r3]
 378 0296 1B68     		ldr	r3, [r3]	@ unaligned
 379 0298 1A46     		mov	r2, r3
 380 029a 07F11C03 		add	r3, r7, #28
 381 029e 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 382              		.loc 3 475 9
 383 02a0 D7F8B432 		ldr	r3, [r7, #692]
 384 02a4 1B68     		ldr	r3, [r3]
 385 02a6 1A1D     		adds	r2, r3, #4
 386 02a8 D7F8B432 		ldr	r3, [r7, #692]
 387 02ac 1A60     		str	r2, [r3]
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 388              		.loc 3 477 10
 389 02ae 07F11C03 		add	r3, r7, #28
 390 02b2 1B68     		ldr	r3, [r3]
 391              	.LBE121:
 392              	.LBE120:
ARM GAS  /tmp/ccwCFmxn.s 			page 55


 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulate */
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 393              		.loc 1 217 15
 394 02b4 1946     		mov	r1, r3
 395 02b6 07F17803 		add	r3, r7, #120
 396 02ba C7F8B832 		str	r3, [r7, #696]
 397              	.LBB122:
 398              	.LBB123:
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 399              		.loc 3 490 3
 400 02be D7F8B832 		ldr	r3, [r7, #696]
 401 02c2 1B68     		ldr	r3, [r3]
 402 02c4 1B68     		ldr	r3, [r3]	@ unaligned
 403 02c6 1A46     		mov	r2, r3
 404 02c8 07F11803 		add	r3, r7, #24
 405 02cc 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 406              		.loc 3 491 9
 407 02ce D7F8B832 		ldr	r3, [r7, #696]
 408 02d2 1B68     		ldr	r3, [r3]
 409 02d4 1A1F     		subs	r2, r3, #4
 410 02d6 D7F8B832 		ldr	r3, [r7, #696]
 411 02da 1A60     		str	r2, [r3]
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 412              		.loc 3 493 10
 413 02dc 07F11803 		add	r3, r7, #24
 414 02e0 1B68     		ldr	r3, [r3]
 415              	.LBE123:
 416              	.LBE122:
 417              		.loc 1 217 15
 418 02e2 1A46     		mov	r2, r3
 419 02e4 D7F84433 		ldr	r3, [r7, #836]
 420 02e8 C7F8C812 		str	r1, [r7, #712]
 421 02ec C7F8C422 		str	r2, [r7, #708]
 422 02f0 C7F8C032 		str	r3, [r7, #704]
 423              	.LBB124:
 424              	.LBB125:
1995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccwCFmxn.s 			page 56


2000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 425              		.loc 2 2001 3
 426 02f4 D7F8C832 		ldr	r3, [r7, #712]
 427 02f8 D7F8C422 		ldr	r2, [r7, #708]
 428 02fc D7F8C012 		ldr	r1, [r7, #704]
 429              		.syntax unified
 430              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 431 0300 23FB1213 		smladx r3, r3, r2, r1
 432              	@ 0 "" 2
 433              		.thumb
 434              		.syntax unified
 435 0304 C7F8BC32 		str	r3, [r7, #700]
2002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 436              		.loc 2 2002 9
 437 0308 D7F8BC32 		ldr	r3, [r7, #700]
 438              	.LBE125:
 439              	.LBE124:
 440              		.loc 1 217 13
 441 030c C7F84433 		str	r3, [r7, #836]
 442 0310 07F17C03 		add	r3, r7, #124
 443 0314 C7F8CC32 		str	r3, [r7, #716]
 444              	.LBB126:
 445              	.LBB127:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 446              		.loc 3 474 3
 447 0318 D7F8CC32 		ldr	r3, [r7, #716]
 448 031c 1B68     		ldr	r3, [r3]
 449 031e 1B68     		ldr	r3, [r3]	@ unaligned
 450 0320 1A46     		mov	r2, r3
 451 0322 07F11403 		add	r3, r7, #20
 452 0326 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 453              		.loc 3 475 9
 454 0328 D7F8CC32 		ldr	r3, [r7, #716]
 455 032c 1B68     		ldr	r3, [r3]
 456 032e 1A1D     		adds	r2, r3, #4
 457 0330 D7F8CC32 		ldr	r3, [r7, #716]
 458 0334 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 459              		.loc 3 477 10
 460 0336 07F11403 		add	r3, r7, #20
 461 033a 1B68     		ldr	r3, [r3]
 462              	.LBE127:
 463              	.LBE126:
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 464              		.loc 1 219 15
 465 033c 1946     		mov	r1, r3
 466 033e 07F17803 		add	r3, r7, #120
 467 0342 C7F8D032 		str	r3, [r7, #720]
 468              	.LBB128:
 469              	.LBB129:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 470              		.loc 3 490 3
 471 0346 D7F8D032 		ldr	r3, [r7, #720]
 472 034a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 57


 473 034c 1B68     		ldr	r3, [r3]	@ unaligned
 474 034e 1A46     		mov	r2, r3
 475 0350 07F11003 		add	r3, r7, #16
 476 0354 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477              		.loc 3 491 9
 478 0356 D7F8D032 		ldr	r3, [r7, #720]
 479 035a 1B68     		ldr	r3, [r3]
 480 035c 1A1F     		subs	r2, r3, #4
 481 035e D7F8D032 		ldr	r3, [r7, #720]
 482 0362 1A60     		str	r2, [r3]
 483              		.loc 3 493 10
 484 0364 07F11003 		add	r3, r7, #16
 485 0368 1B68     		ldr	r3, [r3]
 486              	.LBE129:
 487              	.LBE128:
 488              		.loc 1 219 15
 489 036a 1A46     		mov	r2, r3
 490 036c D7F84433 		ldr	r3, [r7, #836]
 491 0370 C7F8E012 		str	r1, [r7, #736]
 492 0374 C7F8DC22 		str	r2, [r7, #732]
 493 0378 C7F8D832 		str	r3, [r7, #728]
 494              	.LBB130:
 495              	.LBB131:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 496              		.loc 2 2001 3
 497 037c D7F8E032 		ldr	r3, [r7, #736]
 498 0380 D7F8DC22 		ldr	r2, [r7, #732]
 499 0384 D7F8D812 		ldr	r1, [r7, #728]
 500              		.syntax unified
 501              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 502 0388 23FB1213 		smladx r3, r3, r2, r1
 503              	@ 0 "" 2
 504              		.thumb
 505              		.syntax unified
 506 038c C7F8D432 		str	r3, [r7, #724]
 507              		.loc 2 2002 9
 508 0390 D7F8D432 		ldr	r3, [r7, #724]
 509              	.LBE131:
 510              	.LBE130:
 511              		.loc 1 219 13
 512 0394 C7F84433 		str	r3, [r7, #836]
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement loop counter */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 513              		.loc 1 222 10
 514 0398 D7F81C33 		ldr	r3, [r7, #796]
 515 039c 013B     		subs	r3, r3, #1
 516 039e C7F81C33 		str	r3, [r7, #796]
 517              	.L21:
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 518              		.loc 1 213 13
 519 03a2 D7F81C33 		ldr	r3, [r7, #796]
 520 03a6 002B     		cmp	r3, #0
 521 03a8 7FF46EAF 		bne	.L28
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 58


 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          So, py is incremented by 1 */
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1U;
 522              		.loc 1 227 15
 523 03ac 07F17803 		add	r3, r7, #120
 524 03b0 1B68     		ldr	r3, [r3]
 525 03b2 9A1C     		adds	r2, r3, #2
 526              		.loc 1 227 10
 527 03b4 07F17803 		add	r3, r7, #120
 528 03b8 1A60     		str	r2, [r3]
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          No loop unrolling is used. */
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4U;
 529              		.loc 1 231 9
 530 03ba D7F81833 		ldr	r3, [r7, #792]
 531 03be 03F00303 		and	r3, r3, #3
 532 03c2 C7F81C33 		str	r3, [r7, #796]
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 533              		.loc 1 233 13
 534 03c6 2EE0     		b	.L29
 535              	.L31:
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 536              		.loc 1 236 26
 537 03c8 07F17C03 		add	r3, r7, #124
 538 03cc 1B68     		ldr	r3, [r3]
 539 03ce 991C     		adds	r1, r3, #2
 540 03d0 07F17C02 		add	r2, r7, #124
 541 03d4 1160     		str	r1, [r2]
 542              		.loc 1 236 23
 543 03d6 B3F90030 		ldrsh	r3, [r3]
 544              		.loc 1 236 15
 545 03da 1846     		mov	r0, r3
 546              		.loc 1 236 33
 547 03dc 07F17803 		add	r3, r7, #120
 548 03e0 1B68     		ldr	r3, [r3]
 549 03e2 991E     		subs	r1, r3, #2
 550 03e4 07F17802 		add	r2, r7, #120
 551 03e8 1160     		str	r1, [r2]
 552              		.loc 1 236 30
 553 03ea B3F90030 		ldrsh	r3, [r3]
 554              		.loc 1 236 15
 555 03ee 1A46     		mov	r2, r3
 556 03f0 D7F84433 		ldr	r3, [r7, #836]
 557 03f4 C7F8B002 		str	r0, [r7, #688]
 558 03f8 C7F8AC22 		str	r2, [r7, #684]
 559 03fc C7F8A832 		str	r3, [r7, #680]
 560              	.LBB132:
 561              	.LBB133:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 562              		.loc 2 1993 3
 563 0400 D7F8B032 		ldr	r3, [r7, #688]
 564 0404 D7F8AC22 		ldr	r2, [r7, #684]
 565 0408 D7F8A812 		ldr	r1, [r7, #680]
ARM GAS  /tmp/ccwCFmxn.s 			page 59


 566              		.syntax unified
 567              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 568 040c 23FB0213 		smlad r3, r3, r2, r1
 569              	@ 0 "" 2
 570              		.thumb
 571              		.syntax unified
 572 0410 C7F8A432 		str	r3, [r7, #676]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 573              		.loc 2 1994 9
 574 0414 D7F8A432 		ldr	r3, [r7, #676]
 575              	.LBE133:
 576              	.LBE132:
 577              		.loc 1 236 13
 578 0418 C7F84433 		str	r3, [r7, #836]
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement loop counter */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 579              		.loc 1 239 10
 580 041c D7F81C33 		ldr	r3, [r7, #796]
 581 0420 013B     		subs	r3, r3, #1
 582 0422 C7F81C33 		str	r3, [r7, #796]
 583              	.L29:
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 584              		.loc 1 233 13
 585 0426 D7F81C33 		ldr	r3, [r7, #796]
 586 042a 002B     		cmp	r3, #0
 587 042c CCD1     		bne	.L31
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 588              		.loc 1 243 30
 589 042e D7F84433 		ldr	r3, [r7, #836]
 590 0432 D813     		asrs	r0, r3, #15
 591              		.loc 1 243 12
 592 0434 07F18003 		add	r3, r7, #128
 593 0438 1B68     		ldr	r3, [r3]
 594 043a 991C     		adds	r1, r3, #2
 595 043c 07F18002 		add	r2, r7, #128
 596 0440 1160     		str	r1, [r2]
 597              		.loc 1 243 17
 598 0442 02B2     		sxth	r2, r0
 599              		.loc 1 243 15
 600 0444 1A80     		strh	r2, [r3]	@ movhi
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2 - 1U;
 601              		.loc 1 246 10
 602 0446 D7F82C33 		ldr	r3, [r7, #812]
 603 044a 0233     		adds	r3, r3, #2
 604 044c C7F82C33 		str	r3, [r7, #812]
 605              		.loc 1 246 20
 606 0450 D7F82C33 		ldr	r3, [r7, #812]
 607 0454 9A1E     		subs	r2, r3, #2
 608              		.loc 1 246 10
 609 0456 07F17803 		add	r3, r7, #120
 610 045a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 60


 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 611              		.loc 1 247 10
 612 045c 07F17C03 		add	r3, r7, #124
 613 0460 D7F84C23 		ldr	r2, [r7, #844]
 614 0464 1A60     		str	r2, [r3]
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment MAC count */
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 615              		.loc 1 250 12
 616 0466 D7F81833 		ldr	r3, [r7, #792]
 617 046a 0133     		adds	r3, r3, #1
 618 046c C7F81833 		str	r3, [r7, #792]
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement loop counter */
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 619              		.loc 1 253 17
 620 0470 D7F81033 		ldr	r3, [r7, #784]
 621 0474 013B     		subs	r3, r3, #1
 622 0476 C7F81033 		str	r3, [r7, #784]
 623              	.L20:
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 624              		.loc 1 203 11
 625 047a D7F81033 		ldr	r3, [r7, #784]
 626 047e 002B     		cmp	r3, #0
 627 0480 3FF7F9AE 		bgt	.L32
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage2
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------------*/
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 628              		.loc 1 267 9
 629 0484 D7F85C23 		ldr	r2, [r7, #860]
 630              		.loc 1 267 31
 631 0488 3B46     		mov	r3, r7
 632 048a 1B68     		ldr	r3, [r3]
 633              		.loc 1 267 29
 634 048c D31A     		subs	r3, r2, r3
 635              		.loc 1 267 8
 636 048e 002B     		cmp	r3, #0
 637 0490 0CDB     		blt	.L33
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pSrc1 = pIn1 + firstIndex - srcBLen + 1;
 638              		.loc 1 269 33
 639 0492 3B46     		mov	r3, r7
 640 0494 D7F85C23 		ldr	r2, [r7, #860]
 641 0498 1B68     		ldr	r3, [r3]
 642 049a D31A     		subs	r3, r2, r3
 643              		.loc 1 269 43
ARM GAS  /tmp/ccwCFmxn.s 			page 61


 644 049c 0133     		adds	r3, r3, #1
 645 049e 5B00     		lsls	r3, r3, #1
 646              		.loc 1 269 13
 647 04a0 D7F84C23 		ldr	r2, [r7, #844]
 648 04a4 1344     		add	r3, r3, r2
 649 04a6 C7F83033 		str	r3, [r7, #816]
 650 04aa 03E0     		b	.L34
 651              	.L33:
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pSrc1 = pIn1;
 652              		.loc 1 273 13
 653 04ac D7F84C33 		ldr	r3, [r7, #844]
 654 04b0 C7F83033 		str	r3, [r7, #816]
 655              	.L34:
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
 656              		.loc 1 275 8
 657 04b4 07F17C03 		add	r3, r7, #124
 658 04b8 D7F83023 		ldr	r2, [r7, #816]
 659 04bc 1A60     		str	r2, [r3]
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 660              		.loc 1 278 18
 661 04be 3B46     		mov	r3, r7
 662 04c0 1A68     		ldr	r2, [r3]
 663 04c2 6FF00043 		mvn	r3, #-2147483648
 664 04c6 1344     		add	r3, r3, r2
 665 04c8 5B00     		lsls	r3, r3, #1
 666              		.loc 1 278 11
 667 04ca D7F84823 		ldr	r2, [r7, #840]
 668 04ce 1344     		add	r3, r3, r2
 669 04d0 C7F82C33 		str	r3, [r7, #812]
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 670              		.loc 1 279 8
 671 04d4 07F17803 		add	r3, r7, #120
 672 04d8 D7F82C23 		ldr	r2, [r7, #812]
 673 04dc 1A60     		str	r2, [r3]
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 0U;
 674              		.loc 1 282 11
 675 04de 0023     		movs	r3, #0
 676 04e0 C7F81833 		str	r3, [r7, #792]
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage2 process
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * So, to loop unroll over blockSize2,
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * srcBLen should be greater than or equal to 4 */
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if (srcBLen >= 4U)
 677              		.loc 1 291 8
 678 04e4 3B46     		mov	r3, r7
ARM GAS  /tmp/ccwCFmxn.s 			page 62


 679 04e6 1B68     		ldr	r3, [r3]
 680 04e8 032B     		cmp	r3, #3
 681 04ea 40F21386 		bls	.L35
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2U);
 682              		.loc 1 294 17
 683 04ee D7F80033 		ldr	r3, [r7, #768]
 684              		.loc 1 294 14
 685 04f2 9B08     		lsrs	r3, r3, #2
 686 04f4 C7F81433 		str	r3, [r7, #788]
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0U)
 687              		.loc 1 296 13
 688 04f8 00F032BD 		b	.L36
 689              	.L81:
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = py - 1U;
 690              		.loc 1 298 17
 691 04fc 07F17803 		add	r3, r7, #120
 692 0500 1B68     		ldr	r3, [r3]
 693 0502 9A1E     		subs	r2, r3, #2
 694              		.loc 1 298 12
 695 0504 07F17803 		add	r3, r7, #120
 696 0508 1A60     		str	r2, [r3]
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Set all accumulators to zero */
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = 0;
 697              		.loc 1 301 14
 698 050a 0023     		movs	r3, #0
 699 050c C7F84033 		str	r3, [r7, #832]
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = 0;
 700              		.loc 1 302 14
 701 0510 0023     		movs	r3, #0
 702 0512 C7F83C33 		str	r3, [r7, #828]
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = 0;
 703              		.loc 1 303 14
 704 0516 0023     		movs	r3, #0
 705 0518 C7F83833 		str	r3, [r7, #824]
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = 0;
 706              		.loc 1 304 14
 707 051c 0023     		movs	r3, #0
 708 051e C7F83433 		str	r3, [r7, #820]
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[0], x[1] samples */
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x0 = read_q15x2 ((q15_t *) px);
 709              		.loc 1 308 14
 710 0522 07F17C03 		add	r3, r7, #124
 711 0526 1B68     		ldr	r3, [r3]
 712 0528 C7F89C32 		str	r3, [r7, #668]
 713 052c D7F89C32 		ldr	r3, [r7, #668]
 714 0530 1B68     		ldr	r3, [r3]	@ unaligned
 715 0532 1A46     		mov	r2, r3
 716              	.LBB134:
 717              	.LBB135:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 63


 718              		.loc 3 459 3
 719 0534 07F12403 		add	r3, r7, #36
 720 0538 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 721              		.loc 3 461 10
 722 053a 07F12403 		add	r3, r7, #36
 723 053e 1B68     		ldr	r3, [r3]
 724              	.LBE135:
 725              	.LBE134:
 726              		.loc 1 308 14
 727 0540 C7F82833 		str	r3, [r7, #808]
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[1], x[2] samples */
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x1 = read_q15x2 ((q15_t *) px + 1);
 728              		.loc 1 310 26
 729 0544 07F17C03 		add	r3, r7, #124
 730 0548 1B68     		ldr	r3, [r3]
 731              		.loc 1 310 14
 732 054a 0233     		adds	r3, r3, #2
 733 054c C7F8A032 		str	r3, [r7, #672]
 734 0550 D7F8A032 		ldr	r3, [r7, #672]
 735 0554 1B68     		ldr	r3, [r3]	@ unaligned
 736 0556 1A46     		mov	r2, r3
 737              	.LBB136:
 738              	.LBB137:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 739              		.loc 3 459 3
 740 0558 07F12003 		add	r3, r7, #32
 741 055c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 742              		.loc 3 461 10
 743 055e 07F12003 		add	r3, r7, #32
 744 0562 1B68     		ldr	r3, [r3]
 745              	.LBE137:
 746              	.LBE136:
 747              		.loc 1 310 14
 748 0564 C7F82433 		str	r3, [r7, #804]
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px += 2U;
 749              		.loc 1 311 12
 750 0568 07F17C03 		add	r3, r7, #124
 751 056c 1B68     		ldr	r3, [r3]
 752 056e 1A1D     		adds	r2, r3, #4
 753 0570 07F17C03 		add	r3, r7, #124
 754 0574 1A60     		str	r2, [r3]
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2U;
 755              		.loc 1 315 11
 756 0576 3B46     		mov	r3, r7
 757 0578 1B68     		ldr	r3, [r3]
 758 057a 9B08     		lsrs	r3, r3, #2
 759 057c C7F81C33 		str	r3, [r7, #796]
 760              	.L53:
 761 0580 07F50173 		add	r3, r7, #516
 762 0584 07F17802 		add	r2, r7, #120
 763 0588 1A60     		str	r2, [r3]
 764              	.LBB138:
ARM GAS  /tmp/ccwCFmxn.s 			page 64


 765              	.LBB139:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 766              		.loc 3 490 3 discriminator 1
 767 058a 07F50173 		add	r3, r7, #516
 768 058e 1B68     		ldr	r3, [r3]
 769 0590 1B68     		ldr	r3, [r3]
 770 0592 1B68     		ldr	r3, [r3]	@ unaligned
 771 0594 1A46     		mov	r2, r3
 772 0596 07F13C03 		add	r3, r7, #60
 773 059a 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 774              		.loc 3 491 9 discriminator 1
 775 059c 07F50173 		add	r3, r7, #516
 776 05a0 1B68     		ldr	r3, [r3]
 777 05a2 1B68     		ldr	r3, [r3]
 778 05a4 1A1F     		subs	r2, r3, #4
 779 05a6 07F50173 		add	r3, r7, #516
 780 05aa 1B68     		ldr	r3, [r3]
 781 05ac 1A60     		str	r2, [r3]
 782              		.loc 3 493 10 discriminator 1
 783 05ae 07F13C03 		add	r3, r7, #60
 784 05b2 1B68     		ldr	r3, [r3]
 785              	.LBE139:
 786              	.LBE138:
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         do
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read the last two inputB samples using SIMD:
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****            * y[srcBLen - 1] and y[srcBLen - 2] */
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = read_q15x2_da ((q15_t **) &py);
 787              		.loc 1 323 16 discriminator 1
 788 05b4 C7F8FC32 		str	r3, [r7, #764]
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 789              		.loc 1 326 18 discriminator 1
 790 05b8 D7F82803 		ldr	r0, [r7, #808]
 791 05bc D7F8FC12 		ldr	r1, [r7, #764]
 792 05c0 D7F84023 		ldr	r2, [r7, #832]
 793 05c4 07F50573 		add	r3, r7, #532
 794 05c8 1860     		str	r0, [r3]
 795 05ca 07F50473 		add	r3, r7, #528
 796 05ce 1960     		str	r1, [r3]
 797 05d0 07F50373 		add	r3, r7, #524
 798 05d4 1A60     		str	r2, [r3]
 799              	.LBB140:
 800              	.LBB141:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 801              		.loc 2 2001 3 discriminator 1
 802 05d6 07F50573 		add	r3, r7, #532
 803 05da 1B68     		ldr	r3, [r3]
 804 05dc 07F50472 		add	r2, r7, #528
 805 05e0 1268     		ldr	r2, [r2]
 806 05e2 07F50371 		add	r1, r7, #524
 807 05e6 0968     		ldr	r1, [r1]
ARM GAS  /tmp/ccwCFmxn.s 			page 65


 808              		.syntax unified
 809              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 810 05e8 23FB1212 		smladx r2, r3, r2, r1
 811              	@ 0 "" 2
 812              		.thumb
 813              		.syntax unified
 814 05ec 07F50273 		add	r3, r7, #520
 815 05f0 1A60     		str	r2, [r3]
 816              		.loc 2 2002 9 discriminator 1
 817 05f2 07F50273 		add	r3, r7, #520
 818 05f6 1B68     		ldr	r3, [r3]
 819              	.LBE141:
 820              	.LBE140:
 821              		.loc 1 326 16 discriminator 1
 822 05f8 C7F84033 		str	r3, [r7, #832]
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 823              		.loc 1 329 18 discriminator 1
 824 05fc D7F82403 		ldr	r0, [r7, #804]
 825 0600 D7F8FC12 		ldr	r1, [r7, #764]
 826 0604 D7F83C23 		ldr	r2, [r7, #828]
 827 0608 07F50973 		add	r3, r7, #548
 828 060c 1860     		str	r0, [r3]
 829 060e 07F50873 		add	r3, r7, #544
 830 0612 1960     		str	r1, [r3]
 831 0614 07F50773 		add	r3, r7, #540
 832 0618 1A60     		str	r2, [r3]
 833              	.LBB142:
 834              	.LBB143:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 835              		.loc 2 2001 3 discriminator 1
 836 061a 07F50973 		add	r3, r7, #548
 837 061e 1B68     		ldr	r3, [r3]
 838 0620 07F50872 		add	r2, r7, #544
 839 0624 1268     		ldr	r2, [r2]
 840 0626 07F50771 		add	r1, r7, #540
 841 062a 0968     		ldr	r1, [r1]
 842              		.syntax unified
 843              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 844 062c 23FB1212 		smladx r2, r3, r2, r1
 845              	@ 0 "" 2
 846              		.thumb
 847              		.syntax unified
 848 0630 07F50673 		add	r3, r7, #536
 849 0634 1A60     		str	r2, [r3]
 850              		.loc 2 2002 9 discriminator 1
 851 0636 07F50673 		add	r3, r7, #536
 852 063a 1B68     		ldr	r3, [r3]
 853              	.LBE143:
 854              	.LBE142:
 855              		.loc 1 329 16 discriminator 1
 856 063c C7F83C33 		str	r3, [r7, #828]
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[2], x[3] */
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x2 = read_q15x2 ((q15_t *) px);
 857              		.loc 1 332 16 discriminator 1
ARM GAS  /tmp/ccwCFmxn.s 			page 66


 858 0640 07F17C03 		add	r3, r7, #124
 859 0644 1A68     		ldr	r2, [r3]
 860 0646 07F50A73 		add	r3, r7, #552
 861 064a 1A60     		str	r2, [r3]
 862 064c 07F50A73 		add	r3, r7, #552
 863 0650 1B68     		ldr	r3, [r3]
 864 0652 1B68     		ldr	r3, [r3]	@ unaligned
 865 0654 1A46     		mov	r2, r3
 866              	.LBB144:
 867              	.LBB145:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 868              		.loc 3 459 3 discriminator 1
 869 0656 07F13803 		add	r3, r7, #56
 870 065a 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 871              		.loc 3 461 10 discriminator 1
 872 065c 07F13803 		add	r3, r7, #56
 873 0660 1B68     		ldr	r3, [r3]
 874              	.LBE145:
 875              	.LBE144:
 876              		.loc 1 332 16 discriminator 1
 877 0662 C7F8F832 		str	r3, [r7, #760]
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[3], x[4] */
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x3 = read_q15x2 ((q15_t *) px + 1);
 878              		.loc 1 335 28 discriminator 1
 879 0666 07F17C03 		add	r3, r7, #124
 880 066a 1B68     		ldr	r3, [r3]
 881              		.loc 1 335 16 discriminator 1
 882 066c 9A1C     		adds	r2, r3, #2
 883 066e 07F50B73 		add	r3, r7, #556
 884 0672 1A60     		str	r2, [r3]
 885 0674 07F50B73 		add	r3, r7, #556
 886 0678 1B68     		ldr	r3, [r3]
 887 067a 1B68     		ldr	r3, [r3]	@ unaligned
 888 067c 1A46     		mov	r2, r3
 889              	.LBB146:
 890              	.LBB147:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 891              		.loc 3 459 3 discriminator 1
 892 067e 07F13403 		add	r3, r7, #52
 893 0682 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 894              		.loc 3 461 10 discriminator 1
 895 0684 07F13403 		add	r3, r7, #52
 896 0688 1B68     		ldr	r3, [r3]
 897              	.LBE147:
 898              	.LBE146:
 899              		.loc 1 335 16 discriminator 1
 900 068a C7F8F432 		str	r3, [r7, #756]
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 901              		.loc 1 338 18 discriminator 1
 902 068e D7F8F802 		ldr	r0, [r7, #760]
 903 0692 D7F8FC12 		ldr	r1, [r7, #764]
 904 0696 D7F83823 		ldr	r2, [r7, #824]
ARM GAS  /tmp/ccwCFmxn.s 			page 67


 905 069a 07F50F73 		add	r3, r7, #572
 906 069e 1860     		str	r0, [r3]
 907 06a0 07F50E73 		add	r3, r7, #568
 908 06a4 1960     		str	r1, [r3]
 909 06a6 07F50D73 		add	r3, r7, #564
 910 06aa 1A60     		str	r2, [r3]
 911              	.LBB148:
 912              	.LBB149:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 913              		.loc 2 2001 3 discriminator 1
 914 06ac 07F50F73 		add	r3, r7, #572
 915 06b0 1B68     		ldr	r3, [r3]
 916 06b2 07F50E72 		add	r2, r7, #568
 917 06b6 1268     		ldr	r2, [r2]
 918 06b8 07F50D71 		add	r1, r7, #564
 919 06bc 0968     		ldr	r1, [r1]
 920              		.syntax unified
 921              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 922 06be 23FB1212 		smladx r2, r3, r2, r1
 923              	@ 0 "" 2
 924              		.thumb
 925              		.syntax unified
 926 06c2 07F50C73 		add	r3, r7, #560
 927 06c6 1A60     		str	r2, [r3]
 928              		.loc 2 2002 9 discriminator 1
 929 06c8 07F50C73 		add	r3, r7, #560
 930 06cc 1B68     		ldr	r3, [r3]
 931              	.LBE149:
 932              	.LBE148:
 933              		.loc 1 338 16 discriminator 1
 934 06ce C7F83833 		str	r3, [r7, #824]
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 935              		.loc 1 341 18 discriminator 1
 936 06d2 D7F8F402 		ldr	r0, [r7, #756]
 937 06d6 D7F8FC12 		ldr	r1, [r7, #764]
 938 06da D7F83423 		ldr	r2, [r7, #820]
 939 06de 07F51373 		add	r3, r7, #588
 940 06e2 1860     		str	r0, [r3]
 941 06e4 07F51273 		add	r3, r7, #584
 942 06e8 1960     		str	r1, [r3]
 943 06ea 07F51173 		add	r3, r7, #580
 944 06ee 1A60     		str	r2, [r3]
 945              	.LBB150:
 946              	.LBB151:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 947              		.loc 2 2001 3 discriminator 1
 948 06f0 07F51373 		add	r3, r7, #588
 949 06f4 1B68     		ldr	r3, [r3]
 950 06f6 07F51272 		add	r2, r7, #584
 951 06fa 1268     		ldr	r2, [r2]
 952 06fc 07F51171 		add	r1, r7, #580
 953 0700 0968     		ldr	r1, [r1]
 954              		.syntax unified
 955              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 956 0702 23FB1212 		smladx r2, r3, r2, r1
ARM GAS  /tmp/ccwCFmxn.s 			page 68


 957              	@ 0 "" 2
 958              		.thumb
 959              		.syntax unified
 960 0706 07F51073 		add	r3, r7, #576
 961 070a 1A60     		str	r2, [r3]
 962              		.loc 2 2002 9 discriminator 1
 963 070c 07F51073 		add	r3, r7, #576
 964 0710 1B68     		ldr	r3, [r3]
 965              	.LBE151:
 966              	.LBE150:
 967              		.loc 1 341 16 discriminator 1
 968 0712 C7F83433 		str	r3, [r7, #820]
 969 0716 07F51473 		add	r3, r7, #592
 970 071a 07F17802 		add	r2, r7, #120
 971 071e 1A60     		str	r2, [r3]
 972              	.LBB152:
 973              	.LBB153:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 974              		.loc 3 490 3 discriminator 1
 975 0720 07F51473 		add	r3, r7, #592
 976 0724 1B68     		ldr	r3, [r3]
 977 0726 1B68     		ldr	r3, [r3]
 978 0728 1B68     		ldr	r3, [r3]	@ unaligned
 979 072a 1A46     		mov	r2, r3
 980 072c 07F13003 		add	r3, r7, #48
 981 0730 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 982              		.loc 3 491 9 discriminator 1
 983 0732 07F51473 		add	r3, r7, #592
 984 0736 1B68     		ldr	r3, [r3]
 985 0738 1B68     		ldr	r3, [r3]
 986 073a 1A1F     		subs	r2, r3, #4
 987 073c 07F51473 		add	r3, r7, #592
 988 0740 1B68     		ldr	r3, [r3]
 989 0742 1A60     		str	r2, [r3]
 990              		.loc 3 493 10 discriminator 1
 991 0744 07F13003 		add	r3, r7, #48
 992 0748 1B68     		ldr	r3, [r3]
 993              	.LBE153:
 994              	.LBE152:
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = read_q15x2_da ((q15_t **) &py);
 995              		.loc 1 344 16 discriminator 1
 996 074a C7F8FC32 		str	r3, [r7, #764]
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x2, c0, acc0);
 997              		.loc 1 347 18 discriminator 1
 998 074e D7F8F812 		ldr	r1, [r7, #760]
 999 0752 D7F8FC22 		ldr	r2, [r7, #764]
 1000 0756 D7F84033 		ldr	r3, [r7, #832]
 1001 075a C7F86012 		str	r1, [r7, #608]
 1002 075e C7F85C22 		str	r2, [r7, #604]
 1003 0762 C7F85832 		str	r3, [r7, #600]
 1004              	.LBB154:
 1005              	.LBB155:
ARM GAS  /tmp/ccwCFmxn.s 			page 69


2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1006              		.loc 2 2001 3 discriminator 1
 1007 0766 D7F86032 		ldr	r3, [r7, #608]
 1008 076a D7F85C22 		ldr	r2, [r7, #604]
 1009 076e D7F85812 		ldr	r1, [r7, #600]
 1010              		.syntax unified
 1011              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1012 0772 23FB1213 		smladx r3, r3, r2, r1
 1013              	@ 0 "" 2
 1014              		.thumb
 1015              		.syntax unified
 1016 0776 C7F85432 		str	r3, [r7, #596]
 1017              		.loc 2 2002 9 discriminator 1
 1018 077a D7F85432 		ldr	r3, [r7, #596]
 1019              	.LBE155:
 1020              	.LBE154:
 1021              		.loc 1 347 16 discriminator 1
 1022 077e C7F84033 		str	r3, [r7, #832]
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x3, c0, acc1);
 1023              		.loc 1 350 18 discriminator 1
 1024 0782 D7F8F412 		ldr	r1, [r7, #756]
 1025 0786 D7F8FC22 		ldr	r2, [r7, #764]
 1026 078a D7F83C33 		ldr	r3, [r7, #828]
 1027 078e C7F87012 		str	r1, [r7, #624]
 1028 0792 C7F86C22 		str	r2, [r7, #620]
 1029 0796 C7F86832 		str	r3, [r7, #616]
 1030              	.LBB156:
 1031              	.LBB157:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1032              		.loc 2 2001 3 discriminator 1
 1033 079a D7F87032 		ldr	r3, [r7, #624]
 1034 079e D7F86C22 		ldr	r2, [r7, #620]
 1035 07a2 D7F86812 		ldr	r1, [r7, #616]
 1036              		.syntax unified
 1037              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1038 07a6 23FB1213 		smladx r3, r3, r2, r1
 1039              	@ 0 "" 2
 1040              		.thumb
 1041              		.syntax unified
 1042 07aa C7F86432 		str	r3, [r7, #612]
 1043              		.loc 2 2002 9 discriminator 1
 1044 07ae D7F86432 		ldr	r3, [r7, #612]
 1045              	.LBE157:
 1046              	.LBE156:
 1047              		.loc 1 350 16 discriminator 1
 1048 07b2 C7F83C33 		str	r3, [r7, #828]
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[4], x[5] */
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x0 = read_q15x2 ((q15_t *) px + 2);
 1049              		.loc 1 353 28 discriminator 1
 1050 07b6 07F17C03 		add	r3, r7, #124
 1051 07ba 1B68     		ldr	r3, [r3]
 1052              		.loc 1 353 16 discriminator 1
 1053 07bc 0433     		adds	r3, r3, #4
 1054 07be C7F87432 		str	r3, [r7, #628]
ARM GAS  /tmp/ccwCFmxn.s 			page 70


 1055 07c2 D7F87432 		ldr	r3, [r7, #628]
 1056 07c6 1B68     		ldr	r3, [r3]	@ unaligned
 1057 07c8 1A46     		mov	r2, r3
 1058              	.LBB158:
 1059              	.LBB159:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1060              		.loc 3 459 3 discriminator 1
 1061 07ca 07F12C03 		add	r3, r7, #44
 1062 07ce 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1063              		.loc 3 461 10 discriminator 1
 1064 07d0 07F12C03 		add	r3, r7, #44
 1065 07d4 1B68     		ldr	r3, [r3]
 1066              	.LBE159:
 1067              	.LBE158:
 1068              		.loc 1 353 16 discriminator 1
 1069 07d6 C7F82833 		str	r3, [r7, #808]
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[5], x[6] */
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x1 = read_q15x2 ((q15_t *) px + 3);
 1070              		.loc 1 356 28 discriminator 1
 1071 07da 07F17C03 		add	r3, r7, #124
 1072 07de 1B68     		ldr	r3, [r3]
 1073              		.loc 1 356 16 discriminator 1
 1074 07e0 0633     		adds	r3, r3, #6
 1075 07e2 C7F87832 		str	r3, [r7, #632]
 1076 07e6 D7F87832 		ldr	r3, [r7, #632]
 1077 07ea 1B68     		ldr	r3, [r3]	@ unaligned
 1078 07ec 1A46     		mov	r2, r3
 1079              	.LBB160:
 1080              	.LBB161:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1081              		.loc 3 459 3 discriminator 1
 1082 07ee 07F12803 		add	r3, r7, #40
 1083 07f2 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1084              		.loc 3 461 10 discriminator 1
 1085 07f4 07F12803 		add	r3, r7, #40
 1086 07f8 1B68     		ldr	r3, [r3]
 1087              	.LBE161:
 1088              	.LBE160:
 1089              		.loc 1 356 16 discriminator 1
 1090 07fa C7F82433 		str	r3, [r7, #804]
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           px += 4U;
 1091              		.loc 1 357 14 discriminator 1
 1092 07fe 07F17C03 		add	r3, r7, #124
 1093 0802 1B68     		ldr	r3, [r3]
 1094 0804 03F10802 		add	r2, r3, #8
 1095 0808 07F17C03 		add	r3, r7, #124
 1096 080c 1A60     		str	r2, [r3]
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x0, c0, acc2);
 1097              		.loc 1 360 18 discriminator 1
 1098 080e D7F82813 		ldr	r1, [r7, #808]
 1099 0812 D7F8FC22 		ldr	r2, [r7, #764]
 1100 0816 D7F83833 		ldr	r3, [r7, #824]
ARM GAS  /tmp/ccwCFmxn.s 			page 71


 1101 081a C7F88812 		str	r1, [r7, #648]
 1102 081e C7F88422 		str	r2, [r7, #644]
 1103 0822 C7F88032 		str	r3, [r7, #640]
 1104              	.LBB162:
 1105              	.LBB163:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1106              		.loc 2 2001 3 discriminator 1
 1107 0826 D7F88832 		ldr	r3, [r7, #648]
 1108 082a D7F88422 		ldr	r2, [r7, #644]
 1109 082e D7F88012 		ldr	r1, [r7, #640]
 1110              		.syntax unified
 1111              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1112 0832 23FB1213 		smladx r3, r3, r2, r1
 1113              	@ 0 "" 2
 1114              		.thumb
 1115              		.syntax unified
 1116 0836 C7F87C32 		str	r3, [r7, #636]
 1117              		.loc 2 2002 9 discriminator 1
 1118 083a D7F87C32 		ldr	r3, [r7, #636]
 1119              	.LBE163:
 1120              	.LBE162:
 1121              		.loc 1 360 16 discriminator 1
 1122 083e C7F83833 		str	r3, [r7, #824]
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x1, c0, acc3);
 1123              		.loc 1 363 18 discriminator 1
 1124 0842 D7F82413 		ldr	r1, [r7, #804]
 1125 0846 D7F8FC22 		ldr	r2, [r7, #764]
 1126 084a D7F83433 		ldr	r3, [r7, #820]
 1127 084e C7F89812 		str	r1, [r7, #664]
 1128 0852 C7F89422 		str	r2, [r7, #660]
 1129 0856 C7F89032 		str	r3, [r7, #656]
 1130              	.LBB164:
 1131              	.LBB165:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1132              		.loc 2 2001 3 discriminator 1
 1133 085a D7F89832 		ldr	r3, [r7, #664]
 1134 085e D7F89422 		ldr	r2, [r7, #660]
 1135 0862 D7F89012 		ldr	r1, [r7, #656]
 1136              		.syntax unified
 1137              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1138 0866 23FB1213 		smladx r3, r3, r2, r1
 1139              	@ 0 "" 2
 1140              		.thumb
 1141              		.syntax unified
 1142 086a C7F88C32 		str	r3, [r7, #652]
 1143              		.loc 2 2002 9 discriminator 1
 1144 086e D7F88C32 		ldr	r3, [r7, #652]
 1145              	.LBE165:
 1146              	.LBE164:
 1147              		.loc 1 363 16 discriminator 1
 1148 0872 C7F83433 		str	r3, [r7, #820]
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         } while (--k);
 1149              		.loc 1 365 9 discriminator 1
 1150 0876 D7F81C33 		ldr	r3, [r7, #796]
ARM GAS  /tmp/ccwCFmxn.s 			page 72


 1151 087a 013B     		subs	r3, r3, #1
 1152 087c C7F81C33 		str	r3, [r7, #796]
 1153 0880 D7F81C33 		ldr	r3, [r7, #796]
 1154 0884 002B     		cmp	r3, #0
 1155 0886 7FF47BAE 		bne	.L53
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* For the next MAC operations, SIMD is not used
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****            So, the 16 bit pointer if inputB, py is updated */
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****            No loop unrolling is used. */
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4U;
 1156              		.loc 1 372 11
 1157 088a 3B46     		mov	r3, r7
 1158 088c 1B68     		ldr	r3, [r3]
 1159 088e 03F00303 		and	r3, r3, #3
 1160 0892 C7F81C33 		str	r3, [r7, #796]
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 1U)
 1161              		.loc 1 374 12
 1162 0896 D7F81C33 		ldr	r3, [r7, #796]
 1163 089a 012B     		cmp	r3, #1
 1164 089c 40F0AF80 		bne	.L54
 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5] */
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = *(py + 1);
 1165              		.loc 1 377 21
 1166 08a0 07F17803 		add	r3, r7, #120
 1167 08a4 1B68     		ldr	r3, [r3]
 1168 08a6 0233     		adds	r3, r3, #2
 1169              		.loc 1 377 16
 1170 08a8 B3F90030 		ldrsh	r3, [r3]
 1171              		.loc 1 377 14
 1172 08ac C7F8FC32 		str	r3, [r7, #764]
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = c0 << 16U;
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = c0 & 0x0000FFFF;
 1173              		.loc 1 381 14
 1174 08b0 D7F8FC32 		ldr	r3, [r7, #764]
 1175 08b4 9BB2     		uxth	r3, r3
 1176 08b6 C7F8FC32 		str	r3, [r7, #764]
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7] */
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1177              		.loc 1 385 16
 1178 08ba 07F17C03 		add	r3, r7, #124
 1179 08be 1A68     		ldr	r2, [r3]
 1180 08c0 07F5E073 		add	r3, r7, #448
 1181 08c4 1A60     		str	r2, [r3]
 1182 08c6 07F5E073 		add	r3, r7, #448
 1183 08ca 1B68     		ldr	r3, [r3]
 1184 08cc 1B68     		ldr	r3, [r3]	@ unaligned
 1185 08ce 1A46     		mov	r2, r3
 1186              	.LBB166:
 1187              	.LBB167:
ARM GAS  /tmp/ccwCFmxn.s 			page 73


 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1188              		.loc 3 459 3
 1189 08d0 07F14003 		add	r3, r7, #64
 1190 08d4 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1191              		.loc 3 461 10
 1192 08d6 07F14003 		add	r3, r7, #64
 1193 08da 1B68     		ldr	r3, [r3]
 1194              	.LBE167:
 1195              	.LBE166:
 1196              		.loc 1 385 16
 1197 08dc C7F8F432 		str	r3, [r7, #756]
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           px++;
 1198              		.loc 1 386 13
 1199 08e0 07F17C03 		add	r3, r7, #124
 1200 08e4 1B68     		ldr	r3, [r3]
 1201 08e6 9A1C     		adds	r2, r3, #2
 1202 08e8 07F17C03 		add	r3, r7, #124
 1203 08ec 1A60     		str	r2, [r3]
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLAD (x0, c0, acc0);
 1204              		.loc 1 389 18
 1205 08ee D7F82803 		ldr	r0, [r7, #808]
 1206 08f2 D7F8FC12 		ldr	r1, [r7, #764]
 1207 08f6 D7F84023 		ldr	r2, [r7, #832]
 1208 08fa 07F5E873 		add	r3, r7, #464
 1209 08fe 1860     		str	r0, [r3]
 1210 0900 07F5E673 		add	r3, r7, #460
 1211 0904 1960     		str	r1, [r3]
 1212 0906 07F5E473 		add	r3, r7, #456
 1213 090a 1A60     		str	r2, [r3]
 1214              	.LBB168:
 1215              	.LBB169:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1216              		.loc 2 1993 3
 1217 090c 07F5E873 		add	r3, r7, #464
 1218 0910 1B68     		ldr	r3, [r3]
 1219 0912 07F5E672 		add	r2, r7, #460
 1220 0916 1268     		ldr	r2, [r2]
 1221 0918 07F5E471 		add	r1, r7, #456
 1222 091c 0968     		ldr	r1, [r1]
 1223              		.syntax unified
 1224              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1225 091e 23FB0212 		smlad r2, r3, r2, r1
 1226              	@ 0 "" 2
 1227              		.thumb
 1228              		.syntax unified
 1229 0922 07F5E273 		add	r3, r7, #452
 1230 0926 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1231              		.loc 2 1994 9
 1232 0928 07F5E273 		add	r3, r7, #452
 1233 092c 1B68     		ldr	r3, [r3]
 1234              	.LBE169:
 1235              	.LBE168:
 1236              		.loc 1 389 16
ARM GAS  /tmp/ccwCFmxn.s 			page 74


 1237 092e C7F84033 		str	r3, [r7, #832]
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD (x1, c0, acc1);
 1238              		.loc 1 390 18
 1239 0932 D7F82403 		ldr	r0, [r7, #804]
 1240 0936 D7F8FC12 		ldr	r1, [r7, #764]
 1241 093a D7F83C23 		ldr	r2, [r7, #828]
 1242 093e 07F5F073 		add	r3, r7, #480
 1243 0942 1860     		str	r0, [r3]
 1244 0944 07F5EE73 		add	r3, r7, #476
 1245 0948 1960     		str	r1, [r3]
 1246 094a 07F5EC73 		add	r3, r7, #472
 1247 094e 1A60     		str	r2, [r3]
 1248              	.LBB170:
 1249              	.LBB171:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1250              		.loc 2 1993 3
 1251 0950 07F5F073 		add	r3, r7, #480
 1252 0954 1B68     		ldr	r3, [r3]
 1253 0956 07F5EE72 		add	r2, r7, #476
 1254 095a 1268     		ldr	r2, [r2]
 1255 095c 07F5EC71 		add	r1, r7, #472
 1256 0960 0968     		ldr	r1, [r1]
 1257              		.syntax unified
 1258              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1259 0962 23FB0212 		smlad r2, r3, r2, r1
 1260              	@ 0 "" 2
 1261              		.thumb
 1262              		.syntax unified
 1263 0966 07F5EA73 		add	r3, r7, #468
 1264 096a 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1265              		.loc 2 1994 9
 1266 096c 07F5EA73 		add	r3, r7, #468
 1267 0970 1B68     		ldr	r3, [r3]
 1268              	.LBE171:
 1269              	.LBE170:
 1270              		.loc 1 390 16
 1271 0972 C7F83C33 		str	r3, [r7, #828]
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x1, c0, acc2);
 1272              		.loc 1 391 18
 1273 0976 D7F82403 		ldr	r0, [r7, #804]
 1274 097a D7F8FC12 		ldr	r1, [r7, #764]
 1275 097e D7F83823 		ldr	r2, [r7, #824]
 1276 0982 07F5F873 		add	r3, r7, #496
 1277 0986 1860     		str	r0, [r3]
 1278 0988 07F5F673 		add	r3, r7, #492
 1279 098c 1960     		str	r1, [r3]
 1280 098e 07F5F473 		add	r3, r7, #488
 1281 0992 1A60     		str	r2, [r3]
 1282              	.LBB172:
 1283              	.LBB173:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1284              		.loc 2 2001 3
 1285 0994 07F5F873 		add	r3, r7, #496
 1286 0998 1B68     		ldr	r3, [r3]
 1287 099a 07F5F672 		add	r2, r7, #492
 1288 099e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccwCFmxn.s 			page 75


 1289 09a0 07F5F471 		add	r1, r7, #488
 1290 09a4 0968     		ldr	r1, [r1]
 1291              		.syntax unified
 1292              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1293 09a6 23FB1212 		smladx r2, r3, r2, r1
 1294              	@ 0 "" 2
 1295              		.thumb
 1296              		.syntax unified
 1297 09aa 07F5F273 		add	r3, r7, #484
 1298 09ae 1A60     		str	r2, [r3]
 1299              		.loc 2 2002 9
 1300 09b0 07F5F273 		add	r3, r7, #484
 1301 09b4 1B68     		ldr	r3, [r3]
 1302              	.LBE173:
 1303              	.LBE172:
 1304              		.loc 1 391 16
 1305 09b6 C7F83833 		str	r3, [r7, #824]
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 1306              		.loc 1 392 18
 1307 09ba D7F8F402 		ldr	r0, [r7, #756]
 1308 09be D7F8FC12 		ldr	r1, [r7, #764]
 1309 09c2 D7F83423 		ldr	r2, [r7, #820]
 1310 09c6 07F50073 		add	r3, r7, #512
 1311 09ca 1860     		str	r0, [r3]
 1312 09cc 07F5FE73 		add	r3, r7, #508
 1313 09d0 1960     		str	r1, [r3]
 1314 09d2 07F5FC73 		add	r3, r7, #504
 1315 09d6 1A60     		str	r2, [r3]
 1316              	.LBB174:
 1317              	.LBB175:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1318              		.loc 2 2001 3
 1319 09d8 07F50073 		add	r3, r7, #512
 1320 09dc 1B68     		ldr	r3, [r3]
 1321 09de 07F5FE72 		add	r2, r7, #508
 1322 09e2 1268     		ldr	r2, [r2]
 1323 09e4 07F5FC71 		add	r1, r7, #504
 1324 09e8 0968     		ldr	r1, [r1]
 1325              		.syntax unified
 1326              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1327 09ea 23FB1212 		smladx r2, r3, r2, r1
 1328              	@ 0 "" 2
 1329              		.thumb
 1330              		.syntax unified
 1331 09ee 07F5FA73 		add	r3, r7, #500
 1332 09f2 1A60     		str	r2, [r3]
 1333              		.loc 2 2002 9
 1334 09f4 07F5FA73 		add	r3, r7, #500
 1335 09f8 1B68     		ldr	r3, [r3]
 1336              	.LBE175:
 1337              	.LBE174:
 1338              		.loc 1 392 16
 1339 09fa C7F83433 		str	r3, [r7, #820]
 1340              	.L54:
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 2U)
ARM GAS  /tmp/ccwCFmxn.s 			page 76


 1341              		.loc 1 395 12
 1342 09fe D7F81C33 		ldr	r3, [r7, #796]
 1343 0a02 022B     		cmp	r3, #2
 1344 0a04 40F0C980 		bne	.L60
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = read_q15x2 ((q15_t *) py);
 1345              		.loc 1 398 16
 1346 0a08 07F17803 		add	r3, r7, #120
 1347 0a0c 1A68     		ldr	r2, [r3]
 1348 0a0e 07F5BA73 		add	r3, r7, #372
 1349 0a12 1A60     		str	r2, [r3]
 1350 0a14 07F5BA73 		add	r3, r7, #372
 1351 0a18 1B68     		ldr	r3, [r3]
 1352 0a1a 1B68     		ldr	r3, [r3]	@ unaligned
 1353 0a1c 1A46     		mov	r2, r3
 1354              	.LBB176:
 1355              	.LBB177:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1356              		.loc 3 459 3
 1357 0a1e 07F14C03 		add	r3, r7, #76
 1358 0a22 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1359              		.loc 3 461 10
 1360 0a24 07F14C03 		add	r3, r7, #76
 1361 0a28 1B68     		ldr	r3, [r3]
 1362              	.LBE177:
 1363              	.LBE176:
 1364              		.loc 1 398 16
 1365 0a2a C7F8FC32 		str	r3, [r7, #764]
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1366              		.loc 1 401 16
 1367 0a2e 07F17C03 		add	r3, r7, #124
 1368 0a32 1A68     		ldr	r2, [r3]
 1369 0a34 07F5BC73 		add	r3, r7, #376
 1370 0a38 1A60     		str	r2, [r3]
 1371 0a3a 07F5BC73 		add	r3, r7, #376
 1372 0a3e 1B68     		ldr	r3, [r3]
 1373 0a40 1B68     		ldr	r3, [r3]	@ unaligned
 1374 0a42 1A46     		mov	r2, r3
 1375              	.LBB178:
 1376              	.LBB179:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1377              		.loc 3 459 3
 1378 0a44 07F14803 		add	r3, r7, #72
 1379 0a48 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1380              		.loc 3 461 10
 1381 0a4a 07F14803 		add	r3, r7, #72
 1382 0a4e 1B68     		ldr	r3, [r3]
 1383              	.LBE179:
 1384              	.LBE178:
 1385              		.loc 1 401 16
 1386 0a50 C7F8F432 		str	r3, [r7, #756]
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
ARM GAS  /tmp/ccwCFmxn.s 			page 77


 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[9] */
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x2 = read_q15x2 ((q15_t *) px + 1);
 1387              		.loc 1 404 28
 1388 0a54 07F17C03 		add	r3, r7, #124
 1389 0a58 1B68     		ldr	r3, [r3]
 1390              		.loc 1 404 16
 1391 0a5a 9A1C     		adds	r2, r3, #2
 1392 0a5c 07F5BE73 		add	r3, r7, #380
 1393 0a60 1A60     		str	r2, [r3]
 1394 0a62 07F5BE73 		add	r3, r7, #380
 1395 0a66 1B68     		ldr	r3, [r3]
 1396 0a68 1B68     		ldr	r3, [r3]	@ unaligned
 1397 0a6a 1A46     		mov	r2, r3
 1398              	.LBB180:
 1399              	.LBB181:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1400              		.loc 3 459 3
 1401 0a6c 07F14403 		add	r3, r7, #68
 1402 0a70 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1403              		.loc 3 461 10
 1404 0a72 07F14403 		add	r3, r7, #68
 1405 0a76 1B68     		ldr	r3, [r3]
 1406              	.LBE181:
 1407              	.LBE180:
 1408              		.loc 1 404 16
 1409 0a78 C7F8F832 		str	r3, [r7, #760]
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           px += 2U;
 1410              		.loc 1 405 14
 1411 0a7c 07F17C03 		add	r3, r7, #124
 1412 0a80 1B68     		ldr	r3, [r3]
 1413 0a82 1A1D     		adds	r2, r3, #4
 1414 0a84 07F17C03 		add	r3, r7, #124
 1415 0a88 1A60     		str	r2, [r3]
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1416              		.loc 1 408 18
 1417 0a8a D7F82803 		ldr	r0, [r7, #808]
 1418 0a8e D7F8FC12 		ldr	r1, [r7, #764]
 1419 0a92 D7F84023 		ldr	r2, [r7, #832]
 1420 0a96 07F5C673 		add	r3, r7, #396
 1421 0a9a 1860     		str	r0, [r3]
 1422 0a9c 07F5C473 		add	r3, r7, #392
 1423 0aa0 1960     		str	r1, [r3]
 1424 0aa2 07F5C273 		add	r3, r7, #388
 1425 0aa6 1A60     		str	r2, [r3]
 1426              	.LBB182:
 1427              	.LBB183:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1428              		.loc 2 2001 3
 1429 0aa8 07F5C673 		add	r3, r7, #396
 1430 0aac 1B68     		ldr	r3, [r3]
 1431 0aae 07F5C472 		add	r2, r7, #392
 1432 0ab2 1268     		ldr	r2, [r2]
 1433 0ab4 07F5C271 		add	r1, r7, #388
 1434 0ab8 0968     		ldr	r1, [r1]
ARM GAS  /tmp/ccwCFmxn.s 			page 78


 1435              		.syntax unified
 1436              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1437 0aba 23FB1212 		smladx r2, r3, r2, r1
 1438              	@ 0 "" 2
 1439              		.thumb
 1440              		.syntax unified
 1441 0abe 07F5C073 		add	r3, r7, #384
 1442 0ac2 1A60     		str	r2, [r3]
 1443              		.loc 2 2002 9
 1444 0ac4 07F5C073 		add	r3, r7, #384
 1445 0ac8 1B68     		ldr	r3, [r3]
 1446              	.LBE183:
 1447              	.LBE182:
 1448              		.loc 1 408 16
 1449 0aca C7F84033 		str	r3, [r7, #832]
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1450              		.loc 1 409 18
 1451 0ace D7F82403 		ldr	r0, [r7, #804]
 1452 0ad2 D7F8FC12 		ldr	r1, [r7, #764]
 1453 0ad6 D7F83C23 		ldr	r2, [r7, #828]
 1454 0ada 07F5CE73 		add	r3, r7, #412
 1455 0ade 1860     		str	r0, [r3]
 1456 0ae0 07F5CC73 		add	r3, r7, #408
 1457 0ae4 1960     		str	r1, [r3]
 1458 0ae6 07F5CA73 		add	r3, r7, #404
 1459 0aea 1A60     		str	r2, [r3]
 1460              	.LBB184:
 1461              	.LBB185:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1462              		.loc 2 2001 3
 1463 0aec 07F5CE73 		add	r3, r7, #412
 1464 0af0 1B68     		ldr	r3, [r3]
 1465 0af2 07F5CC72 		add	r2, r7, #408
 1466 0af6 1268     		ldr	r2, [r2]
 1467 0af8 07F5CA71 		add	r1, r7, #404
 1468 0afc 0968     		ldr	r1, [r1]
 1469              		.syntax unified
 1470              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1471 0afe 23FB1212 		smladx r2, r3, r2, r1
 1472              	@ 0 "" 2
 1473              		.thumb
 1474              		.syntax unified
 1475 0b02 07F5C873 		add	r3, r7, #400
 1476 0b06 1A60     		str	r2, [r3]
 1477              		.loc 2 2002 9
 1478 0b08 07F5C873 		add	r3, r7, #400
 1479 0b0c 1B68     		ldr	r3, [r3]
 1480              	.LBE185:
 1481              	.LBE184:
 1482              		.loc 1 409 16
 1483 0b0e C7F83C33 		str	r3, [r7, #828]
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1484              		.loc 1 410 18
 1485 0b12 D7F8F402 		ldr	r0, [r7, #756]
 1486 0b16 D7F8FC12 		ldr	r1, [r7, #764]
 1487 0b1a D7F83823 		ldr	r2, [r7, #824]
 1488 0b1e 07F5D673 		add	r3, r7, #428
ARM GAS  /tmp/ccwCFmxn.s 			page 79


 1489 0b22 1860     		str	r0, [r3]
 1490 0b24 07F5D473 		add	r3, r7, #424
 1491 0b28 1960     		str	r1, [r3]
 1492 0b2a 07F5D273 		add	r3, r7, #420
 1493 0b2e 1A60     		str	r2, [r3]
 1494              	.LBB186:
 1495              	.LBB187:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1496              		.loc 2 2001 3
 1497 0b30 07F5D673 		add	r3, r7, #428
 1498 0b34 1B68     		ldr	r3, [r3]
 1499 0b36 07F5D472 		add	r2, r7, #424
 1500 0b3a 1268     		ldr	r2, [r2]
 1501 0b3c 07F5D271 		add	r1, r7, #420
 1502 0b40 0968     		ldr	r1, [r1]
 1503              		.syntax unified
 1504              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1505 0b42 23FB1212 		smladx r2, r3, r2, r1
 1506              	@ 0 "" 2
 1507              		.thumb
 1508              		.syntax unified
 1509 0b46 07F5D073 		add	r3, r7, #416
 1510 0b4a 1A60     		str	r2, [r3]
 1511              		.loc 2 2002 9
 1512 0b4c 07F5D073 		add	r3, r7, #416
 1513 0b50 1B68     		ldr	r3, [r3]
 1514              	.LBE187:
 1515              	.LBE186:
 1516              		.loc 1 410 16
 1517 0b52 C7F83833 		str	r3, [r7, #824]
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1518              		.loc 1 411 18
 1519 0b56 D7F8F802 		ldr	r0, [r7, #760]
 1520 0b5a D7F8FC12 		ldr	r1, [r7, #764]
 1521 0b5e D7F83423 		ldr	r2, [r7, #820]
 1522 0b62 07F5DE73 		add	r3, r7, #444
 1523 0b66 1860     		str	r0, [r3]
 1524 0b68 07F5DC73 		add	r3, r7, #440
 1525 0b6c 1960     		str	r1, [r3]
 1526 0b6e 07F5DA73 		add	r3, r7, #436
 1527 0b72 1A60     		str	r2, [r3]
 1528              	.LBB188:
 1529              	.LBB189:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1530              		.loc 2 2001 3
 1531 0b74 07F5DE73 		add	r3, r7, #444
 1532 0b78 1B68     		ldr	r3, [r3]
 1533 0b7a 07F5DC72 		add	r2, r7, #440
 1534 0b7e 1268     		ldr	r2, [r2]
 1535 0b80 07F5DA71 		add	r1, r7, #436
 1536 0b84 0968     		ldr	r1, [r1]
 1537              		.syntax unified
 1538              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1539 0b86 23FB1212 		smladx r2, r3, r2, r1
 1540              	@ 0 "" 2
 1541              		.thumb
 1542              		.syntax unified
ARM GAS  /tmp/ccwCFmxn.s 			page 80


 1543 0b8a 07F5D873 		add	r3, r7, #432
 1544 0b8e 1A60     		str	r2, [r3]
 1545              		.loc 2 2002 9
 1546 0b90 07F5D873 		add	r3, r7, #432
 1547 0b94 1B68     		ldr	r3, [r3]
 1548              	.LBE189:
 1549              	.LBE188:
 1550              		.loc 1 411 16
 1551 0b96 C7F83433 		str	r3, [r7, #820]
 1552              	.L60:
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if (k == 3U)
 1553              		.loc 1 414 12
 1554 0b9a D7F81C33 		ldr	r3, [r7, #796]
 1555 0b9e 032B     		cmp	r3, #3
 1556 0ba0 40F07281 		bne	.L68
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = read_q15x2 ((q15_t *) py);
 1557              		.loc 1 417 16
 1558 0ba4 07F17803 		add	r3, r7, #120
 1559 0ba8 1A68     		ldr	r2, [r3]
 1560 0baa 07F1E403 		add	r3, r7, #228
 1561 0bae 1A60     		str	r2, [r3]
 1562 0bb0 07F1E403 		add	r3, r7, #228
 1563 0bb4 1B68     		ldr	r3, [r3]
 1564 0bb6 1B68     		ldr	r3, [r3]	@ unaligned
 1565 0bb8 1A46     		mov	r2, r3
 1566              	.LBB190:
 1567              	.LBB191:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1568              		.loc 3 459 3
 1569 0bba 07F15C03 		add	r3, r7, #92
 1570 0bbe 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1571              		.loc 3 461 10
 1572 0bc0 07F15C03 		add	r3, r7, #92
 1573 0bc4 1B68     		ldr	r3, [r3]
 1574              	.LBE191:
 1575              	.LBE190:
 1576              		.loc 1 417 16
 1577 0bc6 C7F8FC32 		str	r3, [r7, #764]
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1578              		.loc 1 420 16
 1579 0bca 07F17C03 		add	r3, r7, #124
 1580 0bce 1A68     		ldr	r2, [r3]
 1581 0bd0 07F1E803 		add	r3, r7, #232
 1582 0bd4 1A60     		str	r2, [r3]
 1583 0bd6 07F1E803 		add	r3, r7, #232
 1584 0bda 1B68     		ldr	r3, [r3]
 1585 0bdc 1B68     		ldr	r3, [r3]	@ unaligned
 1586 0bde 1A46     		mov	r2, r3
 1587              	.LBB192:
 1588              	.LBB193:
ARM GAS  /tmp/ccwCFmxn.s 			page 81


 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1589              		.loc 3 459 3
 1590 0be0 07F15803 		add	r3, r7, #88
 1591 0be4 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1592              		.loc 3 461 10
 1593 0be6 07F15803 		add	r3, r7, #88
 1594 0bea 1B68     		ldr	r3, [r3]
 1595              	.LBE193:
 1596              	.LBE192:
 1597              		.loc 1 420 16
 1598 0bec C7F8F432 		str	r3, [r7, #756]
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[9] */
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x2 = read_q15x2 ((q15_t *) px + 1);
 1599              		.loc 1 423 28
 1600 0bf0 07F17C03 		add	r3, r7, #124
 1601 0bf4 1B68     		ldr	r3, [r3]
 1602              		.loc 1 423 16
 1603 0bf6 9A1C     		adds	r2, r3, #2
 1604 0bf8 07F1EC03 		add	r3, r7, #236
 1605 0bfc 1A60     		str	r2, [r3]
 1606 0bfe 07F1EC03 		add	r3, r7, #236
 1607 0c02 1B68     		ldr	r3, [r3]
 1608 0c04 1B68     		ldr	r3, [r3]	@ unaligned
 1609 0c06 1A46     		mov	r2, r3
 1610              	.LBB194:
 1611              	.LBB195:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1612              		.loc 3 459 3
 1613 0c08 07F15403 		add	r3, r7, #84
 1614 0c0c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1615              		.loc 3 461 10
 1616 0c0e 07F15403 		add	r3, r7, #84
 1617 0c12 1B68     		ldr	r3, [r3]
 1618              	.LBE195:
 1619              	.LBE194:
 1620              		.loc 1 423 16
 1621 0c14 C7F8F832 		str	r3, [r7, #760]
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1622              		.loc 1 426 18
 1623 0c18 D7F82803 		ldr	r0, [r7, #808]
 1624 0c1c D7F8FC12 		ldr	r1, [r7, #764]
 1625 0c20 D7F84023 		ldr	r2, [r7, #832]
 1626 0c24 07F1FC03 		add	r3, r7, #252
 1627 0c28 1860     		str	r0, [r3]
 1628 0c2a 07F1F803 		add	r3, r7, #248
 1629 0c2e 1960     		str	r1, [r3]
 1630 0c30 07F1F403 		add	r3, r7, #244
 1631 0c34 1A60     		str	r2, [r3]
 1632              	.LBB196:
 1633              	.LBB197:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1634              		.loc 2 2001 3
ARM GAS  /tmp/ccwCFmxn.s 			page 82


 1635 0c36 07F1FC03 		add	r3, r7, #252
 1636 0c3a 1B68     		ldr	r3, [r3]
 1637 0c3c 07F1F802 		add	r2, r7, #248
 1638 0c40 1268     		ldr	r2, [r2]
 1639 0c42 07F1F401 		add	r1, r7, #244
 1640 0c46 0968     		ldr	r1, [r1]
 1641              		.syntax unified
 1642              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1643 0c48 23FB1212 		smladx r2, r3, r2, r1
 1644              	@ 0 "" 2
 1645              		.thumb
 1646              		.syntax unified
 1647 0c4c 07F1F003 		add	r3, r7, #240
 1648 0c50 1A60     		str	r2, [r3]
 1649              		.loc 2 2002 9
 1650 0c52 07F1F003 		add	r3, r7, #240
 1651 0c56 1B68     		ldr	r3, [r3]
 1652              	.LBE197:
 1653              	.LBE196:
 1654              		.loc 1 426 16
 1655 0c58 C7F84033 		str	r3, [r7, #832]
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1656              		.loc 1 427 18
 1657 0c5c D7F82403 		ldr	r0, [r7, #804]
 1658 0c60 D7F8FC12 		ldr	r1, [r7, #764]
 1659 0c64 D7F83C23 		ldr	r2, [r7, #828]
 1660 0c68 07F58673 		add	r3, r7, #268
 1661 0c6c 1860     		str	r0, [r3]
 1662 0c6e 07F58473 		add	r3, r7, #264
 1663 0c72 1960     		str	r1, [r3]
 1664 0c74 07F58273 		add	r3, r7, #260
 1665 0c78 1A60     		str	r2, [r3]
 1666              	.LBB198:
 1667              	.LBB199:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1668              		.loc 2 2001 3
 1669 0c7a 07F58673 		add	r3, r7, #268
 1670 0c7e 1B68     		ldr	r3, [r3]
 1671 0c80 07F58472 		add	r2, r7, #264
 1672 0c84 1268     		ldr	r2, [r2]
 1673 0c86 07F58271 		add	r1, r7, #260
 1674 0c8a 0968     		ldr	r1, [r1]
 1675              		.syntax unified
 1676              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1677 0c8c 23FB1212 		smladx r2, r3, r2, r1
 1678              	@ 0 "" 2
 1679              		.thumb
 1680              		.syntax unified
 1681 0c90 07F58073 		add	r3, r7, #256
 1682 0c94 1A60     		str	r2, [r3]
 1683              		.loc 2 2002 9
 1684 0c96 07F58073 		add	r3, r7, #256
 1685 0c9a 1B68     		ldr	r3, [r3]
 1686              	.LBE199:
 1687              	.LBE198:
 1688              		.loc 1 427 16
 1689 0c9c C7F83C33 		str	r3, [r7, #828]
ARM GAS  /tmp/ccwCFmxn.s 			page 83


 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1690              		.loc 1 428 18
 1691 0ca0 D7F8F402 		ldr	r0, [r7, #756]
 1692 0ca4 D7F8FC12 		ldr	r1, [r7, #764]
 1693 0ca8 D7F83823 		ldr	r2, [r7, #824]
 1694 0cac 07F58E73 		add	r3, r7, #284
 1695 0cb0 1860     		str	r0, [r3]
 1696 0cb2 07F58C73 		add	r3, r7, #280
 1697 0cb6 1960     		str	r1, [r3]
 1698 0cb8 07F58A73 		add	r3, r7, #276
 1699 0cbc 1A60     		str	r2, [r3]
 1700              	.LBB200:
 1701              	.LBB201:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1702              		.loc 2 2001 3
 1703 0cbe 07F58E73 		add	r3, r7, #284
 1704 0cc2 1B68     		ldr	r3, [r3]
 1705 0cc4 07F58C72 		add	r2, r7, #280
 1706 0cc8 1268     		ldr	r2, [r2]
 1707 0cca 07F58A71 		add	r1, r7, #276
 1708 0cce 0968     		ldr	r1, [r1]
 1709              		.syntax unified
 1710              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1711 0cd0 23FB1212 		smladx r2, r3, r2, r1
 1712              	@ 0 "" 2
 1713              		.thumb
 1714              		.syntax unified
 1715 0cd4 07F58873 		add	r3, r7, #272
 1716 0cd8 1A60     		str	r2, [r3]
 1717              		.loc 2 2002 9
 1718 0cda 07F58873 		add	r3, r7, #272
 1719 0cde 1B68     		ldr	r3, [r3]
 1720              	.LBE201:
 1721              	.LBE200:
 1722              		.loc 1 428 16
 1723 0ce0 C7F83833 		str	r3, [r7, #824]
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1724              		.loc 1 429 18
 1725 0ce4 D7F8F802 		ldr	r0, [r7, #760]
 1726 0ce8 D7F8FC12 		ldr	r1, [r7, #764]
 1727 0cec D7F83423 		ldr	r2, [r7, #820]
 1728 0cf0 07F59673 		add	r3, r7, #300
 1729 0cf4 1860     		str	r0, [r3]
 1730 0cf6 07F59473 		add	r3, r7, #296
 1731 0cfa 1960     		str	r1, [r3]
 1732 0cfc 07F59273 		add	r3, r7, #292
 1733 0d00 1A60     		str	r2, [r3]
 1734              	.LBB202:
 1735              	.LBB203:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1736              		.loc 2 2001 3
 1737 0d02 07F59673 		add	r3, r7, #300
 1738 0d06 1B68     		ldr	r3, [r3]
 1739 0d08 07F59472 		add	r2, r7, #296
 1740 0d0c 1268     		ldr	r2, [r2]
 1741 0d0e 07F59271 		add	r1, r7, #292
 1742 0d12 0968     		ldr	r1, [r1]
ARM GAS  /tmp/ccwCFmxn.s 			page 84


 1743              		.syntax unified
 1744              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1745 0d14 23FB1212 		smladx r2, r3, r2, r1
 1746              	@ 0 "" 2
 1747              		.thumb
 1748              		.syntax unified
 1749 0d18 07F59073 		add	r3, r7, #288
 1750 0d1c 1A60     		str	r2, [r3]
 1751              		.loc 2 2002 9
 1752 0d1e 07F59073 		add	r3, r7, #288
 1753 0d22 1B68     		ldr	r3, [r3]
 1754              	.LBE203:
 1755              	.LBE202:
 1756              		.loc 1 429 16
 1757 0d24 C7F83433 		str	r3, [r7, #820]
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = *(py-1);
 1758              		.loc 1 431 20
 1759 0d28 07F17803 		add	r3, r7, #120
 1760 0d2c 1B68     		ldr	r3, [r3]
 1761 0d2e 023B     		subs	r3, r3, #2
 1762              		.loc 1 431 16
 1763 0d30 B3F90030 		ldrsh	r3, [r3]
 1764              		.loc 1 431 14
 1765 0d34 C7F8FC32 		str	r3, [r7, #764]
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = c0 << 16U;
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           c0 = c0 & 0x0000FFFF;
 1766              		.loc 1 435 14
 1767 0d38 D7F8FC32 		ldr	r3, [r7, #764]
 1768 0d3c 9BB2     		uxth	r3, r3
 1769 0d3e C7F8FC32 		str	r3, [r7, #764]
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[10] */
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           x3 =  read_q15x2 ((q15_t *) px + 2);
 1770              		.loc 1 439 29
 1771 0d42 07F17C03 		add	r3, r7, #124
 1772 0d46 1B68     		ldr	r3, [r3]
 1773              		.loc 1 439 17
 1774 0d48 1A1D     		adds	r2, r3, #4
 1775 0d4a 07F59873 		add	r3, r7, #304
 1776 0d4e 1A60     		str	r2, [r3]
 1777 0d50 07F59873 		add	r3, r7, #304
 1778 0d54 1B68     		ldr	r3, [r3]
 1779 0d56 1B68     		ldr	r3, [r3]	@ unaligned
 1780 0d58 1A46     		mov	r2, r3
 1781              	.LBB204:
 1782              	.LBB205:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1783              		.loc 3 459 3
 1784 0d5a 07F15003 		add	r3, r7, #80
 1785 0d5e 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1786              		.loc 3 461 10
 1787 0d60 07F15003 		add	r3, r7, #80
ARM GAS  /tmp/ccwCFmxn.s 			page 85


 1788 0d64 1B68     		ldr	r3, [r3]
 1789              	.LBE205:
 1790              	.LBE204:
 1791              		.loc 1 439 17
 1792 0d66 C7F8F432 		str	r3, [r7, #756]
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           px += 3U;
 1793              		.loc 1 440 14
 1794 0d6a 07F17C03 		add	r3, r7, #124
 1795 0d6e 1B68     		ldr	r3, [r3]
 1796 0d70 9A1D     		adds	r2, r3, #6
 1797 0d72 07F17C03 		add	r3, r7, #124
 1798 0d76 1A60     		str	r2, [r3]
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x1, c0, acc0);
 1799              		.loc 1 443 18
 1800 0d78 D7F82403 		ldr	r0, [r7, #804]
 1801 0d7c D7F8FC12 		ldr	r1, [r7, #764]
 1802 0d80 D7F84023 		ldr	r2, [r7, #832]
 1803 0d84 07F5A073 		add	r3, r7, #320
 1804 0d88 1860     		str	r0, [r3]
 1805 0d8a 07F59E73 		add	r3, r7, #316
 1806 0d8e 1960     		str	r1, [r3]
 1807 0d90 07F59C73 		add	r3, r7, #312
 1808 0d94 1A60     		str	r2, [r3]
 1809              	.LBB206:
 1810              	.LBB207:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1811              		.loc 2 2001 3
 1812 0d96 07F5A073 		add	r3, r7, #320
 1813 0d9a 1B68     		ldr	r3, [r3]
 1814 0d9c 07F59E72 		add	r2, r7, #316
 1815 0da0 1268     		ldr	r2, [r2]
 1816 0da2 07F59C71 		add	r1, r7, #312
 1817 0da6 0968     		ldr	r1, [r1]
 1818              		.syntax unified
 1819              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1820 0da8 23FB1212 		smladx r2, r3, r2, r1
 1821              	@ 0 "" 2
 1822              		.thumb
 1823              		.syntax unified
 1824 0dac 07F59A73 		add	r3, r7, #308
 1825 0db0 1A60     		str	r2, [r3]
 1826              		.loc 2 2002 9
 1827 0db2 07F59A73 		add	r3, r7, #308
 1828 0db6 1B68     		ldr	r3, [r3]
 1829              	.LBE207:
 1830              	.LBE206:
 1831              		.loc 1 443 16
 1832 0db8 C7F84033 		str	r3, [r7, #832]
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD (x2, c0, acc1);
 1833              		.loc 1 444 18
 1834 0dbc D7F8F802 		ldr	r0, [r7, #760]
 1835 0dc0 D7F8FC12 		ldr	r1, [r7, #764]
 1836 0dc4 D7F83C23 		ldr	r2, [r7, #828]
 1837 0dc8 07F5A873 		add	r3, r7, #336
 1838 0dcc 1860     		str	r0, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 86


 1839 0dce 07F5A673 		add	r3, r7, #332
 1840 0dd2 1960     		str	r1, [r3]
 1841 0dd4 07F5A473 		add	r3, r7, #328
 1842 0dd8 1A60     		str	r2, [r3]
 1843              	.LBB208:
 1844              	.LBB209:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1845              		.loc 2 1993 3
 1846 0dda 07F5A873 		add	r3, r7, #336
 1847 0dde 1B68     		ldr	r3, [r3]
 1848 0de0 07F5A672 		add	r2, r7, #332
 1849 0de4 1268     		ldr	r2, [r2]
 1850 0de6 07F5A471 		add	r1, r7, #328
 1851 0dea 0968     		ldr	r1, [r1]
 1852              		.syntax unified
 1853              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1854 0dec 23FB0212 		smlad r2, r3, r2, r1
 1855              	@ 0 "" 2
 1856              		.thumb
 1857              		.syntax unified
 1858 0df0 07F5A273 		add	r3, r7, #324
 1859 0df4 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1860              		.loc 2 1994 9
 1861 0df6 07F5A273 		add	r3, r7, #324
 1862 0dfa 1B68     		ldr	r3, [r3]
 1863              	.LBE209:
 1864              	.LBE208:
 1865              		.loc 1 444 16
 1866 0dfc C7F83C33 		str	r3, [r7, #828]
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 1867              		.loc 1 445 18
 1868 0e00 D7F8F802 		ldr	r0, [r7, #760]
 1869 0e04 D7F8FC12 		ldr	r1, [r7, #764]
 1870 0e08 D7F83823 		ldr	r2, [r7, #824]
 1871 0e0c 07F5B073 		add	r3, r7, #352
 1872 0e10 1860     		str	r0, [r3]
 1873 0e12 07F5AE73 		add	r3, r7, #348
 1874 0e16 1960     		str	r1, [r3]
 1875 0e18 07F5AC73 		add	r3, r7, #344
 1876 0e1c 1A60     		str	r2, [r3]
 1877              	.LBB210:
 1878              	.LBB211:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1879              		.loc 2 2001 3
 1880 0e1e 07F5B073 		add	r3, r7, #352
 1881 0e22 1B68     		ldr	r3, [r3]
 1882 0e24 07F5AE72 		add	r2, r7, #348
 1883 0e28 1268     		ldr	r2, [r2]
 1884 0e2a 07F5AC71 		add	r1, r7, #344
 1885 0e2e 0968     		ldr	r1, [r1]
 1886              		.syntax unified
 1887              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1888 0e30 23FB1212 		smladx r2, r3, r2, r1
 1889              	@ 0 "" 2
 1890              		.thumb
 1891              		.syntax unified
ARM GAS  /tmp/ccwCFmxn.s 			page 87


 1892 0e34 07F5AA73 		add	r3, r7, #340
 1893 0e38 1A60     		str	r2, [r3]
 1894              		.loc 2 2002 9
 1895 0e3a 07F5AA73 		add	r3, r7, #340
 1896 0e3e 1B68     		ldr	r3, [r3]
 1897              	.LBE211:
 1898              	.LBE210:
 1899              		.loc 1 445 16
 1900 0e40 C7F83833 		str	r3, [r7, #824]
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 1901              		.loc 1 446 18
 1902 0e44 D7F8F402 		ldr	r0, [r7, #756]
 1903 0e48 D7F8FC12 		ldr	r1, [r7, #764]
 1904 0e4c D7F83423 		ldr	r2, [r7, #820]
 1905 0e50 07F5B873 		add	r3, r7, #368
 1906 0e54 1860     		str	r0, [r3]
 1907 0e56 07F5B673 		add	r3, r7, #364
 1908 0e5a 1960     		str	r1, [r3]
 1909 0e5c 07F5B473 		add	r3, r7, #360
 1910 0e60 1A60     		str	r2, [r3]
 1911              	.LBB212:
 1912              	.LBB213:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1913              		.loc 2 2001 3
 1914 0e62 07F5B873 		add	r3, r7, #368
 1915 0e66 1B68     		ldr	r3, [r3]
 1916 0e68 07F5B672 		add	r2, r7, #364
 1917 0e6c 1268     		ldr	r2, [r2]
 1918 0e6e 07F5B471 		add	r1, r7, #360
 1919 0e72 0968     		ldr	r1, [r1]
 1920              		.syntax unified
 1921              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1922 0e74 23FB1212 		smladx r2, r3, r2, r1
 1923              	@ 0 "" 2
 1924              		.thumb
 1925              		.syntax unified
 1926 0e78 07F5B273 		add	r3, r7, #356
 1927 0e7c 1A60     		str	r2, [r3]
 1928              		.loc 2 2002 9
 1929 0e7e 07F5B273 		add	r3, r7, #356
 1930 0e82 1B68     		ldr	r3, [r3]
 1931              	.LBE213:
 1932              	.LBE212:
 1933              		.loc 1 446 16
 1934 0e84 C7F83433 		str	r3, [r7, #820]
 1935              	.L68:
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the results in the accumulators in the destination buffer. */
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(acc0 >> 15, acc1 >> 15, 16));
 1936              		.loc 1 451 32
 1937 0e88 D7F84033 		ldr	r3, [r7, #832]
 1938 0e8c DB13     		asrs	r3, r3, #15
 1939 0e8e 9AB2     		uxth	r2, r3
 1940 0e90 D7F83C33 		ldr	r3, [r7, #828]
 1941 0e94 DB13     		asrs	r3, r3, #15
ARM GAS  /tmp/ccwCFmxn.s 			page 88


 1942 0e96 1B04     		lsls	r3, r3, #16
 1943 0e98 1343     		orrs	r3, r3, r2
 1944              		.loc 1 451 9
 1945 0e9a 1946     		mov	r1, r3
 1946 0e9c 07F1D803 		add	r3, r7, #216
 1947 0ea0 07F18002 		add	r2, r7, #128
 1948 0ea4 1A60     		str	r2, [r3]
 1949 0ea6 07F1D403 		add	r3, r7, #212
 1950 0eaa 1960     		str	r1, [r3]
 1951              	.LBB214:
 1952              	.LBB215:
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 1953              		.loc 3 506 9
 1954 0eac 07F16403 		add	r3, r7, #100
 1955 0eb0 07F1D402 		add	r2, r7, #212
 1956 0eb4 1268     		ldr	r2, [r2]
 1957 0eb6 1A60     		str	r2, [r3]
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 1958              		.loc 3 508 3
 1959 0eb8 07F1D803 		add	r3, r7, #216
 1960 0ebc 1B68     		ldr	r3, [r3]
 1961 0ebe 1B68     		ldr	r3, [r3]
 1962 0ec0 07F16402 		add	r2, r7, #100
 1963 0ec4 1268     		ldr	r2, [r2]
 1964 0ec6 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 1965              		.loc 3 509 9
 1966 0ec8 07F1D803 		add	r3, r7, #216
 1967 0ecc 1B68     		ldr	r3, [r3]
 1968 0ece 1B68     		ldr	r3, [r3]
 1969 0ed0 1A1D     		adds	r2, r3, #4
 1970 0ed2 07F1D803 		add	r3, r7, #216
 1971 0ed6 1B68     		ldr	r3, [r3]
 1972 0ed8 1A60     		str	r2, [r3]
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1973              		.loc 3 510 1
 1974 0eda 00BF     		nop
 1975              	.LBE215:
 1976              	.LBE214:
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(acc2 >> 15, acc3 >> 15, 16));
 1977              		.loc 1 452 32
 1978 0edc D7F83833 		ldr	r3, [r7, #824]
 1979 0ee0 DB13     		asrs	r3, r3, #15
 1980 0ee2 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccwCFmxn.s 			page 89


 1981 0ee4 D7F83433 		ldr	r3, [r7, #820]
 1982 0ee8 DB13     		asrs	r3, r3, #15
 1983 0eea 1B04     		lsls	r3, r3, #16
 1984 0eec 1343     		orrs	r3, r3, r2
 1985              		.loc 1 452 9
 1986 0eee 1946     		mov	r1, r3
 1987 0ef0 07F1E003 		add	r3, r7, #224
 1988 0ef4 07F18002 		add	r2, r7, #128
 1989 0ef8 1A60     		str	r2, [r3]
 1990 0efa 07F1DC03 		add	r3, r7, #220
 1991 0efe 1960     		str	r1, [r3]
 1992              	.LBB216:
 1993              	.LBB217:
 506:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1994              		.loc 3 506 9
 1995 0f00 07F16003 		add	r3, r7, #96
 1996 0f04 07F1DC02 		add	r2, r7, #220
 1997 0f08 1268     		ldr	r2, [r2]
 1998 0f0a 1A60     		str	r2, [r3]
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 1999              		.loc 3 508 3
 2000 0f0c 07F1E003 		add	r3, r7, #224
 2001 0f10 1B68     		ldr	r3, [r3]
 2002 0f12 1B68     		ldr	r3, [r3]
 2003 0f14 07F16002 		add	r2, r7, #96
 2004 0f18 1268     		ldr	r2, [r2]
 2005 0f1a 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2006              		.loc 3 509 9
 2007 0f1c 07F1E003 		add	r3, r7, #224
 2008 0f20 1B68     		ldr	r3, [r3]
 2009 0f22 1B68     		ldr	r3, [r3]
 2010 0f24 1A1D     		adds	r2, r3, #4
 2011 0f26 07F1E003 		add	r3, r7, #224
 2012 0f2a 1B68     		ldr	r3, [r3]
 2013 0f2c 1A60     		str	r2, [r3]
 2014              		.loc 3 510 1
 2015 0f2e 00BF     		nop
 2016              	.LBE217:
 2017              	.LBE216:
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(acc1 >> 15, acc0 >> 15, 16));
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(acc3 >> 15, acc2 >> 15, 16));
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /* #ifndef  ARM_MATH_BIG_ENDIAN */
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count += 4U;
 2018              		.loc 1 459 15
 2019 0f30 D7F81833 		ldr	r3, [r7, #792]
 2020 0f34 0433     		adds	r3, r3, #4
 2021 0f36 C7F81833 		str	r3, [r7, #792]
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pSrc1 + count;
 2022              		.loc 1 462 20
 2023 0f3a D7F81833 		ldr	r3, [r7, #792]
 2024 0f3e 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/ccwCFmxn.s 			page 90


 2025 0f40 D7F83023 		ldr	r2, [r7, #816]
 2026 0f44 1A44     		add	r2, r2, r3
 2027              		.loc 1 462 12
 2028 0f46 07F17C03 		add	r3, r7, #124
 2029 0f4a 1A60     		str	r2, [r3]
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 2030              		.loc 1 463 12
 2031 0f4c 07F17803 		add	r3, r7, #120
 2032 0f50 D7F82C23 		ldr	r2, [r7, #812]
 2033 0f54 1A60     		str	r2, [r3]
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 2034              		.loc 1 466 15
 2035 0f56 D7F81433 		ldr	r3, [r7, #788]
 2036 0f5a 013B     		subs	r3, r3, #1
 2037 0f5c C7F81433 		str	r3, [r7, #788]
 2038              	.L36:
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2039              		.loc 1 296 13
 2040 0f60 D7F81433 		ldr	r3, [r7, #788]
 2041 0f64 002B     		cmp	r3, #0
 2042 0f66 7FF4C9AA 		bne	.L81
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          No loop unrolling is used. */
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4U;
 2043              		.loc 1 471 16
 2044 0f6a D7F80033 		ldr	r3, [r7, #768]
 2045              		.loc 1 471 14
 2046 0f6e 03F00303 		and	r3, r3, #3
 2047 0f72 C7F81433 		str	r3, [r7, #788]
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0U)
 2048              		.loc 1 473 13
 2049 0f76 C7E0     		b	.L82
 2050              	.L87:
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 2051              		.loc 1 476 13
 2052 0f78 0023     		movs	r3, #0
 2053 0f7a C7F84433 		str	r3, [r7, #836]
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2U;
 2054              		.loc 1 479 11
 2055 0f7e 3B46     		mov	r3, r7
 2056 0f80 1B68     		ldr	r3, [r3]
 2057 0f82 9B08     		lsrs	r3, r3, #2
 2058 0f84 C7F81C33 		str	r3, [r7, #796]
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****            a second loop below computes MACs for the remaining 1 to 3 samples. */
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0U)
 2059              		.loc 1 483 15
ARM GAS  /tmp/ccwCFmxn.s 			page 91


 2060 0f88 6CE0     		b	.L83
 2061              	.L84:
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2062              		.loc 1 486 30
 2063 0f8a 07F17C03 		add	r3, r7, #124
 2064 0f8e 1B68     		ldr	r3, [r3]
 2065 0f90 991C     		adds	r1, r3, #2
 2066 0f92 07F17C02 		add	r2, r7, #124
 2067 0f96 1160     		str	r1, [r2]
 2068              		.loc 1 486 27
 2069 0f98 B3F90030 		ldrsh	r3, [r3]
 2070              		.loc 1 486 19
 2071 0f9c 1846     		mov	r0, r3
 2072              		.loc 1 486 38
 2073 0f9e 07F17803 		add	r3, r7, #120
 2074 0fa2 1B68     		ldr	r3, [r3]
 2075 0fa4 991E     		subs	r1, r3, #2
 2076 0fa6 07F17802 		add	r2, r7, #120
 2077 0faa 1160     		str	r1, [r2]
 2078              		.loc 1 486 35
 2079 0fac B3F90030 		ldrsh	r3, [r3]
 2080              		.loc 1 486 33
 2081 0fb0 03FB00F3 		mul	r3, r3, r0
 2082              		.loc 1 486 15
 2083 0fb4 D7F84423 		ldr	r2, [r7, #836]
 2084 0fb8 1344     		add	r3, r3, r2
 2085 0fba C7F84433 		str	r3, [r7, #836]
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2086              		.loc 1 487 30
 2087 0fbe 07F17C03 		add	r3, r7, #124
 2088 0fc2 1B68     		ldr	r3, [r3]
 2089 0fc4 991C     		adds	r1, r3, #2
 2090 0fc6 07F17C02 		add	r2, r7, #124
 2091 0fca 1160     		str	r1, [r2]
 2092              		.loc 1 487 27
 2093 0fcc B3F90030 		ldrsh	r3, [r3]
 2094              		.loc 1 487 19
 2095 0fd0 1846     		mov	r0, r3
 2096              		.loc 1 487 38
 2097 0fd2 07F17803 		add	r3, r7, #120
 2098 0fd6 1B68     		ldr	r3, [r3]
 2099 0fd8 991E     		subs	r1, r3, #2
 2100 0fda 07F17802 		add	r2, r7, #120
 2101 0fde 1160     		str	r1, [r2]
 2102              		.loc 1 487 35
 2103 0fe0 B3F90030 		ldrsh	r3, [r3]
 2104              		.loc 1 487 33
 2105 0fe4 03FB00F3 		mul	r3, r3, r0
 2106              		.loc 1 487 15
 2107 0fe8 D7F84423 		ldr	r2, [r7, #836]
 2108 0fec 1344     		add	r3, r3, r2
 2109 0fee C7F84433 		str	r3, [r7, #836]
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2110              		.loc 1 488 30
 2111 0ff2 07F17C03 		add	r3, r7, #124
ARM GAS  /tmp/ccwCFmxn.s 			page 92


 2112 0ff6 1B68     		ldr	r3, [r3]
 2113 0ff8 991C     		adds	r1, r3, #2
 2114 0ffa 07F17C02 		add	r2, r7, #124
 2115 0ffe 1160     		str	r1, [r2]
 2116              		.loc 1 488 27
 2117 1000 B3F90030 		ldrsh	r3, [r3]
 2118              		.loc 1 488 19
 2119 1004 1846     		mov	r0, r3
 2120              		.loc 1 488 38
 2121 1006 07F17803 		add	r3, r7, #120
 2122 100a 1B68     		ldr	r3, [r3]
 2123 100c 991E     		subs	r1, r3, #2
 2124 100e 07F17802 		add	r2, r7, #120
 2125 1012 1160     		str	r1, [r2]
 2126              		.loc 1 488 35
 2127 1014 B3F90030 		ldrsh	r3, [r3]
 2128              		.loc 1 488 33
 2129 1018 03FB00F3 		mul	r3, r3, r0
 2130              		.loc 1 488 15
 2131 101c D7F84423 		ldr	r2, [r7, #836]
 2132 1020 1344     		add	r3, r3, r2
 2133 1022 C7F84433 		str	r3, [r7, #836]
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2134              		.loc 1 489 30
 2135 1026 07F17C03 		add	r3, r7, #124
 2136 102a 1B68     		ldr	r3, [r3]
 2137 102c 991C     		adds	r1, r3, #2
 2138 102e 07F17C02 		add	r2, r7, #124
 2139 1032 1160     		str	r1, [r2]
 2140              		.loc 1 489 27
 2141 1034 B3F90030 		ldrsh	r3, [r3]
 2142              		.loc 1 489 19
 2143 1038 1846     		mov	r0, r3
 2144              		.loc 1 489 38
 2145 103a 07F17803 		add	r3, r7, #120
 2146 103e 1B68     		ldr	r3, [r3]
 2147 1040 991E     		subs	r1, r3, #2
 2148 1042 07F17802 		add	r2, r7, #120
 2149 1046 1160     		str	r1, [r2]
 2150              		.loc 1 489 35
 2151 1048 B3F90030 		ldrsh	r3, [r3]
 2152              		.loc 1 489 33
 2153 104c 03FB00F3 		mul	r3, r3, r0
 2154              		.loc 1 489 15
 2155 1050 D7F84423 		ldr	r2, [r7, #836]
 2156 1054 1344     		add	r3, r3, r2
 2157 1056 C7F84433 		str	r3, [r7, #836]
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement loop counter */
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 2158              		.loc 1 492 12
 2159 105a D7F81C33 		ldr	r3, [r7, #796]
 2160 105e 013B     		subs	r3, r3, #1
 2161 1060 C7F81C33 		str	r3, [r7, #796]
 2162              	.L83:
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 2163              		.loc 1 483 15
ARM GAS  /tmp/ccwCFmxn.s 			page 93


 2164 1064 D7F81C33 		ldr	r3, [r7, #796]
 2165 1068 002B     		cmp	r3, #0
 2166 106a 8ED1     		bne	.L84
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4U;
 2167              		.loc 1 497 11
 2168 106c 3B46     		mov	r3, r7
 2169 106e 1B68     		ldr	r3, [r3]
 2170 1070 03F00303 		and	r3, r3, #3
 2171 1074 C7F81C33 		str	r3, [r7, #796]
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0U)
 2172              		.loc 1 499 15
 2173 1078 1EE0     		b	.L85
 2174              	.L86:
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2175              		.loc 1 502 30
 2176 107a 07F17C03 		add	r3, r7, #124
 2177 107e 1B68     		ldr	r3, [r3]
 2178 1080 991C     		adds	r1, r3, #2
 2179 1082 07F17C02 		add	r2, r7, #124
 2180 1086 1160     		str	r1, [r2]
 2181              		.loc 1 502 27
 2182 1088 B3F90030 		ldrsh	r3, [r3]
 2183              		.loc 1 502 19
 2184 108c 1846     		mov	r0, r3
 2185              		.loc 1 502 38
 2186 108e 07F17803 		add	r3, r7, #120
 2187 1092 1B68     		ldr	r3, [r3]
 2188 1094 991E     		subs	r1, r3, #2
 2189 1096 07F17802 		add	r2, r7, #120
 2190 109a 1160     		str	r1, [r2]
 2191              		.loc 1 502 35
 2192 109c B3F90030 		ldrsh	r3, [r3]
 2193              		.loc 1 502 33
 2194 10a0 03FB00F3 		mul	r3, r3, r0
 2195              		.loc 1 502 15
 2196 10a4 D7F84423 		ldr	r2, [r7, #836]
 2197 10a8 1344     		add	r3, r3, r2
 2198 10aa C7F84433 		str	r3, [r7, #836]
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 2199              		.loc 1 505 12
 2200 10ae D7F81C33 		ldr	r3, [r7, #796]
 2201 10b2 013B     		subs	r3, r3, #1
 2202 10b4 C7F81C33 		str	r3, [r7, #796]
 2203              	.L85:
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 2204              		.loc 1 499 15
 2205 10b8 D7F81C33 		ldr	r3, [r7, #796]
 2206 10bc 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwCFmxn.s 			page 94


 2207 10be DCD1     		bne	.L86
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 2208              		.loc 1 509 32
 2209 10c0 D7F84433 		ldr	r3, [r7, #836]
 2210 10c4 D813     		asrs	r0, r3, #15
 2211              		.loc 1 509 14
 2212 10c6 07F18003 		add	r3, r7, #128
 2213 10ca 1B68     		ldr	r3, [r3]
 2214 10cc 991C     		adds	r1, r3, #2
 2215 10ce 07F18002 		add	r2, r7, #128
 2216 10d2 1160     		str	r1, [r2]
 2217              		.loc 1 509 19
 2218 10d4 02B2     		sxth	r2, r0
 2219              		.loc 1 509 17
 2220 10d6 1A80     		strh	r2, [r3]	@ movhi
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 2221              		.loc 1 512 14
 2222 10d8 D7F81833 		ldr	r3, [r7, #792]
 2223 10dc 0133     		adds	r3, r3, #1
 2224 10de C7F81833 		str	r3, [r7, #792]
 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pSrc1 + count;
 2225              		.loc 1 515 20
 2226 10e2 D7F81833 		ldr	r3, [r7, #792]
 2227 10e6 5B00     		lsls	r3, r3, #1
 2228 10e8 D7F83023 		ldr	r2, [r7, #816]
 2229 10ec 1A44     		add	r2, r2, r3
 2230              		.loc 1 515 12
 2231 10ee 07F17C03 		add	r3, r7, #124
 2232 10f2 1A60     		str	r2, [r3]
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 2233              		.loc 1 516 12
 2234 10f4 07F17803 		add	r3, r7, #120
 2235 10f8 D7F82C23 		ldr	r2, [r7, #812]
 2236 10fc 1A60     		str	r2, [r3]
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement loop counter */
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 2237              		.loc 1 519 15
 2238 10fe D7F81433 		ldr	r3, [r7, #788]
 2239 1102 013B     		subs	r3, r3, #1
 2240 1104 C7F81433 		str	r3, [r7, #788]
 2241              	.L82:
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2242              		.loc 1 473 13
 2243 1108 D7F81433 		ldr	r3, [r7, #788]
 2244 110c 002B     		cmp	r3, #0
 2245 110e 7FF433AF 		bne	.L87
 2246 1112 57E0     		b	.L88
 2247              	.L35:
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
ARM GAS  /tmp/ccwCFmxn.s 			page 95


 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4,
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2;
 2248              		.loc 1 526 14
 2249 1114 D7F80033 		ldr	r3, [r7, #768]
 2250 1118 C7F81433 		str	r3, [r7, #788]
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (blkCnt > 0U)
 2251              		.loc 1 528 13
 2252 111c 4EE0     		b	.L89
 2253              	.L92:
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 2254              		.loc 1 531 13
 2255 111e 0023     		movs	r3, #0
 2256 1120 C7F84433 		str	r3, [r7, #836]
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* srcBLen number of MACS should be performed */
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen;
 2257              		.loc 1 534 11
 2258 1124 3B46     		mov	r3, r7
 2259 1126 1B68     		ldr	r3, [r3]
 2260 1128 C7F81C33 		str	r3, [r7, #796]
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while (k > 0U)
 2261              		.loc 1 536 15
 2262 112c 1EE0     		b	.L90
 2263              	.L91:
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) *px++ * *py--);
 2264              		.loc 1 539 30
 2265 112e 07F17C03 		add	r3, r7, #124
 2266 1132 1B68     		ldr	r3, [r3]
 2267 1134 991C     		adds	r1, r3, #2
 2268 1136 07F17C02 		add	r2, r7, #124
 2269 113a 1160     		str	r1, [r2]
 2270              		.loc 1 539 27
 2271 113c B3F90030 		ldrsh	r3, [r3]
 2272              		.loc 1 539 19
 2273 1140 1846     		mov	r0, r3
 2274              		.loc 1 539 38
 2275 1142 07F17803 		add	r3, r7, #120
 2276 1146 1B68     		ldr	r3, [r3]
 2277 1148 991E     		subs	r1, r3, #2
 2278 114a 07F17802 		add	r2, r7, #120
 2279 114e 1160     		str	r1, [r2]
 2280              		.loc 1 539 35
 2281 1150 B3F90030 		ldrsh	r3, [r3]
 2282              		.loc 1 539 33
 2283 1154 03FB00F3 		mul	r3, r3, r0
 2284              		.loc 1 539 15
 2285 1158 D7F84423 		ldr	r2, [r7, #836]
ARM GAS  /tmp/ccwCFmxn.s 			page 96


 2286 115c 1344     		add	r3, r3, r2
 2287 115e C7F84433 		str	r3, [r7, #836]
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 2288              		.loc 1 542 12
 2289 1162 D7F81C33 		ldr	r3, [r7, #796]
 2290 1166 013B     		subs	r3, r3, #1
 2291 1168 C7F81C33 		str	r3, [r7, #796]
 2292              	.L90:
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 2293              		.loc 1 536 15
 2294 116c D7F81C33 		ldr	r3, [r7, #796]
 2295 1170 002B     		cmp	r3, #0
 2296 1172 DCD1     		bne	.L91
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 2297              		.loc 1 546 32
 2298 1174 D7F84433 		ldr	r3, [r7, #836]
 2299 1178 D813     		asrs	r0, r3, #15
 2300              		.loc 1 546 14
 2301 117a 07F18003 		add	r3, r7, #128
 2302 117e 1B68     		ldr	r3, [r3]
 2303 1180 991C     		adds	r1, r3, #2
 2304 1182 07F18002 		add	r2, r7, #128
 2305 1186 1160     		str	r1, [r2]
 2306              		.loc 1 546 19
 2307 1188 02B2     		sxth	r2, r0
 2308              		.loc 1 546 17
 2309 118a 1A80     		strh	r2, [r3]	@ movhi
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the MAC count */
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 2310              		.loc 1 549 14
 2311 118c D7F81833 		ldr	r3, [r7, #792]
 2312 1190 0133     		adds	r3, r3, #1
 2313 1192 C7F81833 		str	r3, [r7, #792]
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pSrc1 + count;
 2314              		.loc 1 552 20
 2315 1196 D7F81833 		ldr	r3, [r7, #792]
 2316 119a 5B00     		lsls	r3, r3, #1
 2317 119c D7F83023 		ldr	r2, [r7, #816]
 2318 11a0 1A44     		add	r2, r2, r3
 2319              		.loc 1 552 12
 2320 11a2 07F17C03 		add	r3, r7, #124
 2321 11a6 1A60     		str	r2, [r3]
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 2322              		.loc 1 553 12
 2323 11a8 07F17803 		add	r3, r7, #120
 2324 11ac D7F82C23 		ldr	r2, [r7, #812]
 2325 11b0 1A60     		str	r2, [r3]
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
ARM GAS  /tmp/ccwCFmxn.s 			page 97


 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 2326              		.loc 1 556 15
 2327 11b2 D7F81433 		ldr	r3, [r7, #788]
 2328 11b6 013B     		subs	r3, r3, #1
 2329 11b8 C7F81433 		str	r3, [r7, #788]
 2330              	.L89:
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2331              		.loc 1 528 13
 2332 11bc D7F81433 		ldr	r3, [r7, #788]
 2333 11c0 002B     		cmp	r3, #0
 2334 11c2 ACD1     		bne	.L92
 2335              	.L88:
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage3
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed */
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = srcBLen - 1U;
 2336              		.loc 1 574 11
 2337 11c4 3B46     		mov	r3, r7
 2338 11c6 1B68     		ldr	r3, [r3]
 2339 11c8 013B     		subs	r3, r3, #1
 2340 11ca C7F81833 		str	r3, [r7, #792]
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 2341              		.loc 1 577 30
 2342 11ce 07F10802 		add	r2, r7, #8
 2343 11d2 3B46     		mov	r3, r7
 2344 11d4 1268     		ldr	r2, [r2]
 2345 11d6 1B68     		ldr	r3, [r3]
 2346 11d8 D31A     		subs	r3, r2, r3
 2347 11da 0133     		adds	r3, r3, #1
 2348 11dc 5B00     		lsls	r3, r3, #1
 2349              		.loc 1 577 11
 2350 11de D7F84C23 		ldr	r2, [r7, #844]
 2351 11e2 1344     		add	r3, r3, r2
 2352 11e4 C7F83033 		str	r3, [r7, #816]
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
 2353              		.loc 1 578 8
 2354 11e8 07F17C03 		add	r3, r7, #124
 2355 11ec D7F83023 		ldr	r2, [r7, #816]
 2356 11f0 1A60     		str	r2, [r3]
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
ARM GAS  /tmp/ccwCFmxn.s 			page 98


 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 2357              		.loc 1 581 18
 2358 11f2 3B46     		mov	r3, r7
 2359 11f4 1A68     		ldr	r2, [r3]
 2360 11f6 6FF00043 		mvn	r3, #-2147483648
 2361 11fa 1344     		add	r3, r3, r2
 2362 11fc 5B00     		lsls	r3, r3, #1
 2363              		.loc 1 581 11
 2364 11fe D7F84823 		ldr	r2, [r7, #840]
 2365 1202 1344     		add	r3, r3, r2
 2366 1204 C7F82C33 		str	r3, [r7, #812]
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pIn2 = pSrc2 - 1U;
 2367              		.loc 1 582 10
 2368 1208 D7F82C33 		ldr	r3, [r7, #812]
 2369 120c 023B     		subs	r3, r3, #2
 2370 120e C7F84833 		str	r3, [r7, #840]
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pIn2;
 2371              		.loc 1 583 8
 2372 1212 07F17803 		add	r3, r7, #120
 2373 1216 D7F84823 		ldr	r2, [r7, #840]
 2374 121a 1A60     		str	r2, [r3]
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage3 process
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     j = count >> 2U;
 2375              		.loc 1 594 7
 2376 121c D7F81833 		ldr	r3, [r7, #792]
 2377 1220 9B08     		lsrs	r3, r3, #2
 2378 1222 C7F82033 		str	r3, [r7, #800]
 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while ((j > 0U) && (blockSize3 > 0))
 2379              		.loc 1 596 11
 2380 1226 2DE1     		b	.L93
 2381              	.L106:
 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 2382              		.loc 1 599 11
 2383 1228 0023     		movs	r3, #0
 2384 122a C7F84433 		str	r3, [r7, #836]
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2U;
 2385              		.loc 1 602 9
 2386 122e D7F81833 		ldr	r3, [r7, #792]
 2387 1232 9B08     		lsrs	r3, r3, #2
 2388 1234 C7F81C33 		str	r3, [r7, #796]
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
ARM GAS  /tmp/ccwCFmxn.s 			page 99


 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 2389              		.loc 1 606 13
 2390 1238 ACE0     		b	.L94
 2391              	.L101:
 2392 123a 07F1A403 		add	r3, r7, #164
 2393 123e 07F17C02 		add	r2, r7, #124
 2394 1242 1A60     		str	r2, [r3]
 2395              	.LBB218:
 2396              	.LBB219:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2397              		.loc 3 474 3
 2398 1244 07F1A403 		add	r3, r7, #164
 2399 1248 1B68     		ldr	r3, [r3]
 2400 124a 1B68     		ldr	r3, [r3]
 2401 124c 1B68     		ldr	r3, [r3]	@ unaligned
 2402 124e 1A46     		mov	r2, r3
 2403 1250 07F17403 		add	r3, r7, #116
 2404 1254 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2405              		.loc 3 475 9
 2406 1256 07F1A403 		add	r3, r7, #164
 2407 125a 1B68     		ldr	r3, [r3]
 2408 125c 1B68     		ldr	r3, [r3]
 2409 125e 1A1D     		adds	r2, r3, #4
 2410 1260 07F1A403 		add	r3, r7, #164
 2411 1264 1B68     		ldr	r3, [r3]
 2412 1266 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2413              		.loc 3 477 10
 2414 1268 07F17403 		add	r3, r7, #116
 2415 126c 1B68     		ldr	r3, [r3]
 2416              	.LBE219:
 2417              	.LBE218:
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 2418              		.loc 1 610 15
 2419 126e 1846     		mov	r0, r3
 2420 1270 07F1A803 		add	r3, r7, #168
 2421 1274 07F17802 		add	r2, r7, #120
 2422 1278 1A60     		str	r2, [r3]
 2423              	.LBB220:
 2424              	.LBB221:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 2425              		.loc 3 490 3
 2426 127a 07F1A803 		add	r3, r7, #168
 2427 127e 1B68     		ldr	r3, [r3]
 2428 1280 1B68     		ldr	r3, [r3]
 2429 1282 1B68     		ldr	r3, [r3]	@ unaligned
 2430 1284 1A46     		mov	r2, r3
 2431 1286 07F17003 		add	r3, r7, #112
 2432 128a 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2433              		.loc 3 491 9
 2434 128c 07F1A803 		add	r3, r7, #168
 2435 1290 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 100


 2436 1292 1B68     		ldr	r3, [r3]
 2437 1294 1A1F     		subs	r2, r3, #4
 2438 1296 07F1A803 		add	r3, r7, #168
 2439 129a 1B68     		ldr	r3, [r3]
 2440 129c 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2441              		.loc 3 493 10
 2442 129e 07F17003 		add	r3, r7, #112
 2443 12a2 1B68     		ldr	r3, [r3]
 2444              	.LBE221:
 2445              	.LBE220:
 2446              		.loc 1 610 15
 2447 12a4 1946     		mov	r1, r3
 2448 12a6 D7F84423 		ldr	r2, [r7, #836]
 2449 12aa 07F1B803 		add	r3, r7, #184
 2450 12ae 1860     		str	r0, [r3]
 2451 12b0 07F1B403 		add	r3, r7, #180
 2452 12b4 1960     		str	r1, [r3]
 2453 12b6 07F1B003 		add	r3, r7, #176
 2454 12ba 1A60     		str	r2, [r3]
 2455              	.LBB222:
 2456              	.LBB223:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2457              		.loc 2 2001 3
 2458 12bc 07F1B803 		add	r3, r7, #184
 2459 12c0 1B68     		ldr	r3, [r3]
 2460 12c2 07F1B402 		add	r2, r7, #180
 2461 12c6 1268     		ldr	r2, [r2]
 2462 12c8 07F1B001 		add	r1, r7, #176
 2463 12cc 0968     		ldr	r1, [r1]
 2464              		.syntax unified
 2465              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2466 12ce 23FB1212 		smladx r2, r3, r2, r1
 2467              	@ 0 "" 2
 2468              		.thumb
 2469              		.syntax unified
 2470 12d2 07F1AC03 		add	r3, r7, #172
 2471 12d6 1A60     		str	r2, [r3]
 2472              		.loc 2 2002 9
 2473 12d8 07F1AC03 		add	r3, r7, #172
 2474 12dc 1B68     		ldr	r3, [r3]
 2475              	.LBE223:
 2476              	.LBE222:
 2477              		.loc 1 610 13
 2478 12de C7F84433 		str	r3, [r7, #836]
 2479 12e2 07F1BC03 		add	r3, r7, #188
 2480 12e6 07F17C02 		add	r2, r7, #124
 2481 12ea 1A60     		str	r2, [r3]
 2482              	.LBB224:
 2483              	.LBB225:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2484              		.loc 3 474 3
 2485 12ec 07F1BC03 		add	r3, r7, #188
 2486 12f0 1B68     		ldr	r3, [r3]
 2487 12f2 1B68     		ldr	r3, [r3]
 2488 12f4 1B68     		ldr	r3, [r3]	@ unaligned
 2489 12f6 1A46     		mov	r2, r3
ARM GAS  /tmp/ccwCFmxn.s 			page 101


 2490 12f8 07F16C03 		add	r3, r7, #108
 2491 12fc 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2492              		.loc 3 475 9
 2493 12fe 07F1BC03 		add	r3, r7, #188
 2494 1302 1B68     		ldr	r3, [r3]
 2495 1304 1B68     		ldr	r3, [r3]
 2496 1306 1A1D     		adds	r2, r3, #4
 2497 1308 07F1BC03 		add	r3, r7, #188
 2498 130c 1B68     		ldr	r3, [r3]
 2499 130e 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2500              		.loc 3 477 10
 2501 1310 07F16C03 		add	r3, r7, #108
 2502 1314 1B68     		ldr	r3, [r3]
 2503              	.LBE225:
 2504              	.LBE224:
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 2505              		.loc 1 613 15
 2506 1316 1846     		mov	r0, r3
 2507 1318 07F1C003 		add	r3, r7, #192
 2508 131c 07F17802 		add	r2, r7, #120
 2509 1320 1A60     		str	r2, [r3]
 2510              	.LBB226:
 2511              	.LBB227:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 2512              		.loc 3 490 3
 2513 1322 07F1C003 		add	r3, r7, #192
 2514 1326 1B68     		ldr	r3, [r3]
 2515 1328 1B68     		ldr	r3, [r3]
 2516 132a 1B68     		ldr	r3, [r3]	@ unaligned
 2517 132c 1A46     		mov	r2, r3
 2518 132e 07F16803 		add	r3, r7, #104
 2519 1332 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2520              		.loc 3 491 9
 2521 1334 07F1C003 		add	r3, r7, #192
 2522 1338 1B68     		ldr	r3, [r3]
 2523 133a 1B68     		ldr	r3, [r3]
 2524 133c 1A1F     		subs	r2, r3, #4
 2525 133e 07F1C003 		add	r3, r7, #192
 2526 1342 1B68     		ldr	r3, [r3]
 2527 1344 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2528              		.loc 3 493 10
 2529 1346 07F16803 		add	r3, r7, #104
 2530 134a 1B68     		ldr	r3, [r3]
 2531              	.LBE227:
 2532              	.LBE226:
 2533              		.loc 1 613 15
 2534 134c 1946     		mov	r1, r3
 2535 134e D7F84423 		ldr	r2, [r7, #836]
 2536 1352 07F1D003 		add	r3, r7, #208
 2537 1356 1860     		str	r0, [r3]
 2538 1358 07F1CC03 		add	r3, r7, #204
ARM GAS  /tmp/ccwCFmxn.s 			page 102


 2539 135c 1960     		str	r1, [r3]
 2540 135e 07F1C803 		add	r3, r7, #200
 2541 1362 1A60     		str	r2, [r3]
 2542              	.LBB228:
 2543              	.LBB229:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2544              		.loc 2 2001 3
 2545 1364 07F1D003 		add	r3, r7, #208
 2546 1368 1B68     		ldr	r3, [r3]
 2547 136a 07F1CC02 		add	r2, r7, #204
 2548 136e 1268     		ldr	r2, [r2]
 2549 1370 07F1C801 		add	r1, r7, #200
 2550 1374 0968     		ldr	r1, [r1]
 2551              		.syntax unified
 2552              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2553 1376 23FB1212 		smladx r2, r3, r2, r1
 2554              	@ 0 "" 2
 2555              		.thumb
 2556              		.syntax unified
 2557 137a 07F1C403 		add	r3, r7, #196
 2558 137e 1A60     		str	r2, [r3]
 2559              		.loc 2 2002 9
 2560 1380 07F1C403 		add	r3, r7, #196
 2561 1384 1B68     		ldr	r3, [r3]
 2562              	.LBE229:
 2563              	.LBE228:
 2564              		.loc 1 613 13
 2565 1386 C7F84433 		str	r3, [r7, #836]
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement loop counter */
 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2566              		.loc 1 616 10
 2567 138a D7F81C33 		ldr	r3, [r7, #796]
 2568 138e 013B     		subs	r3, r3, #1
 2569 1390 C7F81C33 		str	r3, [r7, #796]
 2570              	.L94:
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2571              		.loc 1 606 13
 2572 1394 D7F81C33 		ldr	r3, [r7, #796]
 2573 1398 002B     		cmp	r3, #0
 2574 139a 7FF44EAF 		bne	.L101
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          So, py is incremented by 1 */
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1U;
 2575              		.loc 1 621 15
 2576 139e 07F17803 		add	r3, r7, #120
 2577 13a2 1B68     		ldr	r3, [r3]
 2578 13a4 9A1C     		adds	r2, r3, #2
 2579              		.loc 1 621 10
 2580 13a6 07F17803 		add	r3, r7, #120
 2581 13aa 1A60     		str	r2, [r3]
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****          No loop unrolling is used. */
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4U;
ARM GAS  /tmp/ccwCFmxn.s 			page 103


 2582              		.loc 1 625 9
 2583 13ac D7F81833 		ldr	r3, [r7, #792]
 2584 13b0 03F00303 		and	r3, r3, #3
 2585 13b4 C7F81C33 		str	r3, [r7, #796]
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 2586              		.loc 1 627 13
 2587 13b8 36E0     		b	.L102
 2588              	.L104:
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 2589              		.loc 1 630 26
 2590 13ba 07F17C03 		add	r3, r7, #124
 2591 13be 1B68     		ldr	r3, [r3]
 2592 13c0 991C     		adds	r1, r3, #2
 2593 13c2 07F17C02 		add	r2, r7, #124
 2594 13c6 1160     		str	r1, [r2]
 2595              		.loc 1 630 23
 2596 13c8 B3F90030 		ldrsh	r3, [r3]
 2597              		.loc 1 630 15
 2598 13cc 1846     		mov	r0, r3
 2599              		.loc 1 630 33
 2600 13ce 07F17803 		add	r3, r7, #120
 2601 13d2 1B68     		ldr	r3, [r3]
 2602 13d4 991E     		subs	r1, r3, #2
 2603 13d6 07F17802 		add	r2, r7, #120
 2604 13da 1160     		str	r1, [r2]
 2605              		.loc 1 630 30
 2606 13dc B3F90030 		ldrsh	r3, [r3]
 2607              		.loc 1 630 15
 2608 13e0 1946     		mov	r1, r3
 2609 13e2 D7F84423 		ldr	r2, [r7, #836]
 2610 13e6 07F1A003 		add	r3, r7, #160
 2611 13ea 1860     		str	r0, [r3]
 2612 13ec 07F19C03 		add	r3, r7, #156
 2613 13f0 1960     		str	r1, [r3]
 2614 13f2 07F19803 		add	r3, r7, #152
 2615 13f6 1A60     		str	r2, [r3]
 2616              	.LBB230:
 2617              	.LBB231:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2618              		.loc 2 1993 3
 2619 13f8 07F1A003 		add	r3, r7, #160
 2620 13fc 1B68     		ldr	r3, [r3]
 2621 13fe 07F19C02 		add	r2, r7, #156
 2622 1402 1268     		ldr	r2, [r2]
 2623 1404 07F19801 		add	r1, r7, #152
 2624 1408 0968     		ldr	r1, [r1]
 2625              		.syntax unified
 2626              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2627 140a 23FB0212 		smlad r2, r3, r2, r1
 2628              	@ 0 "" 2
 2629              		.thumb
 2630              		.syntax unified
 2631 140e 07F19403 		add	r3, r7, #148
 2632 1412 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccwCFmxn.s 			page 104


1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2633              		.loc 2 1994 9
 2634 1414 07F19403 		add	r3, r7, #148
 2635 1418 1B68     		ldr	r3, [r3]
 2636              	.LBE231:
 2637              	.LBE230:
 2638              		.loc 1 630 13
 2639 141a C7F84433 		str	r3, [r7, #836]
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2640              		.loc 1 633 10
 2641 141e D7F81C33 		ldr	r3, [r7, #796]
 2642 1422 013B     		subs	r3, r3, #1
 2643 1424 C7F81C33 		str	r3, [r7, #796]
 2644              	.L102:
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2645              		.loc 1 627 13
 2646 1428 D7F81C33 		ldr	r3, [r7, #796]
 2647 142c 002B     		cmp	r3, #0
 2648 142e C4D1     		bne	.L104
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2649              		.loc 1 637 30
 2650 1430 D7F84433 		ldr	r3, [r7, #836]
 2651 1434 D813     		asrs	r0, r3, #15
 2652              		.loc 1 637 12
 2653 1436 07F18003 		add	r3, r7, #128
 2654 143a 1B68     		ldr	r3, [r3]
 2655 143c 991C     		adds	r1, r3, #2
 2656 143e 07F18002 		add	r2, r7, #128
 2657 1442 1160     		str	r1, [r2]
 2658              		.loc 1 637 17
 2659 1444 02B2     		sxth	r2, r0
 2660              		.loc 1 637 15
 2661 1446 1A80     		strh	r2, [r3]	@ movhi
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2662              		.loc 1 640 10
 2663 1448 D7F83033 		ldr	r3, [r7, #816]
 2664 144c 0233     		adds	r3, r3, #2
 2665 144e C7F83033 		str	r3, [r7, #816]
 2666 1452 07F17C03 		add	r3, r7, #124
 2667 1456 D7F83023 		ldr	r2, [r7, #816]
 2668 145a 1A60     		str	r2, [r3]
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pIn2;
 2669              		.loc 1 641 10
 2670 145c 07F17803 		add	r3, r7, #120
 2671 1460 D7F84823 		ldr	r2, [r7, #840]
 2672 1464 1A60     		str	r2, [r3]
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2673              		.loc 1 644 12
ARM GAS  /tmp/ccwCFmxn.s 			page 105


 2674 1466 D7F81833 		ldr	r3, [r7, #792]
 2675 146a 013B     		subs	r3, r3, #1
 2676 146c C7F81833 		str	r3, [r7, #792]
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2677              		.loc 1 647 17
 2678 1470 D7F80C33 		ldr	r3, [r7, #780]
 2679 1474 013B     		subs	r3, r3, #1
 2680 1476 C7F80C33 		str	r3, [r7, #780]
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j--;
 2681              		.loc 1 649 8
 2682 147a D7F82033 		ldr	r3, [r7, #800]
 2683 147e 013B     		subs	r3, r3, #1
 2684 1480 C7F82033 		str	r3, [r7, #800]
 2685              	.L93:
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2686              		.loc 1 596 11
 2687 1484 D7F82033 		ldr	r3, [r7, #800]
 2688 1488 002B     		cmp	r3, #0
 2689 148a 04D0     		beq	.L105
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2690              		.loc 1 596 21 discriminator 1
 2691 148c D7F80C33 		ldr	r3, [r7, #780]
 2692 1490 002B     		cmp	r3, #0
 2693 1492 3FF7C9AE 		bgt	.L106
 2694              	.L105:
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* SIMD is not used for the next MAC operations,
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * so pointer py is updated to read only one sample at a time */
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py + 1U;
 2695              		.loc 1 655 13
 2696 1496 07F17803 		add	r3, r7, #120
 2697 149a 1B68     		ldr	r3, [r3]
 2698 149c 9A1C     		adds	r2, r3, #2
 2699              		.loc 1 655 8
 2700 149e 07F17803 		add	r3, r7, #120
 2701 14a2 1A60     		str	r2, [r3]
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while (blockSize3 > 0)
 2702              		.loc 1 657 11
 2703 14a4 67E0     		b	.L107
 2704              	.L111:
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 660:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 2705              		.loc 1 660 11
 2706 14a6 0023     		movs	r3, #0
 2707 14a8 C7F84433 		str	r3, [r7, #836]
 661:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 662:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 2708              		.loc 1 663 9
 2709 14ac D7F81833 		ldr	r3, [r7, #792]
ARM GAS  /tmp/ccwCFmxn.s 			page 106


 2710 14b0 C7F81C33 		str	r3, [r7, #796]
 664:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while (k > 0U)
 2711              		.loc 1 665 13
 2712 14b4 36E0     		b	.L108
 2713              	.L110:
 666:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 667:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 668:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 669:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 2714              		.loc 1 669 26
 2715 14b6 07F17C03 		add	r3, r7, #124
 2716 14ba 1B68     		ldr	r3, [r3]
 2717 14bc 991C     		adds	r1, r3, #2
 2718 14be 07F17C02 		add	r2, r7, #124
 2719 14c2 1160     		str	r1, [r2]
 2720              		.loc 1 669 23
 2721 14c4 B3F90030 		ldrsh	r3, [r3]
 2722              		.loc 1 669 15
 2723 14c8 1846     		mov	r0, r3
 2724              		.loc 1 669 33
 2725 14ca 07F17803 		add	r3, r7, #120
 2726 14ce 1B68     		ldr	r3, [r3]
 2727 14d0 991E     		subs	r1, r3, #2
 2728 14d2 07F17802 		add	r2, r7, #120
 2729 14d6 1160     		str	r1, [r2]
 2730              		.loc 1 669 30
 2731 14d8 B3F90030 		ldrsh	r3, [r3]
 2732              		.loc 1 669 15
 2733 14dc 1946     		mov	r1, r3
 2734 14de D7F84423 		ldr	r2, [r7, #836]
 2735 14e2 07F19003 		add	r3, r7, #144
 2736 14e6 1860     		str	r0, [r3]
 2737 14e8 07F18C03 		add	r3, r7, #140
 2738 14ec 1960     		str	r1, [r3]
 2739 14ee 07F18803 		add	r3, r7, #136
 2740 14f2 1A60     		str	r2, [r3]
 2741              	.LBB232:
 2742              	.LBB233:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2743              		.loc 2 1993 3
 2744 14f4 07F19003 		add	r3, r7, #144
 2745 14f8 1B68     		ldr	r3, [r3]
 2746 14fa 07F18C02 		add	r2, r7, #140
 2747 14fe 1268     		ldr	r2, [r2]
 2748 1500 07F18801 		add	r1, r7, #136
 2749 1504 0968     		ldr	r1, [r1]
 2750              		.syntax unified
 2751              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2752 1506 23FB0212 		smlad r2, r3, r2, r1
 2753              	@ 0 "" 2
 2754              		.thumb
 2755              		.syntax unified
 2756 150a 07F18403 		add	r3, r7, #132
 2757 150e 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2758              		.loc 2 1994 9
ARM GAS  /tmp/ccwCFmxn.s 			page 107


 2759 1510 07F18403 		add	r3, r7, #132
 2760 1514 1B68     		ldr	r3, [r3]
 2761              	.LBE233:
 2762              	.LBE232:
 2763              		.loc 1 669 13
 2764 1516 C7F84433 		str	r3, [r7, #836]
 670:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 672:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2765              		.loc 1 672 10
 2766 151a D7F81C33 		ldr	r3, [r7, #796]
 2767 151e 013B     		subs	r3, r3, #1
 2768 1520 C7F81C33 		str	r3, [r7, #796]
 2769              	.L108:
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2770              		.loc 1 665 13
 2771 1524 D7F81C33 		ldr	r3, [r7, #796]
 2772 1528 002B     		cmp	r3, #0
 2773 152a C4D1     		bne	.L110
 673:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 674:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 675:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 676:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2774              		.loc 1 676 30
 2775 152c D7F84433 		ldr	r3, [r7, #836]
 2776 1530 D813     		asrs	r0, r3, #15
 2777              		.loc 1 676 12
 2778 1532 07F18003 		add	r3, r7, #128
 2779 1536 1B68     		ldr	r3, [r3]
 2780 1538 991C     		adds	r1, r3, #2
 2781 153a 07F18002 		add	r2, r7, #128
 2782 153e 1160     		str	r1, [r2]
 2783              		.loc 1 676 17
 2784 1540 02B2     		sxth	r2, r0
 2785              		.loc 1 676 15
 2786 1542 1A80     		strh	r2, [r3]	@ movhi
 677:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 678:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 679:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2787              		.loc 1 679 10
 2788 1544 D7F83033 		ldr	r3, [r7, #816]
 2789 1548 0233     		adds	r3, r3, #2
 2790 154a C7F83033 		str	r3, [r7, #816]
 2791 154e 07F17C03 		add	r3, r7, #124
 2792 1552 D7F83023 		ldr	r2, [r7, #816]
 2793 1556 1A60     		str	r2, [r3]
 680:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pSrc2;
 2794              		.loc 1 680 10
 2795 1558 07F17803 		add	r3, r7, #120
 2796 155c D7F82C23 		ldr	r2, [r7, #812]
 2797 1560 1A60     		str	r2, [r3]
 681:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 682:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 683:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2798              		.loc 1 683 12
 2799 1562 D7F81833 		ldr	r3, [r7, #792]
 2800 1566 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccwCFmxn.s 			page 108


 2801 1568 C7F81833 		str	r3, [r7, #792]
 684:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 685:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 686:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2802              		.loc 1 686 17
 2803 156c D7F80C33 		ldr	r3, [r7, #780]
 2804 1570 013B     		subs	r3, r3, #1
 2805 1572 C7F80C33 		str	r3, [r7, #780]
 2806              	.L107:
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2807              		.loc 1 657 11
 2808 1576 D7F80C33 		ldr	r3, [r7, #780]
 2809 157a 002B     		cmp	r3, #0
 2810 157c 93DC     		bgt	.L111
 687:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 688:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 689:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 690:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_SUCCESS;
 2811              		.loc 1 690 12
 2812 157e 0023     		movs	r3, #0
 2813 1580 87F80B33 		strb	r3, [r7, #779]
 2814              	.L3:
 691:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
 692:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 693:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Return to application */
 694:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c ****   return (status);
 2815              		.loc 1 694 10
 2816 1584 97F90B33 		ldrsb	r3, [r7, #779]
 695:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 696:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_fast_q15.c **** }
 2817              		.loc 1 696 1
 2818 1588 1846     		mov	r0, r3
 2819 158a 07F55477 		add	r7, r7, #848
 2820              	.LCFI3:
 2821              		.cfi_def_cfa_offset 8
 2822 158e BD46     		mov	sp, r7
 2823              	.LCFI4:
 2824              		.cfi_def_cfa_register 13
 2825              		@ sp needed
 2826 1590 90BC     		pop	{r4, r7}
 2827              	.LCFI5:
 2828              		.cfi_restore 7
 2829              		.cfi_restore 4
 2830              		.cfi_def_cfa_offset 0
 2831 1592 7047     		bx	lr
 2832              		.cfi_endproc
 2833              	.LFE145:
 2835              		.text
 2836              	.Letext0:
 2837              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2838              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2839              		.file 6 "/usr/include/newlib/sys/_types.h"
 2840              		.file 7 "/usr/include/newlib/sys/reent.h"
 2841              		.file 8 "/usr/include/newlib/sys/lock.h"
 2842              		.file 9 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccwCFmxn.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_partial_fast_q15.c
     /tmp/ccwCFmxn.s:17     .text.arm_conv_partial_fast_q15:0000000000000000 $t
     /tmp/ccwCFmxn.s:25     .text.arm_conv_partial_fast_q15:0000000000000000 arm_conv_partial_fast_q15

NO UNDEFINED SYMBOLS
