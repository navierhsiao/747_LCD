ARM GAS  /tmp/cc1R3AjU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cmplx_mult_cmplx_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cmplx_mult_cmplx_q31,"ax",%progbits
  17              		.align	1
  18              		.global	arm_cmplx_mult_cmplx_q31
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_cmplx_mult_cmplx_q31:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c"
   1:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Title:        arm_cmplx_mult_cmplx_q31.c
   4:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Description:  Q31 complex-by-complex multiplication
   5:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
ARM GAS  /tmp/cc1R3AjU.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @ingroup groupCmplxMath
  33:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @addtogroup CmplxByCmplxMult
  37:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @brief         Q31 complex-by-complex multiplication.
  42:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @param[in]     pSrcA       points to first input vector
  43:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @param[in]     pSrcB       points to second input vector
  44:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @param[out]    pDst        points to output vector
  45:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @param[in]     numSamples  number of samples in each vector
  46:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  48:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****                    The function implements 1.31 by 1.31 multiplications and finally output is conve
  50:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****                    Input down scaling is not required.
  51:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  52:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  53:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** void arm_cmplx_mult_cmplx_q31(
  54:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   const q31_t * pSrcA,
  55:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   const q31_t * pSrcB,
  56:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****         q31_t * pDst,
  57:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****         uint32_t numSamples)
  58:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** {
  28              		.loc 1 58 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 F0B4     		push	{r4, r5, r6, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 7, -4
  40 0002 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 F860     		str	r0, [r7, #12]
  47 0008 B960     		str	r1, [r7, #8]
  48 000a 7A60     		str	r2, [r7, #4]
  49 000c 3B60     		str	r3, [r7]
  59:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
  60:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****         q31_t a, b, c, d;                              /* Temporary variables */
  61:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  62:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  63:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  64:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  65:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples >> 2U;
  66:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
ARM GAS  /tmp/cc1R3AjU.s 			page 3


  67:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0U)
  68:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
  69:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i    ] = A[2 * i] * B[2 * i    ] - A[2 * i + 1] * B[2 * i + 1]. */
  70:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i    ]. */
  71:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  72:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  73:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  74:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  75:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  76:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store result in 3.29 format in destination buffer. */
  77:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * c) >> 33) - (((q63_t) b * d) >> 33) );
  78:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * d) >> 33) + (((q63_t) b * c) >> 33) );
  79:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  80:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  81:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  82:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  84:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * c) >> 33) - (((q63_t) b * d) >> 33) );
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * d) >> 33) + (((q63_t) b * c) >> 33) );
  86:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  87:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  88:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  89:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  90:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  91:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * c) >> 33) - (((q63_t) b * d) >> 33) );
  92:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * d) >> 33) + (((q63_t) b * c) >> 33) );
  93:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  94:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  95:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  96:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  97:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  98:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * c) >> 33) - (((q63_t) b * d) >> 33) );
  99:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * d) >> 33) + (((q63_t) b * c) >> 33) );
 100:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 101:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement loop counter */
 102:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 103:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 104:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 105:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 106:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples % 0x4U;
 107:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 108:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #else
 109:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 110:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Initialize blkCnt with number of samples */
 111:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples;
  50              		.loc 1 111 10
  51 000e 3B68     		ldr	r3, [r7]
  52 0010 7B62     		str	r3, [r7, #36]
 112:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 113:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 114:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while (blkCnt > 0U)
  53              		.loc 1 115 9
  54 0012 82E0     		b	.L2
  55              	.L3:
 116:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 117:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i    ] = A[2 * i] * B[2 * i    ] - A[2 * i + 1] * B[2 * i + 1]. */
ARM GAS  /tmp/cc1R3AjU.s 			page 4


 118:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i    ]. */
 119:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 120:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  56              		.loc 1 120 15
  57 0014 FB68     		ldr	r3, [r7, #12]
  58 0016 1A1D     		adds	r2, r3, #4
  59 0018 FA60     		str	r2, [r7, #12]
  60              		.loc 1 120 7
  61 001a 1B68     		ldr	r3, [r3]
  62 001c 3B62     		str	r3, [r7, #32]
 121:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  63              		.loc 1 121 15
  64 001e FB68     		ldr	r3, [r7, #12]
  65 0020 1A1D     		adds	r2, r3, #4
  66 0022 FA60     		str	r2, [r7, #12]
  67              		.loc 1 121 7
  68 0024 1B68     		ldr	r3, [r3]
  69 0026 FB61     		str	r3, [r7, #28]
 122:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  70              		.loc 1 122 15
  71 0028 BB68     		ldr	r3, [r7, #8]
  72 002a 1A1D     		adds	r2, r3, #4
  73 002c BA60     		str	r2, [r7, #8]
  74              		.loc 1 122 7
  75 002e 1B68     		ldr	r3, [r3]
  76 0030 BB61     		str	r3, [r7, #24]
 123:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  77              		.loc 1 123 15
  78 0032 BB68     		ldr	r3, [r7, #8]
  79 0034 1A1D     		adds	r2, r3, #4
  80 0036 BA60     		str	r2, [r7, #8]
  81              		.loc 1 123 7
  82 0038 1B68     		ldr	r3, [r3]
  83 003a 7B61     		str	r3, [r7, #20]
 124:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 125:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store result in 3.29 format in destination buffer. */
 126:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * c) >> 33) - (((q63_t) b * d) >> 33) );
  84              		.loc 1 126 27
  85 003c 3B6A     		ldr	r3, [r7, #32]
  86 003e 1846     		mov	r0, r3
  87 0040 4FEAE071 		asr	r1, r0, #31
  88              		.loc 1 126 37
  89 0044 BB69     		ldr	r3, [r7, #24]
  90 0046 1A46     		mov	r2, r3
  91 0048 4FEAE273 		asr	r3, r2, #31
  92 004c 02FB01F5 		mul	r5, r2, r1
  93 0050 00FB03F4 		mul	r4, r0, r3
  94 0054 2C44     		add	r4, r4, r5
  95 0056 A0FB0223 		umull	r2, r3, r0, r2
  96 005a E118     		adds	r1, r4, r3
  97 005c 0B46     		mov	r3, r1
  98              		.loc 1 126 42
  99 005e 4FF00000 		mov	r0, #0
 100 0062 4FF00001 		mov	r1, #0
 101 0066 5810     		asrs	r0, r3, #1
 102 0068 D917     		asrs	r1, r3, #31
 103              		.loc 1 126 49
ARM GAS  /tmp/cc1R3AjU.s 			page 5


 104 006a 0646     		mov	r6, r0
 105              		.loc 1 126 53
 106 006c FB69     		ldr	r3, [r7, #28]
 107 006e 1846     		mov	r0, r3
 108 0070 4FEAE071 		asr	r1, r0, #31
 109              		.loc 1 126 63
 110 0074 7B69     		ldr	r3, [r7, #20]
 111 0076 1A46     		mov	r2, r3
 112 0078 4FEAE273 		asr	r3, r2, #31
 113 007c 02FB01F5 		mul	r5, r2, r1
 114 0080 00FB03F4 		mul	r4, r0, r3
 115 0084 2C44     		add	r4, r4, r5
 116 0086 A0FB0223 		umull	r2, r3, r0, r2
 117 008a E118     		adds	r1, r4, r3
 118 008c 0B46     		mov	r3, r1
 119              		.loc 1 126 68
 120 008e 4FF00000 		mov	r0, #0
 121 0092 4FF00001 		mov	r1, #0
 122 0096 5810     		asrs	r0, r3, #1
 123 0098 D917     		asrs	r1, r3, #31
 124              		.loc 1 126 49
 125 009a 0346     		mov	r3, r0
 126 009c F11A     		subs	r1, r6, r3
 127              		.loc 1 126 10
 128 009e 7B68     		ldr	r3, [r7, #4]
 129 00a0 1A1D     		adds	r2, r3, #4
 130 00a2 7A60     		str	r2, [r7, #4]
 131              		.loc 1 126 15
 132 00a4 0A46     		mov	r2, r1
 133              		.loc 1 126 13
 134 00a6 1A60     		str	r2, [r3]
 127:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = (q31_t) ( (((q63_t) a * d) >> 33) + (((q63_t) b * c) >> 33) );
 135              		.loc 1 127 27
 136 00a8 3B6A     		ldr	r3, [r7, #32]
 137 00aa 1846     		mov	r0, r3
 138 00ac 4FEAE071 		asr	r1, r0, #31
 139              		.loc 1 127 37
 140 00b0 7B69     		ldr	r3, [r7, #20]
 141 00b2 1A46     		mov	r2, r3
 142 00b4 4FEAE273 		asr	r3, r2, #31
 143 00b8 02FB01F5 		mul	r5, r2, r1
 144 00bc 00FB03F4 		mul	r4, r0, r3
 145 00c0 2C44     		add	r4, r4, r5
 146 00c2 A0FB0223 		umull	r2, r3, r0, r2
 147 00c6 E118     		adds	r1, r4, r3
 148 00c8 0B46     		mov	r3, r1
 149              		.loc 1 127 42
 150 00ca 4FF00000 		mov	r0, #0
 151 00ce 4FF00001 		mov	r1, #0
 152 00d2 5810     		asrs	r0, r3, #1
 153 00d4 D917     		asrs	r1, r3, #31
 154              		.loc 1 127 49
 155 00d6 0646     		mov	r6, r0
 156              		.loc 1 127 53
 157 00d8 FB69     		ldr	r3, [r7, #28]
 158 00da 1846     		mov	r0, r3
 159 00dc 4FEAE071 		asr	r1, r0, #31
ARM GAS  /tmp/cc1R3AjU.s 			page 6


 160              		.loc 1 127 63
 161 00e0 BB69     		ldr	r3, [r7, #24]
 162 00e2 1A46     		mov	r2, r3
 163 00e4 4FEAE273 		asr	r3, r2, #31
 164 00e8 02FB01F5 		mul	r5, r2, r1
 165 00ec 00FB03F4 		mul	r4, r0, r3
 166 00f0 2C44     		add	r4, r4, r5
 167 00f2 A0FB0223 		umull	r2, r3, r0, r2
 168 00f6 E118     		adds	r1, r4, r3
 169 00f8 0B46     		mov	r3, r1
 170              		.loc 1 127 68
 171 00fa 4FF00000 		mov	r0, #0
 172 00fe 4FF00001 		mov	r1, #0
 173 0102 5810     		asrs	r0, r3, #1
 174 0104 D917     		asrs	r1, r3, #31
 175              		.loc 1 127 49
 176 0106 0346     		mov	r3, r0
 177 0108 F118     		adds	r1, r6, r3
 178              		.loc 1 127 10
 179 010a 7B68     		ldr	r3, [r7, #4]
 180 010c 1A1D     		adds	r2, r3, #4
 181 010e 7A60     		str	r2, [r7, #4]
 182              		.loc 1 127 15
 183 0110 0A46     		mov	r2, r1
 184              		.loc 1 127 13
 185 0112 1A60     		str	r2, [r3]
 128:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 129:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement loop counter */
 130:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 186              		.loc 1 130 11
 187 0114 7B6A     		ldr	r3, [r7, #36]
 188 0116 013B     		subs	r3, r3, #1
 189 0118 7B62     		str	r3, [r7, #36]
 190              	.L2:
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 191              		.loc 1 115 9
 192 011a 7B6A     		ldr	r3, [r7, #36]
 193 011c 002B     		cmp	r3, #0
 194 011e 7FF479AF 		bne	.L3
 131:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 132:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 133:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** }
 195              		.loc 1 133 1
 196 0122 00BF     		nop
 197 0124 00BF     		nop
 198 0126 2837     		adds	r7, r7, #40
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 16
 201 0128 BD46     		mov	sp, r7
 202              	.LCFI4:
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 012a F0BC     		pop	{r4, r5, r6, r7}
 206              	.LCFI5:
 207              		.cfi_restore 7
 208              		.cfi_restore 6
 209              		.cfi_restore 5
ARM GAS  /tmp/cc1R3AjU.s 			page 7


 210              		.cfi_restore 4
 211              		.cfi_def_cfa_offset 0
 212 012c 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE145:
 216              		.text
 217              	.Letext0:
 218              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 219              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 220              		.file 4 "/usr/include/newlib/sys/_types.h"
 221              		.file 5 "/usr/include/newlib/sys/reent.h"
 222              		.file 6 "/usr/include/newlib/sys/lock.h"
 223              		.file 7 "/usr/include/newlib/math.h"
 224              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cc1R3AjU.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cmplx_mult_cmplx_q31.c
     /tmp/cc1R3AjU.s:17     .text.arm_cmplx_mult_cmplx_q31:0000000000000000 $t
     /tmp/cc1R3AjU.s:25     .text.arm_cmplx_mult_cmplx_q31:0000000000000000 arm_cmplx_mult_cmplx_q31

NO UNDEFINED SYMBOLS
