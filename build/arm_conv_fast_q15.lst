ARM GAS  /tmp/ccIUkXZB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_fast_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_fast_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_conv_fast_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_conv_fast_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Title:        arm_conv_fast_q15.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Description:  Fast Q15 Convolution
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** /**
ARM GAS  /tmp/ccIUkXZB.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @addtogroup Conv
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @brief         Convolution of Q15 sequences (fast version).
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @param[in]     pSrcA      points to the first input sequence
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @param[in]     srcALen    length of the first input sequence
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @param[in]     pSrcB      points to the second input sequence
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @param[in]     srcBLen    length of the second input sequence
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @param[out]    pDst       points to the location where the output result is written.  Length srcA
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @return        none
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @par           Scaling and Overflow Behavior
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    This fast version uses a 32-bit accumulator with 2.30 format.
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    The accumulator maintains full precision of the intermediate multiplication resu
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    but provides only a single guard bit. There is no saturation on intermediate add
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    Thus, if the accumulator overflows it wraps around and distorts the result.
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    The input signals should be scaled down to avoid intermediate overflows.
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    Scale down the inputs by log2(min(srcALen, srcBLen)) (log2 is read as log to the
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    as maximum of min(srcALen, srcBLen) number of additions are carried internally.
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    The 2.30 accumulator is right shifted by 15 bits and then saturated to 1.15 form
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   @remark
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****                    Refer to \ref arm_conv_q15() for a slower implementation of this function which 
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****  */
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** void arm_conv_fast_q15(
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t * pSrcA,
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         uint32_t srcALen,
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t * pSrcB,
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         uint32_t srcBLen,
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         q15_t * pDst)
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** {
  28              		.loc 1 69 1
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 840
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 90B4     		push	{r4, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 7, -4
  38 0002 ADF5527D 		sub	sp, sp, #840
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 848
  41 0006 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0008 07F10C04 		add	r4, r7, #12
  45 000c 2060     		str	r0, [r4]
  46 000e 07F10800 		add	r0, r7, #8
ARM GAS  /tmp/ccIUkXZB.s 			page 3


  47 0012 0160     		str	r1, [r0]
  48 0014 391D     		adds	r1, r7, #4
  49 0016 0A60     		str	r2, [r1]
  50 0018 3A46     		mov	r2, r7
  51 001a 1360     		str	r3, [r2]
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t *pIn1;                                   /* InputA pointer */
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t *pIn2;                                   /* InputB pointer */
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         q15_t *pOut = pDst;                            /* Output pointer */
  52              		.loc 1 72 16
  53 001c 07F18003 		add	r3, r7, #128
  54 0020 D7F85023 		ldr	r2, [r7, #848]
  55 0024 1A60     		str	r2, [r3]
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulators */
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t *px;                                     /* Intermediate inputA pointer */
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t *py;                                     /* Intermediate inputB pointer */
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   const q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         q31_t x0, x1, x2, x3, c0;                      /* Temporary variables to hold state and coe
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         uint32_t blockSize1, blockSize2, blockSize3;   /* Loop counters */
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         uint32_t j, k, count, blkCnt;                  /* Loop counters */
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* srcB is always made to slide across srcA. */
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcALen >= srcBLen)
  56              		.loc 1 84 6
  57 0026 07F10802 		add	r2, r7, #8
  58 002a 3B46     		mov	r3, r7
  59 002c 1268     		ldr	r2, [r2]
  60 002e 1B68     		ldr	r3, [r3]
  61 0030 9A42     		cmp	r2, r3
  62 0032 09D3     		bcc	.L2
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcA;
  63              		.loc 1 87 10
  64 0034 07F10C03 		add	r3, r7, #12
  65 0038 1B68     		ldr	r3, [r3]
  66 003a C7F84433 		str	r3, [r7, #836]
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcB;
  67              		.loc 1 90 10
  68 003e 3B1D     		adds	r3, r7, #4
  69 0040 1B68     		ldr	r3, [r3]
  70 0042 C7F84033 		str	r3, [r7, #832]
  71 0046 16E0     		b	.L3
  72              	.L2:
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   else
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputA pointer */
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     pIn1 = pSrcB;
  73              		.loc 1 95 10
  74 0048 3B1D     		adds	r3, r7, #4
  75 004a 1B68     		ldr	r3, [r3]
  76 004c C7F84433 		str	r3, [r7, #836]
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 4


  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Initialization of inputB pointer */
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     pIn2 = pSrcA;
  77              		.loc 1 98 10
  78 0050 07F10C03 		add	r3, r7, #12
  79 0054 1B68     		ldr	r3, [r3]
  80 0056 C7F84033 		str	r3, [r7, #832]
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     j = srcBLen;
  81              		.loc 1 101 7
  82 005a 3B46     		mov	r3, r7
  83 005c 1B68     		ldr	r3, [r3]
  84 005e C7F81433 		str	r3, [r7, #788]
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     srcBLen = srcALen;
  85              		.loc 1 102 13
  86 0062 3B46     		mov	r3, r7
  87 0064 07F10802 		add	r2, r7, #8
  88 0068 1268     		ldr	r2, [r2]
  89 006a 1A60     		str	r2, [r3]
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     srcALen = j;
  90              		.loc 1 103 13
  91 006c 07F10803 		add	r3, r7, #8
  92 0070 D7F81423 		ldr	r2, [r7, #788]
  93 0074 1A60     		str	r2, [r3]
  94              	.L3:
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The function is internally
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * divided into three stages according to the number of multiplications that has to be
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * algorithm, the multiplications increase by one for every iteration.
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * for every iteration. */
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The algorithm is implemented in three stages.
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      The loop counters of each stage is initiated here. */
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize1 = srcBLen - 1U;
  95              		.loc 1 117 14
  96 0076 3B46     		mov	r3, r7
  97 0078 1B68     		ldr	r3, [r3]
  98 007a 013B     		subs	r3, r3, #1
  99 007c C7F81C33 		str	r3, [r7, #796]
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize2 = srcALen - (srcBLen - 1U);
 100              		.loc 1 118 24
 101 0080 07F10802 		add	r2, r7, #8
 102 0084 3B46     		mov	r3, r7
 103 0086 1268     		ldr	r2, [r2]
 104 0088 1B68     		ldr	r3, [r3]
 105 008a D31A     		subs	r3, r2, r3
 106              		.loc 1 118 14
 107 008c 0133     		adds	r3, r3, #1
 108 008e C7F80433 		str	r3, [r7, #772]
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   blockSize3 = blockSize1;
 109              		.loc 1 119 14
 110 0092 D7F81C33 		ldr	r3, [r7, #796]
ARM GAS  /tmp/ccIUkXZB.s 			page 5


 111 0096 C7F81833 		str	r3, [r7, #792]
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage1
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[0]
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    */
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      The count variable holds the number of MAC operations performed */
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   count = 1U;
 112              		.loc 1 133 9
 113 009a 0123     		movs	r3, #1
 114 009c C7F80C33 		str	r3, [r7, #780]
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 115              		.loc 1 136 6
 116 00a0 07F17C03 		add	r3, r7, #124
 117 00a4 D7F84423 		ldr	r2, [r7, #836]
 118 00a8 1A60     		str	r2, [r3]
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
 119              		.loc 1 139 6
 120 00aa 07F17803 		add	r3, r7, #120
 121 00ae D7F84023 		ldr	r2, [r7, #832]
 122 00b2 1A60     		str	r2, [r3]
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* ------------------------
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage1 process
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ----------------------*/
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations less than 4 */
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   while ((count < 4U) && (blockSize1 > 0U))
 123              		.loc 1 151 9
 124 00b4 5EE0     		b	.L4
 125              	.L9:
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 126              		.loc 1 154 9
 127 00b6 0023     		movs	r3, #0
 128 00b8 C7F83C33 		str	r3, [r7, #828]
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop over number of MAC operations between
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      * inputA samples and inputB samples */
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = count;
ARM GAS  /tmp/ccIUkXZB.s 			page 6


 129              		.loc 1 158 7
 130 00bc D7F80C33 		ldr	r3, [r7, #780]
 131 00c0 C7F81033 		str	r3, [r7, #784]
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 132              		.loc 1 160 11
 133 00c4 2EE0     		b	.L5
 134              	.L7:
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 135              		.loc 1 163 24
 136 00c6 07F17C03 		add	r3, r7, #124
 137 00ca 1B68     		ldr	r3, [r3]
 138 00cc 991C     		adds	r1, r3, #2
 139 00ce 07F17C02 		add	r2, r7, #124
 140 00d2 1160     		str	r1, [r2]
 141              		.loc 1 163 21
 142 00d4 B3F90030 		ldrsh	r3, [r3]
 143              		.loc 1 163 13
 144 00d8 1846     		mov	r0, r3
 145              		.loc 1 163 31
 146 00da 07F17803 		add	r3, r7, #120
 147 00de 1B68     		ldr	r3, [r3]
 148 00e0 991E     		subs	r1, r3, #2
 149 00e2 07F17802 		add	r2, r7, #120
 150 00e6 1160     		str	r1, [r2]
 151              		.loc 1 163 28
 152 00e8 B3F90030 		ldrsh	r3, [r3]
 153              		.loc 1 163 13
 154 00ec 1A46     		mov	r2, r3
 155 00ee D7F83C33 		ldr	r3, [r7, #828]
 156 00f2 C7F8F002 		str	r0, [r7, #752]
 157 00f6 C7F8EC22 		str	r2, [r7, #748]
 158 00fa C7F8E832 		str	r3, [r7, #744]
 159              	.LBB118:
 160              	.LBB119:
 161              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccIUkXZB.s 			page 7


  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccIUkXZB.s 			page 8


  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  /tmp/ccIUkXZB.s 			page 9


 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 10


 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccIUkXZB.s 			page 11


 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /tmp/ccIUkXZB.s 			page 12


 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 13


 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccIUkXZB.s 			page 14


 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /tmp/ccIUkXZB.s 			page 15


 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /tmp/ccIUkXZB.s 			page 16


 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccIUkXZB.s 			page 17


 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 18


 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccIUkXZB.s 			page 19


 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /tmp/ccIUkXZB.s 			page 20


 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /tmp/ccIUkXZB.s 			page 21


 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccIUkXZB.s 			page 22


 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /tmp/ccIUkXZB.s 			page 23


 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccIUkXZB.s 			page 24


 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/ccIUkXZB.s 			page 25


1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
ARM GAS  /tmp/ccIUkXZB.s 			page 26


1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 27


1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccIUkXZB.s 			page 28


1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccIUkXZB.s 			page 29


1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 30


1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
ARM GAS  /tmp/ccIUkXZB.s 			page 31


1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 32


1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
ARM GAS  /tmp/ccIUkXZB.s 			page 33


1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
ARM GAS  /tmp/ccIUkXZB.s 			page 34


1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
ARM GAS  /tmp/ccIUkXZB.s 			page 35


1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccIUkXZB.s 			page 36


1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccIUkXZB.s 			page 37


1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 38


1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
ARM GAS  /tmp/ccIUkXZB.s 			page 39


1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccIUkXZB.s 			page 40


1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
ARM GAS  /tmp/ccIUkXZB.s 			page 41


1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 162              		.loc 2 1993 3
 163 00fe D7F8F032 		ldr	r3, [r7, #752]
 164 0102 D7F8EC22 		ldr	r2, [r7, #748]
 165 0106 D7F8E812 		ldr	r1, [r7, #744]
 166              		.syntax unified
 167              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 168 010a 23FB0213 		smlad r3, r3, r2, r1
 169              	@ 0 "" 2
 170              		.thumb
 171              		.syntax unified
 172 010e C7F8E432 		str	r3, [r7, #740]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 173              		.loc 2 1994 9
 174 0112 D7F8E432 		ldr	r3, [r7, #740]
 175              	.LBE119:
 176              	.LBE118:
 177              		.loc 1 163 11
 178 0116 C7F83C33 		str	r3, [r7, #828]
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
ARM GAS  /tmp/ccIUkXZB.s 			page 42


 179              		.loc 1 166 8
 180 011a D7F81033 		ldr	r3, [r7, #784]
 181 011e 013B     		subs	r3, r3, #1
 182 0120 C7F81033 		str	r3, [r7, #784]
 183              	.L5:
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 184              		.loc 1 160 11
 185 0124 D7F81033 		ldr	r3, [r7, #784]
 186 0128 002B     		cmp	r3, #0
 187 012a CCD1     		bne	.L7
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 188              		.loc 1 170 28
 189 012c D7F83C33 		ldr	r3, [r7, #828]
 190 0130 D813     		asrs	r0, r3, #15
 191              		.loc 1 170 10
 192 0132 07F18003 		add	r3, r7, #128
 193 0136 1B68     		ldr	r3, [r3]
 194 0138 991C     		adds	r1, r3, #2
 195 013a 07F18002 		add	r2, r7, #128
 196 013e 1160     		str	r1, [r2]
 197              		.loc 1 170 15
 198 0140 02B2     		sxth	r2, r0
 199              		.loc 1 170 13
 200 0142 1A80     		strh	r2, [r3]	@ movhi
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + count;
 201              		.loc 1 173 15
 202 0144 D7F80C33 		ldr	r3, [r7, #780]
 203 0148 5B00     		lsls	r3, r3, #1
 204 014a D7F84023 		ldr	r2, [r7, #832]
 205 014e 1A44     		add	r2, r2, r3
 206              		.loc 1 173 8
 207 0150 07F17803 		add	r3, r7, #120
 208 0154 1A60     		str	r2, [r3]
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 209              		.loc 1 174 8
 210 0156 07F17C03 		add	r3, r7, #124
 211 015a D7F84423 		ldr	r2, [r7, #836]
 212 015e 1A60     		str	r2, [r3]
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment MAC count */
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 213              		.loc 1 177 10
 214 0160 D7F80C33 		ldr	r3, [r7, #780]
 215 0164 0133     		adds	r3, r3, #1
 216 0166 C7F80C33 		str	r3, [r7, #780]
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement loop counter */
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 217              		.loc 1 180 15
 218 016a D7F81C33 		ldr	r3, [r7, #796]
 219 016e 013B     		subs	r3, r3, #1
 220 0170 C7F81C33 		str	r3, [r7, #796]
ARM GAS  /tmp/ccIUkXZB.s 			page 43


 221              	.L4:
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 222              		.loc 1 151 9
 223 0174 D7F80C33 		ldr	r3, [r7, #780]
 224 0178 032B     		cmp	r3, #3
 225 017a 03D8     		bhi	.L8
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 226              		.loc 1 151 23 discriminator 1
 227 017c D7F81C33 		ldr	r3, [r7, #796]
 228 0180 002B     		cmp	r3, #0
 229 0182 98D1     		bne	.L9
 230              	.L8:
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The internal loop, over count, is unrolled by 4 */
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* To, read the last two inputB samples using SIMD:
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   py = py - 1;
 231              		.loc 1 187 11
 232 0184 07F17803 		add	r3, r7, #120
 233 0188 1B68     		ldr	r3, [r3]
 234 018a 9A1E     		subs	r2, r3, #2
 235              		.loc 1 187 6
 236 018c 07F17803 		add	r3, r7, #120
 237 0190 1A60     		str	r2, [r3]
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize1 > 0U)
 238              		.loc 1 189 9
 239 0192 02E1     		b	.L10
 240              	.L22:
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 241              		.loc 1 192 9
 242 0194 0023     		movs	r3, #0
 243 0196 C7F83C33 		str	r3, [r7, #828]
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = count >> 2U;
 244              		.loc 1 195 7
 245 019a D7F80C33 		ldr	r3, [r7, #780]
 246 019e 9B08     		lsrs	r3, r3, #2
 247 01a0 C7F81033 		str	r3, [r7, #784]
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 248              		.loc 1 199 11
 249 01a4 8CE0     		b	.L11
 250              	.L18:
 251 01a6 07F17C03 		add	r3, r7, #124
 252 01aa C7F8B432 		str	r3, [r7, #692]
 253              	.LBB120:
 254              	.LBB121:
 255              		.file 3 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
ARM GAS  /tmp/ccIUkXZB.s 			page 44


   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
ARM GAS  /tmp/ccIUkXZB.s 			page 45


  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
ARM GAS  /tmp/ccIUkXZB.s 			page 46


 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
ARM GAS  /tmp/ccIUkXZB.s 			page 47


 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
ARM GAS  /tmp/ccIUkXZB.s 			page 48


 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 49


 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  /tmp/ccIUkXZB.s 			page 50


 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 51


 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
ARM GAS  /tmp/ccIUkXZB.s 			page 52


 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 256              		.loc 3 474 3
 257 01ae D7F8B432 		ldr	r3, [r7, #692]
 258 01b2 1B68     		ldr	r3, [r3]
 259 01b4 1B68     		ldr	r3, [r3]	@ unaligned
 260 01b6 1A46     		mov	r2, r3
 261 01b8 07F11C03 		add	r3, r7, #28
 262 01bc 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 263              		.loc 3 475 9
 264 01be D7F8B432 		ldr	r3, [r7, #692]
 265 01c2 1B68     		ldr	r3, [r3]
 266 01c4 1A1D     		adds	r2, r3, #4
 267 01c6 D7F8B432 		ldr	r3, [r7, #692]
 268 01ca 1A60     		str	r2, [r3]
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 269              		.loc 3 477 10
 270 01cc 07F11C03 		add	r3, r7, #28
 271 01d0 1B68     		ldr	r3, [r3]
 272              	.LBE121:
 273              	.LBE120:
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 274              		.loc 1 203 13
 275 01d2 1946     		mov	r1, r3
 276 01d4 07F17803 		add	r3, r7, #120
 277 01d8 C7F8B832 		str	r3, [r7, #696]
 278              	.LBB122:
 279              	.LBB123:
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
ARM GAS  /tmp/ccIUkXZB.s 			page 53


 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 280              		.loc 3 490 3
 281 01dc D7F8B832 		ldr	r3, [r7, #696]
 282 01e0 1B68     		ldr	r3, [r3]
 283 01e2 1B68     		ldr	r3, [r3]	@ unaligned
 284 01e4 1A46     		mov	r2, r3
 285 01e6 07F11803 		add	r3, r7, #24
 286 01ea 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 287              		.loc 3 491 9
 288 01ec D7F8B832 		ldr	r3, [r7, #696]
 289 01f0 1B68     		ldr	r3, [r3]
 290 01f2 1A1F     		subs	r2, r3, #4
 291 01f4 D7F8B832 		ldr	r3, [r7, #696]
 292 01f8 1A60     		str	r2, [r3]
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 293              		.loc 3 493 10
 294 01fa 07F11803 		add	r3, r7, #24
 295 01fe 1B68     		ldr	r3, [r3]
 296              	.LBE123:
 297              	.LBE122:
 298              		.loc 1 203 13
 299 0200 1A46     		mov	r2, r3
 300 0202 D7F83C33 		ldr	r3, [r7, #828]
 301 0206 C7F8C812 		str	r1, [r7, #712]
 302 020a C7F8C422 		str	r2, [r7, #708]
 303 020e C7F8C032 		str	r3, [r7, #704]
 304              	.LBB124:
 305              	.LBB125:
1995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 306              		.loc 2 2001 3
 307 0212 D7F8C832 		ldr	r3, [r7, #712]
 308 0216 D7F8C422 		ldr	r2, [r7, #708]
 309 021a D7F8C012 		ldr	r1, [r7, #704]
 310              		.syntax unified
 311              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 312 021e 23FB1213 		smladx r3, r3, r2, r1
 313              	@ 0 "" 2
 314              		.thumb
 315              		.syntax unified
 316 0222 C7F8BC32 		str	r3, [r7, #700]
2002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 317              		.loc 2 2002 9
 318 0226 D7F8BC32 		ldr	r3, [r7, #700]
 319              	.LBE125:
 320              	.LBE124:
 321              		.loc 1 203 11
ARM GAS  /tmp/ccIUkXZB.s 			page 54


 322 022a C7F83C33 		str	r3, [r7, #828]
 323 022e 07F17C03 		add	r3, r7, #124
 324 0232 C7F8CC32 		str	r3, [r7, #716]
 325              	.LBB126:
 326              	.LBB127:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 327              		.loc 3 474 3
 328 0236 D7F8CC32 		ldr	r3, [r7, #716]
 329 023a 1B68     		ldr	r3, [r3]
 330 023c 1B68     		ldr	r3, [r3]	@ unaligned
 331 023e 1A46     		mov	r2, r3
 332 0240 07F11403 		add	r3, r7, #20
 333 0244 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334              		.loc 3 475 9
 335 0246 D7F8CC32 		ldr	r3, [r7, #716]
 336 024a 1B68     		ldr	r3, [r3]
 337 024c 1A1D     		adds	r2, r3, #4
 338 024e D7F8CC32 		ldr	r3, [r7, #716]
 339 0252 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 340              		.loc 3 477 10
 341 0254 07F11403 		add	r3, r7, #20
 342 0258 1B68     		ldr	r3, [r3]
 343              	.LBE127:
 344              	.LBE126:
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 345              		.loc 1 205 13
 346 025a 1946     		mov	r1, r3
 347 025c 07F17803 		add	r3, r7, #120
 348 0260 C7F8D032 		str	r3, [r7, #720]
 349              	.LBB128:
 350              	.LBB129:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 351              		.loc 3 490 3
 352 0264 D7F8D032 		ldr	r3, [r7, #720]
 353 0268 1B68     		ldr	r3, [r3]
 354 026a 1B68     		ldr	r3, [r3]	@ unaligned
 355 026c 1A46     		mov	r2, r3
 356 026e 07F11003 		add	r3, r7, #16
 357 0272 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 358              		.loc 3 491 9
 359 0274 D7F8D032 		ldr	r3, [r7, #720]
 360 0278 1B68     		ldr	r3, [r3]
 361 027a 1A1F     		subs	r2, r3, #4
 362 027c D7F8D032 		ldr	r3, [r7, #720]
 363 0280 1A60     		str	r2, [r3]
 364              		.loc 3 493 10
 365 0282 07F11003 		add	r3, r7, #16
 366 0286 1B68     		ldr	r3, [r3]
 367              	.LBE129:
 368              	.LBE128:
 369              		.loc 1 205 13
 370 0288 1A46     		mov	r2, r3
 371 028a D7F83C33 		ldr	r3, [r7, #828]
ARM GAS  /tmp/ccIUkXZB.s 			page 55


 372 028e C7F8E012 		str	r1, [r7, #736]
 373 0292 C7F8DC22 		str	r2, [r7, #732]
 374 0296 C7F8D832 		str	r3, [r7, #728]
 375              	.LBB130:
 376              	.LBB131:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 377              		.loc 2 2001 3
 378 029a D7F8E032 		ldr	r3, [r7, #736]
 379 029e D7F8DC22 		ldr	r2, [r7, #732]
 380 02a2 D7F8D812 		ldr	r1, [r7, #728]
 381              		.syntax unified
 382              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 383 02a6 23FB1213 		smladx r3, r3, r2, r1
 384              	@ 0 "" 2
 385              		.thumb
 386              		.syntax unified
 387 02aa C7F8D432 		str	r3, [r7, #724]
 388              		.loc 2 2002 9
 389 02ae D7F8D432 		ldr	r3, [r7, #724]
 390              	.LBE131:
 391              	.LBE130:
 392              		.loc 1 205 11
 393 02b2 C7F83C33 		str	r3, [r7, #828]
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 394              		.loc 1 208 8
 395 02b6 D7F81033 		ldr	r3, [r7, #784]
 396 02ba 013B     		subs	r3, r3, #1
 397 02bc C7F81033 		str	r3, [r7, #784]
 398              	.L11:
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 399              		.loc 1 199 11
 400 02c0 D7F81033 		ldr	r3, [r7, #784]
 401 02c4 002B     		cmp	r3, #0
 402 02c6 7FF46EAF 		bne	.L18
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      * So, py is incremented by 1 */
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = py + 1U;
 403              		.loc 1 213 13
 404 02ca 07F17803 		add	r3, r7, #120
 405 02ce 1B68     		ldr	r3, [r3]
 406 02d0 9A1C     		adds	r2, r3, #2
 407              		.loc 1 213 8
 408 02d2 07F17803 		add	r3, r7, #120
 409 02d6 1A60     		str	r2, [r3]
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = count % 0x4U;
 410              		.loc 1 217 7
 411 02d8 D7F80C33 		ldr	r3, [r7, #780]
 412 02dc 03F00303 		and	r3, r3, #3
 413 02e0 C7F81033 		str	r3, [r7, #784]
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 56


 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 414              		.loc 1 219 11
 415 02e4 2EE0     		b	.L19
 416              	.L21:
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 417              		.loc 1 222 24
 418 02e6 07F17C03 		add	r3, r7, #124
 419 02ea 1B68     		ldr	r3, [r3]
 420 02ec 991C     		adds	r1, r3, #2
 421 02ee 07F17C02 		add	r2, r7, #124
 422 02f2 1160     		str	r1, [r2]
 423              		.loc 1 222 21
 424 02f4 B3F90030 		ldrsh	r3, [r3]
 425              		.loc 1 222 13
 426 02f8 1846     		mov	r0, r3
 427              		.loc 1 222 31
 428 02fa 07F17803 		add	r3, r7, #120
 429 02fe 1B68     		ldr	r3, [r3]
 430 0300 991E     		subs	r1, r3, #2
 431 0302 07F17802 		add	r2, r7, #120
 432 0306 1160     		str	r1, [r2]
 433              		.loc 1 222 28
 434 0308 B3F90030 		ldrsh	r3, [r3]
 435              		.loc 1 222 13
 436 030c 1A46     		mov	r2, r3
 437 030e D7F83C33 		ldr	r3, [r7, #828]
 438 0312 C7F8B002 		str	r0, [r7, #688]
 439 0316 C7F8AC22 		str	r2, [r7, #684]
 440 031a C7F8A832 		str	r3, [r7, #680]
 441              	.LBB132:
 442              	.LBB133:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 443              		.loc 2 1993 3
 444 031e D7F8B032 		ldr	r3, [r7, #688]
 445 0322 D7F8AC22 		ldr	r2, [r7, #684]
 446 0326 D7F8A812 		ldr	r1, [r7, #680]
 447              		.syntax unified
 448              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 449 032a 23FB0213 		smlad r3, r3, r2, r1
 450              	@ 0 "" 2
 451              		.thumb
 452              		.syntax unified
 453 032e C7F8A432 		str	r3, [r7, #676]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 454              		.loc 2 1994 9
 455 0332 D7F8A432 		ldr	r3, [r7, #676]
 456              	.LBE133:
 457              	.LBE132:
 458              		.loc 1 222 11
 459 0336 C7F83C33 		str	r3, [r7, #828]
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement the loop counter */
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 460              		.loc 1 225 8
 461 033a D7F81033 		ldr	r3, [r7, #784]
ARM GAS  /tmp/ccIUkXZB.s 			page 57


 462 033e 013B     		subs	r3, r3, #1
 463 0340 C7F81033 		str	r3, [r7, #784]
 464              	.L19:
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 465              		.loc 1 219 11
 466 0344 D7F81033 		ldr	r3, [r7, #784]
 467 0348 002B     		cmp	r3, #0
 468 034a CCD1     		bne	.L21
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 469              		.loc 1 229 28
 470 034c D7F83C33 		ldr	r3, [r7, #828]
 471 0350 D813     		asrs	r0, r3, #15
 472              		.loc 1 229 10
 473 0352 07F18003 		add	r3, r7, #128
 474 0356 1B68     		ldr	r3, [r3]
 475 0358 991C     		adds	r1, r3, #2
 476 035a 07F18002 		add	r2, r7, #128
 477 035e 1160     		str	r1, [r2]
 478              		.loc 1 229 15
 479 0360 02B2     		sxth	r2, r0
 480              		.loc 1 229 13
 481 0362 1A80     		strh	r2, [r3]	@ movhi
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2 + (count - 1U);
 482              		.loc 1 232 15
 483 0364 D7F80C23 		ldr	r2, [r7, #780]
 484 0368 6FF00043 		mvn	r3, #-2147483648
 485 036c 1344     		add	r3, r3, r2
 486 036e 5B00     		lsls	r3, r3, #1
 487 0370 D7F84023 		ldr	r2, [r7, #832]
 488 0374 1A44     		add	r2, r2, r3
 489              		.loc 1 232 8
 490 0376 07F17803 		add	r3, r7, #120
 491 037a 1A60     		str	r2, [r3]
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     px = pIn1;
 492              		.loc 1 233 8
 493 037c 07F17C03 		add	r3, r7, #124
 494 0380 D7F84423 		ldr	r2, [r7, #836]
 495 0384 1A60     		str	r2, [r3]
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Increment MAC count */
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     count++;
 496              		.loc 1 236 10
 497 0386 D7F80C33 		ldr	r3, [r7, #780]
 498 038a 0133     		adds	r3, r3, #1
 499 038c C7F80C33 		str	r3, [r7, #780]
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement loop counter */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize1--;
 500              		.loc 1 239 15
 501 0390 D7F81C33 		ldr	r3, [r7, #796]
 502 0394 013B     		subs	r3, r3, #1
 503 0396 C7F81C33 		str	r3, [r7, #796]
ARM GAS  /tmp/ccIUkXZB.s 			page 58


 504              	.L10:
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 505              		.loc 1 189 9
 506 039a D7F81C33 		ldr	r3, [r7, #796]
 507 039e 002B     		cmp	r3, #0
 508 03a0 7FF4F8AE 		bne	.L22
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage2
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------------*/
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    */
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   px = pIn1;
 509              		.loc 1 253 6
 510 03a4 07F17C03 		add	r3, r7, #124
 511 03a8 D7F84423 		ldr	r2, [r7, #836]
 512 03ac 1A60     		str	r2, [r3]
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1U);
 513              		.loc 1 256 16
 514 03ae 3B46     		mov	r3, r7
 515 03b0 1A68     		ldr	r2, [r3]
 516 03b2 6FF00043 		mvn	r3, #-2147483648
 517 03b6 1344     		add	r3, r3, r2
 518 03b8 5B00     		lsls	r3, r3, #1
 519              		.loc 1 256 9
 520 03ba D7F84023 		ldr	r2, [r7, #832]
 521 03be 1344     		add	r3, r3, r2
 522 03c0 C7F80033 		str	r3, [r7, #768]
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   py = pSrc2;
 523              		.loc 1 257 6
 524 03c4 07F17803 		add	r3, r7, #120
 525 03c8 D7F80023 		ldr	r2, [r7, #768]
 526 03cc 1A60     		str	r2, [r3]
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* count is the index by which the pointer pIn1 to be incremented */
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   count = 0U;
 527              		.loc 1 260 9
 528 03ce 0023     		movs	r3, #0
 529 03d0 C7F80C33 		str	r3, [r7, #780]
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage2 process
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------*/
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * So, to loop unroll over blockSize2,
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * srcBLen should be greater than or equal to 4 */
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   if (srcBLen >= 4U)
ARM GAS  /tmp/ccIUkXZB.s 			page 59


 530              		.loc 1 269 6
 531 03d4 3B46     		mov	r3, r7
 532 03d6 1B68     		ldr	r3, [r3]
 533 03d8 032B     		cmp	r3, #3
 534 03da 40F20D86 		bls	.L23
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Loop unroll over blockSize2, by 4 */
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 >> 2U;
 535              		.loc 1 272 12
 536 03de D7F80433 		ldr	r3, [r7, #772]
 537 03e2 9B08     		lsrs	r3, r3, #2
 538 03e4 C7F80833 		str	r3, [r7, #776]
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0U)
 539              		.loc 1 274 11
 540 03e8 00F02CBD 		b	.L24
 541              	.L69:
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       py = py - 1U;
 542              		.loc 1 276 15
 543 03ec 07F17803 		add	r3, r7, #120
 544 03f0 1B68     		ldr	r3, [r3]
 545 03f2 9A1E     		subs	r2, r3, #2
 546              		.loc 1 276 10
 547 03f4 07F17803 		add	r3, r7, #120
 548 03f8 1A60     		str	r2, [r3]
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Set all accumulators to zero */
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       acc0 = 0;
 549              		.loc 1 279 12
 550 03fa 0023     		movs	r3, #0
 551 03fc C7F83833 		str	r3, [r7, #824]
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       acc1 = 0;
 552              		.loc 1 280 12
 553 0400 0023     		movs	r3, #0
 554 0402 C7F83433 		str	r3, [r7, #820]
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       acc2 = 0;
 555              		.loc 1 281 12
 556 0406 0023     		movs	r3, #0
 557 0408 C7F83033 		str	r3, [r7, #816]
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       acc3 = 0;
 558              		.loc 1 282 12
 559 040c 0023     		movs	r3, #0
 560 040e C7F82C33 		str	r3, [r7, #812]
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* read x[0], x[1] samples */
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       x0 = read_q15x2 ((q15_t *) px);
 561              		.loc 1 285 12
 562 0412 07F17C03 		add	r3, r7, #124
 563 0416 1B68     		ldr	r3, [r3]
 564 0418 C7F89C32 		str	r3, [r7, #668]
 565 041c D7F89C32 		ldr	r3, [r7, #668]
 566 0420 1B68     		ldr	r3, [r3]	@ unaligned
 567 0422 1A46     		mov	r2, r3
 568              	.LBB134:
 569              	.LBB135:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccIUkXZB.s 			page 60


 570              		.loc 3 459 3
 571 0424 07F12403 		add	r3, r7, #36
 572 0428 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 573              		.loc 3 461 10
 574 042a 07F12403 		add	r3, r7, #36
 575 042e 1B68     		ldr	r3, [r3]
 576              	.LBE135:
 577              	.LBE134:
 578              		.loc 1 285 12
 579 0430 C7F82433 		str	r3, [r7, #804]
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* read x[1], x[2] samples */
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       x1 = read_q15x2 ((q15_t *) px + 1);
 580              		.loc 1 287 24
 581 0434 07F17C03 		add	r3, r7, #124
 582 0438 1B68     		ldr	r3, [r3]
 583              		.loc 1 287 12
 584 043a 0233     		adds	r3, r3, #2
 585 043c C7F8A032 		str	r3, [r7, #672]
 586 0440 D7F8A032 		ldr	r3, [r7, #672]
 587 0444 1B68     		ldr	r3, [r3]	@ unaligned
 588 0446 1A46     		mov	r2, r3
 589              	.LBB136:
 590              	.LBB137:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 591              		.loc 3 459 3
 592 0448 07F12003 		add	r3, r7, #32
 593 044c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 594              		.loc 3 461 10
 595 044e 07F12003 		add	r3, r7, #32
 596 0452 1B68     		ldr	r3, [r3]
 597              	.LBE137:
 598              	.LBE136:
 599              		.loc 1 287 12
 600 0454 C7F82033 		str	r3, [r7, #800]
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 	  px += 2U;
 601              		.loc 1 288 7
 602 0458 07F17C03 		add	r3, r7, #124
 603 045c 1B68     		ldr	r3, [r3]
 604 045e 1A1D     		adds	r2, r3, #4
 605 0460 07F17C03 		add	r3, r7, #124
 606 0464 1A60     		str	r2, [r3]
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2U;
 607              		.loc 1 291 9
 608 0466 3B46     		mov	r3, r7
 609 0468 1B68     		ldr	r3, [r3]
 610 046a 9B08     		lsrs	r3, r3, #2
 611 046c C7F81033 		str	r3, [r7, #784]
 612              	.L41:
 613 0470 07F50173 		add	r3, r7, #516
 614 0474 07F17802 		add	r2, r7, #120
 615 0478 1A60     		str	r2, [r3]
 616              	.LBB138:
 617              	.LBB139:
ARM GAS  /tmp/ccIUkXZB.s 			page 61


 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 618              		.loc 3 490 3 discriminator 1
 619 047a 07F50173 		add	r3, r7, #516
 620 047e 1B68     		ldr	r3, [r3]
 621 0480 1B68     		ldr	r3, [r3]
 622 0482 1B68     		ldr	r3, [r3]	@ unaligned
 623 0484 1A46     		mov	r2, r3
 624 0486 07F13C03 		add	r3, r7, #60
 625 048a 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 626              		.loc 3 491 9 discriminator 1
 627 048c 07F50173 		add	r3, r7, #516
 628 0490 1B68     		ldr	r3, [r3]
 629 0492 1B68     		ldr	r3, [r3]
 630 0494 1A1F     		subs	r2, r3, #4
 631 0496 07F50173 		add	r3, r7, #516
 632 049a 1B68     		ldr	r3, [r3]
 633 049c 1A60     		str	r2, [r3]
 634              		.loc 3 493 10 discriminator 1
 635 049e 07F13C03 		add	r3, r7, #60
 636 04a2 1B68     		ldr	r3, [r3]
 637              	.LBE139:
 638              	.LBE138:
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       do
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read the last two inputB samples using SIMD:
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = read_q15x2_da ((q15_t **) &py);
 639              		.loc 1 299 14 discriminator 1
 640 04a4 C7F8FC32 		str	r3, [r7, #764]
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 641              		.loc 1 302 16 discriminator 1
 642 04a8 D7F82403 		ldr	r0, [r7, #804]
 643 04ac D7F8FC12 		ldr	r1, [r7, #764]
 644 04b0 D7F83823 		ldr	r2, [r7, #824]
 645 04b4 07F50573 		add	r3, r7, #532
 646 04b8 1860     		str	r0, [r3]
 647 04ba 07F50473 		add	r3, r7, #528
 648 04be 1960     		str	r1, [r3]
 649 04c0 07F50373 		add	r3, r7, #524
 650 04c4 1A60     		str	r2, [r3]
 651              	.LBB140:
 652              	.LBB141:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 653              		.loc 2 2001 3 discriminator 1
 654 04c6 07F50573 		add	r3, r7, #532
 655 04ca 1B68     		ldr	r3, [r3]
 656 04cc 07F50472 		add	r2, r7, #528
 657 04d0 1268     		ldr	r2, [r2]
 658 04d2 07F50371 		add	r1, r7, #524
 659 04d6 0968     		ldr	r1, [r1]
 660              		.syntax unified
ARM GAS  /tmp/ccIUkXZB.s 			page 62


 661              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 662 04d8 23FB1212 		smladx r2, r3, r2, r1
 663              	@ 0 "" 2
 664              		.thumb
 665              		.syntax unified
 666 04dc 07F50273 		add	r3, r7, #520
 667 04e0 1A60     		str	r2, [r3]
 668              		.loc 2 2002 9 discriminator 1
 669 04e2 07F50273 		add	r3, r7, #520
 670 04e6 1B68     		ldr	r3, [r3]
 671              	.LBE141:
 672              	.LBE140:
 673              		.loc 1 302 14 discriminator 1
 674 04e8 C7F83833 		str	r3, [r7, #824]
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 675              		.loc 1 305 16 discriminator 1
 676 04ec D7F82003 		ldr	r0, [r7, #800]
 677 04f0 D7F8FC12 		ldr	r1, [r7, #764]
 678 04f4 D7F83423 		ldr	r2, [r7, #820]
 679 04f8 07F50973 		add	r3, r7, #548
 680 04fc 1860     		str	r0, [r3]
 681 04fe 07F50873 		add	r3, r7, #544
 682 0502 1960     		str	r1, [r3]
 683 0504 07F50773 		add	r3, r7, #540
 684 0508 1A60     		str	r2, [r3]
 685              	.LBB142:
 686              	.LBB143:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 687              		.loc 2 2001 3 discriminator 1
 688 050a 07F50973 		add	r3, r7, #548
 689 050e 1B68     		ldr	r3, [r3]
 690 0510 07F50872 		add	r2, r7, #544
 691 0514 1268     		ldr	r2, [r2]
 692 0516 07F50771 		add	r1, r7, #540
 693 051a 0968     		ldr	r1, [r1]
 694              		.syntax unified
 695              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 696 051c 23FB1212 		smladx r2, r3, r2, r1
 697              	@ 0 "" 2
 698              		.thumb
 699              		.syntax unified
 700 0520 07F50673 		add	r3, r7, #536
 701 0524 1A60     		str	r2, [r3]
 702              		.loc 2 2002 9 discriminator 1
 703 0526 07F50673 		add	r3, r7, #536
 704 052a 1B68     		ldr	r3, [r3]
 705              	.LBE143:
 706              	.LBE142:
 707              		.loc 1 305 14 discriminator 1
 708 052c C7F83433 		str	r3, [r7, #820]
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[2], x[3] */
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = read_q15x2 ((q15_t *) px);
 709              		.loc 1 308 14 discriminator 1
 710 0530 07F17C03 		add	r3, r7, #124
ARM GAS  /tmp/ccIUkXZB.s 			page 63


 711 0534 1A68     		ldr	r2, [r3]
 712 0536 07F50A73 		add	r3, r7, #552
 713 053a 1A60     		str	r2, [r3]
 714 053c 07F50A73 		add	r3, r7, #552
 715 0540 1B68     		ldr	r3, [r3]
 716 0542 1B68     		ldr	r3, [r3]	@ unaligned
 717 0544 1A46     		mov	r2, r3
 718              	.LBB144:
 719              	.LBB145:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 720              		.loc 3 459 3 discriminator 1
 721 0546 07F13803 		add	r3, r7, #56
 722 054a 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 723              		.loc 3 461 10 discriminator 1
 724 054c 07F13803 		add	r3, r7, #56
 725 0550 1B68     		ldr	r3, [r3]
 726              	.LBE145:
 727              	.LBE144:
 728              		.loc 1 308 14 discriminator 1
 729 0552 C7F8F832 		str	r3, [r7, #760]
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[3], x[4] */
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = read_q15x2 ((q15_t *) px + 1);
 730              		.loc 1 311 26 discriminator 1
 731 0556 07F17C03 		add	r3, r7, #124
 732 055a 1B68     		ldr	r3, [r3]
 733              		.loc 1 311 14 discriminator 1
 734 055c 9A1C     		adds	r2, r3, #2
 735 055e 07F50B73 		add	r3, r7, #556
 736 0562 1A60     		str	r2, [r3]
 737 0564 07F50B73 		add	r3, r7, #556
 738 0568 1B68     		ldr	r3, [r3]
 739 056a 1B68     		ldr	r3, [r3]	@ unaligned
 740 056c 1A46     		mov	r2, r3
 741              	.LBB146:
 742              	.LBB147:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 743              		.loc 3 459 3 discriminator 1
 744 056e 07F13403 		add	r3, r7, #52
 745 0572 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 746              		.loc 3 461 10 discriminator 1
 747 0574 07F13403 		add	r3, r7, #52
 748 0578 1B68     		ldr	r3, [r3]
 749              	.LBE147:
 750              	.LBE146:
 751              		.loc 1 311 14 discriminator 1
 752 057a C7F8F432 		str	r3, [r7, #756]
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 753              		.loc 1 314 16 discriminator 1
 754 057e D7F8F802 		ldr	r0, [r7, #760]
 755 0582 D7F8FC12 		ldr	r1, [r7, #764]
 756 0586 D7F83023 		ldr	r2, [r7, #816]
 757 058a 07F50F73 		add	r3, r7, #572
ARM GAS  /tmp/ccIUkXZB.s 			page 64


 758 058e 1860     		str	r0, [r3]
 759 0590 07F50E73 		add	r3, r7, #568
 760 0594 1960     		str	r1, [r3]
 761 0596 07F50D73 		add	r3, r7, #564
 762 059a 1A60     		str	r2, [r3]
 763              	.LBB148:
 764              	.LBB149:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 765              		.loc 2 2001 3 discriminator 1
 766 059c 07F50F73 		add	r3, r7, #572
 767 05a0 1B68     		ldr	r3, [r3]
 768 05a2 07F50E72 		add	r2, r7, #568
 769 05a6 1268     		ldr	r2, [r2]
 770 05a8 07F50D71 		add	r1, r7, #564
 771 05ac 0968     		ldr	r1, [r1]
 772              		.syntax unified
 773              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 774 05ae 23FB1212 		smladx r2, r3, r2, r1
 775              	@ 0 "" 2
 776              		.thumb
 777              		.syntax unified
 778 05b2 07F50C73 		add	r3, r7, #560
 779 05b6 1A60     		str	r2, [r3]
 780              		.loc 2 2002 9 discriminator 1
 781 05b8 07F50C73 		add	r3, r7, #560
 782 05bc 1B68     		ldr	r3, [r3]
 783              	.LBE149:
 784              	.LBE148:
 785              		.loc 1 314 14 discriminator 1
 786 05be C7F83033 		str	r3, [r7, #816]
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 787              		.loc 1 317 16 discriminator 1
 788 05c2 D7F8F432 		ldr	r3, [r7, #756]
 789 05c6 D7F8FC12 		ldr	r1, [r7, #764]
 790 05ca D7F82C23 		ldr	r2, [r7, #812]
 791 05ce C7F84C32 		str	r3, [r7, #588]
 792 05d2 07F51273 		add	r3, r7, #584
 793 05d6 1960     		str	r1, [r3]
 794 05d8 07F51173 		add	r3, r7, #580
 795 05dc 1A60     		str	r2, [r3]
 796              	.LBB150:
 797              	.LBB151:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 798              		.loc 2 2001 3 discriminator 1
 799 05de D7F84C32 		ldr	r3, [r7, #588]
 800 05e2 07F51272 		add	r2, r7, #584
 801 05e6 1268     		ldr	r2, [r2]
 802 05e8 07F51171 		add	r1, r7, #580
 803 05ec 0968     		ldr	r1, [r1]
 804              		.syntax unified
 805              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 806 05ee 23FB1212 		smladx r2, r3, r2, r1
 807              	@ 0 "" 2
 808              		.thumb
 809              		.syntax unified
ARM GAS  /tmp/ccIUkXZB.s 			page 65


 810 05f2 07F51073 		add	r3, r7, #576
 811 05f6 1A60     		str	r2, [r3]
 812              		.loc 2 2002 9 discriminator 1
 813 05f8 07F51073 		add	r3, r7, #576
 814 05fc 1B68     		ldr	r3, [r3]
 815              	.LBE151:
 816              	.LBE150:
 817              		.loc 1 317 14 discriminator 1
 818 05fe C7F82C33 		str	r3, [r7, #812]
 819 0602 07F17803 		add	r3, r7, #120
 820 0606 C7F85032 		str	r3, [r7, #592]
 821              	.LBB152:
 822              	.LBB153:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 823              		.loc 3 490 3 discriminator 1
 824 060a D7F85032 		ldr	r3, [r7, #592]
 825 060e 1B68     		ldr	r3, [r3]
 826 0610 1B68     		ldr	r3, [r3]	@ unaligned
 827 0612 1A46     		mov	r2, r3
 828 0614 07F13003 		add	r3, r7, #48
 829 0618 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 830              		.loc 3 491 9 discriminator 1
 831 061a D7F85032 		ldr	r3, [r7, #592]
 832 061e 1B68     		ldr	r3, [r3]
 833 0620 1A1F     		subs	r2, r3, #4
 834 0622 D7F85032 		ldr	r3, [r7, #592]
 835 0626 1A60     		str	r2, [r3]
 836              		.loc 3 493 10 discriminator 1
 837 0628 07F13003 		add	r3, r7, #48
 838 062c 1B68     		ldr	r3, [r3]
 839              	.LBE153:
 840              	.LBE152:
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = read_q15x2_da ((q15_t **) &py);
 841              		.loc 1 320 14 discriminator 1
 842 062e C7F8FC32 		str	r3, [r7, #764]
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x2, c0, acc0);
 843              		.loc 1 323 16 discriminator 1
 844 0632 D7F8F812 		ldr	r1, [r7, #760]
 845 0636 D7F8FC22 		ldr	r2, [r7, #764]
 846 063a D7F83833 		ldr	r3, [r7, #824]
 847 063e C7F86012 		str	r1, [r7, #608]
 848 0642 C7F85C22 		str	r2, [r7, #604]
 849 0646 C7F85832 		str	r3, [r7, #600]
 850              	.LBB154:
 851              	.LBB155:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 852              		.loc 2 2001 3 discriminator 1
 853 064a D7F86032 		ldr	r3, [r7, #608]
 854 064e D7F85C22 		ldr	r2, [r7, #604]
 855 0652 D7F85812 		ldr	r1, [r7, #600]
 856              		.syntax unified
 857              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccIUkXZB.s 			page 66


 858 0656 23FB1213 		smladx r3, r3, r2, r1
 859              	@ 0 "" 2
 860              		.thumb
 861              		.syntax unified
 862 065a C7F85432 		str	r3, [r7, #596]
 863              		.loc 2 2002 9 discriminator 1
 864 065e D7F85432 		ldr	r3, [r7, #596]
 865              	.LBE155:
 866              	.LBE154:
 867              		.loc 1 323 14 discriminator 1
 868 0662 C7F83833 		str	r3, [r7, #824]
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x3, c0, acc1);
 869              		.loc 1 326 16 discriminator 1
 870 0666 D7F8F412 		ldr	r1, [r7, #756]
 871 066a D7F8FC22 		ldr	r2, [r7, #764]
 872 066e D7F83433 		ldr	r3, [r7, #820]
 873 0672 C7F87012 		str	r1, [r7, #624]
 874 0676 C7F86C22 		str	r2, [r7, #620]
 875 067a C7F86832 		str	r3, [r7, #616]
 876              	.LBB156:
 877              	.LBB157:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 878              		.loc 2 2001 3 discriminator 1
 879 067e D7F87032 		ldr	r3, [r7, #624]
 880 0682 D7F86C22 		ldr	r2, [r7, #620]
 881 0686 D7F86812 		ldr	r1, [r7, #616]
 882              		.syntax unified
 883              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 884 068a 23FB1213 		smladx r3, r3, r2, r1
 885              	@ 0 "" 2
 886              		.thumb
 887              		.syntax unified
 888 068e C7F86432 		str	r3, [r7, #612]
 889              		.loc 2 2002 9 discriminator 1
 890 0692 D7F86432 		ldr	r3, [r7, #612]
 891              	.LBE157:
 892              	.LBE156:
 893              		.loc 1 326 14 discriminator 1
 894 0696 C7F83433 		str	r3, [r7, #820]
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[4], x[5] */
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x0 = read_q15x2 ((q15_t *) px + 2);
 895              		.loc 1 329 26 discriminator 1
 896 069a 07F17C03 		add	r3, r7, #124
 897 069e 1B68     		ldr	r3, [r3]
 898              		.loc 1 329 14 discriminator 1
 899 06a0 0433     		adds	r3, r3, #4
 900 06a2 C7F87432 		str	r3, [r7, #628]
 901 06a6 D7F87432 		ldr	r3, [r7, #628]
 902 06aa 1B68     		ldr	r3, [r3]	@ unaligned
 903 06ac 1A46     		mov	r2, r3
 904              	.LBB158:
 905              	.LBB159:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 906              		.loc 3 459 3 discriminator 1
ARM GAS  /tmp/ccIUkXZB.s 			page 67


 907 06ae 07F12C03 		add	r3, r7, #44
 908 06b2 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 909              		.loc 3 461 10 discriminator 1
 910 06b4 07F12C03 		add	r3, r7, #44
 911 06b8 1B68     		ldr	r3, [r3]
 912              	.LBE159:
 913              	.LBE158:
 914              		.loc 1 329 14 discriminator 1
 915 06ba C7F82433 		str	r3, [r7, #804]
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[5], x[6] */
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x1 = read_q15x2 ((q15_t *) px + 3);
 916              		.loc 1 332 26 discriminator 1
 917 06be 07F17C03 		add	r3, r7, #124
 918 06c2 1B68     		ldr	r3, [r3]
 919              		.loc 1 332 14 discriminator 1
 920 06c4 0633     		adds	r3, r3, #6
 921 06c6 C7F87832 		str	r3, [r7, #632]
 922 06ca D7F87832 		ldr	r3, [r7, #632]
 923 06ce 1B68     		ldr	r3, [r3]	@ unaligned
 924 06d0 1A46     		mov	r2, r3
 925              	.LBB160:
 926              	.LBB161:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 927              		.loc 3 459 3 discriminator 1
 928 06d2 07F12803 		add	r3, r7, #40
 929 06d6 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 930              		.loc 3 461 10 discriminator 1
 931 06d8 07F12803 		add	r3, r7, #40
 932 06dc 1B68     		ldr	r3, [r3]
 933              	.LBE161:
 934              	.LBE160:
 935              		.loc 1 332 14 discriminator 1
 936 06de C7F82033 		str	r3, [r7, #800]
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 4U;
 937              		.loc 1 333 6 discriminator 1
 938 06e2 07F17C03 		add	r3, r7, #124
 939 06e6 1B68     		ldr	r3, [r3]
 940 06e8 03F10802 		add	r2, r3, #8
 941 06ec 07F17C03 		add	r3, r7, #124
 942 06f0 1A60     		str	r2, [r3]
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x0, c0, acc2);
 943              		.loc 1 336 16 discriminator 1
 944 06f2 D7F82413 		ldr	r1, [r7, #804]
 945 06f6 D7F8FC22 		ldr	r2, [r7, #764]
 946 06fa D7F83033 		ldr	r3, [r7, #816]
 947 06fe C7F88812 		str	r1, [r7, #648]
 948 0702 C7F88422 		str	r2, [r7, #644]
 949 0706 C7F88032 		str	r3, [r7, #640]
 950              	.LBB162:
 951              	.LBB163:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 952              		.loc 2 2001 3 discriminator 1
ARM GAS  /tmp/ccIUkXZB.s 			page 68


 953 070a D7F88832 		ldr	r3, [r7, #648]
 954 070e D7F88422 		ldr	r2, [r7, #644]
 955 0712 D7F88012 		ldr	r1, [r7, #640]
 956              		.syntax unified
 957              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 958 0716 23FB1213 		smladx r3, r3, r2, r1
 959              	@ 0 "" 2
 960              		.thumb
 961              		.syntax unified
 962 071a C7F87C32 		str	r3, [r7, #636]
 963              		.loc 2 2002 9 discriminator 1
 964 071e D7F87C32 		ldr	r3, [r7, #636]
 965              	.LBE163:
 966              	.LBE162:
 967              		.loc 1 336 14 discriminator 1
 968 0722 C7F83033 		str	r3, [r7, #816]
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x1, c0, acc3);
 969              		.loc 1 339 16 discriminator 1
 970 0726 D7F82013 		ldr	r1, [r7, #800]
 971 072a D7F8FC22 		ldr	r2, [r7, #764]
 972 072e D7F82C33 		ldr	r3, [r7, #812]
 973 0732 C7F89812 		str	r1, [r7, #664]
 974 0736 C7F89422 		str	r2, [r7, #660]
 975 073a C7F89032 		str	r3, [r7, #656]
 976              	.LBB164:
 977              	.LBB165:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 978              		.loc 2 2001 3 discriminator 1
 979 073e D7F89832 		ldr	r3, [r7, #664]
 980 0742 D7F89422 		ldr	r2, [r7, #660]
 981 0746 D7F89012 		ldr	r1, [r7, #656]
 982              		.syntax unified
 983              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 984 074a 23FB1213 		smladx r3, r3, r2, r1
 985              	@ 0 "" 2
 986              		.thumb
 987              		.syntax unified
 988 074e C7F88C32 		str	r3, [r7, #652]
 989              		.loc 2 2002 9 discriminator 1
 990 0752 D7F88C32 		ldr	r3, [r7, #652]
 991              	.LBE165:
 992              	.LBE164:
 993              		.loc 1 339 14 discriminator 1
 994 0756 C7F82C33 		str	r3, [r7, #812]
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       } while (--k);
 995              		.loc 1 341 7 discriminator 1
 996 075a D7F81033 		ldr	r3, [r7, #784]
 997 075e 013B     		subs	r3, r3, #1
 998 0760 C7F81033 		str	r3, [r7, #784]
 999 0764 D7F81033 		ldr	r3, [r7, #784]
 1000 0768 002B     		cmp	r3, #0
 1001 076a 7FF481AE 		bne	.L41
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* For the next MAC operations, SIMD is not used
ARM GAS  /tmp/ccIUkXZB.s 			page 69


 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4U;
 1002              		.loc 1 348 9
 1003 076e 3B46     		mov	r3, r7
 1004 0770 1B68     		ldr	r3, [r3]
 1005 0772 03F00303 		and	r3, r3, #3
 1006 0776 C7F81033 		str	r3, [r7, #784]
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 1U)
 1007              		.loc 1 350 10
 1008 077a D7F81033 		ldr	r3, [r7, #784]
 1009 077e 012B     		cmp	r3, #1
 1010 0780 40F0AF80 		bne	.L42
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5] */
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = *(py+1);
 1011              		.loc 1 353 18
 1012 0784 07F17803 		add	r3, r7, #120
 1013 0788 1B68     		ldr	r3, [r3]
 1014 078a 0233     		adds	r3, r3, #2
 1015              		.loc 1 353 14
 1016 078c B3F90030 		ldrsh	r3, [r3]
 1017              		.loc 1 353 12
 1018 0790 C7F8FC32 		str	r3, [r7, #764]
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16U;
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #else
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1019              		.loc 1 358 12
 1020 0794 D7F8FC32 		ldr	r3, [r7, #764]
 1021 0798 9BB2     		uxth	r3, r3
 1022 079a C7F8FC32 		str	r3, [r7, #764]
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7] */
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = read_q15x2 ((q15_t *) px);
 1023              		.loc 1 362 14
 1024 079e 07F17C03 		add	r3, r7, #124
 1025 07a2 1A68     		ldr	r2, [r3]
 1026 07a4 07F5E073 		add	r3, r7, #448
 1027 07a8 1A60     		str	r2, [r3]
 1028 07aa 07F5E073 		add	r3, r7, #448
 1029 07ae 1B68     		ldr	r3, [r3]
 1030 07b0 1B68     		ldr	r3, [r3]	@ unaligned
 1031 07b2 1A46     		mov	r2, r3
 1032              	.LBB166:
 1033              	.LBB167:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1034              		.loc 3 459 3
 1035 07b4 07F14003 		add	r3, r7, #64
 1036 07b8 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1037              		.loc 3 461 10
ARM GAS  /tmp/ccIUkXZB.s 			page 70


 1038 07ba 07F14003 		add	r3, r7, #64
 1039 07be 1B68     		ldr	r3, [r3]
 1040              	.LBE167:
 1041              	.LBE166:
 1042              		.loc 1 362 14
 1043 07c0 C7F8F432 		str	r3, [r7, #756]
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 		px++;
 1044              		.loc 1 363 5
 1045 07c4 07F17C03 		add	r3, r7, #124
 1046 07c8 1B68     		ldr	r3, [r3]
 1047 07ca 9A1C     		adds	r2, r3, #2
 1048 07cc 07F17C03 		add	r3, r7, #124
 1049 07d0 1A60     		str	r2, [r3]
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
 1050              		.loc 1 366 16
 1051 07d2 D7F82403 		ldr	r0, [r7, #804]
 1052 07d6 D7F8FC12 		ldr	r1, [r7, #764]
 1053 07da D7F83823 		ldr	r2, [r7, #824]
 1054 07de 07F5E873 		add	r3, r7, #464
 1055 07e2 1860     		str	r0, [r3]
 1056 07e4 07F5E673 		add	r3, r7, #460
 1057 07e8 1960     		str	r1, [r3]
 1058 07ea 07F5E473 		add	r3, r7, #456
 1059 07ee 1A60     		str	r2, [r3]
 1060              	.LBB168:
 1061              	.LBB169:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1062              		.loc 2 1993 3
 1063 07f0 07F5E873 		add	r3, r7, #464
 1064 07f4 1B68     		ldr	r3, [r3]
 1065 07f6 07F5E672 		add	r2, r7, #460
 1066 07fa 1268     		ldr	r2, [r2]
 1067 07fc 07F5E471 		add	r1, r7, #456
 1068 0800 0968     		ldr	r1, [r1]
 1069              		.syntax unified
 1070              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1071 0802 23FB0212 		smlad r2, r3, r2, r1
 1072              	@ 0 "" 2
 1073              		.thumb
 1074              		.syntax unified
 1075 0806 07F5E273 		add	r3, r7, #452
 1076 080a 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1077              		.loc 2 1994 9
 1078 080c 07F5E273 		add	r3, r7, #452
 1079 0810 1B68     		ldr	r3, [r3]
 1080              	.LBE169:
 1081              	.LBE168:
 1082              		.loc 1 366 14
 1083 0812 C7F83833 		str	r3, [r7, #824]
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
 1084              		.loc 1 367 16
 1085 0816 D7F82003 		ldr	r0, [r7, #800]
 1086 081a D7F8FC12 		ldr	r1, [r7, #764]
 1087 081e D7F83423 		ldr	r2, [r7, #820]
ARM GAS  /tmp/ccIUkXZB.s 			page 71


 1088 0822 07F5F073 		add	r3, r7, #480
 1089 0826 1860     		str	r0, [r3]
 1090 0828 07F5EE73 		add	r3, r7, #476
 1091 082c 1960     		str	r1, [r3]
 1092 082e 07F5EC73 		add	r3, r7, #472
 1093 0832 1A60     		str	r2, [r3]
 1094              	.LBB170:
 1095              	.LBB171:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1096              		.loc 2 1993 3
 1097 0834 07F5F073 		add	r3, r7, #480
 1098 0838 1B68     		ldr	r3, [r3]
 1099 083a 07F5EE72 		add	r2, r7, #476
 1100 083e 1268     		ldr	r2, [r2]
 1101 0840 07F5EC71 		add	r1, r7, #472
 1102 0844 0968     		ldr	r1, [r1]
 1103              		.syntax unified
 1104              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1105 0846 23FB0212 		smlad r2, r3, r2, r1
 1106              	@ 0 "" 2
 1107              		.thumb
 1108              		.syntax unified
 1109 084a 07F5EA73 		add	r3, r7, #468
 1110 084e 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1111              		.loc 2 1994 9
 1112 0850 07F5EA73 		add	r3, r7, #468
 1113 0854 1B68     		ldr	r3, [r3]
 1114              	.LBE171:
 1115              	.LBE170:
 1116              		.loc 1 367 14
 1117 0856 C7F83433 		str	r3, [r7, #820]
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
 1118              		.loc 1 368 16
 1119 085a D7F82003 		ldr	r0, [r7, #800]
 1120 085e D7F8FC12 		ldr	r1, [r7, #764]
 1121 0862 D7F83023 		ldr	r2, [r7, #816]
 1122 0866 07F5F873 		add	r3, r7, #496
 1123 086a 1860     		str	r0, [r3]
 1124 086c 07F5F673 		add	r3, r7, #492
 1125 0870 1960     		str	r1, [r3]
 1126 0872 07F5F473 		add	r3, r7, #488
 1127 0876 1A60     		str	r2, [r3]
 1128              	.LBB172:
 1129              	.LBB173:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1130              		.loc 2 2001 3
 1131 0878 07F5F873 		add	r3, r7, #496
 1132 087c 1B68     		ldr	r3, [r3]
 1133 087e 07F5F672 		add	r2, r7, #492
 1134 0882 1268     		ldr	r2, [r2]
 1135 0884 07F5F471 		add	r1, r7, #488
 1136 0888 0968     		ldr	r1, [r1]
 1137              		.syntax unified
 1138              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1139 088a 23FB1212 		smladx r2, r3, r2, r1
 1140              	@ 0 "" 2
ARM GAS  /tmp/ccIUkXZB.s 			page 72


 1141              		.thumb
 1142              		.syntax unified
 1143 088e 07F5F273 		add	r3, r7, #484
 1144 0892 1A60     		str	r2, [r3]
 1145              		.loc 2 2002 9
 1146 0894 07F5F273 		add	r3, r7, #484
 1147 0898 1B68     		ldr	r3, [r3]
 1148              	.LBE173:
 1149              	.LBE172:
 1150              		.loc 1 368 14
 1151 089a C7F83033 		str	r3, [r7, #816]
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 1152              		.loc 1 369 16
 1153 089e D7F8F402 		ldr	r0, [r7, #756]
 1154 08a2 D7F8FC12 		ldr	r1, [r7, #764]
 1155 08a6 D7F82C23 		ldr	r2, [r7, #812]
 1156 08aa 07F50073 		add	r3, r7, #512
 1157 08ae 1860     		str	r0, [r3]
 1158 08b0 07F5FE73 		add	r3, r7, #508
 1159 08b4 1960     		str	r1, [r3]
 1160 08b6 07F5FC73 		add	r3, r7, #504
 1161 08ba 1A60     		str	r2, [r3]
 1162              	.LBB174:
 1163              	.LBB175:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1164              		.loc 2 2001 3
 1165 08bc 07F50073 		add	r3, r7, #512
 1166 08c0 1B68     		ldr	r3, [r3]
 1167 08c2 07F5FE72 		add	r2, r7, #508
 1168 08c6 1268     		ldr	r2, [r2]
 1169 08c8 07F5FC71 		add	r1, r7, #504
 1170 08cc 0968     		ldr	r1, [r1]
 1171              		.syntax unified
 1172              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1173 08ce 23FB1212 		smladx r2, r3, r2, r1
 1174              	@ 0 "" 2
 1175              		.thumb
 1176              		.syntax unified
 1177 08d2 07F5FA73 		add	r3, r7, #500
 1178 08d6 1A60     		str	r2, [r3]
 1179              		.loc 2 2002 9
 1180 08d8 07F5FA73 		add	r3, r7, #500
 1181 08dc 1B68     		ldr	r3, [r3]
 1182              	.LBE175:
 1183              	.LBE174:
 1184              		.loc 1 369 14
 1185 08de C7F82C33 		str	r3, [r7, #812]
 1186              	.L42:
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 2U)
 1187              		.loc 1 372 10
 1188 08e2 D7F81033 		ldr	r3, [r7, #784]
 1189 08e6 022B     		cmp	r3, #2
 1190 08e8 40F0C980 		bne	.L48
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
ARM GAS  /tmp/ccIUkXZB.s 			page 73


 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = read_q15x2 ((q15_t *) py);
 1191              		.loc 1 375 14
 1192 08ec 07F17803 		add	r3, r7, #120
 1193 08f0 1A68     		ldr	r2, [r3]
 1194 08f2 07F5BA73 		add	r3, r7, #372
 1195 08f6 1A60     		str	r2, [r3]
 1196 08f8 07F5BA73 		add	r3, r7, #372
 1197 08fc 1B68     		ldr	r3, [r3]
 1198 08fe 1B68     		ldr	r3, [r3]	@ unaligned
 1199 0900 1A46     		mov	r2, r3
 1200              	.LBB176:
 1201              	.LBB177:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1202              		.loc 3 459 3
 1203 0902 07F14C03 		add	r3, r7, #76
 1204 0906 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1205              		.loc 3 461 10
 1206 0908 07F14C03 		add	r3, r7, #76
 1207 090c 1B68     		ldr	r3, [r3]
 1208              	.LBE177:
 1209              	.LBE176:
 1210              		.loc 1 375 14
 1211 090e C7F8FC32 		str	r3, [r7, #764]
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8] */
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = read_q15x2 ((q15_t *) px);
 1212              		.loc 1 378 14
 1213 0912 07F17C03 		add	r3, r7, #124
 1214 0916 1A68     		ldr	r2, [r3]
 1215 0918 07F5BC73 		add	r3, r7, #376
 1216 091c 1A60     		str	r2, [r3]
 1217 091e 07F5BC73 		add	r3, r7, #376
 1218 0922 1B68     		ldr	r3, [r3]
 1219 0924 1B68     		ldr	r3, [r3]	@ unaligned
 1220 0926 1A46     		mov	r2, r3
 1221              	.LBB178:
 1222              	.LBB179:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1223              		.loc 3 459 3
 1224 0928 07F14803 		add	r3, r7, #72
 1225 092c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1226              		.loc 3 461 10
 1227 092e 07F14803 		add	r3, r7, #72
 1228 0932 1B68     		ldr	r3, [r3]
 1229              	.LBE179:
 1230              	.LBE178:
 1231              		.loc 1 378 14
 1232 0934 C7F8F432 		str	r3, [r7, #756]
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[9] */
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = read_q15x2 ((q15_t *) px + 1);
 1233              		.loc 1 381 26
 1234 0938 07F17C03 		add	r3, r7, #124
 1235 093c 1B68     		ldr	r3, [r3]
 1236              		.loc 1 381 14
ARM GAS  /tmp/ccIUkXZB.s 			page 74


 1237 093e 9A1C     		adds	r2, r3, #2
 1238 0940 07F5BE73 		add	r3, r7, #380
 1239 0944 1A60     		str	r2, [r3]
 1240 0946 07F5BE73 		add	r3, r7, #380
 1241 094a 1B68     		ldr	r3, [r3]
 1242 094c 1B68     		ldr	r3, [r3]	@ unaligned
 1243 094e 1A46     		mov	r2, r3
 1244              	.LBB180:
 1245              	.LBB181:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1246              		.loc 3 459 3
 1247 0950 07F14403 		add	r3, r7, #68
 1248 0954 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1249              		.loc 3 461 10
 1250 0956 07F14403 		add	r3, r7, #68
 1251 095a 1B68     		ldr	r3, [r3]
 1252              	.LBE181:
 1253              	.LBE180:
 1254              		.loc 1 381 14
 1255 095c C7F8F832 		str	r3, [r7, #760]
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 2U;
 1256              		.loc 1 382 6
 1257 0960 07F17C03 		add	r3, r7, #124
 1258 0964 1B68     		ldr	r3, [r3]
 1259 0966 1A1D     		adds	r2, r3, #4
 1260 0968 07F17C03 		add	r3, r7, #124
 1261 096c 1A60     		str	r2, [r3]
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 1262              		.loc 1 385 16
 1263 096e D7F82403 		ldr	r0, [r7, #804]
 1264 0972 D7F8FC12 		ldr	r1, [r7, #764]
 1265 0976 D7F83823 		ldr	r2, [r7, #824]
 1266 097a 07F5C673 		add	r3, r7, #396
 1267 097e 1860     		str	r0, [r3]
 1268 0980 07F5C473 		add	r3, r7, #392
 1269 0984 1960     		str	r1, [r3]
 1270 0986 07F5C273 		add	r3, r7, #388
 1271 098a 1A60     		str	r2, [r3]
 1272              	.LBB182:
 1273              	.LBB183:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1274              		.loc 2 2001 3
 1275 098c 07F5C673 		add	r3, r7, #396
 1276 0990 1B68     		ldr	r3, [r3]
 1277 0992 07F5C472 		add	r2, r7, #392
 1278 0996 1268     		ldr	r2, [r2]
 1279 0998 07F5C271 		add	r1, r7, #388
 1280 099c 0968     		ldr	r1, [r1]
 1281              		.syntax unified
 1282              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1283 099e 23FB1212 		smladx r2, r3, r2, r1
 1284              	@ 0 "" 2
 1285              		.thumb
 1286              		.syntax unified
ARM GAS  /tmp/ccIUkXZB.s 			page 75


 1287 09a2 07F5C073 		add	r3, r7, #384
 1288 09a6 1A60     		str	r2, [r3]
 1289              		.loc 2 2002 9
 1290 09a8 07F5C073 		add	r3, r7, #384
 1291 09ac 1B68     		ldr	r3, [r3]
 1292              	.LBE183:
 1293              	.LBE182:
 1294              		.loc 1 385 14
 1295 09ae C7F83833 		str	r3, [r7, #824]
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 1296              		.loc 1 386 16
 1297 09b2 D7F82003 		ldr	r0, [r7, #800]
 1298 09b6 D7F8FC12 		ldr	r1, [r7, #764]
 1299 09ba D7F83423 		ldr	r2, [r7, #820]
 1300 09be 07F5CE73 		add	r3, r7, #412
 1301 09c2 1860     		str	r0, [r3]
 1302 09c4 07F5CC73 		add	r3, r7, #408
 1303 09c8 1960     		str	r1, [r3]
 1304 09ca 07F5CA73 		add	r3, r7, #404
 1305 09ce 1A60     		str	r2, [r3]
 1306              	.LBB184:
 1307              	.LBB185:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1308              		.loc 2 2001 3
 1309 09d0 07F5CE73 		add	r3, r7, #412
 1310 09d4 1B68     		ldr	r3, [r3]
 1311 09d6 07F5CC72 		add	r2, r7, #408
 1312 09da 1268     		ldr	r2, [r2]
 1313 09dc 07F5CA71 		add	r1, r7, #404
 1314 09e0 0968     		ldr	r1, [r1]
 1315              		.syntax unified
 1316              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1317 09e2 23FB1212 		smladx r2, r3, r2, r1
 1318              	@ 0 "" 2
 1319              		.thumb
 1320              		.syntax unified
 1321 09e6 07F5C873 		add	r3, r7, #400
 1322 09ea 1A60     		str	r2, [r3]
 1323              		.loc 2 2002 9
 1324 09ec 07F5C873 		add	r3, r7, #400
 1325 09f0 1B68     		ldr	r3, [r3]
 1326              	.LBE185:
 1327              	.LBE184:
 1328              		.loc 1 386 14
 1329 09f2 C7F83433 		str	r3, [r7, #820]
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
 1330              		.loc 1 387 16
 1331 09f6 D7F8F402 		ldr	r0, [r7, #756]
 1332 09fa D7F8FC12 		ldr	r1, [r7, #764]
 1333 09fe D7F83023 		ldr	r2, [r7, #816]
 1334 0a02 07F5D673 		add	r3, r7, #428
 1335 0a06 1860     		str	r0, [r3]
 1336 0a08 07F5D473 		add	r3, r7, #424
 1337 0a0c 1960     		str	r1, [r3]
 1338 0a0e 07F5D273 		add	r3, r7, #420
 1339 0a12 1A60     		str	r2, [r3]
 1340              	.LBB186:
ARM GAS  /tmp/ccIUkXZB.s 			page 76


 1341              	.LBB187:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1342              		.loc 2 2001 3
 1343 0a14 07F5D673 		add	r3, r7, #428
 1344 0a18 1B68     		ldr	r3, [r3]
 1345 0a1a 07F5D472 		add	r2, r7, #424
 1346 0a1e 1268     		ldr	r2, [r2]
 1347 0a20 07F5D271 		add	r1, r7, #420
 1348 0a24 0968     		ldr	r1, [r1]
 1349              		.syntax unified
 1350              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1351 0a26 23FB1212 		smladx r2, r3, r2, r1
 1352              	@ 0 "" 2
 1353              		.thumb
 1354              		.syntax unified
 1355 0a2a 07F5D073 		add	r3, r7, #416
 1356 0a2e 1A60     		str	r2, [r3]
 1357              		.loc 2 2002 9
 1358 0a30 07F5D073 		add	r3, r7, #416
 1359 0a34 1B68     		ldr	r3, [r3]
 1360              	.LBE187:
 1361              	.LBE186:
 1362              		.loc 1 387 14
 1363 0a36 C7F83033 		str	r3, [r7, #816]
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
 1364              		.loc 1 388 16
 1365 0a3a D7F8F802 		ldr	r0, [r7, #760]
 1366 0a3e D7F8FC12 		ldr	r1, [r7, #764]
 1367 0a42 D7F82C23 		ldr	r2, [r7, #812]
 1368 0a46 07F5DE73 		add	r3, r7, #444
 1369 0a4a 1860     		str	r0, [r3]
 1370 0a4c 07F5DC73 		add	r3, r7, #440
 1371 0a50 1960     		str	r1, [r3]
 1372 0a52 07F5DA73 		add	r3, r7, #436
 1373 0a56 1A60     		str	r2, [r3]
 1374              	.LBB188:
 1375              	.LBB189:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1376              		.loc 2 2001 3
 1377 0a58 07F5DE73 		add	r3, r7, #444
 1378 0a5c 1B68     		ldr	r3, [r3]
 1379 0a5e 07F5DC72 		add	r2, r7, #440
 1380 0a62 1268     		ldr	r2, [r2]
 1381 0a64 07F5DA71 		add	r1, r7, #436
 1382 0a68 0968     		ldr	r1, [r1]
 1383              		.syntax unified
 1384              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1385 0a6a 23FB1212 		smladx r2, r3, r2, r1
 1386              	@ 0 "" 2
 1387              		.thumb
 1388              		.syntax unified
 1389 0a6e 07F5D873 		add	r3, r7, #432
 1390 0a72 1A60     		str	r2, [r3]
 1391              		.loc 2 2002 9
 1392 0a74 07F5D873 		add	r3, r7, #432
 1393 0a78 1B68     		ldr	r3, [r3]
 1394              	.LBE189:
ARM GAS  /tmp/ccIUkXZB.s 			page 77


 1395              	.LBE188:
 1396              		.loc 1 388 14
 1397 0a7a C7F82C33 		str	r3, [r7, #812]
 1398              	.L48:
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       if (k == 3U)
 1399              		.loc 1 391 10
 1400 0a7e D7F81033 		ldr	r3, [r7, #784]
 1401 0a82 032B     		cmp	r3, #3
 1402 0a84 40F07281 		bne	.L56
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = read_q15x2 ((q15_t *) py);
 1403              		.loc 1 394 14
 1404 0a88 07F17803 		add	r3, r7, #120
 1405 0a8c 1A68     		ldr	r2, [r3]
 1406 0a8e 07F1E403 		add	r3, r7, #228
 1407 0a92 1A60     		str	r2, [r3]
 1408 0a94 07F1E403 		add	r3, r7, #228
 1409 0a98 1B68     		ldr	r3, [r3]
 1410 0a9a 1B68     		ldr	r3, [r3]	@ unaligned
 1411 0a9c 1A46     		mov	r2, r3
 1412              	.LBB190:
 1413              	.LBB191:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1414              		.loc 3 459 3
 1415 0a9e 07F15C03 		add	r3, r7, #92
 1416 0aa2 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1417              		.loc 3 461 10
 1418 0aa4 07F15C03 		add	r3, r7, #92
 1419 0aa8 1B68     		ldr	r3, [r3]
 1420              	.LBE191:
 1421              	.LBE190:
 1422              		.loc 1 394 14
 1423 0aaa C7F8FC32 		str	r3, [r7, #764]
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[7], x[8] */
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x3 = read_q15x2 ((q15_t *) px);
 1424              		.loc 1 397 14
 1425 0aae 07F17C03 		add	r3, r7, #124
 1426 0ab2 1A68     		ldr	r2, [r3]
 1427 0ab4 07F1E803 		add	r3, r7, #232
 1428 0ab8 1A60     		str	r2, [r3]
 1429 0aba 07F1E803 		add	r3, r7, #232
 1430 0abe 1B68     		ldr	r3, [r3]
 1431 0ac0 1B68     		ldr	r3, [r3]	@ unaligned
 1432 0ac2 1A46     		mov	r2, r3
 1433              	.LBB192:
 1434              	.LBB193:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1435              		.loc 3 459 3
 1436 0ac4 07F15803 		add	r3, r7, #88
 1437 0ac8 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1438              		.loc 3 461 10
ARM GAS  /tmp/ccIUkXZB.s 			page 78


 1439 0aca 07F15803 		add	r3, r7, #88
 1440 0ace 1B68     		ldr	r3, [r3]
 1441              	.LBE193:
 1442              	.LBE192:
 1443              		.loc 1 397 14
 1444 0ad0 C7F8F432 		str	r3, [r7, #756]
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[9] */
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x2 = read_q15x2 ((q15_t *) px + 1);
 1445              		.loc 1 400 26
 1446 0ad4 07F17C03 		add	r3, r7, #124
 1447 0ad8 1B68     		ldr	r3, [r3]
 1448              		.loc 1 400 14
 1449 0ada 9A1C     		adds	r2, r3, #2
 1450 0adc 07F1EC03 		add	r3, r7, #236
 1451 0ae0 1A60     		str	r2, [r3]
 1452 0ae2 07F1EC03 		add	r3, r7, #236
 1453 0ae6 1B68     		ldr	r3, [r3]
 1454 0ae8 1B68     		ldr	r3, [r3]	@ unaligned
 1455 0aea 1A46     		mov	r2, r3
 1456              	.LBB194:
 1457              	.LBB195:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1458              		.loc 3 459 3
 1459 0aec 07F15403 		add	r3, r7, #84
 1460 0af0 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1461              		.loc 3 461 10
 1462 0af2 07F15403 		add	r3, r7, #84
 1463 0af6 1B68     		ldr	r3, [r3]
 1464              	.LBE195:
 1465              	.LBE194:
 1466              		.loc 1 400 14
 1467 0af8 C7F8F832 		str	r3, [r7, #760]
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
 1468              		.loc 1 403 16
 1469 0afc D7F82403 		ldr	r0, [r7, #804]
 1470 0b00 D7F8FC12 		ldr	r1, [r7, #764]
 1471 0b04 D7F83823 		ldr	r2, [r7, #824]
 1472 0b08 07F1FC03 		add	r3, r7, #252
 1473 0b0c 1860     		str	r0, [r3]
 1474 0b0e 07F1F803 		add	r3, r7, #248
 1475 0b12 1960     		str	r1, [r3]
 1476 0b14 07F1F403 		add	r3, r7, #244
 1477 0b18 1A60     		str	r2, [r3]
 1478              	.LBB196:
 1479              	.LBB197:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1480              		.loc 2 2001 3
 1481 0b1a 07F1FC03 		add	r3, r7, #252
 1482 0b1e 1B68     		ldr	r3, [r3]
 1483 0b20 07F1F802 		add	r2, r7, #248
 1484 0b24 1268     		ldr	r2, [r2]
 1485 0b26 07F1F401 		add	r1, r7, #244
 1486 0b2a 0968     		ldr	r1, [r1]
ARM GAS  /tmp/ccIUkXZB.s 			page 79


 1487              		.syntax unified
 1488              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1489 0b2c 23FB1212 		smladx r2, r3, r2, r1
 1490              	@ 0 "" 2
 1491              		.thumb
 1492              		.syntax unified
 1493 0b30 07F1F003 		add	r3, r7, #240
 1494 0b34 1A60     		str	r2, [r3]
 1495              		.loc 2 2002 9
 1496 0b36 07F1F003 		add	r3, r7, #240
 1497 0b3a 1B68     		ldr	r3, [r3]
 1498              	.LBE197:
 1499              	.LBE196:
 1500              		.loc 1 403 14
 1501 0b3c C7F83833 		str	r3, [r7, #824]
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
 1502              		.loc 1 404 16
 1503 0b40 D7F82003 		ldr	r0, [r7, #800]
 1504 0b44 D7F8FC12 		ldr	r1, [r7, #764]
 1505 0b48 D7F83423 		ldr	r2, [r7, #820]
 1506 0b4c 07F58673 		add	r3, r7, #268
 1507 0b50 1860     		str	r0, [r3]
 1508 0b52 07F58473 		add	r3, r7, #264
 1509 0b56 1960     		str	r1, [r3]
 1510 0b58 07F58273 		add	r3, r7, #260
 1511 0b5c 1A60     		str	r2, [r3]
 1512              	.LBB198:
 1513              	.LBB199:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1514              		.loc 2 2001 3
 1515 0b5e 07F58673 		add	r3, r7, #268
 1516 0b62 1B68     		ldr	r3, [r3]
 1517 0b64 07F58472 		add	r2, r7, #264
 1518 0b68 1268     		ldr	r2, [r2]
 1519 0b6a 07F58271 		add	r1, r7, #260
 1520 0b6e 0968     		ldr	r1, [r1]
 1521              		.syntax unified
 1522              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1523 0b70 23FB1212 		smladx r2, r3, r2, r1
 1524              	@ 0 "" 2
 1525              		.thumb
 1526              		.syntax unified
 1527 0b74 07F58073 		add	r3, r7, #256
 1528 0b78 1A60     		str	r2, [r3]
 1529              		.loc 2 2002 9
 1530 0b7a 07F58073 		add	r3, r7, #256
 1531 0b7e 1B68     		ldr	r3, [r3]
 1532              	.LBE199:
 1533              	.LBE198:
 1534              		.loc 1 404 14
 1535 0b80 C7F83433 		str	r3, [r7, #820]
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
 1536              		.loc 1 405 16
 1537 0b84 D7F8F402 		ldr	r0, [r7, #756]
 1538 0b88 D7F8FC12 		ldr	r1, [r7, #764]
 1539 0b8c D7F83023 		ldr	r2, [r7, #816]
 1540 0b90 07F58E73 		add	r3, r7, #284
ARM GAS  /tmp/ccIUkXZB.s 			page 80


 1541 0b94 1860     		str	r0, [r3]
 1542 0b96 07F58C73 		add	r3, r7, #280
 1543 0b9a 1960     		str	r1, [r3]
 1544 0b9c 07F58A73 		add	r3, r7, #276
 1545 0ba0 1A60     		str	r2, [r3]
 1546              	.LBB200:
 1547              	.LBB201:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1548              		.loc 2 2001 3
 1549 0ba2 07F58E73 		add	r3, r7, #284
 1550 0ba6 1B68     		ldr	r3, [r3]
 1551 0ba8 07F58C72 		add	r2, r7, #280
 1552 0bac 1268     		ldr	r2, [r2]
 1553 0bae 07F58A71 		add	r1, r7, #276
 1554 0bb2 0968     		ldr	r1, [r1]
 1555              		.syntax unified
 1556              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1557 0bb4 23FB1212 		smladx r2, r3, r2, r1
 1558              	@ 0 "" 2
 1559              		.thumb
 1560              		.syntax unified
 1561 0bb8 07F58873 		add	r3, r7, #272
 1562 0bbc 1A60     		str	r2, [r3]
 1563              		.loc 2 2002 9
 1564 0bbe 07F58873 		add	r3, r7, #272
 1565 0bc2 1B68     		ldr	r3, [r3]
 1566              	.LBE201:
 1567              	.LBE200:
 1568              		.loc 1 405 14
 1569 0bc4 C7F83033 		str	r3, [r7, #816]
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
 1570              		.loc 1 406 16
 1571 0bc8 D7F8F802 		ldr	r0, [r7, #760]
 1572 0bcc D7F8FC12 		ldr	r1, [r7, #764]
 1573 0bd0 D7F82C23 		ldr	r2, [r7, #812]
 1574 0bd4 07F59673 		add	r3, r7, #300
 1575 0bd8 1860     		str	r0, [r3]
 1576 0bda 07F59473 		add	r3, r7, #296
 1577 0bde 1960     		str	r1, [r3]
 1578 0be0 07F59273 		add	r3, r7, #292
 1579 0be4 1A60     		str	r2, [r3]
 1580              	.LBB202:
 1581              	.LBB203:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1582              		.loc 2 2001 3
 1583 0be6 07F59673 		add	r3, r7, #300
 1584 0bea 1B68     		ldr	r3, [r3]
 1585 0bec 07F59472 		add	r2, r7, #296
 1586 0bf0 1268     		ldr	r2, [r2]
 1587 0bf2 07F59271 		add	r1, r7, #292
 1588 0bf6 0968     		ldr	r1, [r1]
 1589              		.syntax unified
 1590              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1591 0bf8 23FB1212 		smladx r2, r3, r2, r1
 1592              	@ 0 "" 2
 1593              		.thumb
 1594              		.syntax unified
ARM GAS  /tmp/ccIUkXZB.s 			page 81


 1595 0bfc 07F59073 		add	r3, r7, #288
 1596 0c00 1A60     		str	r2, [r3]
 1597              		.loc 2 2002 9
 1598 0c02 07F59073 		add	r3, r7, #288
 1599 0c06 1B68     		ldr	r3, [r3]
 1600              	.LBE203:
 1601              	.LBE202:
 1602              		.loc 1 406 14
 1603 0c08 C7F82C33 		str	r3, [r7, #812]
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read y[srcBLen - 7] */
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 		c0 = *(py-1);
 1604              		.loc 1 409 12
 1605 0c0c 07F17803 		add	r3, r7, #120
 1606 0c10 1B68     		ldr	r3, [r3]
 1607 0c12 023B     		subs	r3, r3, #2
 1608              		.loc 1 409 8
 1609 0c14 B3F90030 		ldrsh	r3, [r3]
 1610              		.loc 1 409 6
 1611 0c18 C7F8FC32 		str	r3, [r7, #764]
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 << 16U;
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #else
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1612              		.loc 1 413 12
 1613 0c1c D7F8FC32 		ldr	r3, [r7, #764]
 1614 0c20 9BB2     		uxth	r3, r3
 1615 0c22 C7F8FC32 		str	r3, [r7, #764]
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Read x[10] */
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         x3 =  read_q15x2 ((q15_t *) px + 2);
 1616              		.loc 1 417 27
 1617 0c26 07F17C03 		add	r3, r7, #124
 1618 0c2a 1B68     		ldr	r3, [r3]
 1619              		.loc 1 417 15
 1620 0c2c 1A1D     		adds	r2, r3, #4
 1621 0c2e 07F59873 		add	r3, r7, #304
 1622 0c32 1A60     		str	r2, [r3]
 1623 0c34 07F59873 		add	r3, r7, #304
 1624 0c38 1B68     		ldr	r3, [r3]
 1625 0c3a 1B68     		ldr	r3, [r3]	@ unaligned
 1626 0c3c 1A46     		mov	r2, r3
 1627              	.LBB204:
 1628              	.LBB205:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1629              		.loc 3 459 3
 1630 0c3e 07F15003 		add	r3, r7, #80
 1631 0c42 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1632              		.loc 3 461 10
 1633 0c44 07F15003 		add	r3, r7, #80
 1634 0c48 1B68     		ldr	r3, [r3]
 1635              	.LBE205:
 1636              	.LBE204:
 1637              		.loc 1 417 15
 1638 0c4a C7F8F432 		str	r3, [r7, #756]
ARM GAS  /tmp/ccIUkXZB.s 			page 82


 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 		px += 3U;
 1639              		.loc 1 418 6
 1640 0c4e 07F17C03 		add	r3, r7, #124
 1641 0c52 1B68     		ldr	r3, [r3]
 1642 0c54 9A1D     		adds	r2, r3, #6
 1643 0c56 07F17C03 		add	r3, r7, #124
 1644 0c5a 1A60     		str	r2, [r3]
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
 1645              		.loc 1 421 16
 1646 0c5c D7F82003 		ldr	r0, [r7, #800]
 1647 0c60 D7F8FC12 		ldr	r1, [r7, #764]
 1648 0c64 D7F83823 		ldr	r2, [r7, #824]
 1649 0c68 07F5A073 		add	r3, r7, #320
 1650 0c6c 1860     		str	r0, [r3]
 1651 0c6e 07F59E73 		add	r3, r7, #316
 1652 0c72 1960     		str	r1, [r3]
 1653 0c74 07F59C73 		add	r3, r7, #312
 1654 0c78 1A60     		str	r2, [r3]
 1655              	.LBB206:
 1656              	.LBB207:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1657              		.loc 2 2001 3
 1658 0c7a 07F5A073 		add	r3, r7, #320
 1659 0c7e 1B68     		ldr	r3, [r3]
 1660 0c80 07F59E72 		add	r2, r7, #316
 1661 0c84 1268     		ldr	r2, [r2]
 1662 0c86 07F59C71 		add	r1, r7, #312
 1663 0c8a 0968     		ldr	r1, [r1]
 1664              		.syntax unified
 1665              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1666 0c8c 23FB1212 		smladx r2, r3, r2, r1
 1667              	@ 0 "" 2
 1668              		.thumb
 1669              		.syntax unified
 1670 0c90 07F59A73 		add	r3, r7, #308
 1671 0c94 1A60     		str	r2, [r3]
 1672              		.loc 2 2002 9
 1673 0c96 07F59A73 		add	r3, r7, #308
 1674 0c9a 1B68     		ldr	r3, [r3]
 1675              	.LBE207:
 1676              	.LBE206:
 1677              		.loc 1 421 14
 1678 0c9c C7F83833 		str	r3, [r7, #824]
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
 1679              		.loc 1 422 16
 1680 0ca0 D7F8F802 		ldr	r0, [r7, #760]
 1681 0ca4 D7F8FC12 		ldr	r1, [r7, #764]
 1682 0ca8 D7F83423 		ldr	r2, [r7, #820]
 1683 0cac 07F5A873 		add	r3, r7, #336
 1684 0cb0 1860     		str	r0, [r3]
 1685 0cb2 07F5A673 		add	r3, r7, #332
 1686 0cb6 1960     		str	r1, [r3]
 1687 0cb8 07F5A473 		add	r3, r7, #328
 1688 0cbc 1A60     		str	r2, [r3]
 1689              	.LBB208:
ARM GAS  /tmp/ccIUkXZB.s 			page 83


 1690              	.LBB209:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1691              		.loc 2 1993 3
 1692 0cbe 07F5A873 		add	r3, r7, #336
 1693 0cc2 1B68     		ldr	r3, [r3]
 1694 0cc4 07F5A672 		add	r2, r7, #332
 1695 0cc8 1268     		ldr	r2, [r2]
 1696 0cca 07F5A471 		add	r1, r7, #328
 1697 0cce 0968     		ldr	r1, [r1]
 1698              		.syntax unified
 1699              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1700 0cd0 23FB0212 		smlad r2, r3, r2, r1
 1701              	@ 0 "" 2
 1702              		.thumb
 1703              		.syntax unified
 1704 0cd4 07F5A273 		add	r3, r7, #324
 1705 0cd8 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1706              		.loc 2 1994 9
 1707 0cda 07F5A273 		add	r3, r7, #324
 1708 0cde 1B68     		ldr	r3, [r3]
 1709              	.LBE209:
 1710              	.LBE208:
 1711              		.loc 1 422 14
 1712 0ce0 C7F83433 		str	r3, [r7, #820]
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
 1713              		.loc 1 423 16
 1714 0ce4 D7F8F802 		ldr	r0, [r7, #760]
 1715 0ce8 D7F8FC12 		ldr	r1, [r7, #764]
 1716 0cec D7F83023 		ldr	r2, [r7, #816]
 1717 0cf0 07F5B073 		add	r3, r7, #352
 1718 0cf4 1860     		str	r0, [r3]
 1719 0cf6 07F5AE73 		add	r3, r7, #348
 1720 0cfa 1960     		str	r1, [r3]
 1721 0cfc 07F5AC73 		add	r3, r7, #344
 1722 0d00 1A60     		str	r2, [r3]
 1723              	.LBB210:
 1724              	.LBB211:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1725              		.loc 2 2001 3
 1726 0d02 07F5B073 		add	r3, r7, #352
 1727 0d06 1B68     		ldr	r3, [r3]
 1728 0d08 07F5AE72 		add	r2, r7, #348
 1729 0d0c 1268     		ldr	r2, [r2]
 1730 0d0e 07F5AC71 		add	r1, r7, #344
 1731 0d12 0968     		ldr	r1, [r1]
 1732              		.syntax unified
 1733              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1734 0d14 23FB1212 		smladx r2, r3, r2, r1
 1735              	@ 0 "" 2
 1736              		.thumb
 1737              		.syntax unified
 1738 0d18 07F5AA73 		add	r3, r7, #340
 1739 0d1c 1A60     		str	r2, [r3]
 1740              		.loc 2 2002 9
 1741 0d1e 07F5AA73 		add	r3, r7, #340
 1742 0d22 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIUkXZB.s 			page 84


 1743              	.LBE211:
 1744              	.LBE210:
 1745              		.loc 1 423 14
 1746 0d24 C7F83033 		str	r3, [r7, #816]
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
 1747              		.loc 1 424 16
 1748 0d28 D7F8F402 		ldr	r0, [r7, #756]
 1749 0d2c D7F8FC12 		ldr	r1, [r7, #764]
 1750 0d30 D7F82C23 		ldr	r2, [r7, #812]
 1751 0d34 07F5B873 		add	r3, r7, #368
 1752 0d38 1860     		str	r0, [r3]
 1753 0d3a 07F5B673 		add	r3, r7, #364
 1754 0d3e 1960     		str	r1, [r3]
 1755 0d40 07F5B473 		add	r3, r7, #360
 1756 0d44 1A60     		str	r2, [r3]
 1757              	.LBB212:
 1758              	.LBB213:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1759              		.loc 2 2001 3
 1760 0d46 07F5B873 		add	r3, r7, #368
 1761 0d4a 1B68     		ldr	r3, [r3]
 1762 0d4c 07F5B672 		add	r2, r7, #364
 1763 0d50 1268     		ldr	r2, [r2]
 1764 0d52 07F5B471 		add	r1, r7, #360
 1765 0d56 0968     		ldr	r1, [r1]
 1766              		.syntax unified
 1767              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1768 0d58 23FB1212 		smladx r2, r3, r2, r1
 1769              	@ 0 "" 2
 1770              		.thumb
 1771              		.syntax unified
 1772 0d5c 07F5B273 		add	r3, r7, #356
 1773 0d60 1A60     		str	r2, [r3]
 1774              		.loc 2 2002 9
 1775 0d62 07F5B273 		add	r3, r7, #356
 1776 0d66 1B68     		ldr	r3, [r3]
 1777              	.LBE213:
 1778              	.LBE212:
 1779              		.loc 1 424 14
 1780 0d68 C7F82C33 		str	r3, [r7, #812]
 1781              	.L56:
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       write_q15x2_ia (&pOut, __PKHBT((acc0 >> 15), (acc1 >> 15), 16));
 1782              		.loc 1 429 30
 1783 0d6c D7F83833 		ldr	r3, [r7, #824]
 1784 0d70 DB13     		asrs	r3, r3, #15
 1785 0d72 9AB2     		uxth	r2, r3
 1786 0d74 D7F83433 		ldr	r3, [r7, #820]
 1787 0d78 DB13     		asrs	r3, r3, #15
 1788 0d7a 1B04     		lsls	r3, r3, #16
 1789 0d7c 1343     		orrs	r3, r3, r2
 1790              		.loc 1 429 7
 1791 0d7e 1946     		mov	r1, r3
 1792 0d80 07F1D803 		add	r3, r7, #216
ARM GAS  /tmp/ccIUkXZB.s 			page 85


 1793 0d84 07F18002 		add	r2, r7, #128
 1794 0d88 1A60     		str	r2, [r3]
 1795 0d8a 07F1D403 		add	r3, r7, #212
 1796 0d8e 1960     		str	r1, [r3]
 1797              	.LBB214:
 1798              	.LBB215:
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 1799              		.loc 3 506 9
 1800 0d90 07F16403 		add	r3, r7, #100
 1801 0d94 07F1D402 		add	r2, r7, #212
 1802 0d98 1268     		ldr	r2, [r2]
 1803 0d9a 1A60     		str	r2, [r3]
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 1804              		.loc 3 508 3
 1805 0d9c 07F1D803 		add	r3, r7, #216
 1806 0da0 1B68     		ldr	r3, [r3]
 1807 0da2 1B68     		ldr	r3, [r3]
 1808 0da4 07F16402 		add	r2, r7, #100
 1809 0da8 1268     		ldr	r2, [r2]
 1810 0daa 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 1811              		.loc 3 509 9
 1812 0dac 07F1D803 		add	r3, r7, #216
 1813 0db0 1B68     		ldr	r3, [r3]
 1814 0db2 1B68     		ldr	r3, [r3]
 1815 0db4 1A1D     		adds	r2, r3, #4
 1816 0db6 07F1D803 		add	r3, r7, #216
 1817 0dba 1B68     		ldr	r3, [r3]
 1818 0dbc 1A60     		str	r2, [r3]
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1819              		.loc 3 510 1
 1820 0dbe 00BF     		nop
 1821              	.LBE215:
 1822              	.LBE214:
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       write_q15x2_ia (&pOut, __PKHBT((acc2 >> 15), (acc3 >> 15), 16));
 1823              		.loc 1 430 30
 1824 0dc0 D7F83033 		ldr	r3, [r7, #816]
 1825 0dc4 DB13     		asrs	r3, r3, #15
 1826 0dc6 9AB2     		uxth	r2, r3
 1827 0dc8 D7F82C33 		ldr	r3, [r7, #812]
 1828 0dcc DB13     		asrs	r3, r3, #15
 1829 0dce 1B04     		lsls	r3, r3, #16
 1830 0dd0 1343     		orrs	r3, r3, r2
 1831              		.loc 1 430 7
ARM GAS  /tmp/ccIUkXZB.s 			page 86


 1832 0dd2 1946     		mov	r1, r3
 1833 0dd4 07F1E003 		add	r3, r7, #224
 1834 0dd8 07F18002 		add	r2, r7, #128
 1835 0ddc 1A60     		str	r2, [r3]
 1836 0dde 07F1DC03 		add	r3, r7, #220
 1837 0de2 1960     		str	r1, [r3]
 1838              	.LBB216:
 1839              	.LBB217:
 506:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1840              		.loc 3 506 9
 1841 0de4 07F16003 		add	r3, r7, #96
 1842 0de8 07F1DC02 		add	r2, r7, #220
 1843 0dec 1268     		ldr	r2, [r2]
 1844 0dee 1A60     		str	r2, [r3]
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 1845              		.loc 3 508 3
 1846 0df0 07F1E003 		add	r3, r7, #224
 1847 0df4 1B68     		ldr	r3, [r3]
 1848 0df6 1B68     		ldr	r3, [r3]
 1849 0df8 07F16002 		add	r2, r7, #96
 1850 0dfc 1268     		ldr	r2, [r2]
 1851 0dfe 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1852              		.loc 3 509 9
 1853 0e00 07F1E003 		add	r3, r7, #224
 1854 0e04 1B68     		ldr	r3, [r3]
 1855 0e06 1B68     		ldr	r3, [r3]
 1856 0e08 1A1D     		adds	r2, r3, #4
 1857 0e0a 07F1E003 		add	r3, r7, #224
 1858 0e0e 1B68     		ldr	r3, [r3]
 1859 0e10 1A60     		str	r2, [r3]
 1860              		.loc 3 510 1
 1861 0e12 00BF     		nop
 1862              	.LBE217:
 1863              	.LBE216:
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #else
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       write_q15x2_ia (&pOut, __PKHBT((acc1 >> 15), (acc0 >> 15), 16));
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       write_q15x2_ia (&pOut, __PKHBT((acc3 >> 15), (acc2 >> 15), 16));
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** #endif /*#ifndef  ARM_MATH_BIG_ENDIAN*/
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 4 */
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       count += 4U;
 1864              		.loc 1 437 13
 1865 0e14 D7F80C33 		ldr	r3, [r7, #780]
 1866 0e18 0433     		adds	r3, r3, #4
 1867 0e1a C7F80C33 		str	r3, [r7, #780]
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 1868              		.loc 1 440 17
 1869 0e1e D7F80C33 		ldr	r3, [r7, #780]
 1870 0e22 5B00     		lsls	r3, r3, #1
 1871 0e24 D7F84423 		ldr	r2, [r7, #836]
 1872 0e28 1A44     		add	r2, r2, r3
 1873              		.loc 1 440 10
 1874 0e2a 07F17C03 		add	r3, r7, #124
 1875 0e2e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccIUkXZB.s 			page 87


 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 1876              		.loc 1 441 10
 1877 0e30 07F17803 		add	r3, r7, #120
 1878 0e34 D7F80023 		ldr	r2, [r7, #768]
 1879 0e38 1A60     		str	r2, [r3]
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 1880              		.loc 1 444 13
 1881 0e3a D7F80833 		ldr	r3, [r7, #776]
 1882 0e3e 013B     		subs	r3, r3, #1
 1883 0e40 C7F80833 		str	r3, [r7, #776]
 1884              	.L24:
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 1885              		.loc 1 274 11
 1886 0e44 D7F80833 		ldr	r3, [r7, #776]
 1887 0e48 002B     		cmp	r3, #0
 1888 0e4a 7FF4CFAA 		bne	.L69
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2 % 0x4U;
 1889              		.loc 1 449 12
 1890 0e4e D7F80433 		ldr	r3, [r7, #772]
 1891 0e52 03F00303 		and	r3, r3, #3
 1892 0e56 C7F80833 		str	r3, [r7, #776]
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0U)
 1893              		.loc 1 451 11
 1894 0e5a C7E0     		b	.L70
 1895              	.L75:
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
 1896              		.loc 1 454 11
 1897 0e5c 0023     		movs	r3, #0
 1898 0e5e C7F83C33 		str	r3, [r7, #828]
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen >> 2U;
 1899              		.loc 1 457 9
 1900 0e62 3B46     		mov	r3, r7
 1901 0e64 1B68     		ldr	r3, [r3]
 1902 0e66 9B08     		lsrs	r3, r3, #2
 1903 0e68 C7F81033 		str	r3, [r7, #784]
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0U)
 1904              		.loc 1 461 13
 1905 0e6c 6CE0     		b	.L71
 1906              	.L72:
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 1907              		.loc 1 464 28
ARM GAS  /tmp/ccIUkXZB.s 			page 88


 1908 0e6e 07F17C03 		add	r3, r7, #124
 1909 0e72 1B68     		ldr	r3, [r3]
 1910 0e74 991C     		adds	r1, r3, #2
 1911 0e76 07F17C02 		add	r2, r7, #124
 1912 0e7a 1160     		str	r1, [r2]
 1913              		.loc 1 464 25
 1914 0e7c B3F90030 		ldrsh	r3, [r3]
 1915              		.loc 1 464 17
 1916 0e80 1846     		mov	r0, r3
 1917              		.loc 1 464 36
 1918 0e82 07F17803 		add	r3, r7, #120
 1919 0e86 1B68     		ldr	r3, [r3]
 1920 0e88 991E     		subs	r1, r3, #2
 1921 0e8a 07F17802 		add	r2, r7, #120
 1922 0e8e 1160     		str	r1, [r2]
 1923              		.loc 1 464 33
 1924 0e90 B3F90030 		ldrsh	r3, [r3]
 1925              		.loc 1 464 31
 1926 0e94 03FB00F3 		mul	r3, r3, r0
 1927              		.loc 1 464 13
 1928 0e98 D7F83C23 		ldr	r2, [r7, #828]
 1929 0e9c 1344     		add	r3, r3, r2
 1930 0e9e C7F83C33 		str	r3, [r7, #828]
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 1931              		.loc 1 465 28
 1932 0ea2 07F17C03 		add	r3, r7, #124
 1933 0ea6 1B68     		ldr	r3, [r3]
 1934 0ea8 991C     		adds	r1, r3, #2
 1935 0eaa 07F17C02 		add	r2, r7, #124
 1936 0eae 1160     		str	r1, [r2]
 1937              		.loc 1 465 25
 1938 0eb0 B3F90030 		ldrsh	r3, [r3]
 1939              		.loc 1 465 17
 1940 0eb4 1846     		mov	r0, r3
 1941              		.loc 1 465 36
 1942 0eb6 07F17803 		add	r3, r7, #120
 1943 0eba 1B68     		ldr	r3, [r3]
 1944 0ebc 991E     		subs	r1, r3, #2
 1945 0ebe 07F17802 		add	r2, r7, #120
 1946 0ec2 1160     		str	r1, [r2]
 1947              		.loc 1 465 33
 1948 0ec4 B3F90030 		ldrsh	r3, [r3]
 1949              		.loc 1 465 31
 1950 0ec8 03FB00F3 		mul	r3, r3, r0
 1951              		.loc 1 465 13
 1952 0ecc D7F83C23 		ldr	r2, [r7, #828]
 1953 0ed0 1344     		add	r3, r3, r2
 1954 0ed2 C7F83C33 		str	r3, [r7, #828]
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 1955              		.loc 1 466 28
 1956 0ed6 07F17C03 		add	r3, r7, #124
 1957 0eda 1B68     		ldr	r3, [r3]
 1958 0edc 991C     		adds	r1, r3, #2
 1959 0ede 07F17C02 		add	r2, r7, #124
 1960 0ee2 1160     		str	r1, [r2]
 1961              		.loc 1 466 25
 1962 0ee4 B3F90030 		ldrsh	r3, [r3]
ARM GAS  /tmp/ccIUkXZB.s 			page 89


 1963              		.loc 1 466 17
 1964 0ee8 1846     		mov	r0, r3
 1965              		.loc 1 466 36
 1966 0eea 07F17803 		add	r3, r7, #120
 1967 0eee 1B68     		ldr	r3, [r3]
 1968 0ef0 991E     		subs	r1, r3, #2
 1969 0ef2 07F17802 		add	r2, r7, #120
 1970 0ef6 1160     		str	r1, [r2]
 1971              		.loc 1 466 33
 1972 0ef8 B3F90030 		ldrsh	r3, [r3]
 1973              		.loc 1 466 31
 1974 0efc 03FB00F3 		mul	r3, r3, r0
 1975              		.loc 1 466 13
 1976 0f00 D7F83C23 		ldr	r2, [r7, #828]
 1977 0f04 1344     		add	r3, r3, r2
 1978 0f06 C7F83C33 		str	r3, [r7, #828]
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 1979              		.loc 1 467 28
 1980 0f0a 07F17C03 		add	r3, r7, #124
 1981 0f0e 1B68     		ldr	r3, [r3]
 1982 0f10 991C     		adds	r1, r3, #2
 1983 0f12 07F17C02 		add	r2, r7, #124
 1984 0f16 1160     		str	r1, [r2]
 1985              		.loc 1 467 25
 1986 0f18 B3F90030 		ldrsh	r3, [r3]
 1987              		.loc 1 467 17
 1988 0f1c 1846     		mov	r0, r3
 1989              		.loc 1 467 36
 1990 0f1e 07F17803 		add	r3, r7, #120
 1991 0f22 1B68     		ldr	r3, [r3]
 1992 0f24 991E     		subs	r1, r3, #2
 1993 0f26 07F17802 		add	r2, r7, #120
 1994 0f2a 1160     		str	r1, [r2]
 1995              		.loc 1 467 33
 1996 0f2c B3F90030 		ldrsh	r3, [r3]
 1997              		.loc 1 467 31
 1998 0f30 03FB00F3 		mul	r3, r3, r0
 1999              		.loc 1 467 13
 2000 0f34 D7F83C23 		ldr	r2, [r7, #828]
 2001 0f38 1344     		add	r3, r3, r2
 2002 0f3a C7F83C33 		str	r3, [r7, #828]
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement loop counter */
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 2003              		.loc 1 470 10
 2004 0f3e D7F81033 		ldr	r3, [r7, #784]
 2005 0f42 013B     		subs	r3, r3, #1
 2006 0f44 C7F81033 		str	r3, [r7, #784]
 2007              	.L71:
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 2008              		.loc 1 461 13
 2009 0f48 D7F81033 		ldr	r3, [r7, #784]
 2010 0f4c 002B     		cmp	r3, #0
 2011 0f4e 8ED1     		bne	.L72
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
ARM GAS  /tmp/ccIUkXZB.s 			page 90


 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        ** No loop unrolling is used. */
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen % 0x4U;
 2012              		.loc 1 475 9
 2013 0f50 3B46     		mov	r3, r7
 2014 0f52 1B68     		ldr	r3, [r3]
 2015 0f54 03F00303 		and	r3, r3, #3
 2016 0f58 C7F81033 		str	r3, [r7, #784]
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0U)
 2017              		.loc 1 477 13
 2018 0f5c 1EE0     		b	.L73
 2019              	.L74:
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulates */
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 2020              		.loc 1 480 28
 2021 0f5e 07F17C03 		add	r3, r7, #124
 2022 0f62 1B68     		ldr	r3, [r3]
 2023 0f64 991C     		adds	r1, r3, #2
 2024 0f66 07F17C02 		add	r2, r7, #124
 2025 0f6a 1160     		str	r1, [r2]
 2026              		.loc 1 480 25
 2027 0f6c B3F90030 		ldrsh	r3, [r3]
 2028              		.loc 1 480 17
 2029 0f70 1846     		mov	r0, r3
 2030              		.loc 1 480 36
 2031 0f72 07F17803 		add	r3, r7, #120
 2032 0f76 1B68     		ldr	r3, [r3]
 2033 0f78 991E     		subs	r1, r3, #2
 2034 0f7a 07F17802 		add	r2, r7, #120
 2035 0f7e 1160     		str	r1, [r2]
 2036              		.loc 1 480 33
 2037 0f80 B3F90030 		ldrsh	r3, [r3]
 2038              		.loc 1 480 31
 2039 0f84 03FB00F3 		mul	r3, r3, r0
 2040              		.loc 1 480 13
 2041 0f88 D7F83C23 		ldr	r2, [r7, #828]
 2042 0f8c 1344     		add	r3, r3, r2
 2043 0f8e C7F83C33 		str	r3, [r7, #828]
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement loop counter */
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 2044              		.loc 1 483 10
 2045 0f92 D7F81033 		ldr	r3, [r7, #784]
 2046 0f96 013B     		subs	r3, r3, #1
 2047 0f98 C7F81033 		str	r3, [r7, #784]
 2048              	.L73:
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 2049              		.loc 1 477 13
 2050 0f9c D7F81033 		ldr	r3, [r7, #784]
 2051 0fa0 002B     		cmp	r3, #0
 2052 0fa2 DCD1     		bne	.L74
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2053              		.loc 1 487 30
ARM GAS  /tmp/ccIUkXZB.s 			page 91


 2054 0fa4 D7F83C33 		ldr	r3, [r7, #828]
 2055 0fa8 D813     		asrs	r0, r3, #15
 2056              		.loc 1 487 12
 2057 0faa 07F18003 		add	r3, r7, #128
 2058 0fae 1B68     		ldr	r3, [r3]
 2059 0fb0 991C     		adds	r1, r3, #2
 2060 0fb2 07F18002 		add	r2, r7, #128
 2061 0fb6 1160     		str	r1, [r2]
 2062              		.loc 1 487 17
 2063 0fb8 02B2     		sxth	r2, r0
 2064              		.loc 1 487 15
 2065 0fba 1A80     		strh	r2, [r3]	@ movhi
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment the pointer pIn1 index, count by 1 */
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
 2066              		.loc 1 490 12
 2067 0fbc D7F80C33 		ldr	r3, [r7, #780]
 2068 0fc0 0133     		adds	r3, r3, #1
 2069 0fc2 C7F80C33 		str	r3, [r7, #780]
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 2070              		.loc 1 493 17
 2071 0fc6 D7F80C33 		ldr	r3, [r7, #780]
 2072 0fca 5B00     		lsls	r3, r3, #1
 2073 0fcc D7F84423 		ldr	r2, [r7, #836]
 2074 0fd0 1A44     		add	r2, r2, r3
 2075              		.loc 1 493 10
 2076 0fd2 07F17C03 		add	r3, r7, #124
 2077 0fd6 1A60     		str	r2, [r3]
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 2078              		.loc 1 494 10
 2079 0fd8 07F17803 		add	r3, r7, #120
 2080 0fdc D7F80023 		ldr	r2, [r7, #768]
 2081 0fe0 1A60     		str	r2, [r3]
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 2082              		.loc 1 497 13
 2083 0fe2 D7F80833 		ldr	r3, [r7, #776]
 2084 0fe6 013B     		subs	r3, r3, #1
 2085 0fe8 C7F80833 		str	r3, [r7, #776]
 2086              	.L70:
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 2087              		.loc 1 451 11
 2088 0fec D7F80833 		ldr	r3, [r7, #776]
 2089 0ff0 002B     		cmp	r3, #0
 2090 0ff2 7FF433AF 		bne	.L75
 2091 0ff6 57E0     		b	.L76
 2092              	.L23:
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   else
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the srcBLen is not a multiple of 4,
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blkCnt = blockSize2;
ARM GAS  /tmp/ccIUkXZB.s 			page 92


 2093              		.loc 1 504 12
 2094 0ff8 D7F80433 		ldr	r3, [r7, #772]
 2095 0ffc C7F80833 		str	r3, [r7, #776]
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (blkCnt > 0U)
 2096              		.loc 1 506 11
 2097 1000 4EE0     		b	.L77
 2098              	.L80:
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = 0;
 2099              		.loc 1 509 11
 2100 1002 0023     		movs	r3, #0
 2101 1004 C7F83C33 		str	r3, [r7, #828]
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* srcBLen number of MACS should be performed */
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k = srcBLen;
 2102              		.loc 1 512 9
 2103 1008 3B46     		mov	r3, r7
 2104 100a 1B68     		ldr	r3, [r3]
 2105 100c C7F81033 		str	r3, [r7, #784]
 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       while (k > 0U)
 2106              		.loc 1 514 13
 2107 1010 1EE0     		b	.L78
 2108              	.L79:
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Perform the multiply-accumulate */
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         sum += ((q31_t) *px++ * *py--);
 2109              		.loc 1 517 28
 2110 1012 07F17C03 		add	r3, r7, #124
 2111 1016 1B68     		ldr	r3, [r3]
 2112 1018 991C     		adds	r1, r3, #2
 2113 101a 07F17C02 		add	r2, r7, #124
 2114 101e 1160     		str	r1, [r2]
 2115              		.loc 1 517 25
 2116 1020 B3F90030 		ldrsh	r3, [r3]
 2117              		.loc 1 517 17
 2118 1024 1846     		mov	r0, r3
 2119              		.loc 1 517 36
 2120 1026 07F17803 		add	r3, r7, #120
 2121 102a 1B68     		ldr	r3, [r3]
 2122 102c 991E     		subs	r1, r3, #2
 2123 102e 07F17802 		add	r2, r7, #120
 2124 1032 1160     		str	r1, [r2]
 2125              		.loc 1 517 33
 2126 1034 B3F90030 		ldrsh	r3, [r3]
 2127              		.loc 1 517 31
 2128 1038 03FB00F3 		mul	r3, r3, r0
 2129              		.loc 1 517 13
 2130 103c D7F83C23 		ldr	r2, [r7, #828]
 2131 1040 1344     		add	r3, r3, r2
 2132 1042 C7F83C33 		str	r3, [r7, #828]
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         /* Decrement loop counter */
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****         k--;
 2133              		.loc 1 520 10
ARM GAS  /tmp/ccIUkXZB.s 			page 93


 2134 1046 D7F81033 		ldr	r3, [r7, #784]
 2135 104a 013B     		subs	r3, r3, #1
 2136 104c C7F81033 		str	r3, [r7, #784]
 2137              	.L78:
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       {
 2138              		.loc 1 514 13
 2139 1050 D7F81033 		ldr	r3, [r7, #784]
 2140 1054 002B     		cmp	r3, #0
 2141 1056 DCD1     		bne	.L79
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       }
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2142              		.loc 1 524 30
 2143 1058 D7F83C33 		ldr	r3, [r7, #828]
 2144 105c D813     		asrs	r0, r3, #15
 2145              		.loc 1 524 12
 2146 105e 07F18003 		add	r3, r7, #128
 2147 1062 1B68     		ldr	r3, [r3]
 2148 1064 991C     		adds	r1, r3, #2
 2149 1066 07F18002 		add	r2, r7, #128
 2150 106a 1160     		str	r1, [r2]
 2151              		.loc 1 524 17
 2152 106c 02B2     		sxth	r2, r0
 2153              		.loc 1 524 15
 2154 106e 1A80     		strh	r2, [r3]	@ movhi
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Increment MAC count */
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       count++;
 2155              		.loc 1 527 12
 2156 1070 D7F80C33 		ldr	r3, [r7, #780]
 2157 1074 0133     		adds	r3, r3, #1
 2158 1076 C7F80C33 		str	r3, [r7, #780]
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       px = pIn1 + count;
 2159              		.loc 1 530 17
 2160 107a D7F80C33 		ldr	r3, [r7, #780]
 2161 107e 5B00     		lsls	r3, r3, #1
 2162 1080 D7F84423 		ldr	r2, [r7, #836]
 2163 1084 1A44     		add	r2, r2, r3
 2164              		.loc 1 530 10
 2165 1086 07F17C03 		add	r3, r7, #124
 2166 108a 1A60     		str	r2, [r3]
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       py = pSrc2;
 2167              		.loc 1 531 10
 2168 108c 07F17803 		add	r3, r7, #120
 2169 1090 D7F80023 		ldr	r2, [r7, #768]
 2170 1094 1A60     		str	r2, [r3]
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       blkCnt--;
 2171              		.loc 1 534 13
 2172 1096 D7F80833 		ldr	r3, [r7, #776]
 2173 109a 013B     		subs	r3, r3, #1
 2174 109c C7F80833 		str	r3, [r7, #776]
 2175              	.L77:
ARM GAS  /tmp/ccIUkXZB.s 			page 94


 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 2176              		.loc 1 506 11
 2177 10a0 D7F80833 		ldr	r3, [r7, #776]
 2178 10a4 002B     		cmp	r3, #0
 2179 10a6 ACD1     		bne	.L80
 2180              	.L76:
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* --------------------------
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Initializations of stage3
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * -------------------------*/
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ....
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    */
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      The blockSize3 variable holds the number of MAC operations performed */
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputA */
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 2181              		.loc 1 553 28
 2182 10a8 07F10802 		add	r2, r7, #8
 2183 10ac 3B46     		mov	r3, r7
 2184 10ae 1268     		ldr	r2, [r2]
 2185 10b0 1B68     		ldr	r3, [r3]
 2186 10b2 D31A     		subs	r3, r2, r3
 2187 10b4 0133     		adds	r3, r3, #1
 2188 10b6 5B00     		lsls	r3, r3, #1
 2189              		.loc 1 553 9
 2190 10b8 D7F84423 		ldr	r2, [r7, #836]
 2191 10bc 1344     		add	r3, r3, r2
 2192 10be C7F82833 		str	r3, [r7, #808]
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   px = pSrc1;
 2193              		.loc 1 554 6
 2194 10c2 07F17C03 		add	r3, r7, #124
 2195 10c6 D7F82823 		ldr	r2, [r7, #808]
 2196 10ca 1A60     		str	r2, [r3]
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Working pointer of inputB */
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   pSrc2 = pIn2 + (srcBLen - 1U);
 2197              		.loc 1 557 16
 2198 10cc 3B46     		mov	r3, r7
 2199 10ce 1A68     		ldr	r2, [r3]
 2200 10d0 6FF00043 		mvn	r3, #-2147483648
 2201 10d4 1344     		add	r3, r3, r2
 2202 10d6 5B00     		lsls	r3, r3, #1
 2203              		.loc 1 557 9
 2204 10d8 D7F84023 		ldr	r2, [r7, #832]
 2205 10dc 1344     		add	r3, r3, r2
 2206 10de C7F80033 		str	r3, [r7, #768]
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   pIn2 = pSrc2 - 1U;
 2207              		.loc 1 558 8
ARM GAS  /tmp/ccIUkXZB.s 			page 95


 2208 10e2 D7F80033 		ldr	r3, [r7, #768]
 2209 10e6 023B     		subs	r3, r3, #2
 2210 10e8 C7F84033 		str	r3, [r7, #832]
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   py = pIn2;
 2211              		.loc 1 559 6
 2212 10ec 07F17803 		add	r3, r7, #120
 2213 10f0 D7F84023 		ldr	r2, [r7, #832]
 2214 10f4 1A60     		str	r2, [r3]
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* -------------------
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * Stage3 process
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * ------------------*/
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* For loop unrolling by 4, this stage is divided into two. */
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* First part of this stage computes the MAC operations greater than 4 */
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* Second part of this stage computes the MAC operations less than or equal to 4 */
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The first part of the stage starts here */
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   j = blockSize3 >> 2U;
 2215              		.loc 1 570 5
 2216 10f6 D7F81833 		ldr	r3, [r7, #792]
 2217 10fa 9B08     		lsrs	r3, r3, #2
 2218 10fc C7F81433 		str	r3, [r7, #788]
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   while ((j > 0U) && (blockSize3 > 0U))
 2219              		.loc 1 572 9
 2220 1100 28E1     		b	.L81
 2221              	.L94:
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 2222              		.loc 1 575 9
 2223 1102 0023     		movs	r3, #0
 2224 1104 C7F83C33 		str	r3, [r7, #828]
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 >> 2U;
 2225              		.loc 1 578 7
 2226 1108 D7F81833 		ldr	r3, [r7, #792]
 2227 110c 9B08     		lsrs	r3, r3, #2
 2228 110e C7F81033 		str	r3, [r7, #784]
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 2229              		.loc 1 582 11
 2230 1112 ACE0     		b	.L82
 2231              	.L89:
 2232 1114 07F1A403 		add	r3, r7, #164
 2233 1118 07F17C02 		add	r2, r7, #124
 2234 111c 1A60     		str	r2, [r3]
 2235              	.LBB218:
 2236              	.LBB219:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2237              		.loc 3 474 3
 2238 111e 07F1A403 		add	r3, r7, #164
 2239 1122 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIUkXZB.s 			page 96


 2240 1124 1B68     		ldr	r3, [r3]
 2241 1126 1B68     		ldr	r3, [r3]	@ unaligned
 2242 1128 1A46     		mov	r2, r3
 2243 112a 07F17403 		add	r3, r7, #116
 2244 112e 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2245              		.loc 3 475 9
 2246 1130 07F1A403 		add	r3, r7, #164
 2247 1134 1B68     		ldr	r3, [r3]
 2248 1136 1B68     		ldr	r3, [r3]
 2249 1138 1A1D     		adds	r2, r3, #4
 2250 113a 07F1A403 		add	r3, r7, #164
 2251 113e 1B68     		ldr	r3, [r3]
 2252 1140 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2253              		.loc 3 477 10
 2254 1142 07F17403 		add	r3, r7, #116
 2255 1146 1B68     		ldr	r3, [r3]
 2256              	.LBE219:
 2257              	.LBE218:
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 2258              		.loc 1 586 13
 2259 1148 1846     		mov	r0, r3
 2260 114a 07F1A803 		add	r3, r7, #168
 2261 114e 07F17802 		add	r2, r7, #120
 2262 1152 1A60     		str	r2, [r3]
 2263              	.LBB220:
 2264              	.LBB221:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 2265              		.loc 3 490 3
 2266 1154 07F1A803 		add	r3, r7, #168
 2267 1158 1B68     		ldr	r3, [r3]
 2268 115a 1B68     		ldr	r3, [r3]
 2269 115c 1B68     		ldr	r3, [r3]	@ unaligned
 2270 115e 1A46     		mov	r2, r3
 2271 1160 07F17003 		add	r3, r7, #112
 2272 1164 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2273              		.loc 3 491 9
 2274 1166 07F1A803 		add	r3, r7, #168
 2275 116a 1B68     		ldr	r3, [r3]
 2276 116c 1B68     		ldr	r3, [r3]
 2277 116e 1A1F     		subs	r2, r3, #4
 2278 1170 07F1A803 		add	r3, r7, #168
 2279 1174 1B68     		ldr	r3, [r3]
 2280 1176 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2281              		.loc 3 493 10
 2282 1178 07F17003 		add	r3, r7, #112
 2283 117c 1B68     		ldr	r3, [r3]
 2284              	.LBE221:
 2285              	.LBE220:
 2286              		.loc 1 586 13
 2287 117e 1946     		mov	r1, r3
ARM GAS  /tmp/ccIUkXZB.s 			page 97


 2288 1180 D7F83C23 		ldr	r2, [r7, #828]
 2289 1184 07F1B803 		add	r3, r7, #184
 2290 1188 1860     		str	r0, [r3]
 2291 118a 07F1B403 		add	r3, r7, #180
 2292 118e 1960     		str	r1, [r3]
 2293 1190 07F1B003 		add	r3, r7, #176
 2294 1194 1A60     		str	r2, [r3]
 2295              	.LBB222:
 2296              	.LBB223:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2297              		.loc 2 2001 3
 2298 1196 07F1B803 		add	r3, r7, #184
 2299 119a 1B68     		ldr	r3, [r3]
 2300 119c 07F1B402 		add	r2, r7, #180
 2301 11a0 1268     		ldr	r2, [r2]
 2302 11a2 07F1B001 		add	r1, r7, #176
 2303 11a6 0968     		ldr	r1, [r1]
 2304              		.syntax unified
 2305              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2306 11a8 23FB1212 		smladx r2, r3, r2, r1
 2307              	@ 0 "" 2
 2308              		.thumb
 2309              		.syntax unified
 2310 11ac 07F1AC03 		add	r3, r7, #172
 2311 11b0 1A60     		str	r2, [r3]
 2312              		.loc 2 2002 9
 2313 11b2 07F1AC03 		add	r3, r7, #172
 2314 11b6 1B68     		ldr	r3, [r3]
 2315              	.LBE223:
 2316              	.LBE222:
 2317              		.loc 1 586 11
 2318 11b8 C7F83C33 		str	r3, [r7, #828]
 2319 11bc 07F1BC03 		add	r3, r7, #188
 2320 11c0 07F17C02 		add	r2, r7, #124
 2321 11c4 1A60     		str	r2, [r3]
 2322              	.LBB224:
 2323              	.LBB225:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2324              		.loc 3 474 3
 2325 11c6 07F1BC03 		add	r3, r7, #188
 2326 11ca 1B68     		ldr	r3, [r3]
 2327 11cc 1B68     		ldr	r3, [r3]
 2328 11ce 1B68     		ldr	r3, [r3]	@ unaligned
 2329 11d0 1A46     		mov	r2, r3
 2330 11d2 07F16C03 		add	r3, r7, #108
 2331 11d6 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2332              		.loc 3 475 9
 2333 11d8 07F1BC03 		add	r3, r7, #188
 2334 11dc 1B68     		ldr	r3, [r3]
 2335 11de 1B68     		ldr	r3, [r3]
 2336 11e0 1A1D     		adds	r2, r3, #4
 2337 11e2 07F1BC03 		add	r3, r7, #188
 2338 11e6 1B68     		ldr	r3, [r3]
 2339 11e8 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2340              		.loc 3 477 10
ARM GAS  /tmp/ccIUkXZB.s 			page 98


 2341 11ea 07F16C03 		add	r3, r7, #108
 2342 11ee 1B68     		ldr	r3, [r3]
 2343              	.LBE225:
 2344              	.LBE224:
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****        * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLADX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 2345              		.loc 1 589 13
 2346 11f0 1846     		mov	r0, r3
 2347 11f2 07F1C003 		add	r3, r7, #192
 2348 11f6 07F17802 		add	r2, r7, #120
 2349 11fa 1A60     		str	r2, [r3]
 2350              	.LBB226:
 2351              	.LBB227:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 2352              		.loc 3 490 3
 2353 11fc 07F1C003 		add	r3, r7, #192
 2354 1200 1B68     		ldr	r3, [r3]
 2355 1202 1B68     		ldr	r3, [r3]
 2356 1204 1B68     		ldr	r3, [r3]	@ unaligned
 2357 1206 1A46     		mov	r2, r3
 2358 1208 07F16803 		add	r3, r7, #104
 2359 120c 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2360              		.loc 3 491 9
 2361 120e 07F1C003 		add	r3, r7, #192
 2362 1212 1B68     		ldr	r3, [r3]
 2363 1214 1B68     		ldr	r3, [r3]
 2364 1216 1A1F     		subs	r2, r3, #4
 2365 1218 07F1C003 		add	r3, r7, #192
 2366 121c 1B68     		ldr	r3, [r3]
 2367 121e 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2368              		.loc 3 493 10
 2369 1220 07F16803 		add	r3, r7, #104
 2370 1224 1B68     		ldr	r3, [r3]
 2371              	.LBE227:
 2372              	.LBE226:
 2373              		.loc 1 589 13
 2374 1226 1946     		mov	r1, r3
 2375 1228 D7F83C23 		ldr	r2, [r7, #828]
 2376 122c 07F1D003 		add	r3, r7, #208
 2377 1230 1860     		str	r0, [r3]
 2378 1232 07F1CC03 		add	r3, r7, #204
 2379 1236 1960     		str	r1, [r3]
 2380 1238 07F1C803 		add	r3, r7, #200
 2381 123c 1A60     		str	r2, [r3]
 2382              	.LBB228:
 2383              	.LBB229:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2384              		.loc 2 2001 3
 2385 123e 07F1D003 		add	r3, r7, #208
 2386 1242 1B68     		ldr	r3, [r3]
 2387 1244 07F1CC02 		add	r2, r7, #204
 2388 1248 1268     		ldr	r2, [r2]
 2389 124a 07F1C801 		add	r1, r7, #200
 2390 124e 0968     		ldr	r1, [r1]
ARM GAS  /tmp/ccIUkXZB.s 			page 99


 2391              		.syntax unified
 2392              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2393 1250 23FB1212 		smladx r2, r3, r2, r1
 2394              	@ 0 "" 2
 2395              		.thumb
 2396              		.syntax unified
 2397 1254 07F1C403 		add	r3, r7, #196
 2398 1258 1A60     		str	r2, [r3]
 2399              		.loc 2 2002 9
 2400 125a 07F1C403 		add	r3, r7, #196
 2401 125e 1B68     		ldr	r3, [r3]
 2402              	.LBE229:
 2403              	.LBE228:
 2404              		.loc 1 589 11
 2405 1260 C7F83C33 		str	r3, [r7, #828]
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 2406              		.loc 1 592 8
 2407 1264 D7F81033 		ldr	r3, [r7, #784]
 2408 1268 013B     		subs	r3, r3, #1
 2409 126a C7F81033 		str	r3, [r7, #784]
 2410              	.L82:
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 2411              		.loc 1 582 11
 2412 126e D7F81033 		ldr	r3, [r7, #784]
 2413 1272 002B     		cmp	r3, #0
 2414 1274 7FF44EAF 		bne	.L89
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* For the next MAC operations, the pointer py is used without SIMD
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      * So, py is incremented by 1 */
 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = py + 1U;
 2415              		.loc 1 597 13
 2416 1278 07F17803 		add	r3, r7, #120
 2417 127c 1B68     		ldr	r3, [r3]
 2418 127e 9A1C     		adds	r2, r3, #2
 2419              		.loc 1 597 8
 2420 1280 07F17803 		add	r3, r7, #120
 2421 1284 1A60     		str	r2, [r3]
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****      ** No loop unrolling is used. */
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3 % 0x4U;
 2422              		.loc 1 601 7
 2423 1286 D7F81833 		ldr	r3, [r7, #792]
 2424 128a 03F00303 		and	r3, r3, #3
 2425 128e C7F81033 		str	r3, [r7, #784]
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 2426              		.loc 1 603 11
 2427 1292 36E0     		b	.L90
 2428              	.L92:
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 2429              		.loc 1 606 24
ARM GAS  /tmp/ccIUkXZB.s 			page 100


 2430 1294 07F17C03 		add	r3, r7, #124
 2431 1298 1B68     		ldr	r3, [r3]
 2432 129a 991C     		adds	r1, r3, #2
 2433 129c 07F17C02 		add	r2, r7, #124
 2434 12a0 1160     		str	r1, [r2]
 2435              		.loc 1 606 21
 2436 12a2 B3F90030 		ldrsh	r3, [r3]
 2437              		.loc 1 606 13
 2438 12a6 1846     		mov	r0, r3
 2439              		.loc 1 606 31
 2440 12a8 07F17803 		add	r3, r7, #120
 2441 12ac 1B68     		ldr	r3, [r3]
 2442 12ae 991E     		subs	r1, r3, #2
 2443 12b0 07F17802 		add	r2, r7, #120
 2444 12b4 1160     		str	r1, [r2]
 2445              		.loc 1 606 28
 2446 12b6 B3F90030 		ldrsh	r3, [r3]
 2447              		.loc 1 606 13
 2448 12ba 1946     		mov	r1, r3
 2449 12bc D7F83C23 		ldr	r2, [r7, #828]
 2450 12c0 07F1A003 		add	r3, r7, #160
 2451 12c4 1860     		str	r0, [r3]
 2452 12c6 07F19C03 		add	r3, r7, #156
 2453 12ca 1960     		str	r1, [r3]
 2454 12cc 07F19803 		add	r3, r7, #152
 2455 12d0 1A60     		str	r2, [r3]
 2456              	.LBB230:
 2457              	.LBB231:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2458              		.loc 2 1993 3
 2459 12d2 07F1A003 		add	r3, r7, #160
 2460 12d6 1B68     		ldr	r3, [r3]
 2461 12d8 07F19C02 		add	r2, r7, #156
 2462 12dc 1268     		ldr	r2, [r2]
 2463 12de 07F19801 		add	r1, r7, #152
 2464 12e2 0968     		ldr	r1, [r1]
 2465              		.syntax unified
 2466              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2467 12e4 23FB0212 		smlad r2, r3, r2, r1
 2468              	@ 0 "" 2
 2469              		.thumb
 2470              		.syntax unified
 2471 12e8 07F19403 		add	r3, r7, #148
 2472 12ec 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2473              		.loc 2 1994 9
 2474 12ee 07F19403 		add	r3, r7, #148
 2475 12f2 1B68     		ldr	r3, [r3]
 2476              	.LBE231:
 2477              	.LBE230:
 2478              		.loc 1 606 11
 2479 12f4 C7F83C33 		str	r3, [r7, #828]
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 2480              		.loc 1 609 8
 2481 12f8 D7F81033 		ldr	r3, [r7, #784]
ARM GAS  /tmp/ccIUkXZB.s 			page 101


 2482 12fc 013B     		subs	r3, r3, #1
 2483 12fe C7F81033 		str	r3, [r7, #784]
 2484              	.L90:
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 2485              		.loc 1 603 11
 2486 1302 D7F81033 		ldr	r3, [r7, #784]
 2487 1306 002B     		cmp	r3, #0
 2488 1308 C4D1     		bne	.L92
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 2489              		.loc 1 613 28
 2490 130a D7F83C33 		ldr	r3, [r7, #828]
 2491 130e D813     		asrs	r0, r3, #15
 2492              		.loc 1 613 10
 2493 1310 07F18003 		add	r3, r7, #128
 2494 1314 1B68     		ldr	r3, [r3]
 2495 1316 991C     		adds	r1, r3, #2
 2496 1318 07F18002 		add	r2, r7, #128
 2497 131c 1160     		str	r1, [r2]
 2498              		.loc 1 613 15
 2499 131e 02B2     		sxth	r2, r0
 2500              		.loc 1 613 13
 2501 1320 1A80     		strh	r2, [r3]	@ movhi
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
 2502              		.loc 1 616 8
 2503 1322 D7F82833 		ldr	r3, [r7, #808]
 2504 1326 0233     		adds	r3, r3, #2
 2505 1328 C7F82833 		str	r3, [r7, #808]
 2506 132c 07F17C03 		add	r3, r7, #124
 2507 1330 D7F82823 		ldr	r2, [r7, #808]
 2508 1334 1A60     		str	r2, [r3]
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = pIn2;
 2509              		.loc 1 617 8
 2510 1336 07F17803 		add	r3, r7, #120
 2511 133a D7F84023 		ldr	r2, [r7, #832]
 2512 133e 1A60     		str	r2, [r3]
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement  loop counter */
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
 2513              		.loc 1 620 15
 2514 1340 D7F81833 		ldr	r3, [r7, #792]
 2515 1344 013B     		subs	r3, r3, #1
 2516 1346 C7F81833 		str	r3, [r7, #792]
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     j--;
 2517              		.loc 1 622 6
 2518 134a D7F81433 		ldr	r3, [r7, #788]
 2519 134e 013B     		subs	r3, r3, #1
 2520 1350 C7F81433 		str	r3, [r7, #788]
 2521              	.L81:
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 2522              		.loc 1 572 9
 2523 1354 D7F81433 		ldr	r3, [r7, #788]
ARM GAS  /tmp/ccIUkXZB.s 			page 102


 2524 1358 002B     		cmp	r3, #0
 2525 135a 04D0     		beq	.L93
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 2526              		.loc 1 572 19 discriminator 1
 2527 135c D7F81833 		ldr	r3, [r7, #792]
 2528 1360 002B     		cmp	r3, #0
 2529 1362 7FF4CEAE 		bne	.L94
 2530              	.L93:
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* The second part of the stage starts here */
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   /* SIMD is not used for the next MAC operations,
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****    * so pointer py is updated to read only one sample at a time */
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   py = py + 1U;
 2531              		.loc 1 628 11
 2532 1366 07F17803 		add	r3, r7, #120
 2533 136a 1B68     		ldr	r3, [r3]
 2534 136c 9A1C     		adds	r2, r3, #2
 2535              		.loc 1 628 6
 2536 136e 07F17803 		add	r3, r7, #120
 2537 1372 1A60     		str	r2, [r3]
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   while (blockSize3 > 0U)
 2538              		.loc 1 630 9
 2539 1374 62E0     		b	.L95
 2540              	.L99:
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Accumulator is made zero for every iteration */
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     sum = 0;
 2541              		.loc 1 633 9
 2542 1376 0023     		movs	r3, #0
 2543 1378 C7F83C33 		str	r3, [r7, #828]
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     k = blockSize3;
 2544              		.loc 1 636 7
 2545 137c D7F81833 		ldr	r3, [r7, #792]
 2546 1380 C7F81033 		str	r3, [r7, #784]
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     while (k > 0U)
 2547              		.loc 1 638 11
 2548 1384 36E0     		b	.L96
 2549              	.L98:
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Perform the multiply-accumulates */
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       sum = __SMLAD(*px++, *py--, sum);
 2550              		.loc 1 642 24
 2551 1386 07F17C03 		add	r3, r7, #124
 2552 138a 1B68     		ldr	r3, [r3]
 2553 138c 991C     		adds	r1, r3, #2
 2554 138e 07F17C02 		add	r2, r7, #124
 2555 1392 1160     		str	r1, [r2]
 2556              		.loc 1 642 21
 2557 1394 B3F90030 		ldrsh	r3, [r3]
 2558              		.loc 1 642 13
 2559 1398 1846     		mov	r0, r3
ARM GAS  /tmp/ccIUkXZB.s 			page 103


 2560              		.loc 1 642 31
 2561 139a 07F17803 		add	r3, r7, #120
 2562 139e 1B68     		ldr	r3, [r3]
 2563 13a0 991E     		subs	r1, r3, #2
 2564 13a2 07F17802 		add	r2, r7, #120
 2565 13a6 1160     		str	r1, [r2]
 2566              		.loc 1 642 28
 2567 13a8 B3F90030 		ldrsh	r3, [r3]
 2568              		.loc 1 642 13
 2569 13ac 1946     		mov	r1, r3
 2570 13ae D7F83C23 		ldr	r2, [r7, #828]
 2571 13b2 07F19003 		add	r3, r7, #144
 2572 13b6 1860     		str	r0, [r3]
 2573 13b8 07F18C03 		add	r3, r7, #140
 2574 13bc 1960     		str	r1, [r3]
 2575 13be 07F18803 		add	r3, r7, #136
 2576 13c2 1A60     		str	r2, [r3]
 2577              	.LBB232:
 2578              	.LBB233:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 2579              		.loc 2 1993 3
 2580 13c4 07F19003 		add	r3, r7, #144
 2581 13c8 1B68     		ldr	r3, [r3]
 2582 13ca 07F18C02 		add	r2, r7, #140
 2583 13ce 1268     		ldr	r2, [r2]
 2584 13d0 07F18801 		add	r1, r7, #136
 2585 13d4 0968     		ldr	r1, [r1]
 2586              		.syntax unified
 2587              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2588 13d6 23FB0212 		smlad r2, r3, r2, r1
 2589              	@ 0 "" 2
 2590              		.thumb
 2591              		.syntax unified
 2592 13da 07F18403 		add	r3, r7, #132
 2593 13de 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2594              		.loc 2 1994 9
 2595 13e0 07F18403 		add	r3, r7, #132
 2596 13e4 1B68     		ldr	r3, [r3]
 2597              	.LBE233:
 2598              	.LBE232:
 2599              		.loc 1 642 11
 2600 13e6 C7F83C33 		str	r3, [r7, #828]
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       /* Decrement loop counter */
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****       k--;
 2601              		.loc 1 645 8
 2602 13ea D7F81033 		ldr	r3, [r7, #784]
 2603 13ee 013B     		subs	r3, r3, #1
 2604 13f0 C7F81033 		str	r3, [r7, #784]
 2605              	.L96:
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     {
 2606              		.loc 1 638 11
 2607 13f4 D7F81033 		ldr	r3, [r7, #784]
 2608 13f8 002B     		cmp	r3, #0
 2609 13fa C4D1     		bne	.L98
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     }
ARM GAS  /tmp/ccIUkXZB.s 			page 104


 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Store the result in the accumulator in the destination buffer. */
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     *pOut++ = (q15_t) (sum >> 15);
 2610              		.loc 1 649 28
 2611 13fc D7F83C33 		ldr	r3, [r7, #828]
 2612 1400 D813     		asrs	r0, r3, #15
 2613              		.loc 1 649 10
 2614 1402 07F18003 		add	r3, r7, #128
 2615 1406 1B68     		ldr	r3, [r3]
 2616 1408 991C     		adds	r1, r3, #2
 2617 140a 07F18002 		add	r2, r7, #128
 2618 140e 1160     		str	r1, [r2]
 2619              		.loc 1 649 15
 2620 1410 02B2     		sxth	r2, r0
 2621              		.loc 1 649 13
 2622 1412 1A80     		strh	r2, [r3]	@ movhi
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     px = ++pSrc1;
 2623              		.loc 1 652 8
 2624 1414 D7F82833 		ldr	r3, [r7, #808]
 2625 1418 0233     		adds	r3, r3, #2
 2626 141a C7F82833 		str	r3, [r7, #808]
 2627 141e 07F17C03 		add	r3, r7, #124
 2628 1422 D7F82823 		ldr	r2, [r7, #808]
 2629 1426 1A60     		str	r2, [r3]
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     py = pSrc2;
 2630              		.loc 1 653 8
 2631 1428 07F17803 		add	r3, r7, #120
 2632 142c D7F80023 		ldr	r2, [r7, #768]
 2633 1430 1A60     		str	r2, [r3]
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     /* Decrement the loop counter */
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****     blockSize3--;
 2634              		.loc 1 656 15
 2635 1432 D7F81833 		ldr	r3, [r7, #792]
 2636 1436 013B     		subs	r3, r3, #1
 2637 1438 C7F81833 		str	r3, [r7, #792]
 2638              	.L95:
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   {
 2639              		.loc 1 630 9
 2640 143c D7F81833 		ldr	r3, [r7, #792]
 2641 1440 002B     		cmp	r3, #0
 2642 1442 98D1     		bne	.L99
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c ****   }
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** 
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_fast_q15.c **** }
 2643              		.loc 1 659 1
 2644 1444 00BF     		nop
 2645 1446 00BF     		nop
 2646 1448 07F55277 		add	r7, r7, #840
 2647              	.LCFI3:
 2648              		.cfi_def_cfa_offset 8
 2649 144c BD46     		mov	sp, r7
 2650              	.LCFI4:
 2651              		.cfi_def_cfa_register 13
 2652              		@ sp needed
ARM GAS  /tmp/ccIUkXZB.s 			page 105


 2653 144e 90BC     		pop	{r4, r7}
 2654              	.LCFI5:
 2655              		.cfi_restore 7
 2656              		.cfi_restore 4
 2657              		.cfi_def_cfa_offset 0
 2658 1450 7047     		bx	lr
 2659              		.cfi_endproc
 2660              	.LFE145:
 2662              		.text
 2663              	.Letext0:
 2664              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2665              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2666              		.file 6 "/usr/include/newlib/sys/_types.h"
 2667              		.file 7 "/usr/include/newlib/sys/reent.h"
 2668              		.file 8 "/usr/include/newlib/sys/lock.h"
 2669              		.file 9 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccIUkXZB.s 			page 106


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_fast_q15.c
     /tmp/ccIUkXZB.s:17     .text.arm_conv_fast_q15:0000000000000000 $t
     /tmp/ccIUkXZB.s:25     .text.arm_conv_fast_q15:0000000000000000 arm_conv_fast_q15

NO UNDEFINED SYMBOLS
