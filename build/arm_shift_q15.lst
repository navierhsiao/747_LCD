ARM GAS  /tmp/ccCDFAF0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_shift_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_shift_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_shift_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_shift_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Title:        arm_shift_q15.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Description:  Shifts the elements of a Q15 vector by a specified number of bits
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** /**
ARM GAS  /tmp/ccCDFAF0.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @addtogroup BasicShift
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @brief         Shifts the elements of a Q15 vector a specified number of bits
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @param[in]     pSrc       points to the input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @param[in]     shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @param[out]    pDst       points to the output vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @param[in]     blockSize  number of samples in each vector
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                    The function uses saturating arithmetic.
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                    Results outside of the allowable Q15 range [0x8000 0x7FFF] are saturated.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****  */
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** void arm_shift_q15(
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   const q15_t * pSrc,
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****         int8_t shiftBits,
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****         q15_t * pDst,
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****         uint32_t blockSize)
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** {
  28              		.loc 1 58 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 7A60     		str	r2, [r7, #4]
  45 000a 3B60     		str	r3, [r7]
  46 000c 0B46     		mov	r3, r1
  47 000e FB72     		strb	r3, [r7, #11]
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****         uint8_t sign = (shiftBits & 0x80);             /* Sign of shiftBits */
  48              		.loc 1 60 35
  49 0010 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  50              		.loc 1 60 17
  51 0012 23F07F03 		bic	r3, r3, #127
  52 0016 FB76     		strb	r3, [r7, #27]
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
ARM GAS  /tmp/ccCDFAF0.s 			page 3


  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #if defined (ARM_MATH_DSP)
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   q15_t in1, in2;                                /* Temporary input variables */
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   blkCnt = blockSize >> 2U;
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   /* If the shift value is positive then do right shift else left shift */
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   if (sign == 0U)
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   {
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     while (blkCnt > 0U)
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* C = A << shiftBits */
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #if defined (ARM_MATH_DSP)
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* read 2 samples from source */
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in1 = *pSrc++;
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in2 = *pSrc++;
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Shift the inputs and then store the results in the destination buffer. */
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT(__SSAT((in1 << shiftBits), 16),
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      __SSAT((in2 << shiftBits), 16), 16));
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT(__SSAT((in2 << shiftBits), 16),
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                       __SSAT((in1 << shiftBits), 16), 16));
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* read 2 samples from source */
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in1 = *pSrc++;
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in2 = *pSrc++;
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT(__SSAT((in1 << shiftBits), 16),
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      __SSAT((in2 << shiftBits), 16), 16));
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT(__SSAT((in2 << shiftBits), 16),
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      __SSAT((in1 << shiftBits), 16), 16));
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = __SSAT(((q31_t) *pSrc++ << shiftBits), 16);
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = __SSAT(((q31_t) *pSrc++ << shiftBits), 16);
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = __SSAT(((q31_t) *pSrc++ << shiftBits), 16);
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = __SSAT(((q31_t) *pSrc++ << shiftBits), 16);
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Decrement loop counter */
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       blkCnt--;
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     }
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   }
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   else
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   {
 117:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     while (blkCnt > 0U)
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
 119:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* C = A >> shiftBits */
 120:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
ARM GAS  /tmp/ccCDFAF0.s 			page 4


 121:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #if defined (ARM_MATH_DSP)
 122:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* read 2 samples from source */
 123:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in1 = *pSrc++;
 124:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in2 = *pSrc++;
 125:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 126:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Shift the inputs and then store the results in the destination buffer. */
 127:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 128:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT((in1 >> -shiftBits),
 129:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      (in2 >> -shiftBits), 16));
 130:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 131:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT((in2 >> -shiftBits),
 132:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      (in1 >> -shiftBits), 16));
 133:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 134:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 135:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* read 2 samples from source */
 136:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in1 = *pSrc++;
 137:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       in2 = *pSrc++;
 138:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 139:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 140:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT((in1 >> -shiftBits),
 141:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      (in2 >> -shiftBits), 16));
 142:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 143:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       write_q15x2_ia (&pDst, __PKHBT((in2 >> -shiftBits),
 144:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****                                      (in1 >> -shiftBits), 16));
 145:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 146:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 147:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 148:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 149:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 150:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 151:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 152:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif
 153:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 154:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Decrement loop counter */
 155:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       blkCnt--;
 156:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     }
 157:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   }
 158:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 159:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   /* Loop unrolling: Compute remaining outputs */
 160:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   blkCnt = blockSize % 0x4U;
 161:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 162:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #else
 163:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 164:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   /* Initialize blkCnt with number of samples */
 165:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   blkCnt = blockSize;
  53              		.loc 1 165 10
  54 0018 3B68     		ldr	r3, [r7]
  55 001a FB61     		str	r3, [r7, #28]
 166:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 167:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 168:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 169:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   /* If the shift value is positive then do right shift else left shift */
 170:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   if (sign == 0U)
  56              		.loc 1 170 6
  57 001c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
  58 001e 002B     		cmp	r3, #0
  59 0020 2FD1     		bne	.L6
ARM GAS  /tmp/ccCDFAF0.s 			page 5


 171:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   {
 172:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     while (blkCnt > 0U)
  60              		.loc 1 172 11
  61 0022 17E0     		b	.L3
  62              	.L4:
  63              	.LBB2:
 173:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
 174:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* C = A << shiftBits */
 175:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 176:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Shift input and store result in destination buffer. */
 177:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = __SSAT(((q31_t) *pSrc++ << shiftBits), 16);
  64              		.loc 1 177 17
  65 0024 FB68     		ldr	r3, [r7, #12]
  66 0026 9A1C     		adds	r2, r3, #2
  67 0028 FA60     		str	r2, [r7, #12]
  68 002a B3F90030 		ldrsh	r3, [r3]
  69 002e 1A46     		mov	r2, r3
  70 0030 97F90B30 		ldrsb	r3, [r7, #11]
  71 0034 02FA03F3 		lsl	r3, r2, r3
  72 0038 7B61     		str	r3, [r7, #20]
  73 003a 7B69     		ldr	r3, [r7, #20]
  74              		.syntax unified
  75              	@ 177 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c" 1
  76 003c 03F30F03 		ssat r3, #16, r3
  77              	@ 0 "" 2
  78              		.thumb
  79              		.syntax unified
  80 0040 3B61     		str	r3, [r7, #16]
  81 0042 3969     		ldr	r1, [r7, #16]
  82              	.LBE2:
  83              		.loc 1 177 12
  84 0044 7B68     		ldr	r3, [r7, #4]
  85 0046 9A1C     		adds	r2, r3, #2
  86 0048 7A60     		str	r2, [r7, #4]
  87              		.loc 1 177 15
  88 004a 0AB2     		sxth	r2, r1
  89 004c 1A80     		strh	r2, [r3]	@ movhi
 178:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 179:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Decrement loop counter */
 180:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       blkCnt--;
  90              		.loc 1 180 13
  91 004e FB69     		ldr	r3, [r7, #28]
  92 0050 013B     		subs	r3, r3, #1
  93 0052 FB61     		str	r3, [r7, #28]
  94              	.L3:
 172:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
  95              		.loc 1 172 11
  96 0054 FB69     		ldr	r3, [r7, #28]
  97 0056 002B     		cmp	r3, #0
  98 0058 E4D1     		bne	.L4
 181:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     }
 182:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   }
 183:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   else
 184:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   {
 185:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     while (blkCnt > 0U)
 186:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
 187:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* C = A >> shiftBits */
ARM GAS  /tmp/ccCDFAF0.s 			page 6


 188:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 189:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Shift input and store result in destination buffer. */
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       *pDst++ = (*pSrc++ >> -shiftBits);
 191:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 192:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       /* Decrement loop counter */
 193:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****       blkCnt--;
 194:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     }
 195:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****   }
 196:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 197:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** }
  99              		.loc 1 197 1
 100 005a 15E0     		b	.L8
 101              	.L7:
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 102              		.loc 1 190 23
 103 005c FB68     		ldr	r3, [r7, #12]
 104 005e 9A1C     		adds	r2, r3, #2
 105 0060 FA60     		str	r2, [r7, #12]
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 106              		.loc 1 190 18
 107 0062 B3F90030 		ldrsh	r3, [r3]
 108 0066 1A46     		mov	r2, r3
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 109              		.loc 1 190 29
 110 0068 97F90B30 		ldrsb	r3, [r7, #11]
 111 006c 5B42     		rsbs	r3, r3, #0
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 112              		.loc 1 190 26
 113 006e 42FA03F1 		asr	r1, r2, r3
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 114              		.loc 1 190 12
 115 0072 7B68     		ldr	r3, [r7, #4]
 116 0074 9A1C     		adds	r2, r3, #2
 117 0076 7A60     		str	r2, [r7, #4]
 190:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c **** 
 118              		.loc 1 190 15
 119 0078 0AB2     		sxth	r2, r1
 120 007a 1A80     		strh	r2, [r3]	@ movhi
 193:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     }
 121              		.loc 1 193 13
 122 007c FB69     		ldr	r3, [r7, #28]
 123 007e 013B     		subs	r3, r3, #1
 124 0080 FB61     		str	r3, [r7, #28]
 125              	.L6:
 185:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_shift_q15.c ****     {
 126              		.loc 1 185 11
 127 0082 FB69     		ldr	r3, [r7, #28]
 128 0084 002B     		cmp	r3, #0
 129 0086 E9D1     		bne	.L7
 130              	.L8:
 131              		.loc 1 197 1
 132 0088 00BF     		nop
 133 008a 2437     		adds	r7, r7, #36
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 4
 136 008c BD46     		mov	sp, r7
 137              	.LCFI4:
ARM GAS  /tmp/ccCDFAF0.s 			page 7


 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 008e 5DF8047B 		ldr	r7, [sp], #4
 141              	.LCFI5:
 142              		.cfi_restore 7
 143              		.cfi_def_cfa_offset 0
 144 0092 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE145:
 148              		.text
 149              	.Letext0:
 150              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 151              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 152              		.file 4 "/usr/include/newlib/sys/_types.h"
 153              		.file 5 "/usr/include/newlib/sys/reent.h"
 154              		.file 6 "/usr/include/newlib/sys/lock.h"
 155              		.file 7 "/usr/include/newlib/math.h"
 156              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccCDFAF0.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_shift_q15.c
     /tmp/ccCDFAF0.s:17     .text.arm_shift_q15:0000000000000000 $t
     /tmp/ccCDFAF0.s:25     .text.arm_shift_q15:0000000000000000 arm_shift_q15

NO UNDEFINED SYMBOLS
