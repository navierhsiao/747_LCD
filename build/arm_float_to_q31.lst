ARM GAS  /tmp/cclpCKzJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_float_to_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.global	__aeabi_f2lz
  17              		.section	.text.arm_float_to_q31,"ax",%progbits
  18              		.align	1
  19              		.global	arm_float_to_q31
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	arm_float_to_q31:
  27              	.LFB145:
  28              		.file 1 "./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c"
   1:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Title:        arm_float_to_q31.c
   4:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Description:  Converts the elements of the floating-point vector to Q31 vector
   5:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
ARM GAS  /tmp/cclpCKzJ.s 			page 2


  31:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /**
  32:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @ingroup groupSupport
  33:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  * @defgroup float_to_x  Convert 32-bit floating point value
  37:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  */
  38:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  39:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /**
  40:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @addtogroup float_to_x
  41:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @{
  42:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  */
  43:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  44:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** /**
  45:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @brief         Converts the elements of the floating-point vector to Q31 vector.
  46:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @param[in]     pSrc       points to the floating-point input vector
  47:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @param[out]    pDst       points to the Q31 output vector
  48:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @param[in]     blockSize  number of samples in each vector
  49:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @return        none
  50:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  51:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @par           Details
  52:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****                    The equation used for the conversion process is:
  53:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   <pre>
  54:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****       pDst[n] = (q31_t)(pSrc[n] * 2147483648);   0 <= n < blockSize.
  55:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   </pre>
  56:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  57:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @par           Scaling and Overflow Behavior
  58:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****                    The function uses saturating arithmetic.
  59:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****                    Results outside of the allowable Q31 range[0x80000000 0x7FFFFFFF] are saturated.
  60:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  61:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   @note
  62:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****                    In order to apply rounding, the library should be rebuilt with the ROUNDING macr
  63:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****                    defined in the preprocessor section of project options.
  64:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****  */
  65:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  66:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #if defined(ARM_MATH_NEON)
  67:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** void arm_float_to_q31(
  68:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   const float32_t * pSrc,
  69:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   q31_t * pDst,
  70:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   uint32_t blockSize)
  71:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** {
  72:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   const float32_t *pIn = pSrc;                         /* Src pointer */
  73:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  74:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  75:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32_t in;
  76:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32x4_t inV;
  77:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   #ifdef ARM_MATH_ROUNDING
  78:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32x4_t zeroV = vdupq_n_f32(0.0f);
  79:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32x4_t pHalf = vdupq_n_f32(0.5f / 2147483648.0f);
  80:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32x4_t mHalf = vdupq_n_f32(-0.5f / 2147483648.0f);
  81:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   float32x4_t r;
  82:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   uint32x4_t cmp;
  83:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   #endif
  84:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  85:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   int32x4_t outV;
  86:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  87:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   blkCnt = blockSize >> 2U;
ARM GAS  /tmp/cclpCKzJ.s 			page 3


  88:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  89:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   /* Compute 4 outputs at a time.
  90:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  91:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   while (blkCnt > 0U)
  92:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   {
  93:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  94:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #ifdef ARM_MATH_ROUNDING
  95:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
  96:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 32768 */
  97:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
  98:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     inV = vld1q_f32(pIn);
  99:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     cmp = vcgtq_f32(inV,zeroV);
 100:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     r = vbslq_f32(cmp,pHalf,mHalf);
 101:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     inV = vaddq_f32(inV, r);
 102:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 103:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     pIn += 4;
 104:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 105:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     outV = vcvtq_n_s32_f32(inV,31);
 106:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 107:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     vst1q_s32(pDst, outV);
 108:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     pDst += 4;
 109:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 110:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
 111:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 112:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 113:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
 114:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     inV = vld1q_f32(pIn);
 115:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 116:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     outV = vcvtq_n_s32_f32(inV,31);
 117:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 118:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     vst1q_s32(pDst, outV);
 119:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     pDst += 4;
 120:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     pIn += 4;
 121:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 122:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
 123:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 124:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Decrement the loop counter */
 125:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     blkCnt--;
 126:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   }
 127:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 128:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 129:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****    ** No loop unrolling is used. */
 130:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   blkCnt = blockSize & 3;
 131:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 132:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   while (blkCnt > 0U)
 133:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   {
 134:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 135:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #ifdef ARM_MATH_ROUNDING
 136:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 137:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 138:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
 139:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = *pIn++;
 140:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (in * 2147483648.0f);
 141:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 142:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 143:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 144:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
ARM GAS  /tmp/cclpCKzJ.s 			page 4


 145:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 146:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 147:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
 148:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
 149:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 150:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
 151:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 152:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Decrement the loop counter */
 153:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     blkCnt--;
 154:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   }
 155:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 156:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 157:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** }
 158:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
 159:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** void arm_float_to_q31(
 160:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   const float32_t * pSrc,
 161:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****         q31_t * pDst,
 162:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****         uint32_t blockSize)
 163:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** {
  29              		.loc 1 163 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 90B5     		push	{r4, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 F860     		str	r0, [r7, #12]
  46 0008 B960     		str	r1, [r7, #8]
  47 000a 7A60     		str	r2, [r7, #4]
 164:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
 165:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   const float32_t *pIn = pSrc;                         /* Source pointer */
  48              		.loc 1 165 20
  49 000c FB68     		ldr	r3, [r7, #12]
  50 000e BB61     		str	r3, [r7, #24]
 166:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 167:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #ifdef ARM_MATH_ROUNDING
 168:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****         float32_t in;
 169:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /* #ifdef ARM_MATH_ROUNDING */
 170:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 171:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 172:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 173:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 174:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   blkCnt = blockSize >> 2U;
 175:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 176:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   while (blkCnt > 0U)
 177:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   {
 178:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 179:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
ARM GAS  /tmp/cclpCKzJ.s 			page 5


 180:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* convert from float to Q31 and store result in destination buffer */
 181:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #ifdef ARM_MATH_ROUNDING
 182:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 183:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (*pIn++ * 2147483648.0f);
 184:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 185:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 186:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 187:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (*pIn++ * 2147483648.0f);
 188:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 189:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 190:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 191:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (*pIn++ * 2147483648.0f);
 192:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 193:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 194:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 195:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (*pIn++ * 2147483648.0f);
 196:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 197:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 198:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 199:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
 200:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 201:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 202:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
 203:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
 204:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
 205:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
 206:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
 207:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 208:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /* #ifdef ARM_MATH_ROUNDING */
 209:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 210:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Decrement loop counter */
 211:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     blkCnt--;
 212:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   }
 213:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 214:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 215:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   blkCnt = blockSize % 0x4U;
 216:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 217:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
 218:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 219:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   /* Initialize blkCnt with number of samples */
 220:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   blkCnt = blockSize;
  51              		.loc 1 220 10
  52 0010 7B68     		ldr	r3, [r7, #4]
  53 0012 FB61     		str	r3, [r7, #28]
 221:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 222:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 223:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 224:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   while (blkCnt > 0U)
  54              		.loc 1 224 9
  55 0014 30E0     		b	.L2
  56              	.L6:
 225:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   {
 226:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 227:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 228:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* convert from float to Q31 and store result in destination buffer */
 229:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #ifdef ARM_MATH_ROUNDING
 230:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
ARM GAS  /tmp/cclpCKzJ.s 			page 6


 231:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in = (*pIn++ * 2147483648.0f);
 232:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 233:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (in));
 234:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 235:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #else
 236:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 237:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* C = A * 2147483648 */
 238:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Convert from float to Q31 and then store the results in the destination buffer */
 239:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     *pDst++ = clip_q63_to_q31((q63_t) (*pIn++ * 2147483648.0f));
  57              		.loc 1 239 44
  58 0016 BB69     		ldr	r3, [r7, #24]
  59 0018 1A1D     		adds	r2, r3, #4
  60 001a BA61     		str	r2, [r7, #24]
  61              		.loc 1 239 40
  62 001c D3ED007A 		vldr.32	s15, [r3]
  63              		.loc 1 239 47
  64 0020 9FED197A 		vldr.32	s14, .L8
  65 0024 67EE877A 		vmul.f32	s15, s15, s14
  66              		.loc 1 239 15
  67 0028 17EE900A 		vmov	r0, s15
  68 002c FFF7FEFF 		bl	__aeabi_f2lz
  69              	.LVL0:
  70 0030 0246     		mov	r2, r0
  71 0032 0B46     		mov	r3, r1
  72              		.loc 1 239 10
  73 0034 BC68     		ldr	r4, [r7, #8]
  74 0036 211D     		adds	r1, r4, #4
  75 0038 B960     		str	r1, [r7, #8]
  76 003a C7E90423 		strd	r2, [r7, #16]
  77              	.LBB4:
  78              	.LBB5:
  79              		.file 2 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/cclpCKzJ.s 			page 7


  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/cclpCKzJ.s 			page 8


  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
ARM GAS  /tmp/cclpCKzJ.s 			page 9


 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
ARM GAS  /tmp/cclpCKzJ.s 			page 10


 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  /tmp/cclpCKzJ.s 			page 11


 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
ARM GAS  /tmp/cclpCKzJ.s 			page 12


 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
ARM GAS  /tmp/cclpCKzJ.s 			page 13


 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
ARM GAS  /tmp/cclpCKzJ.s 			page 14


 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
ARM GAS  /tmp/cclpCKzJ.s 			page 15


 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
ARM GAS  /tmp/cclpCKzJ.s 			page 16


 539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 541:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 557:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 574:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 575:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 576:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 577:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 578:./Libraries/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:./Libraries/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 581:./Libraries/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:./Libraries/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:./Libraries/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 585:./Libraries/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:./Libraries/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 588:./Libraries/CMSIS/DSP/Include/arm_math.h **** */
 589:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:./Libraries/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 592:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 594:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
ARM GAS  /tmp/cclpCKzJ.s 			page 17


 596:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 597:./Libraries/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 599:./Libraries/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:./Libraries/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 602:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 604:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 607:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 609:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 613:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 615:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 617:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 619:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 620:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 622:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 623:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 625:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 627:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 630:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 631:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 632:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 634:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 636:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 637:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 639:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 640:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 641:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 645:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 650:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
 652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
ARM GAS  /tmp/cclpCKzJ.s 			page 18


 653:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 654:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 660:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 665:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 666:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 667:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 668:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 671:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
  80              		.loc 2 673 24
  81 003e D7E90401 		ldrd	r0, [r7, #16]
  82 0042 4FF00002 		mov	r2, #0
  83 0046 4FF00003 		mov	r3, #0
  84 004a 0A00     		movs	r2, r1
  85 004c CB17     		asrs	r3, r1, #31
  86              		.loc 2 673 35
  87 004e 3B69     		ldr	r3, [r7, #16]
  88              		.loc 2 673 45
  89 0050 DB17     		asrs	r3, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  90              		.loc 2 674 44
  91 0052 9A42     		cmp	r2, r3
  92 0054 0BD0     		beq	.L3
  93              		.loc 2 674 34
  94 0056 D7E90401 		ldrd	r0, [r7, #16]
  95 005a 4FF00002 		mov	r2, #0
  96 005e 4FF00003 		mov	r3, #0
  97 0062 CA17     		asrs	r2, r1, #31
  98 0064 CB17     		asrs	r3, r1, #31
  99              		.loc 2 674 44
 100 0066 6FF00043 		mvn	r3, #-2147483648
 101 006a 5340     		eors	r3, r3, r2
 102 006c 00E0     		b	.L7
 103              	.L3:
 104 006e 3B69     		ldr	r3, [r7, #16]
 105              	.L7:
 106              	.LBE5:
 107              	.LBE4:
 108              		.loc 1 239 13
 109 0070 2360     		str	r3, [r4]
 240:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 241:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** #endif /* #ifdef ARM_MATH_ROUNDING */
 242:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 243:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     /* Decrement loop counter */
 244:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****     blkCnt--;
ARM GAS  /tmp/cclpCKzJ.s 			page 19


 110              		.loc 1 244 11
 111 0072 FB69     		ldr	r3, [r7, #28]
 112 0074 013B     		subs	r3, r3, #1
 113 0076 FB61     		str	r3, [r7, #28]
 114              	.L2:
 224:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   {
 115              		.loc 1 224 9
 116 0078 FB69     		ldr	r3, [r7, #28]
 117 007a 002B     		cmp	r3, #0
 118 007c CBD1     		bne	.L6
 245:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c ****   }
 246:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** 
 247:./Libraries/CMSIS/DSP/Source/SupportFunctions/arm_float_to_q31.c **** }
 119              		.loc 1 247 1
 120 007e 00BF     		nop
 121 0080 00BF     		nop
 122 0082 2437     		adds	r7, r7, #36
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 12
 125 0084 BD46     		mov	sp, r7
 126              	.LCFI4:
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0086 90BD     		pop	{r4, r7, pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0088 0000004F 		.word	1325400064
 134              		.cfi_endproc
 135              	.LFE145:
 137              		.text
 138              	.Letext0:
 139              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 140              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 141              		.file 5 "/usr/include/newlib/sys/_types.h"
 142              		.file 6 "/usr/include/newlib/sys/reent.h"
 143              		.file 7 "/usr/include/newlib/sys/lock.h"
 144              		.file 8 "/usr/include/newlib/math.h"
ARM GAS  /tmp/cclpCKzJ.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_float_to_q31.c
     /tmp/cclpCKzJ.s:18     .text.arm_float_to_q31:0000000000000000 $t
     /tmp/cclpCKzJ.s:26     .text.arm_float_to_q31:0000000000000000 arm_float_to_q31
     /tmp/cclpCKzJ.s:133    .text.arm_float_to_q31:0000000000000088 $d

UNDEFINED SYMBOLS
__aeabi_f2lz
