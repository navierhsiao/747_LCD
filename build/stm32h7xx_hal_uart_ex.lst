ARM GAS  /tmp/ccMAh4HS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_uart_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RS485Ex_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_RS485Ex_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @file    stm32h7xx_hal_uart_ex.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   @verbatim
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ==============================================================================
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ==============================================================================
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             starting RX/TX transfers. Also RX/TX FIFO thresholds must be
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             configured prior starting RX/TX transfers.
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   @endverbatim
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @attention
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
ARM GAS  /tmp/ccMAh4HS.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * All rights reserved.</center></h2>
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * the "License"; You may not use this file except in compliance with the
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * License. You may obtain a copy of the License at:
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #include "stm32h7xx_hal.h"
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEX_Private_Constants UARTEx Private Constants
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* UART RX FIFO depth */
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #define RX_FIFO_DEPTH 16U
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* UART TX FIFO depth */
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #define TX_FIFO_DEPTH 16U
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart);
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /tmp/ccMAh4HS.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** ===============================================================================
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..]
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     in asynchronous mode.
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Baud Rate
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Word Length
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Stop Bit
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Hardware flow control
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Over Sampling Method
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) data logical level inversion
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) RX and TX pins swap
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) RX overrun detection disabling
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) DMA disabling on RX error
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) MSB first on communication line
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) auto Baud rate detection
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..]
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   following table.
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     Table 1. UART frame format.
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
ARM GAS  /tmp/ccMAh4HS.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart            UART handle.
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       oversampling rate).
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
  28              		.loc 1 168 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t temp;
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart == NULL)
  47              		.loc 1 172 6
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 002B     		cmp	r3, #0
  50 0012 01D1     		bne	.L2
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
  51              		.loc 1 174 12
  52 0014 0123     		movs	r3, #1
  53 0016 56E0     		b	.L3
  54              	.L2:
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
ARM GAS  /tmp/ccMAh4HS.s 			page 5


 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  55              		.loc 1 188 12
  56 0018 FB68     		ldr	r3, [r7, #12]
  57 001a D3F88430 		ldr	r3, [r3, #132]
  58              		.loc 1 188 6
  59 001e 002B     		cmp	r3, #0
  60 0020 06D1     		bne	.L4
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
  61              		.loc 1 191 17
  62 0022 FB68     		ldr	r3, [r7, #12]
  63 0024 0022     		movs	r2, #0
  64 0026 83F88020 		strb	r2, [r3, #128]
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init the low level hardware */
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #else
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
  65              		.loc 1 205 5
  66 002a F868     		ldr	r0, [r7, #12]
  67 002c FFF7FEFF 		bl	HAL_UART_MspInit
  68              	.L4:
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
  69              		.loc 1 209 17
  70 0030 FB68     		ldr	r3, [r7, #12]
  71 0032 2422     		movs	r2, #36
  72 0034 C3F88420 		str	r2, [r3, #132]
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
  73              		.loc 1 212 3
  74 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMAh4HS.s 			page 6


  75 003a 1B68     		ldr	r3, [r3]
  76 003c 1A68     		ldr	r2, [r3]
  77 003e FB68     		ldr	r3, [r7, #12]
  78 0040 1B68     		ldr	r3, [r3]
  79 0042 22F00102 		bic	r2, r2, #1
  80 0046 1A60     		str	r2, [r3]
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  81              		.loc 1 215 7
  82 0048 F868     		ldr	r0, [r7, #12]
  83 004a FFF7FEFF 		bl	UART_SetConfig
  84 004e 0346     		mov	r3, r0
  85              		.loc 1 215 6
  86 0050 012B     		cmp	r3, #1
  87 0052 01D1     		bne	.L5
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
  88              		.loc 1 217 12
  89 0054 0123     		movs	r3, #1
  90 0056 36E0     		b	.L3
  91              	.L5:
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  92              		.loc 1 220 26
  93 0058 FB68     		ldr	r3, [r7, #12]
  94 005a 9B6A     		ldr	r3, [r3, #40]
  95              		.loc 1 220 6
  96 005c 002B     		cmp	r3, #0
  97 005e 02D0     		beq	.L6
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
  98              		.loc 1 222 5
  99 0060 F868     		ldr	r0, [r7, #12]
 100 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 101              	.L6:
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 102              		.loc 1 226 3
 103 0066 FB68     		ldr	r3, [r7, #12]
 104 0068 1B68     		ldr	r3, [r3]
 105 006a 9A68     		ldr	r2, [r3, #8]
 106 006c FB68     		ldr	r3, [r7, #12]
 107 006e 1B68     		ldr	r3, [r3]
 108 0070 42F48042 		orr	r2, r2, #16384
 109 0074 9A60     		str	r2, [r3, #8]
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 110              		.loc 1 229 3
 111 0076 FB68     		ldr	r3, [r7, #12]
 112 0078 1B68     		ldr	r3, [r3]
 113 007a 9B68     		ldr	r3, [r3, #8]
 114 007c 23F40041 		bic	r1, r3, #32768
ARM GAS  /tmp/ccMAh4HS.s 			page 7


 115 0080 FB68     		ldr	r3, [r7, #12]
 116 0082 1B68     		ldr	r3, [r3]
 117 0084 BA68     		ldr	r2, [r7, #8]
 118 0086 0A43     		orrs	r2, r2, r1
 119 0088 9A60     		str	r2, [r3, #8]
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 120              		.loc 1 232 8
 121 008a 7B68     		ldr	r3, [r7, #4]
 122 008c 5B05     		lsls	r3, r3, #21
 123 008e 7B61     		str	r3, [r7, #20]
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 124              		.loc 1 233 28
 125 0090 3B68     		ldr	r3, [r7]
 126 0092 1B04     		lsls	r3, r3, #16
 127              		.loc 1 233 8
 128 0094 7A69     		ldr	r2, [r7, #20]
 129 0096 1343     		orrs	r3, r3, r2
 130 0098 7B61     		str	r3, [r7, #20]
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 131              		.loc 1 234 3
 132 009a FB68     		ldr	r3, [r7, #12]
 133 009c 1B68     		ldr	r3, [r3]
 134 009e 1A68     		ldr	r2, [r3]
 135 00a0 0B4B     		ldr	r3, .L7
 136 00a2 1340     		ands	r3, r3, r2
 137 00a4 FA68     		ldr	r2, [r7, #12]
 138 00a6 1268     		ldr	r2, [r2]
 139 00a8 7969     		ldr	r1, [r7, #20]
 140 00aa 0B43     		orrs	r3, r3, r1
 141 00ac 1360     		str	r3, [r2]
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 142              		.loc 1 237 3
 143 00ae FB68     		ldr	r3, [r7, #12]
 144 00b0 1B68     		ldr	r3, [r3]
 145 00b2 1A68     		ldr	r2, [r3]
 146 00b4 FB68     		ldr	r3, [r7, #12]
 147 00b6 1B68     		ldr	r3, [r3]
 148 00b8 42F00102 		orr	r2, r2, #1
 149 00bc 1A60     		str	r2, [r3]
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 150              		.loc 1 240 11
 151 00be F868     		ldr	r0, [r7, #12]
 152 00c0 FFF7FEFF 		bl	UART_CheckIdleState
 153 00c4 0346     		mov	r3, r0
 154              	.L3:
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 155              		.loc 1 241 1
 156 00c6 1846     		mov	r0, r3
 157 00c8 1837     		adds	r7, r7, #24
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccMAh4HS.s 			page 8


 160 00ca BD46     		mov	sp, r7
 161              	.LCFI4:
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 00cc 80BD     		pop	{r7, pc}
 165              	.L8:
 166 00ce 00BF     		.align	2
 167              	.L7:
 168 00d0 FFFF00FC 		.word	-67043329
 169              		.cfi_endproc
 170              	.LFE331:
 172              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 173              		.align	1
 174              		.weak	HAL_UARTEx_WakeupCallback
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-d16
 180              	HAL_UARTEx_WakeupCallback:
 181              	.LFB332:
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *  @brief Extended functions
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                       ##### IO operation functions #####
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) TX/RX Fifos Callbacks:
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_RxFifoFullCallback()
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_TxFifoEmptyCallback()
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 182              		.loc 1 273 1
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186              		@ link register save eliminated.
ARM GAS  /tmp/ccMAh4HS.s 			page 9


 187 0000 80B4     		push	{r7}
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 7, -4
 191 0002 83B0     		sub	sp, sp, #12
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 16
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI7:
 196              		.cfi_def_cfa_register 7
 197 0006 7860     		str	r0, [r7, #4]
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 198              		.loc 1 280 1
 199 0008 00BF     		nop
 200 000a 0C37     		adds	r7, r7, #12
 201              	.LCFI8:
 202              		.cfi_def_cfa_offset 4
 203 000c BD46     		mov	sp, r7
 204              	.LCFI9:
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 000e 5DF8047B 		ldr	r7, [sp], #4
 208              	.LCFI10:
 209              		.cfi_restore 7
 210              		.cfi_def_cfa_offset 0
 211 0012 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE332:
 215              		.section	.text.HAL_UARTEx_RxFifoFullCallback,"ax",%progbits
 216              		.align	1
 217              		.weak	HAL_UARTEx_RxFifoFullCallback
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv5-d16
 223              	HAL_UARTEx_RxFifoFullCallback:
 224              	.LFB333:
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  UART RX Fifo full callback.
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param  huart UART handle.
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 225              		.loc 1 288 1
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccMAh4HS.s 			page 10


 231              	.LCFI11:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0002 83B0     		sub	sp, sp, #12
 235              	.LCFI12:
 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              	.LCFI13:
 239              		.cfi_def_cfa_register 7
 240 0006 7860     		str	r0, [r7, #4]
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 241              		.loc 1 295 1
 242 0008 00BF     		nop
 243 000a 0C37     		adds	r7, r7, #12
 244              	.LCFI14:
 245              		.cfi_def_cfa_offset 4
 246 000c BD46     		mov	sp, r7
 247              	.LCFI15:
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 000e 5DF8047B 		ldr	r7, [sp], #4
 251              	.LCFI16:
 252              		.cfi_restore 7
 253              		.cfi_def_cfa_offset 0
 254 0012 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE333:
 258              		.section	.text.HAL_UARTEx_TxFifoEmptyCallback,"ax",%progbits
 259              		.align	1
 260              		.weak	HAL_UARTEx_TxFifoEmptyCallback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv5-d16
 266              	HAL_UARTEx_TxFifoEmptyCallback:
 267              	.LFB334:
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  UART TX Fifo empty callback.
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param  huart UART handle.
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 268              		.loc 1 303 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0000 80B4     		push	{r7}
 274              	.LCFI17:
ARM GAS  /tmp/ccMAh4HS.s 			page 11


 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 83B0     		sub	sp, sp, #12
 278              	.LCFI18:
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI19:
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 284              		.loc 1 310 1
 285 0008 00BF     		nop
 286 000a 0C37     		adds	r7, r7, #12
 287              	.LCFI20:
 288              		.cfi_def_cfa_offset 4
 289 000c BD46     		mov	sp, r7
 290              	.LCFI21:
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 000e 5DF8047B 		ldr	r7, [sp], #4
 294              	.LCFI22:
 295              		.cfi_restore 7
 296              		.cfi_def_cfa_offset 0
 297 0012 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE334:
 301              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 302              		.align	1
 303              		.global	HAL_MultiProcessorEx_AddressLength_Set
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv5-d16
 309              	HAL_MultiProcessorEx_AddressLength_Set:
 310              	.LFB335:
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..] This section provides the following functions:
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
ARM GAS  /tmp/ccMAh4HS.s 			page 12


 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableFifoMode() API enables the FIFO mode
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableFifoMode() API disables the FIFO mode
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetTxFifoThreshold() API sets the TX FIFO threshold
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetRxFifoThreshold() API sets the RX FIFO threshold
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     services to user. (For example, these functions allow application to handle use cases
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     where number of data to be received is unknown).
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Compared to standard reception services which only consider number of received
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         data elements as reception completion criteria, these functions also consider additional ev
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         as triggers for updating reception status to caller :
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                for 1 frame time, after last received byte.
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           (++) RX inactivity detected by RTO, i.e. line has been in idle state
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                for a programmable time, after last received byte.
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Detection that a specific character has been received.
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) There are two mode of transfer:
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            are returned by function after finishing transfer.
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            These API's return the HAL status.
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The end of the data processing will be indicated through the
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Blocking mode API:
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with Interrupt:
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with DMA:
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        long).
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart         UART handle.
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
ARM GAS  /tmp/ccMAh4HS.s 			page 13


 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 311              		.loc 1 388 1
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              	.LCFI23:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              	.LCFI24:
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI25:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 327 0008 3960     		str	r1, [r7]
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart == NULL)
 328              		.loc 1 390 6
 329 000a 7B68     		ldr	r3, [r7, #4]
 330 000c 002B     		cmp	r3, #0
 331 000e 01D1     		bne	.L13
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
 332              		.loc 1 392 12
 333 0010 0123     		movs	r3, #1
 334 0012 21E0     		b	.L14
 335              	.L13:
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the address length parameter */
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 336              		.loc 1 398 17
 337 0014 7B68     		ldr	r3, [r7, #4]
 338 0016 2422     		movs	r2, #36
 339 0018 C3F88420 		str	r2, [r3, #132]
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 340              		.loc 1 401 3
 341 001c 7B68     		ldr	r3, [r7, #4]
 342 001e 1B68     		ldr	r3, [r3]
 343 0020 1A68     		ldr	r2, [r3]
 344 0022 7B68     		ldr	r3, [r7, #4]
 345 0024 1B68     		ldr	r3, [r3]
 346 0026 22F00102 		bic	r2, r2, #1
 347 002a 1A60     		str	r2, [r3]
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the address length */
ARM GAS  /tmp/ccMAh4HS.s 			page 14


 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 348              		.loc 1 404 3
 349 002c 7B68     		ldr	r3, [r7, #4]
 350 002e 1B68     		ldr	r3, [r3]
 351 0030 5B68     		ldr	r3, [r3, #4]
 352 0032 23F01001 		bic	r1, r3, #16
 353 0036 7B68     		ldr	r3, [r7, #4]
 354 0038 1B68     		ldr	r3, [r3]
 355 003a 3A68     		ldr	r2, [r7]
 356 003c 0A43     		orrs	r2, r2, r1
 357 003e 5A60     		str	r2, [r3, #4]
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 358              		.loc 1 407 3
 359 0040 7B68     		ldr	r3, [r7, #4]
 360 0042 1B68     		ldr	r3, [r3]
 361 0044 1A68     		ldr	r2, [r3]
 362 0046 7B68     		ldr	r3, [r7, #4]
 363 0048 1B68     		ldr	r3, [r3]
 364 004a 42F00102 		orr	r2, r2, #1
 365 004e 1A60     		str	r2, [r3]
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 366              		.loc 1 410 11
 367 0050 7868     		ldr	r0, [r7, #4]
 368 0052 FFF7FEFF 		bl	UART_CheckIdleState
 369 0056 0346     		mov	r3, r0
 370              	.L14:
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 371              		.loc 1 411 1
 372 0058 1846     		mov	r0, r3
 373 005a 0837     		adds	r7, r7, #8
 374              	.LCFI26:
 375              		.cfi_def_cfa_offset 8
 376 005c BD46     		mov	sp, r7
 377              	.LCFI27:
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 005e 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE335:
 384              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 385              		.align	1
 386              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv5-d16
 392              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 393              	.LFB336:
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
ARM GAS  /tmp/ccMAh4HS.s 			page 15


 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart           UART handle.
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 394              		.loc 1 426 1
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 24
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              	.LCFI28:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 88B0     		sub	sp, sp, #32
 404              	.LCFI29:
 405              		.cfi_def_cfa_offset 40
 406 0004 02AF     		add	r7, sp, #8
 407              	.LCFI30:
 408              		.cfi_def_cfa 7, 32
 409 0006 F860     		str	r0, [r7, #12]
 410 0008 3B1D     		adds	r3, r7, #4
 411 000a 83E80600 		stm	r3, {r1, r2}
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 412              		.loc 1 427 21
 413 000e 0023     		movs	r3, #0
 414 0010 FB75     		strb	r3, [r7, #23]
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 415              		.loc 1 436 3
 416 0012 FB68     		ldr	r3, [r7, #12]
 417 0014 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 418 0018 012B     		cmp	r3, #1
 419 001a 01D1     		bne	.L16
 420              		.loc 1 436 3 is_stmt 0 discriminator 1
 421 001c 0223     		movs	r3, #2
 422 001e 46E0     		b	.L17
 423              	.L16:
 424              		.loc 1 436 3 discriminator 2
 425 0020 FB68     		ldr	r3, [r7, #12]
 426 0022 0122     		movs	r2, #1
 427 0024 83F88020 		strb	r2, [r3, #128]
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 428              		.loc 1 438 17 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccMAh4HS.s 			page 16


 429 0028 FB68     		ldr	r3, [r7, #12]
 430 002a 2422     		movs	r2, #36
 431 002c C3F88420 		str	r2, [r3, #132]
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 432              		.loc 1 441 3 discriminator 2
 433 0030 FB68     		ldr	r3, [r7, #12]
 434 0032 1B68     		ldr	r3, [r3]
 435 0034 1A68     		ldr	r2, [r3]
 436 0036 FB68     		ldr	r3, [r7, #12]
 437 0038 1B68     		ldr	r3, [r3]
 438 003a 22F00102 		bic	r2, r2, #1
 439 003e 1A60     		str	r2, [r3]
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 440              		.loc 1 444 3 discriminator 2
 441 0040 FB68     		ldr	r3, [r7, #12]
 442 0042 1B68     		ldr	r3, [r3]
 443 0044 9B68     		ldr	r3, [r3, #8]
 444 0046 23F44011 		bic	r1, r3, #3145728
 445 004a 7A68     		ldr	r2, [r7, #4]
 446 004c FB68     		ldr	r3, [r7, #12]
 447 004e 1B68     		ldr	r3, [r3]
 448 0050 0A43     		orrs	r2, r2, r1
 449 0052 9A60     		str	r2, [r3, #8]
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 450              		.loc 1 446 22 discriminator 2
 451 0054 7B68     		ldr	r3, [r7, #4]
 452              		.loc 1 446 6 discriminator 2
 453 0056 002B     		cmp	r3, #0
 454 0058 05D1     		bne	.L18
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 455              		.loc 1 448 5
 456 005a 3B1D     		adds	r3, r7, #4
 457 005c 93E80600 		ldm	r3, {r1, r2}
 458 0060 F868     		ldr	r0, [r7, #12]
 459 0062 FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 460              	.L18:
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 461              		.loc 1 452 3
 462 0066 FB68     		ldr	r3, [r7, #12]
 463 0068 1B68     		ldr	r3, [r3]
 464 006a 1A68     		ldr	r2, [r3]
 465 006c FB68     		ldr	r3, [r7, #12]
 466 006e 1B68     		ldr	r3, [r3]
 467 0070 42F00102 		orr	r2, r2, #1
 468 0074 1A60     		str	r2, [r3]
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Init tickstart for timeout management */
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccMAh4HS.s 			page 17


 469              		.loc 1 455 15
 470 0076 FFF7FEFF 		bl	HAL_GetTick
 471 007a 3861     		str	r0, [r7, #16]
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 472              		.loc 1 458 7
 473 007c 6FF07E43 		mvn	r3, #-33554432
 474 0080 0093     		str	r3, [sp]
 475 0082 3B69     		ldr	r3, [r7, #16]
 476 0084 0022     		movs	r2, #0
 477 0086 4FF48001 		mov	r1, #4194304
 478 008a F868     		ldr	r0, [r7, #12]
 479 008c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 480 0090 0346     		mov	r3, r0
 481              		.loc 1 458 6
 482 0092 002B     		cmp	r3, #0
 483 0094 02D0     		beq	.L19
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 484              		.loc 1 460 12
 485 0096 0323     		movs	r3, #3
 486 0098 FB75     		strb	r3, [r7, #23]
 487 009a 03E0     		b	.L20
 488              	.L19:
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Initialize the UART State */
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 489              		.loc 1 465 19
 490 009c FB68     		ldr	r3, [r7, #12]
 491 009e 2022     		movs	r2, #32
 492 00a0 C3F88420 		str	r2, [r3, #132]
 493              	.L20:
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 494              		.loc 1 469 3
 495 00a4 FB68     		ldr	r3, [r7, #12]
 496 00a6 0022     		movs	r2, #0
 497 00a8 83F88020 		strb	r2, [r3, #128]
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return status;
 498              		.loc 1 471 10
 499 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 500              	.L17:
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 501              		.loc 1 472 1
 502 00ae 1846     		mov	r0, r3
 503 00b0 1837     		adds	r7, r7, #24
 504              	.LCFI31:
 505              		.cfi_def_cfa_offset 8
 506 00b2 BD46     		mov	sp, r7
 507              	.LCFI32:
 508              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccMAh4HS.s 			page 18


 509              		@ sp needed
 510 00b4 80BD     		pop	{r7, pc}
 511              		.cfi_endproc
 512              	.LFE336:
 514              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 515              		.align	1
 516              		.global	HAL_UARTEx_EnableStopMode
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu fpv5-d16
 522              	HAL_UARTEx_EnableStopMode:
 523              	.LFB337:
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 524              		.loc 1 481 1
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 8
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 80B4     		push	{r7}
 530              	.LCFI33:
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 7, -4
 533 0002 83B0     		sub	sp, sp, #12
 534              	.LCFI34:
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              	.LCFI35:
 538              		.cfi_def_cfa_register 7
 539 0006 7860     		str	r0, [r7, #4]
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 540              		.loc 1 483 3
 541 0008 7B68     		ldr	r3, [r7, #4]
 542 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 543 000e 012B     		cmp	r3, #1
 544 0010 01D1     		bne	.L22
 545              		.loc 1 483 3 is_stmt 0 discriminator 1
 546 0012 0223     		movs	r3, #2
 547 0014 10E0     		b	.L23
 548              	.L22:
 549              		.loc 1 483 3 discriminator 2
 550 0016 7B68     		ldr	r3, [r7, #4]
 551 0018 0122     		movs	r2, #1
 552 001a 83F88020 		strb	r2, [r3, #128]
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set UESM bit */
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
 553              		.loc 1 486 3 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccMAh4HS.s 			page 19


 554 001e 7B68     		ldr	r3, [r7, #4]
 555 0020 1B68     		ldr	r3, [r3]
 556 0022 1A68     		ldr	r2, [r3]
 557 0024 7B68     		ldr	r3, [r7, #4]
 558 0026 1B68     		ldr	r3, [r3]
 559 0028 42F00202 		orr	r2, r2, #2
 560 002c 1A60     		str	r2, [r3]
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 561              		.loc 1 489 3 discriminator 2
 562 002e 7B68     		ldr	r3, [r7, #4]
 563 0030 0022     		movs	r2, #0
 564 0032 83F88020 		strb	r2, [r3, #128]
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 565              		.loc 1 491 10 discriminator 2
 566 0036 0023     		movs	r3, #0
 567              	.L23:
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 568              		.loc 1 492 1
 569 0038 1846     		mov	r0, r3
 570 003a 0C37     		adds	r7, r7, #12
 571              	.LCFI36:
 572              		.cfi_def_cfa_offset 4
 573 003c BD46     		mov	sp, r7
 574              	.LCFI37:
 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 003e 5DF8047B 		ldr	r7, [sp], #4
 578              	.LCFI38:
 579              		.cfi_restore 7
 580              		.cfi_def_cfa_offset 0
 581 0042 7047     		bx	lr
 582              		.cfi_endproc
 583              	.LFE337:
 585              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 586              		.align	1
 587              		.global	HAL_UARTEx_DisableStopMode
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv5-d16
 593              	HAL_UARTEx_DisableStopMode:
 594              	.LFB338:
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 595              		.loc 1 500 1
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccMAh4HS.s 			page 20


 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
 601              	.LCFI39:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              	.LCFI40:
 606              		.cfi_def_cfa_offset 16
 607 0004 00AF     		add	r7, sp, #0
 608              	.LCFI41:
 609              		.cfi_def_cfa_register 7
 610 0006 7860     		str	r0, [r7, #4]
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 611              		.loc 1 502 3
 612 0008 7B68     		ldr	r3, [r7, #4]
 613 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 614 000e 012B     		cmp	r3, #1
 615 0010 01D1     		bne	.L25
 616              		.loc 1 502 3 is_stmt 0 discriminator 1
 617 0012 0223     		movs	r3, #2
 618 0014 10E0     		b	.L26
 619              	.L25:
 620              		.loc 1 502 3 discriminator 2
 621 0016 7B68     		ldr	r3, [r7, #4]
 622 0018 0122     		movs	r2, #1
 623 001a 83F88020 		strb	r2, [r3, #128]
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Clear UESM bit */
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 624              		.loc 1 505 3 is_stmt 1 discriminator 2
 625 001e 7B68     		ldr	r3, [r7, #4]
 626 0020 1B68     		ldr	r3, [r3]
 627 0022 1A68     		ldr	r2, [r3]
 628 0024 7B68     		ldr	r3, [r7, #4]
 629 0026 1B68     		ldr	r3, [r3]
 630 0028 22F00202 		bic	r2, r2, #2
 631 002c 1A60     		str	r2, [r3]
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 632              		.loc 1 508 3 discriminator 2
 633 002e 7B68     		ldr	r3, [r7, #4]
 634 0030 0022     		movs	r2, #0
 635 0032 83F88020 		strb	r2, [r3, #128]
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 636              		.loc 1 510 10 discriminator 2
 637 0036 0023     		movs	r3, #0
 638              	.L26:
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 639              		.loc 1 511 1
 640 0038 1846     		mov	r0, r3
 641 003a 0C37     		adds	r7, r7, #12
 642              	.LCFI42:
 643              		.cfi_def_cfa_offset 4
 644 003c BD46     		mov	sp, r7
ARM GAS  /tmp/ccMAh4HS.s 			page 21


 645              	.LCFI43:
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 003e 5DF8047B 		ldr	r7, [sp], #4
 649              	.LCFI44:
 650              		.cfi_restore 7
 651              		.cfi_def_cfa_offset 0
 652 0042 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE338:
 656              		.section	.text.HAL_UARTEx_EnableFifoMode,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_UARTEx_EnableFifoMode
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-d16
 664              	HAL_UARTEx_EnableFifoMode:
 665              	.LFB339:
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Enable the FIFO mode.
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 666              		.loc 1 519 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              	.LCFI45:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 84B0     		sub	sp, sp, #16
 676              	.LCFI46:
 677              		.cfi_def_cfa_offset 24
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI47:
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 682              		.loc 1 526 3
 683 0008 7B68     		ldr	r3, [r7, #4]
 684 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 685 000e 012B     		cmp	r3, #1
 686 0010 01D1     		bne	.L28
 687              		.loc 1 526 3 is_stmt 0 discriminator 1
 688 0012 0223     		movs	r3, #2
ARM GAS  /tmp/ccMAh4HS.s 			page 22


 689 0014 2BE0     		b	.L29
 690              	.L28:
 691              		.loc 1 526 3 discriminator 2
 692 0016 7B68     		ldr	r3, [r7, #4]
 693 0018 0122     		movs	r2, #1
 694 001a 83F88020 		strb	r2, [r3, #128]
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 695              		.loc 1 528 17 is_stmt 1 discriminator 2
 696 001e 7B68     		ldr	r3, [r7, #4]
 697 0020 2422     		movs	r2, #36
 698 0022 C3F88420 		str	r2, [r3, #132]
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 699              		.loc 1 531 12 discriminator 2
 700 0026 7B68     		ldr	r3, [r7, #4]
 701 0028 1B68     		ldr	r3, [r3]
 702              		.loc 1 531 10 discriminator 2
 703 002a 1B68     		ldr	r3, [r3]
 704 002c FB60     		str	r3, [r7, #12]
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 705              		.loc 1 534 3 discriminator 2
 706 002e 7B68     		ldr	r3, [r7, #4]
 707 0030 1B68     		ldr	r3, [r3]
 708 0032 1A68     		ldr	r2, [r3]
 709 0034 7B68     		ldr	r3, [r7, #4]
 710 0036 1B68     		ldr	r3, [r3]
 711 0038 22F00102 		bic	r2, r2, #1
 712 003c 1A60     		str	r2, [r3]
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 713              		.loc 1 537 3 discriminator 2
 714 003e FB68     		ldr	r3, [r7, #12]
 715 0040 43F00053 		orr	r3, r3, #536870912
 716 0044 FB60     		str	r3, [r7, #12]
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 717              		.loc 1 538 19 discriminator 2
 718 0046 7B68     		ldr	r3, [r7, #4]
 719 0048 4FF00052 		mov	r2, #536870912
 720 004c 5A66     		str	r2, [r3, #100]
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 721              		.loc 1 541 3 discriminator 2
 722 004e 7B68     		ldr	r3, [r7, #4]
 723 0050 1B68     		ldr	r3, [r3]
 724 0052 FA68     		ldr	r2, [r7, #12]
 725 0054 1A60     		str	r2, [r3]
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 726              		.loc 1 544 3 discriminator 2
 727 0056 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccMAh4HS.s 			page 23


 728 0058 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 729              		.loc 1 546 17 discriminator 2
 730 005c 7B68     		ldr	r3, [r7, #4]
 731 005e 2022     		movs	r2, #32
 732 0060 C3F88420 		str	r2, [r3, #132]
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 733              		.loc 1 549 3 discriminator 2
 734 0064 7B68     		ldr	r3, [r7, #4]
 735 0066 0022     		movs	r2, #0
 736 0068 83F88020 		strb	r2, [r3, #128]
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 737              		.loc 1 551 10 discriminator 2
 738 006c 0023     		movs	r3, #0
 739              	.L29:
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 740              		.loc 1 552 1
 741 006e 1846     		mov	r0, r3
 742 0070 1037     		adds	r7, r7, #16
 743              	.LCFI48:
 744              		.cfi_def_cfa_offset 8
 745 0072 BD46     		mov	sp, r7
 746              	.LCFI49:
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 0074 80BD     		pop	{r7, pc}
 750              		.cfi_endproc
 751              	.LFE339:
 753              		.section	.text.HAL_UARTEx_DisableFifoMode,"ax",%progbits
 754              		.align	1
 755              		.global	HAL_UARTEx_DisableFifoMode
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 759              		.fpu fpv5-d16
 761              	HAL_UARTEx_DisableFifoMode:
 762              	.LFB340:
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Disable the FIFO mode.
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 763              		.loc 1 560 1
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 80B4     		push	{r7}
 769              	.LCFI50:
 770              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccMAh4HS.s 			page 24


 771              		.cfi_offset 7, -4
 772 0002 85B0     		sub	sp, sp, #20
 773              	.LCFI51:
 774              		.cfi_def_cfa_offset 24
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI52:
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 779              		.loc 1 567 3
 780 0008 7B68     		ldr	r3, [r7, #4]
 781 000a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 782 000e 012B     		cmp	r3, #1
 783 0010 01D1     		bne	.L31
 784              		.loc 1 567 3 is_stmt 0 discriminator 1
 785 0012 0223     		movs	r3, #2
 786 0014 27E0     		b	.L32
 787              	.L31:
 788              		.loc 1 567 3 discriminator 2
 789 0016 7B68     		ldr	r3, [r7, #4]
 790 0018 0122     		movs	r2, #1
 791 001a 83F88020 		strb	r2, [r3, #128]
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 792              		.loc 1 569 17 is_stmt 1 discriminator 2
 793 001e 7B68     		ldr	r3, [r7, #4]
 794 0020 2422     		movs	r2, #36
 795 0022 C3F88420 		str	r2, [r3, #132]
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 796              		.loc 1 572 12 discriminator 2
 797 0026 7B68     		ldr	r3, [r7, #4]
 798 0028 1B68     		ldr	r3, [r3]
 799              		.loc 1 572 10 discriminator 2
 800 002a 1B68     		ldr	r3, [r3]
 801 002c FB60     		str	r3, [r7, #12]
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 802              		.loc 1 575 3 discriminator 2
 803 002e 7B68     		ldr	r3, [r7, #4]
 804 0030 1B68     		ldr	r3, [r3]
 805 0032 1A68     		ldr	r2, [r3]
 806 0034 7B68     		ldr	r3, [r7, #4]
 807 0036 1B68     		ldr	r3, [r3]
 808 0038 22F00102 		bic	r2, r2, #1
 809 003c 1A60     		str	r2, [r3]
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
ARM GAS  /tmp/ccMAh4HS.s 			page 25


 810              		.loc 1 578 3 discriminator 2
 811 003e FB68     		ldr	r3, [r7, #12]
 812 0040 23F00053 		bic	r3, r3, #536870912
 813 0044 FB60     		str	r3, [r7, #12]
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 814              		.loc 1 579 19 discriminator 2
 815 0046 7B68     		ldr	r3, [r7, #4]
 816 0048 0022     		movs	r2, #0
 817 004a 5A66     		str	r2, [r3, #100]
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 818              		.loc 1 582 3 discriminator 2
 819 004c 7B68     		ldr	r3, [r7, #4]
 820 004e 1B68     		ldr	r3, [r3]
 821 0050 FA68     		ldr	r2, [r7, #12]
 822 0052 1A60     		str	r2, [r3]
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 823              		.loc 1 584 17 discriminator 2
 824 0054 7B68     		ldr	r3, [r7, #4]
 825 0056 2022     		movs	r2, #32
 826 0058 C3F88420 		str	r2, [r3, #132]
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 827              		.loc 1 587 3 discriminator 2
 828 005c 7B68     		ldr	r3, [r7, #4]
 829 005e 0022     		movs	r2, #0
 830 0060 83F88020 		strb	r2, [r3, #128]
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 831              		.loc 1 589 10 discriminator 2
 832 0064 0023     		movs	r3, #0
 833              	.L32:
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 834              		.loc 1 590 1
 835 0066 1846     		mov	r0, r3
 836 0068 1437     		adds	r7, r7, #20
 837              	.LCFI53:
 838              		.cfi_def_cfa_offset 4
 839 006a BD46     		mov	sp, r7
 840              	.LCFI54:
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 006c 5DF8047B 		ldr	r7, [sp], #4
 844              	.LCFI55:
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 0070 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE340:
 851              		.section	.text.HAL_UARTEx_SetTxFifoThreshold,"ax",%progbits
 852              		.align	1
 853              		.global	HAL_UARTEx_SetTxFifoThreshold
 854              		.syntax unified
 855              		.thumb
ARM GAS  /tmp/ccMAh4HS.s 			page 26


 856              		.thumb_func
 857              		.fpu fpv5-d16
 859              	HAL_UARTEx_SetTxFifoThreshold:
 860              	.LFB341:
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Set the TXFIFO threshold.
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Threshold  TX FIFO threshold value
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_8
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_4
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_2
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_3_4
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 861              		.loc 1 606 1
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 16
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865 0000 80B5     		push	{r7, lr}
 866              	.LCFI56:
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 84B0     		sub	sp, sp, #16
 871              	.LCFI57:
 872              		.cfi_def_cfa_offset 24
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI58:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 877 0008 3960     		str	r1, [r7]
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 878              		.loc 1 614 3
 879 000a 7B68     		ldr	r3, [r7, #4]
 880 000c 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 881 0010 012B     		cmp	r3, #1
 882 0012 01D1     		bne	.L34
 883              		.loc 1 614 3 is_stmt 0 discriminator 1
 884 0014 0223     		movs	r3, #2
 885 0016 2DE0     		b	.L35
 886              	.L34:
 887              		.loc 1 614 3 discriminator 2
 888 0018 7B68     		ldr	r3, [r7, #4]
 889 001a 0122     		movs	r2, #1
ARM GAS  /tmp/ccMAh4HS.s 			page 27


 890 001c 83F88020 		strb	r2, [r3, #128]
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 891              		.loc 1 616 17 is_stmt 1 discriminator 2
 892 0020 7B68     		ldr	r3, [r7, #4]
 893 0022 2422     		movs	r2, #36
 894 0024 C3F88420 		str	r2, [r3, #132]
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 895              		.loc 1 619 12 discriminator 2
 896 0028 7B68     		ldr	r3, [r7, #4]
 897 002a 1B68     		ldr	r3, [r3]
 898              		.loc 1 619 10 discriminator 2
 899 002c 1B68     		ldr	r3, [r3]
 900 002e FB60     		str	r3, [r7, #12]
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 901              		.loc 1 622 3 discriminator 2
 902 0030 7B68     		ldr	r3, [r7, #4]
 903 0032 1B68     		ldr	r3, [r3]
 904 0034 1A68     		ldr	r2, [r3]
 905 0036 7B68     		ldr	r3, [r7, #4]
 906 0038 1B68     		ldr	r3, [r3]
 907 003a 22F00102 		bic	r2, r2, #1
 908 003e 1A60     		str	r2, [r3]
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Update TX threshold configuration */
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 909              		.loc 1 625 3 discriminator 2
 910 0040 7B68     		ldr	r3, [r7, #4]
 911 0042 1B68     		ldr	r3, [r3]
 912 0044 9B68     		ldr	r3, [r3, #8]
 913 0046 23F06041 		bic	r1, r3, #-536870912
 914 004a 7B68     		ldr	r3, [r7, #4]
 915 004c 1B68     		ldr	r3, [r3]
 916 004e 3A68     		ldr	r2, [r7]
 917 0050 0A43     		orrs	r2, r2, r1
 918 0052 9A60     		str	r2, [r3, #8]
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 919              		.loc 1 628 3 discriminator 2
 920 0054 7868     		ldr	r0, [r7, #4]
 921 0056 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 922              		.loc 1 631 3 discriminator 2
 923 005a 7B68     		ldr	r3, [r7, #4]
 924 005c 1B68     		ldr	r3, [r3]
 925 005e FA68     		ldr	r2, [r7, #12]
 926 0060 1A60     		str	r2, [r3]
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 927              		.loc 1 633 17 discriminator 2
ARM GAS  /tmp/ccMAh4HS.s 			page 28


 928 0062 7B68     		ldr	r3, [r7, #4]
 929 0064 2022     		movs	r2, #32
 930 0066 C3F88420 		str	r2, [r3, #132]
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 931              		.loc 1 636 3 discriminator 2
 932 006a 7B68     		ldr	r3, [r7, #4]
 933 006c 0022     		movs	r2, #0
 934 006e 83F88020 		strb	r2, [r3, #128]
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 935              		.loc 1 638 10 discriminator 2
 936 0072 0023     		movs	r3, #0
 937              	.L35:
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 938              		.loc 1 639 1
 939 0074 1846     		mov	r0, r3
 940 0076 1037     		adds	r7, r7, #16
 941              	.LCFI59:
 942              		.cfi_def_cfa_offset 8
 943 0078 BD46     		mov	sp, r7
 944              	.LCFI60:
 945              		.cfi_def_cfa_register 13
 946              		@ sp needed
 947 007a 80BD     		pop	{r7, pc}
 948              		.cfi_endproc
 949              	.LFE341:
 951              		.section	.text.HAL_UARTEx_SetRxFifoThreshold,"ax",%progbits
 952              		.align	1
 953              		.global	HAL_UARTEx_SetRxFifoThreshold
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 957              		.fpu fpv5-d16
 959              	HAL_UARTEx_SetRxFifoThreshold:
 960              	.LFB342:
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Set the RXFIFO threshold.
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Threshold  RX FIFO threshold value
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_8
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_4
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_2
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_3_4
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 961              		.loc 1 655 1
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 16
 964              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccMAh4HS.s 			page 29


 965 0000 80B5     		push	{r7, lr}
 966              	.LCFI61:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 84B0     		sub	sp, sp, #16
 971              	.LCFI62:
 972              		.cfi_def_cfa_offset 24
 973 0004 00AF     		add	r7, sp, #0
 974              	.LCFI63:
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 977 0008 3960     		str	r1, [r7]
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the parameters */
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 978              		.loc 1 663 3
 979 000a 7B68     		ldr	r3, [r7, #4]
 980 000c 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 981 0010 012B     		cmp	r3, #1
 982 0012 01D1     		bne	.L37
 983              		.loc 1 663 3 is_stmt 0 discriminator 1
 984 0014 0223     		movs	r3, #2
 985 0016 2DE0     		b	.L38
 986              	.L37:
 987              		.loc 1 663 3 discriminator 2
 988 0018 7B68     		ldr	r3, [r7, #4]
 989 001a 0122     		movs	r2, #1
 990 001c 83F88020 		strb	r2, [r3, #128]
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 991              		.loc 1 665 17 is_stmt 1 discriminator 2
 992 0020 7B68     		ldr	r3, [r7, #4]
 993 0022 2422     		movs	r2, #36
 994 0024 C3F88420 		str	r2, [r3, #132]
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 995              		.loc 1 668 12 discriminator 2
 996 0028 7B68     		ldr	r3, [r7, #4]
 997 002a 1B68     		ldr	r3, [r3]
 998              		.loc 1 668 10 discriminator 2
 999 002c 1B68     		ldr	r3, [r3]
 1000 002e FB60     		str	r3, [r7, #12]
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 1001              		.loc 1 671 3 discriminator 2
 1002 0030 7B68     		ldr	r3, [r7, #4]
 1003 0032 1B68     		ldr	r3, [r3]
 1004 0034 1A68     		ldr	r2, [r3]
 1005 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMAh4HS.s 			page 30


 1006 0038 1B68     		ldr	r3, [r3]
 1007 003a 22F00102 		bic	r2, r2, #1
 1008 003e 1A60     		str	r2, [r3]
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Update RX threshold configuration */
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 1009              		.loc 1 674 3 discriminator 2
 1010 0040 7B68     		ldr	r3, [r7, #4]
 1011 0042 1B68     		ldr	r3, [r3]
 1012 0044 9B68     		ldr	r3, [r3, #8]
 1013 0046 23F06061 		bic	r1, r3, #234881024
 1014 004a 7B68     		ldr	r3, [r7, #4]
 1015 004c 1B68     		ldr	r3, [r3]
 1016 004e 3A68     		ldr	r2, [r7]
 1017 0050 0A43     		orrs	r2, r2, r1
 1018 0052 9A60     		str	r2, [r3, #8]
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 1019              		.loc 1 677 3 discriminator 2
 1020 0054 7868     		ldr	r0, [r7, #4]
 1021 0056 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 1022              		.loc 1 680 3 discriminator 2
 1023 005a 7B68     		ldr	r3, [r7, #4]
 1024 005c 1B68     		ldr	r3, [r3]
 1025 005e FA68     		ldr	r2, [r7, #12]
 1026 0060 1A60     		str	r2, [r3]
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 1027              		.loc 1 682 17 discriminator 2
 1028 0062 7B68     		ldr	r3, [r7, #4]
 1029 0064 2022     		movs	r2, #32
 1030 0066 C3F88420 		str	r2, [r3, #132]
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 1031              		.loc 1 685 3 discriminator 2
 1032 006a 7B68     		ldr	r3, [r7, #4]
 1033 006c 0022     		movs	r2, #0
 1034 006e 83F88020 		strb	r2, [r3, #128]
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 1035              		.loc 1 687 10 discriminator 2
 1036 0072 0023     		movs	r3, #0
 1037              	.L38:
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1038              		.loc 1 688 1
 1039 0074 1846     		mov	r0, r3
 1040 0076 1037     		adds	r7, r7, #16
 1041              	.LCFI64:
 1042              		.cfi_def_cfa_offset 8
 1043 0078 BD46     		mov	sp, r7
 1044              	.LCFI65:
 1045              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccMAh4HS.s 			page 31


 1046              		@ sp needed
 1047 007a 80BD     		pop	{r7, pc}
 1048              		.cfi_endproc
 1049              	.LFE342:
 1051              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 1052              		.align	1
 1053              		.global	HAL_UARTEx_ReceiveToIdle
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	HAL_UARTEx_ReceiveToIdle:
 1060              	.LFB343:
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  HAL_OK is returned if reception is completed (expected number of data has been received)
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        or if reception is stopped after IDLE event (less than the expected number of data has b
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        In this case, RxLen output parameter indicates number of data available in reception buf
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       is not empty. Read operations from the RDR register are performed when
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       RXNE are mapped on the same bit-field.
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart   UART handle.
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param RxLen   Number of data elements finally received
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *                (could be lower than Size, in case reception ends on IDLE event)
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                            uint32_t Timeout)
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 1061              		.loc 1 713 1
 1062              		.cfi_startproc
 1063              		@ args = 4, pretend = 0, frame = 32
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065 0000 80B5     		push	{r7, lr}
 1066              	.LCFI66:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 88B0     		sub	sp, sp, #32
 1071              	.LCFI67:
 1072              		.cfi_def_cfa_offset 40
 1073 0004 00AF     		add	r7, sp, #0
 1074              	.LCFI68:
 1075              		.cfi_def_cfa_register 7
 1076 0006 F860     		str	r0, [r7, #12]
 1077 0008 B960     		str	r1, [r7, #8]
 1078 000a 3B60     		str	r3, [r7]
 1079 000c 1346     		mov	r3, r2	@ movhi
ARM GAS  /tmp/ccMAh4HS.s 			page 32


 1080 000e FB80     		strh	r3, [r7, #6]	@ movhi
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t uhMask;
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1081              		.loc 1 720 12
 1082 0010 FB68     		ldr	r3, [r7, #12]
 1083 0012 D3F88830 		ldr	r3, [r3, #136]
 1084              		.loc 1 720 6
 1085 0016 202B     		cmp	r3, #32
 1086 0018 40F0F880 		bne	.L40
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 1087              		.loc 1 722 8
 1088 001c BB68     		ldr	r3, [r7, #8]
 1089 001e 002B     		cmp	r3, #0
 1090 0020 02D0     		beq	.L41
 1091              		.loc 1 722 25 discriminator 1
 1092 0022 FB88     		ldrh	r3, [r7, #6]
 1093 0024 002B     		cmp	r3, #0
 1094 0026 01D1     		bne	.L42
 1095              	.L41:
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return  HAL_ERROR;
 1096              		.loc 1 724 15
 1097 0028 0123     		movs	r3, #1
 1098 002a F0E0     		b	.L43
 1099              	.L42:
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 1100              		.loc 1 727 5
 1101 002c FB68     		ldr	r3, [r7, #12]
 1102 002e 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1103 0032 012B     		cmp	r3, #1
 1104 0034 01D1     		bne	.L44
 1105              		.loc 1 727 5 is_stmt 0 discriminator 1
 1106 0036 0223     		movs	r3, #2
 1107 0038 E9E0     		b	.L43
 1108              	.L44:
 1109              		.loc 1 727 5 discriminator 2
 1110 003a FB68     		ldr	r3, [r7, #12]
 1111 003c 0122     		movs	r2, #1
 1112 003e 83F88020 		strb	r2, [r3, #128]
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1113              		.loc 1 729 22 is_stmt 1 discriminator 2
 1114 0042 FB68     		ldr	r3, [r7, #12]
 1115 0044 0022     		movs	r2, #0
 1116 0046 C3F88C20 		str	r2, [r3, #140]
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1117              		.loc 1 730 20 discriminator 2
 1118 004a FB68     		ldr	r3, [r7, #12]
 1119 004c 2222     		movs	r2, #34
ARM GAS  /tmp/ccMAh4HS.s 			page 33


 1120 004e C3F88820 		str	r2, [r3, #136]
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1121              		.loc 1 731 26 discriminator 2
 1122 0052 FB68     		ldr	r3, [r7, #12]
 1123 0054 0122     		movs	r2, #1
 1124 0056 DA66     		str	r2, [r3, #108]
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init tickstart for timeout management */
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tickstart = HAL_GetTick();
 1125              		.loc 1 734 17 discriminator 2
 1126 0058 FFF7FEFF 		bl	HAL_GetTick
 1127 005c 7861     		str	r0, [r7, #20]
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferSize  = Size;
 1128              		.loc 1 736 24 discriminator 2
 1129 005e FB68     		ldr	r3, [r7, #12]
 1130 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1131 0062 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1132              		.loc 1 737 24 discriminator 2
 1133 0066 FB68     		ldr	r3, [r7, #12]
 1134 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1135 006a A3F85E20 		strh	r2, [r3, #94]	@ movhi
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Computation of UART mask to apply to RDR register */
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_MASK_COMPUTATION(huart);
 1136              		.loc 1 740 5 discriminator 2
 1137 006e FB68     		ldr	r3, [r7, #12]
 1138 0070 9B68     		ldr	r3, [r3, #8]
 1139 0072 B3F5805F 		cmp	r3, #4096
 1140 0076 0ED1     		bne	.L45
 1141              		.loc 1 740 5 is_stmt 0 discriminator 1
 1142 0078 FB68     		ldr	r3, [r7, #12]
 1143 007a 1B69     		ldr	r3, [r3, #16]
 1144 007c 002B     		cmp	r3, #0
 1145 007e 05D1     		bne	.L46
 1146              		.loc 1 740 5 discriminator 3
 1147 0080 FB68     		ldr	r3, [r7, #12]
 1148 0082 40F2FF12 		movw	r2, #511
 1149 0086 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1150 008a 2DE0     		b	.L47
 1151              	.L46:
 1152              		.loc 1 740 5 discriminator 4
 1153 008c FB68     		ldr	r3, [r7, #12]
 1154 008e FF22     		movs	r2, #255
 1155 0090 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1156 0094 28E0     		b	.L47
 1157              	.L45:
 1158              		.loc 1 740 5 discriminator 2
 1159 0096 FB68     		ldr	r3, [r7, #12]
 1160 0098 9B68     		ldr	r3, [r3, #8]
 1161 009a 002B     		cmp	r3, #0
 1162 009c 0DD1     		bne	.L48
 1163              		.loc 1 740 5 discriminator 5
 1164 009e FB68     		ldr	r3, [r7, #12]
 1165 00a0 1B69     		ldr	r3, [r3, #16]
 1166 00a2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMAh4HS.s 			page 34


 1167 00a4 04D1     		bne	.L49
 1168              		.loc 1 740 5 discriminator 7
 1169 00a6 FB68     		ldr	r3, [r7, #12]
 1170 00a8 FF22     		movs	r2, #255
 1171 00aa A3F86020 		strh	r2, [r3, #96]	@ movhi
 1172 00ae 1BE0     		b	.L47
 1173              	.L49:
 1174              		.loc 1 740 5 discriminator 8
 1175 00b0 FB68     		ldr	r3, [r7, #12]
 1176 00b2 7F22     		movs	r2, #127
 1177 00b4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1178 00b8 16E0     		b	.L47
 1179              	.L48:
 1180              		.loc 1 740 5 discriminator 6
 1181 00ba FB68     		ldr	r3, [r7, #12]
 1182 00bc 9B68     		ldr	r3, [r3, #8]
 1183 00be B3F1805F 		cmp	r3, #268435456
 1184 00c2 0DD1     		bne	.L50
 1185              		.loc 1 740 5 discriminator 9
 1186 00c4 FB68     		ldr	r3, [r7, #12]
 1187 00c6 1B69     		ldr	r3, [r3, #16]
 1188 00c8 002B     		cmp	r3, #0
 1189 00ca 04D1     		bne	.L51
 1190              		.loc 1 740 5 discriminator 11
 1191 00cc FB68     		ldr	r3, [r7, #12]
 1192 00ce 7F22     		movs	r2, #127
 1193 00d0 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1194 00d4 08E0     		b	.L47
 1195              	.L51:
 1196              		.loc 1 740 5 discriminator 12
 1197 00d6 FB68     		ldr	r3, [r7, #12]
 1198 00d8 3F22     		movs	r2, #63
 1199 00da A3F86020 		strh	r2, [r3, #96]	@ movhi
 1200 00de 03E0     		b	.L47
 1201              	.L50:
 1202              		.loc 1 740 5 discriminator 10
 1203 00e0 FB68     		ldr	r3, [r7, #12]
 1204 00e2 0022     		movs	r2, #0
 1205 00e4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1206              	.L47:
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1207              		.loc 1 741 12 is_stmt 1
 1208 00e8 FB68     		ldr	r3, [r7, #12]
 1209 00ea B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 1210 00ee 7B82     		strh	r3, [r7, #18]	@ movhi
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1211              		.loc 1 744 21
 1212 00f0 FB68     		ldr	r3, [r7, #12]
 1213 00f2 9B68     		ldr	r3, [r3, #8]
 1214              		.loc 1 744 8
 1215 00f4 B3F5805F 		cmp	r3, #4096
 1216 00f8 08D1     		bne	.L52
 1217              		.loc 1 744 71 discriminator 1
 1218 00fa FB68     		ldr	r3, [r7, #12]
 1219 00fc 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccMAh4HS.s 			page 35


 1220              		.loc 1 744 56 discriminator 1
 1221 00fe 002B     		cmp	r3, #0
 1222 0100 04D1     		bne	.L52
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata8bits  = NULL;
 1223              		.loc 1 746 19
 1224 0102 0023     		movs	r3, #0
 1225 0104 FB61     		str	r3, [r7, #28]
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1226              		.loc 1 747 19
 1227 0106 BB68     		ldr	r3, [r7, #8]
 1228 0108 BB61     		str	r3, [r7, #24]
 1229 010a 03E0     		b	.L53
 1230              	.L52:
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     else
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata8bits  = pData;
 1231              		.loc 1 751 19
 1232 010c BB68     		ldr	r3, [r7, #8]
 1233 010e FB61     		str	r3, [r7, #28]
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = NULL;
 1234              		.loc 1 752 19
 1235 0110 0023     		movs	r3, #0
 1236 0112 BB61     		str	r3, [r7, #24]
 1237              	.L53:
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_UNLOCK(huart);
 1238              		.loc 1 755 5
 1239 0114 FB68     		ldr	r3, [r7, #12]
 1240 0116 0022     		movs	r2, #0
 1241 0118 83F88020 		strb	r2, [r3, #128]
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Initialize output number of received elements */
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     *RxLen = 0U;
 1242              		.loc 1 758 12
 1243 011c 3B68     		ldr	r3, [r7]
 1244 011e 0022     		movs	r2, #0
 1245 0120 1A80     		strh	r2, [r3]	@ movhi
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* as long as data have to be received */
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     while (huart->RxXferCount > 0U)
 1246              		.loc 1 761 11
 1247 0122 5CE0     		b	.L54
 1248              	.L60:
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check if IDLE flag is set */
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 1249              		.loc 1 764 11
 1250 0124 FB68     		ldr	r3, [r7, #12]
 1251 0126 1B68     		ldr	r3, [r3]
 1252 0128 DB69     		ldr	r3, [r3, #28]
 1253 012a 03F01003 		and	r3, r3, #16
 1254              		.loc 1 764 10
 1255 012e 102B     		cmp	r3, #16
 1256 0130 0DD1     		bne	.L55
ARM GAS  /tmp/ccMAh4HS.s 			page 36


 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* Clear IDLE flag in ISR */
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 1257              		.loc 1 767 9
 1258 0132 FB68     		ldr	r3, [r7, #12]
 1259 0134 1B68     		ldr	r3, [r3]
 1260 0136 1022     		movs	r2, #16
 1261 0138 1A62     		str	r2, [r3, #32]
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (*RxLen > 0U)
 1262              		.loc 1 771 13
 1263 013a 3B68     		ldr	r3, [r7]
 1264 013c 1B88     		ldrh	r3, [r3]
 1265              		.loc 1 771 12
 1266 013e 002B     		cmp	r3, #0
 1267 0140 05D0     		beq	.L55
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 1268              		.loc 1 773 26
 1269 0142 FB68     		ldr	r3, [r7, #12]
 1270 0144 2022     		movs	r2, #32
 1271 0146 C3F88820 		str	r2, [r3, #136]
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           return HAL_OK;
 1272              		.loc 1 775 18
 1273 014a 0023     		movs	r3, #0
 1274 014c 5FE0     		b	.L43
 1275              	.L55:
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check if RXNE flag is set */
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 1276              		.loc 1 780 11
 1277 014e FB68     		ldr	r3, [r7, #12]
 1278 0150 1B68     		ldr	r3, [r3]
 1279 0152 DB69     		ldr	r3, [r3, #28]
 1280 0154 03F02003 		and	r3, r3, #32
 1281              		.loc 1 780 10
 1282 0158 202B     		cmp	r3, #32
 1283 015a 2BD1     		bne	.L56
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (pdata8bits == NULL)
 1284              		.loc 1 782 12
 1285 015c FB69     		ldr	r3, [r7, #28]
 1286 015e 002B     		cmp	r3, #0
 1287 0160 0CD1     		bne	.L57
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1288              		.loc 1 784 42
 1289 0162 FB68     		ldr	r3, [r7, #12]
 1290 0164 1B68     		ldr	r3, [r3]
 1291              		.loc 1 784 52
 1292 0166 5B6A     		ldr	r3, [r3, #36]
 1293              		.loc 1 784 26
ARM GAS  /tmp/ccMAh4HS.s 			page 37


 1294 0168 9AB2     		uxth	r2, r3
 1295 016a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1296 016c 1340     		ands	r3, r3, r2
 1297 016e 9AB2     		uxth	r2, r3
 1298              		.loc 1 784 24
 1299 0170 BB69     		ldr	r3, [r7, #24]
 1300 0172 1A80     		strh	r2, [r3]	@ movhi
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 1301              		.loc 1 785 22
 1302 0174 BB69     		ldr	r3, [r7, #24]
 1303 0176 0233     		adds	r3, r3, #2
 1304 0178 BB61     		str	r3, [r7, #24]
 1305 017a 0CE0     		b	.L58
 1306              	.L57:
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         else
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1307              		.loc 1 789 40
 1308 017c FB68     		ldr	r3, [r7, #12]
 1309 017e 1B68     		ldr	r3, [r3]
 1310              		.loc 1 789 50
 1311 0180 5B6A     		ldr	r3, [r3, #36]
 1312              		.loc 1 789 25
 1313 0182 DAB2     		uxtb	r2, r3
 1314              		.loc 1 789 58
 1315 0184 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1316 0186 DBB2     		uxtb	r3, r3
 1317              		.loc 1 789 25
 1318 0188 1340     		ands	r3, r3, r2
 1319 018a DAB2     		uxtb	r2, r3
 1320              		.loc 1 789 23
 1321 018c FB69     		ldr	r3, [r7, #28]
 1322 018e 1A70     		strb	r2, [r3]
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1323              		.loc 1 790 21
 1324 0190 FB69     		ldr	r3, [r7, #28]
 1325 0192 0133     		adds	r3, r3, #1
 1326 0194 FB61     		str	r3, [r7, #28]
 1327              	.L58:
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* Increment number of received elements */
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         *RxLen += 1U;
 1328              		.loc 1 793 16
 1329 0196 3B68     		ldr	r3, [r7]
 1330 0198 1B88     		ldrh	r3, [r3]
 1331 019a 0133     		adds	r3, r3, #1
 1332 019c 9AB2     		uxth	r2, r3
 1333 019e 3B68     		ldr	r3, [r7]
 1334 01a0 1A80     		strh	r2, [r3]	@ movhi
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         huart->RxXferCount--;
 1335              		.loc 1 794 14
 1336 01a2 FB68     		ldr	r3, [r7, #12]
 1337 01a4 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1338 01a8 9BB2     		uxth	r3, r3
 1339              		.loc 1 794 27
 1340 01aa 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccMAh4HS.s 			page 38


 1341 01ac 9AB2     		uxth	r2, r3
 1342 01ae FB68     		ldr	r3, [r7, #12]
 1343 01b0 A3F85E20 		strh	r2, [r3, #94]	@ movhi
 1344              	.L56:
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check for the Timeout */
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (Timeout != HAL_MAX_DELAY)
 1345              		.loc 1 798 10
 1346 01b4 BB6A     		ldr	r3, [r7, #40]
 1347 01b6 B3F1FF3F 		cmp	r3, #-1
 1348 01ba 10D0     		beq	.L54
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1349              		.loc 1 800 15
 1350 01bc FFF7FEFF 		bl	HAL_GetTick
 1351 01c0 0246     		mov	r2, r0
 1352              		.loc 1 800 29
 1353 01c2 7B69     		ldr	r3, [r7, #20]
 1354 01c4 D31A     		subs	r3, r2, r3
 1355              		.loc 1 800 12
 1356 01c6 BA6A     		ldr	r2, [r7, #40]
 1357 01c8 9A42     		cmp	r2, r3
 1358 01ca 02D3     		bcc	.L59
 1359              		.loc 1 800 53 discriminator 1
 1360 01cc BB6A     		ldr	r3, [r7, #40]
 1361 01ce 002B     		cmp	r3, #0
 1362 01d0 05D1     		bne	.L54
 1363              	.L59:
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 1364              		.loc 1 802 26
 1365 01d2 FB68     		ldr	r3, [r7, #12]
 1366 01d4 2022     		movs	r2, #32
 1367 01d6 C3F88820 		str	r2, [r3, #136]
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           return HAL_TIMEOUT;
 1368              		.loc 1 804 18
 1369 01da 0323     		movs	r3, #3
 1370 01dc 17E0     		b	.L43
 1371              	.L54:
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1372              		.loc 1 761 17
 1373 01de FB68     		ldr	r3, [r7, #12]
 1374 01e0 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1375 01e4 9BB2     		uxth	r3, r3
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1376              		.loc 1 761 11
 1377 01e6 002B     		cmp	r3, #0
 1378 01e8 9CD1     		bne	.L60
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set number of received elements in output parameter : RxLen */
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 1379              		.loc 1 810 19
ARM GAS  /tmp/ccMAh4HS.s 			page 39


 1380 01ea FB68     		ldr	r3, [r7, #12]
 1381 01ec B3F85C20 		ldrh	r2, [r3, #92]
 1382              		.loc 1 810 39
 1383 01f0 FB68     		ldr	r3, [r7, #12]
 1384 01f2 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1385 01f6 9BB2     		uxth	r3, r3
 1386              		.loc 1 810 32
 1387 01f8 D31A     		subs	r3, r2, r3
 1388 01fa 9AB2     		uxth	r2, r3
 1389              		.loc 1 810 12
 1390 01fc 3B68     		ldr	r3, [r7]
 1391 01fe 1A80     		strh	r2, [r3]	@ movhi
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_READY;
 1392              		.loc 1 812 20
 1393 0200 FB68     		ldr	r3, [r7, #12]
 1394 0202 2022     		movs	r2, #32
 1395 0204 C3F88820 		str	r2, [r3, #136]
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_OK;
 1396              		.loc 1 814 12
 1397 0208 0023     		movs	r3, #0
 1398 020a 00E0     		b	.L43
 1399              	.L40:
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 1400              		.loc 1 818 12
 1401 020c 0223     		movs	r3, #2
 1402              	.L43:
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1403              		.loc 1 820 1
 1404 020e 1846     		mov	r0, r3
 1405 0210 2037     		adds	r7, r7, #32
 1406              	.LCFI69:
 1407              		.cfi_def_cfa_offset 8
 1408 0212 BD46     		mov	sp, r7
 1409              	.LCFI70:
 1410              		.cfi_def_cfa_register 13
 1411              		@ sp needed
 1412 0214 80BD     		pop	{r7, pc}
 1413              		.cfi_endproc
 1414              	.LFE343:
 1416              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 1417              		.align	1
 1418              		.global	HAL_UARTEx_ReceiveToIdle_IT
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1422              		.fpu fpv5-d16
 1424              	HAL_UARTEx_ReceiveToIdle_IT:
 1425              	.LFB344:
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data
ARM GAS  /tmp/ccMAh4HS.s 			page 40


 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to UART interrupts raised by RXNE and IDLE events. Callback is called at end of receptio
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        number of received data elements.
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 1426              		.loc 1 837 1
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 24
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              	.LCFI71:
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 7, -8
 1434              		.cfi_offset 14, -4
 1435 0002 86B0     		sub	sp, sp, #24
 1436              	.LCFI72:
 1437              		.cfi_def_cfa_offset 32
 1438 0004 00AF     		add	r7, sp, #0
 1439              	.LCFI73:
 1440              		.cfi_def_cfa_register 7
 1441 0006 F860     		str	r0, [r7, #12]
 1442 0008 B960     		str	r1, [r7, #8]
 1443 000a 1346     		mov	r3, r2
 1444 000c FB80     		strh	r3, [r7, #6]	@ movhi
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1445              		.loc 1 841 12
 1446 000e FB68     		ldr	r3, [r7, #12]
 1447 0010 D3F88830 		ldr	r3, [r3, #136]
 1448              		.loc 1 841 6
 1449 0014 202B     		cmp	r3, #32
 1450 0016 35D1     		bne	.L62
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 1451              		.loc 1 843 8
 1452 0018 BB68     		ldr	r3, [r7, #8]
 1453 001a 002B     		cmp	r3, #0
 1454 001c 02D0     		beq	.L63
 1455              		.loc 1 843 25 discriminator 1
 1456 001e FB88     		ldrh	r3, [r7, #6]
 1457 0020 002B     		cmp	r3, #0
 1458 0022 01D1     		bne	.L64
 1459              	.L63:
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return HAL_ERROR;
 1460              		.loc 1 845 14
ARM GAS  /tmp/ccMAh4HS.s 			page 41


 1461 0024 0123     		movs	r3, #1
 1462 0026 2EE0     		b	.L65
 1463              	.L64:
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 1464              		.loc 1 848 5
 1465 0028 FB68     		ldr	r3, [r7, #12]
 1466 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1467 002e 012B     		cmp	r3, #1
 1468 0030 01D1     		bne	.L66
 1469              		.loc 1 848 5 is_stmt 0 discriminator 1
 1470 0032 0223     		movs	r3, #2
 1471 0034 27E0     		b	.L65
 1472              	.L66:
 1473              		.loc 1 848 5 discriminator 2
 1474 0036 FB68     		ldr	r3, [r7, #12]
 1475 0038 0122     		movs	r2, #1
 1476 003a 83F88020 		strb	r2, [r3, #128]
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1477              		.loc 1 851 26 is_stmt 1 discriminator 2
 1478 003e FB68     		ldr	r3, [r7, #12]
 1479 0040 0122     		movs	r2, #1
 1480 0042 DA66     		str	r2, [r3, #108]
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 1481              		.loc 1 853 15 discriminator 2
 1482 0044 FB88     		ldrh	r3, [r7, #6]
 1483 0046 1A46     		mov	r2, r3
 1484 0048 B968     		ldr	r1, [r7, #8]
 1485 004a F868     		ldr	r0, [r7, #12]
 1486 004c FFF7FEFF 		bl	UART_Start_Receive_IT
 1487 0050 0346     		mov	r3, r0
 1488 0052 FB75     		strb	r3, [r7, #23]
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (status == HAL_OK)
 1489              		.loc 1 856 8 discriminator 2
 1490 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1491 0056 002B     		cmp	r3, #0
 1492 0058 12D1     		bne	.L67
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 1493              		.loc 1 858 16
 1494 005a FB68     		ldr	r3, [r7, #12]
 1495 005c DB6E     		ldr	r3, [r3, #108]
 1496              		.loc 1 858 10
 1497 005e 012B     		cmp	r3, #1
 1498 0060 0CD1     		bne	.L68
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 1499              		.loc 1 860 9
 1500 0062 FB68     		ldr	r3, [r7, #12]
 1501 0064 1B68     		ldr	r3, [r3]
 1502 0066 1022     		movs	r2, #16
ARM GAS  /tmp/ccMAh4HS.s 			page 42


 1503 0068 1A62     		str	r2, [r3, #32]
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1504              		.loc 1 861 9
 1505 006a FB68     		ldr	r3, [r7, #12]
 1506 006c 1B68     		ldr	r3, [r3]
 1507 006e 1A68     		ldr	r2, [r3]
 1508 0070 FB68     		ldr	r3, [r7, #12]
 1509 0072 1B68     		ldr	r3, [r3]
 1510 0074 42F01002 		orr	r2, r2, #16
 1511 0078 1A60     		str	r2, [r3]
 1512 007a 01E0     		b	.L67
 1513              	.L68:
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       else
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            (Overrun error for instance).
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         status = HAL_ERROR;
 1514              		.loc 1 869 16
 1515 007c 0123     		movs	r3, #1
 1516 007e FB75     		strb	r3, [r7, #23]
 1517              	.L67:
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return status;
 1518              		.loc 1 873 12
 1519 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1520 0082 00E0     		b	.L65
 1521              	.L62:
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 1522              		.loc 1 877 12
 1523 0084 0223     		movs	r3, #2
 1524              	.L65:
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1525              		.loc 1 879 1
 1526 0086 1846     		mov	r0, r3
 1527 0088 1837     		adds	r7, r7, #24
 1528              	.LCFI74:
 1529              		.cfi_def_cfa_offset 8
 1530 008a BD46     		mov	sp, r7
 1531              	.LCFI75:
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 008c 80BD     		pop	{r7, pc}
 1535              		.cfi_endproc
 1536              	.LFE344:
 1538              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 1539              		.align	1
 1540              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 1541              		.syntax unified
ARM GAS  /tmp/ccMAh4HS.s 			page 43


 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv5-d16
 1546              	HAL_UARTEx_ReceiveToIdle_DMA:
 1547              	.LFB345:
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in DMA mode till either the expected number
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of data is received or an IDLE event occurs.
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to DMA services, transferring automatically received data elements in user reception buf
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        calling registered callbacks at half/end of reception. UART IDLE events are also used to
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        reception phase as ended. In all cases, callback execution will indicate number of recei
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When the UART parity is enabled (PCE = 1), the received data contain
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the parity bit (MSB position).
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 1548              		.loc 1 899 1
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 24
 1551              		@ frame_needed = 1, uses_anonymous_args = 0
 1552 0000 80B5     		push	{r7, lr}
 1553              	.LCFI76:
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 7, -8
 1556              		.cfi_offset 14, -4
 1557 0002 86B0     		sub	sp, sp, #24
 1558              	.LCFI77:
 1559              		.cfi_def_cfa_offset 32
 1560 0004 00AF     		add	r7, sp, #0
 1561              	.LCFI78:
 1562              		.cfi_def_cfa_register 7
 1563 0006 F860     		str	r0, [r7, #12]
 1564 0008 B960     		str	r1, [r7, #8]
 1565 000a 1346     		mov	r3, r2
 1566 000c FB80     		strh	r3, [r7, #6]	@ movhi
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1567              		.loc 1 903 12
 1568 000e FB68     		ldr	r3, [r7, #12]
 1569 0010 D3F88830 		ldr	r3, [r3, #136]
 1570              		.loc 1 903 6
 1571 0014 202B     		cmp	r3, #32
 1572 0016 35D1     		bne	.L70
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 1573              		.loc 1 905 8
ARM GAS  /tmp/ccMAh4HS.s 			page 44


 1574 0018 BB68     		ldr	r3, [r7, #8]
 1575 001a 002B     		cmp	r3, #0
 1576 001c 02D0     		beq	.L71
 1577              		.loc 1 905 25 discriminator 1
 1578 001e FB88     		ldrh	r3, [r7, #6]
 1579 0020 002B     		cmp	r3, #0
 1580 0022 01D1     		bne	.L72
 1581              	.L71:
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return HAL_ERROR;
 1582              		.loc 1 907 14
 1583 0024 0123     		movs	r3, #1
 1584 0026 2EE0     		b	.L73
 1585              	.L72:
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 1586              		.loc 1 910 5
 1587 0028 FB68     		ldr	r3, [r7, #12]
 1588 002a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 1589 002e 012B     		cmp	r3, #1
 1590 0030 01D1     		bne	.L74
 1591              		.loc 1 910 5 is_stmt 0 discriminator 1
 1592 0032 0223     		movs	r3, #2
 1593 0034 27E0     		b	.L73
 1594              	.L74:
 1595              		.loc 1 910 5 discriminator 2
 1596 0036 FB68     		ldr	r3, [r7, #12]
 1597 0038 0122     		movs	r2, #1
 1598 003a 83F88020 		strb	r2, [r3, #128]
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1599              		.loc 1 913 26 is_stmt 1 discriminator 2
 1600 003e FB68     		ldr	r3, [r7, #12]
 1601 0040 0122     		movs	r2, #1
 1602 0042 DA66     		str	r2, [r3, #108]
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 1603              		.loc 1 915 15 discriminator 2
 1604 0044 FB88     		ldrh	r3, [r7, #6]
 1605 0046 1A46     		mov	r2, r3
 1606 0048 B968     		ldr	r1, [r7, #8]
 1607 004a F868     		ldr	r0, [r7, #12]
 1608 004c FFF7FEFF 		bl	UART_Start_Receive_DMA
 1609 0050 0346     		mov	r3, r0
 1610 0052 FB75     		strb	r3, [r7, #23]
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (status == HAL_OK)
 1611              		.loc 1 918 8 discriminator 2
 1612 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1613 0056 002B     		cmp	r3, #0
 1614 0058 12D1     		bne	.L75
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 1615              		.loc 1 920 16
ARM GAS  /tmp/ccMAh4HS.s 			page 45


 1616 005a FB68     		ldr	r3, [r7, #12]
 1617 005c DB6E     		ldr	r3, [r3, #108]
 1618              		.loc 1 920 10
 1619 005e 012B     		cmp	r3, #1
 1620 0060 0CD1     		bne	.L76
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 1621              		.loc 1 922 9
 1622 0062 FB68     		ldr	r3, [r7, #12]
 1623 0064 1B68     		ldr	r3, [r3]
 1624 0066 1022     		movs	r2, #16
 1625 0068 1A62     		str	r2, [r3, #32]
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1626              		.loc 1 923 9
 1627 006a FB68     		ldr	r3, [r7, #12]
 1628 006c 1B68     		ldr	r3, [r3]
 1629 006e 1A68     		ldr	r2, [r3]
 1630 0070 FB68     		ldr	r3, [r7, #12]
 1631 0072 1B68     		ldr	r3, [r3]
 1632 0074 42F01002 		orr	r2, r2, #16
 1633 0078 1A60     		str	r2, [r3]
 1634 007a 01E0     		b	.L75
 1635              	.L76:
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       else
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            (Overrun error for instance).
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         status = HAL_ERROR;
 1636              		.loc 1 931 16
 1637 007c 0123     		movs	r3, #1
 1638 007e FB75     		strb	r3, [r7, #23]
 1639              	.L75:
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return status;
 1640              		.loc 1 935 12
 1641 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1642 0082 00E0     		b	.L73
 1643              	.L70:
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 1644              		.loc 1 939 12
 1645 0084 0223     		movs	r3, #2
 1646              	.L73:
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1647              		.loc 1 941 1
 1648 0086 1846     		mov	r0, r3
 1649 0088 1837     		adds	r7, r7, #24
 1650              	.LCFI79:
 1651              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccMAh4HS.s 			page 46


 1652 008a BD46     		mov	sp, r7
 1653              	.LCFI80:
 1654              		.cfi_def_cfa_register 13
 1655              		@ sp needed
 1656 008c 80BD     		pop	{r7, pc}
 1657              		.cfi_endproc
 1658              	.LFE345:
 1660              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
 1661              		.align	1
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv5-d16
 1667              	UARTEx_Wakeup_AddressConfig:
 1668              	.LFB346:
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart           UART handle.
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 1669              		.loc 1 962 1
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 16
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673              		@ link register save eliminated.
 1674 0000 80B4     		push	{r7}
 1675              	.LCFI81:
 1676              		.cfi_def_cfa_offset 4
 1677              		.cfi_offset 7, -4
 1678 0002 85B0     		sub	sp, sp, #20
 1679              	.LCFI82:
 1680              		.cfi_def_cfa_offset 24
 1681 0004 00AF     		add	r7, sp, #0
 1682              	.LCFI83:
 1683              		.cfi_def_cfa_register 7
 1684 0006 F860     		str	r0, [r7, #12]
 1685 0008 3B1D     		adds	r3, r7, #4
 1686 000a 83E80600 		stm	r3, {r1, r2}
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the USART address length */
ARM GAS  /tmp/ccMAh4HS.s 			page 47


 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 1687              		.loc 1 966 3
 1688 000e FB68     		ldr	r3, [r7, #12]
 1689 0010 1B68     		ldr	r3, [r3]
 1690 0012 5B68     		ldr	r3, [r3, #4]
 1691 0014 23F01002 		bic	r2, r3, #16
 1692 0018 3B89     		ldrh	r3, [r7, #8]
 1693 001a 1946     		mov	r1, r3
 1694 001c FB68     		ldr	r3, [r7, #12]
 1695 001e 1B68     		ldr	r3, [r3]
 1696 0020 0A43     		orrs	r2, r2, r1
 1697 0022 5A60     		str	r2, [r3, #4]
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the USART address node */
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 1698              		.loc 1 969 3
 1699 0024 FB68     		ldr	r3, [r7, #12]
 1700 0026 1B68     		ldr	r3, [r3]
 1701 0028 5B68     		ldr	r3, [r3, #4]
 1702 002a 23F07F41 		bic	r1, r3, #-16777216
 1703 002e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1704 0030 1A06     		lsls	r2, r3, #24
 1705 0032 FB68     		ldr	r3, [r7, #12]
 1706 0034 1B68     		ldr	r3, [r3]
 1707 0036 0A43     		orrs	r2, r2, r1
 1708 0038 5A60     		str	r2, [r3, #4]
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1709              		.loc 1 970 1
 1710 003a 00BF     		nop
 1711 003c 1437     		adds	r7, r7, #20
 1712              	.LCFI84:
 1713              		.cfi_def_cfa_offset 4
 1714 003e BD46     		mov	sp, r7
 1715              	.LCFI85:
 1716              		.cfi_def_cfa_register 13
 1717              		@ sp needed
 1718 0040 5DF8047B 		ldr	r7, [sp], #4
 1719              	.LCFI86:
 1720              		.cfi_restore 7
 1721              		.cfi_def_cfa_offset 0
 1722 0044 7047     		bx	lr
 1723              		.cfi_endproc
 1724              	.LFE346:
 1726              		.section	.text.UARTEx_SetNbDataToProcess,"ax",%progbits
 1727              		.align	1
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv5-d16
 1733              	UARTEx_SetNbDataToProcess:
 1734              	.LFB347:
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Calculate the number of data to process in RX/TX ISR.
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note The RX FIFO depth and the TX FIFO depth is extracted from
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       the UART configuration registers.
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccMAh4HS.s 			page 48


 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 1735              		.loc 1 980 1
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 16
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740 0000 80B4     		push	{r7}
 1741              	.LCFI87:
 1742              		.cfi_def_cfa_offset 4
 1743              		.cfi_offset 7, -4
 1744 0002 85B0     		sub	sp, sp, #20
 1745              	.LCFI88:
 1746              		.cfi_def_cfa_offset 24
 1747 0004 00AF     		add	r7, sp, #0
 1748              	.LCFI89:
 1749              		.cfi_def_cfa_register 7
 1750 0006 7860     		str	r0, [r7, #4]
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t tx_fifo_depth;
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t rx_fifo_threshold;
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t tx_fifo_threshold;
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 1751              		.loc 1 988 12
 1752 0008 7B68     		ldr	r3, [r7, #4]
 1753 000a 5B6E     		ldr	r3, [r3, #100]
 1754              		.loc 1 988 6
 1755 000c 002B     		cmp	r3, #0
 1756 000e 08D1     		bne	.L79
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = 1U;
 1757              		.loc 1 990 30
 1758 0010 7B68     		ldr	r3, [r7, #4]
 1759 0012 0122     		movs	r2, #1
 1760 0014 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = 1U;
 1761              		.loc 1 991 30
 1762 0018 7B68     		ldr	r3, [r7, #4]
 1763 001a 0122     		movs	r2, #1
 1764 001c A3F86820 		strh	r2, [r3, #104]	@ movhi
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     rx_fifo_depth = RX_FIFO_DEPTH;
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
ARM GAS  /tmp/ccMAh4HS.s 			page 49


1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1765              		.loc 1 1004 1
 1766 0020 31E0     		b	.L81
 1767              	.L79:
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 1768              		.loc 1 995 19
 1769 0022 1023     		movs	r3, #16
 1770 0024 FB73     		strb	r3, [r7, #15]
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 1771              		.loc 1 996 19
 1772 0026 1023     		movs	r3, #16
 1773 0028 BB73     		strb	r3, [r7, #14]
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1774              		.loc 1 997 35
 1775 002a 7B68     		ldr	r3, [r7, #4]
 1776 002c 1B68     		ldr	r3, [r3]
 1777 002e 9B68     		ldr	r3, [r3, #8]
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1778              		.loc 1 997 85
 1779 0030 5B0E     		lsrs	r3, r3, #25
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1780              		.loc 1 997 25
 1781 0032 DBB2     		uxtb	r3, r3
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1782              		.loc 1 997 23
 1783 0034 03F00703 		and	r3, r3, #7
 1784 0038 7B73     		strb	r3, [r7, #13]
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 1785              		.loc 1 998 35
 1786 003a 7B68     		ldr	r3, [r7, #4]
 1787 003c 1B68     		ldr	r3, [r3]
 1788 003e 9B68     		ldr	r3, [r3, #8]
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 1789              		.loc 1 998 85
 1790 0040 5B0F     		lsrs	r3, r3, #29
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 1791              		.loc 1 998 25
 1792 0042 DBB2     		uxtb	r3, r3
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 1793              		.loc 1 998 23
 1794 0044 03F00703 		and	r3, r3, #7
 1795 0048 3B73     		strb	r3, [r7, #12]
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 1796              		.loc 1 999 33
 1797 004a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 1798              		.loc 1 999 68
 1799 004c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1800 004e 1149     		ldr	r1, .L82
 1801 0050 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 1802              		.loc 1 999 57
 1803 0052 02FB03F3 		mul	r3, r2, r3
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 1804              		.loc 1 1000 53
 1805 0056 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1806 0058 0F49     		ldr	r1, .L82+4
ARM GAS  /tmp/ccMAh4HS.s 			page 50


 1807 005a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 1808              		.loc 1 999 89
 1809 005c 93FBF2F3 		sdiv	r3, r3, r2
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 1810              		.loc 1 999 30
 1811 0060 9AB2     		uxth	r2, r3
 1812 0062 7B68     		ldr	r3, [r7, #4]
 1813 0064 A3F86A20 		strh	r2, [r3, #106]	@ movhi
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 1814              		.loc 1 1001 33
 1815 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 1816              		.loc 1 1001 68
 1817 006a 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1818 006c 0949     		ldr	r1, .L82
 1819 006e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 1820              		.loc 1 1001 57
 1821 0070 02FB03F3 		mul	r3, r2, r3
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1822              		.loc 1 1002 53
 1823 0074 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1824 0076 0849     		ldr	r1, .L82+4
 1825 0078 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 1826              		.loc 1 1001 89
 1827 007a 93FBF2F3 		sdiv	r3, r3, r2
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 1828              		.loc 1 1001 30
 1829 007e 9AB2     		uxth	r2, r3
 1830 0080 7B68     		ldr	r3, [r7, #4]
 1831 0082 A3F86820 		strh	r2, [r3, #104]	@ movhi
 1832              	.L81:
 1833              		.loc 1 1004 1
 1834 0086 00BF     		nop
 1835 0088 1437     		adds	r7, r7, #20
 1836              	.LCFI90:
 1837              		.cfi_def_cfa_offset 4
 1838 008a BD46     		mov	sp, r7
 1839              	.LCFI91:
 1840              		.cfi_def_cfa_register 13
 1841              		@ sp needed
 1842 008c 5DF8047B 		ldr	r7, [sp], #4
 1843              	.LCFI92:
 1844              		.cfi_restore 7
 1845              		.cfi_def_cfa_offset 0
 1846 0090 7047     		bx	lr
 1847              	.L83:
 1848 0092 00BF     		.align	2
 1849              	.L82:
 1850 0094 00000000 		.word	numerator.12236
 1851 0098 00000000 		.word	denominator.12237
 1852              		.cfi_endproc
 1853              	.LFE347:
 1855              		.section	.rodata.numerator.12236,"a"
 1856              		.align	2
ARM GAS  /tmp/ccMAh4HS.s 			page 51


 1859              	numerator.12236:
 1860 0000 01010103 		.ascii	"\001\001\001\003\007\001\000\000"
 1860      07010000 
 1861              		.section	.rodata.denominator.12237,"a"
 1862              		.align	2
 1865              	denominator.12237:
 1866 0000 08040204 		.ascii	"\010\004\002\004\010\001\001\001"
 1866      08010101 
 1867              		.text
 1868              	.Letext0:
 1869              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1870              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 1871              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1872              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 1873              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1874              		.file 7 "/usr/include/newlib/sys/_types.h"
 1875              		.file 8 "/usr/include/newlib/sys/reent.h"
 1876              		.file 9 "/usr/include/newlib/sys/lock.h"
 1877              		.file 10 "/usr/include/newlib/math.h"
 1878              		.file 11 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1879              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1880              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1881              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1882              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1883              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 1884              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccMAh4HS.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_uart_ex.c
     /tmp/ccMAh4HS.s:17     .text.HAL_RS485Ex_Init:0000000000000000 $t
     /tmp/ccMAh4HS.s:25     .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
     /tmp/ccMAh4HS.s:168    .text.HAL_RS485Ex_Init:00000000000000d0 $d
     /tmp/ccMAh4HS.s:173    .text.HAL_UARTEx_WakeupCallback:0000000000000000 $t
     /tmp/ccMAh4HS.s:180    .text.HAL_UARTEx_WakeupCallback:0000000000000000 HAL_UARTEx_WakeupCallback
     /tmp/ccMAh4HS.s:216    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 $t
     /tmp/ccMAh4HS.s:223    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 HAL_UARTEx_RxFifoFullCallback
     /tmp/ccMAh4HS.s:259    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 $t
     /tmp/ccMAh4HS.s:266    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 HAL_UARTEx_TxFifoEmptyCallback
     /tmp/ccMAh4HS.s:302    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
     /tmp/ccMAh4HS.s:309    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
     /tmp/ccMAh4HS.s:385    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 $t
     /tmp/ccMAh4HS.s:392    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 HAL_UARTEx_StopModeWakeUpSourceConfig
     /tmp/ccMAh4HS.s:1667   .text.UARTEx_Wakeup_AddressConfig:0000000000000000 UARTEx_Wakeup_AddressConfig
     /tmp/ccMAh4HS.s:515    .text.HAL_UARTEx_EnableStopMode:0000000000000000 $t
     /tmp/ccMAh4HS.s:522    .text.HAL_UARTEx_EnableStopMode:0000000000000000 HAL_UARTEx_EnableStopMode
     /tmp/ccMAh4HS.s:586    .text.HAL_UARTEx_DisableStopMode:0000000000000000 $t
     /tmp/ccMAh4HS.s:593    .text.HAL_UARTEx_DisableStopMode:0000000000000000 HAL_UARTEx_DisableStopMode
     /tmp/ccMAh4HS.s:657    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 $t
     /tmp/ccMAh4HS.s:664    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 HAL_UARTEx_EnableFifoMode
     /tmp/ccMAh4HS.s:1733   .text.UARTEx_SetNbDataToProcess:0000000000000000 UARTEx_SetNbDataToProcess
     /tmp/ccMAh4HS.s:754    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 $t
     /tmp/ccMAh4HS.s:761    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 HAL_UARTEx_DisableFifoMode
     /tmp/ccMAh4HS.s:852    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 $t
     /tmp/ccMAh4HS.s:859    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 HAL_UARTEx_SetTxFifoThreshold
     /tmp/ccMAh4HS.s:952    .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 $t
     /tmp/ccMAh4HS.s:959    .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 HAL_UARTEx_SetRxFifoThreshold
     /tmp/ccMAh4HS.s:1052   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 $t
     /tmp/ccMAh4HS.s:1059   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 HAL_UARTEx_ReceiveToIdle
     /tmp/ccMAh4HS.s:1417   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 $t
     /tmp/ccMAh4HS.s:1424   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 HAL_UARTEx_ReceiveToIdle_IT
     /tmp/ccMAh4HS.s:1539   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 $t
     /tmp/ccMAh4HS.s:1546   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 HAL_UARTEx_ReceiveToIdle_DMA
     /tmp/ccMAh4HS.s:1661   .text.UARTEx_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/ccMAh4HS.s:1727   .text.UARTEx_SetNbDataToProcess:0000000000000000 $t
     /tmp/ccMAh4HS.s:1850   .text.UARTEx_SetNbDataToProcess:0000000000000094 $d
     /tmp/ccMAh4HS.s:1859   .rodata.numerator.12236:0000000000000000 numerator.12236
     /tmp/ccMAh4HS.s:1865   .rodata.denominator.12237:0000000000000000 denominator.12237
     /tmp/ccMAh4HS.s:1856   .rodata.numerator.12236:0000000000000000 $d
     /tmp/ccMAh4HS.s:1862   .rodata.denominator.12237:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_MspInit
UART_SetConfig
UART_AdvFeatureConfig
UART_CheckIdleState
HAL_GetTick
UART_WaitOnFlagUntilTimeout
UART_Start_Receive_IT
UART_Start_Receive_DMA
