ARM GAS  /tmp/cccHQt6E.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_dma2d.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_DMA2D_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_DMA2D_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_DMA2D_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @file    stm32h7xx_hal_dma2d.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief   DMA2D HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          functionalities of the DMA2D peripheral:
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Initialization and de-initialization functions
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + IO operation functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral Control functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral State and Errors functions
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @verbatim
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                         ##### How to use this driver #####
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the transfer mode, the output color mode and the output offset using
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_Init() function.
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the input color mode, the input color, the input alpha value, the alpha mode,
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the red/blue swap mode, the inverted alpha mode and the input offset using
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_ConfigLayer() function for foreground or/and background layer.
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Polling mode IO operation ***
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =================================
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter (explained hereafter), destination and data length
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            and enable the transfer using HAL_DMA2D_Start().
ARM GAS  /tmp/cccHQt6E.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Wait for end of transfer using HAL_DMA2D_PollForTransfer(), at this stage
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            user can specify the value of timeout according to his end application.
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Interrupt mode IO operation ***
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter, destination and data length and enable
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            the transfer using HAL_DMA2D_Start_IT().
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Use HAL_DMA2D_IRQHandler() called under DMA2D_IRQHandler() interrupt subroutine.
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) At the end of data transfer HAL_DMA2D_IRQHandler() function is executed and user can
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            add his own function by customization of function pointer XferCpltCallback (member
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            of DMA2D handle structure).
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) In case of error, the HAL_DMA2D_IRQHandler() function calls the callback
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            XferErrorCallback.
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   In Register-to-Memory transfer mode, pdata parameter is the register
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                color, in Memory-to-memory or Memory-to-Memory with pixel format
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                conversion pdata is the source address.
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   Configure the foreground source address, the background source address,
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                the destination and data length then Enable the transfer using
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                HAL_DMA2D_BlendingStart() in polling mode and HAL_DMA2D_BlendingStart_IT()
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                in interrupt mode.
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   HAL_DMA2D_BlendingStart() and HAL_DMA2D_BlendingStart_IT() functions
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                are used if the memory to memory with blending transfer mode is selected.
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure and enable the CLUT using HAL_DMA2D_CLUTLoad() in polling
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           mode or HAL_DMA2D_CLUTLoad_IT() in interrupt mode.
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the line watermark in using the API HAL_DMA2D_ProgramLineEvent().
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the dead time value in the AHB clock cycle inserted between two
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           consecutive accesses on the AHB master port in using the API HAL_DMA2D_ConfigDeadTime()
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and enable/disable the functionality  with the APIs HAL_DMA2D_EnableDeadTime() or
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_DisableDeadTime().
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The transfer can be suspended, resumed and aborted using the following
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_Suspend(), HAL_DMA2D_Resume(), HAL_DMA2D_Abort().
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The CLUT loading can be suspended, resumed and aborted using the following
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_CLUTLoading_Suspend(), HAL_DMA2D_CLUTLoading_Resume(),
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_CLUTLoading_Abort().
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To control the DMA2D state, use the following function: HAL_DMA2D_GetState().
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To read the DMA2D error code, use the following function: HAL_DMA2D_GetError().
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** DMA2D HAL driver macros list ***
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =============================================
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        Below the list of most used macros in DMA2D HAL driver :
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE: Enable the DMA2D peripheral.
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_FLAG: Get the DMA2D pending flags.
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_CLEAR_FLAG: Clear the DMA2D pending flags.
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE_IT: Enable the specified DMA2D interrupts.
ARM GAS  /tmp/cccHQt6E.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_DISABLE_IT: Disable the specified DMA2D interrupts.
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_IT_SOURCE: Check whether the specified DMA2D interrupt is enabled or not.
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Callback registration ***
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The compilation define  USE_HAL_DMA2D_REGISTER_CALLBACKS when set to 1
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           allows the user to configure dynamically the driver callbacks.
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Use function @ref HAL_DMA2D_RegisterCallback() to register a user callback.
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Function @ref HAL_DMA2D_RegisterCallback() allows to register following callbacks:
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and a pointer to the user callback function.
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Use function @ref HAL_DMA2D_UnRegisterCallback() to reset a callback to the default
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           weak (surcharged) function.
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           @ref HAL_DMA2D_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and the Callback ID.
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function allows to reset following callbacks:
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) By default, after the @ref HAL_DMA2D_Init and if the state is HAL_DMA2D_STATE_RESET
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           all callbacks are reset to the corresponding legacy weak (surcharged) functions:
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           examples @ref HAL_DMA2D_LineEventCallback(), @ref HAL_DMA2D_CLUTLoadingCpltCallback()
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit and MspDeInit callbacks that are respectively
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           reset to the legacy weak (surcharged) functions in the @ref HAL_DMA2D_Init
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and @ref HAL_DMA2D_DeInit only when these callbacks are null (not registered beforehand)
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           If not, MspInit or MspDeInit are not null, the @ref HAL_DMA2D_Init and @ref HAL_DMA2D_DeI
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception as well for Transfer Completion and Transfer Error callbacks that are not defin
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           as weak (surcharged) functions. They must be defined by the user to be resorted to.
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Callbacks can be registered/unregistered in READY state only.
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           during the Init/DeInit.
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           In that case first register the MspInit/MspDeInit user callbacks
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           using @ref HAL_DMA2D_RegisterCallback before calling @ref HAL_DMA2D_DeInit
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           or @ref HAL_DMA2D_Init function.
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           When The compilation define USE_HAL_DMA2D_REGISTER_CALLBACKS is set to 0 or
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           not defined, the callback registering feature is not available
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and weak (surcharged) callbacks are used.
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
ARM GAS  /tmp/cccHQt6E.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (@) You can refer to the DMA2D HAL driver header file for more useful macros
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @endverbatim
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @attention
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * All rights reserved.</center></h2>
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * the "License"; You may not use this file except in compliance with the
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * License. You may obtain a copy of the License at:
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                        opensource.org/licenses/BSD-3-Clause
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Includes ------------------------------------------------------------------*/
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #include "stm32h7xx_hal.h"
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #ifdef HAL_DMA2D_MODULE_ENABLED
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if defined (DMA2D)
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup STM32H7xx_HAL_Driver
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D  DMA2D
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief DMA2D HAL module driver
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private types -------------------------------------------------------------*/
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private define ------------------------------------------------------------*/
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Constants DMA2D Private Constants
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_TimeOut DMA2D Time Out
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_ABORT           (1000U)  /*!<  1s  */
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_SUSPEND         (1000U)  /*!<  1s  */
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private variables ---------------------------------------------------------*/
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private constants ---------------------------------------------------------*/
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private macro -------------------------------------------------------------*/
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup DMA2D_Private_Functions DMA2D Private Functions
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
ARM GAS  /tmp/cccHQt6E.s 			page 5


 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                             uint32_t Height);
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private functions ---------------------------------------------------------*/
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Exported functions --------------------------------------------------------*/
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions DMA2D Exported Functions
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group1 Initialization and de-initialization functions
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *  @brief   Initialization and Configuration functions
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                 ##### Initialization and Configuration functions #####
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Initialize and configure the DMA2D
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) De-initialize the DMA2D
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initialize the DMA2D according to the specified
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
  28              		.loc 1 239 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d == NULL)
  44              		.loc 1 241 6
  45 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 6


  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
  48              		.loc 1 243 12
  49 000e 0123     		movs	r3, #1
  50 0010 4FE0     		b	.L3
  51              	.L2:
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->Init.AlphaInverted));
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->Init.RedBlueSwap));
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LOM_MODE(hdma2d->Init.LineOffsetMode));
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_BYTES_SWAP(hdma2d->Init.BytesSwap));
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Reset Callback pointers in HAL_DMA2D_STATE_RESET only */
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->LineEventCallback       = HAL_DMA2D_LineEventCallback;
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (hdma2d->MspInitCallback == NULL)
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspInitCallback(hdma2d);
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->State == HAL_DMA2D_STATE_RESET)
  52              		.loc 1 271 13
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F86130 		ldrb	r3, [r3, #97]
  55 0018 DBB2     		uxtb	r3, r3
  56              		.loc 1 271 6
  57 001a 002B     		cmp	r3, #0
  58 001c 06D1     		bne	.L4
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Allocate lock resource and initialize it */
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->Lock = HAL_UNLOCKED;
  59              		.loc 1 274 18
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 0022     		movs	r2, #0
  62 0022 83F86020 		strb	r2, [r3, #96]
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     HAL_DMA2D_MspInit(hdma2d);
  63              		.loc 1 276 5
  64 0026 7868     		ldr	r0, [r7, #4]
  65 0028 FFF7FEFF 		bl	HAL_DMA2D_MspInit
  66              	.L4:
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/cccHQt6E.s 			page 7


 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
  67              		.loc 1 281 17
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 0222     		movs	r2, #2
  70 0030 83F86120 		strb	r2, [r3, #97]
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D CR register configuration -------------------------------------------*/
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.L
  71              		.loc 1 284 3
  72 0034 7B68     		ldr	r3, [r7, #4]
  73 0036 1B68     		ldr	r3, [r3]
  74 0038 1A68     		ldr	r2, [r3]
  75 003a 204B     		ldr	r3, .L5
  76 003c 1340     		ands	r3, r3, r2
  77 003e 7A68     		ldr	r2, [r7, #4]
  78 0040 5168     		ldr	r1, [r2, #4]
  79 0042 7A68     		ldr	r2, [r7, #4]
  80 0044 D269     		ldr	r2, [r2, #28]
  81 0046 1143     		orrs	r1, r1, r2
  82 0048 7A68     		ldr	r2, [r7, #4]
  83 004a 1268     		ldr	r2, [r2]
  84 004c 0B43     		orrs	r3, r3, r1
  85 004e 1360     		str	r3, [r2]
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR register configuration ---------------------------------------*/
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
  86              		.loc 1 287 3
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 5A6B     		ldr	r2, [r3, #52]
  90 0056 1A4B     		ldr	r3, .L5+4
  91 0058 1340     		ands	r3, r3, r2
  92 005a 7A68     		ldr	r2, [r7, #4]
  93 005c 9168     		ldr	r1, [r2, #8]
  94 005e 7A68     		ldr	r2, [r7, #4]
  95 0060 9269     		ldr	r2, [r2, #24]
  96 0062 1143     		orrs	r1, r1, r2
  97 0064 7A68     		ldr	r2, [r7, #4]
  98 0066 1268     		ldr	r2, [r2]
  99 0068 0B43     		orrs	r3, r3, r1
 100 006a 5363     		str	r3, [r2, #52]
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OOR register configuration ------------------------------------------*/
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 101              		.loc 1 291 3
 102 006c 7B68     		ldr	r3, [r7, #4]
 103 006e 1B68     		ldr	r3, [r3]
 104 0070 1A6C     		ldr	r2, [r3, #64]
 105 0072 144B     		ldr	r3, .L5+8
 106 0074 1340     		ands	r3, r3, r2
 107 0076 7A68     		ldr	r2, [r7, #4]
 108 0078 D168     		ldr	r1, [r2, #12]
 109 007a 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 8


 110 007c 1268     		ldr	r2, [r2]
 111 007e 0B43     		orrs	r3, r3, r1
 112 0080 1364     		str	r3, [r2, #64]
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 113              		.loc 1 293 3
 114 0082 7B68     		ldr	r3, [r7, #4]
 115 0084 1B68     		ldr	r3, [r3]
 116 0086 5B6B     		ldr	r3, [r3, #52]
 117 0088 23F44011 		bic	r1, r3, #3145728
 118 008c 7B68     		ldr	r3, [r7, #4]
 119 008e 1B69     		ldr	r3, [r3, #16]
 120 0090 1A05     		lsls	r2, r3, #20
 121 0092 7B68     		ldr	r3, [r7, #4]
 122 0094 5B69     		ldr	r3, [r3, #20]
 123 0096 5B05     		lsls	r3, r3, #21
 124 0098 1A43     		orrs	r2, r2, r3
 125 009a 7B68     		ldr	r3, [r7, #4]
 126 009c 1B68     		ldr	r3, [r3]
 127 009e 0A43     		orrs	r2, r2, r1
 128 00a0 5A63     		str	r2, [r3, #52]
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****               (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 129              		.loc 1 299 21
 130 00a2 7B68     		ldr	r3, [r7, #4]
 131 00a4 0022     		movs	r2, #0
 132 00a6 5A66     		str	r2, [r3, #100]
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_READY;
 133              		.loc 1 302 18
 134 00a8 7B68     		ldr	r3, [r7, #4]
 135 00aa 0122     		movs	r2, #1
 136 00ac 83F86120 		strb	r2, [r3, #97]
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 137              		.loc 1 304 10
 138 00b0 0023     		movs	r3, #0
 139              	.L3:
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 140              		.loc 1 305 1
 141 00b2 1846     		mov	r0, r3
 142 00b4 0837     		adds	r7, r7, #8
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 8
 145 00b6 BD46     		mov	sp, r7
 146              	.LCFI4:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 00b8 80BD     		pop	{r7, pc}
 150              	.L6:
 151 00ba 00BF     		.align	2
 152              	.L5:
ARM GAS  /tmp/cccHQt6E.s 			page 9


 153 00bc BFFFF8FF 		.word	-458817
 154 00c0 F8FEFFFF 		.word	-264
 155 00c4 0000FFFF 		.word	-65536
 156              		.cfi_endproc
 157              	.LFE331:
 159              		.section	.text.HAL_DMA2D_DeInit,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_DMA2D_DeInit
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-d16
 167              	HAL_DMA2D_DeInit:
 168              	.LFB332:
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         values.
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 169              		.loc 1 316 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 82B0     		sub	sp, sp, #8
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI7:
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d == NULL)
 185              		.loc 1 319 6
 186 0008 7B68     		ldr	r3, [r7, #4]
 187 000a 002B     		cmp	r3, #0
 188 000c 01D1     		bne	.L8
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
 189              		.loc 1 321 12
 190 000e 0123     		movs	r3, #1
 191 0010 60E0     		b	.L9
 192              	.L8:
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Before aborting any DMA2D transfer or CLUT loading, check
ARM GAS  /tmp/cccHQt6E.s 			page 10


 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      first whether or not DMA2D clock is enabled */
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 193              		.loc 1 326 7
 194 0012 324B     		ldr	r3, .L13
 195 0014 D3F8D430 		ldr	r3, [r3, #212]
 196 0018 03F01003 		and	r3, r3, #16
 197              		.loc 1 326 6
 198 001c 002B     		cmp	r3, #0
 199 001e 2ED0     		beq	.L10
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Abort DMA2D transfer if any */
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 200              		.loc 1 329 16
 201 0020 7B68     		ldr	r3, [r7, #4]
 202 0022 1B68     		ldr	r3, [r3]
 203              		.loc 1 329 26
 204 0024 1B68     		ldr	r3, [r3]
 205              		.loc 1 329 31
 206 0026 03F00103 		and	r3, r3, #1
 207              		.loc 1 329 8
 208 002a 012B     		cmp	r3, #1
 209 002c 07D1     		bne	.L11
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 210              		.loc 1 331 11
 211 002e 7868     		ldr	r0, [r7, #4]
 212 0030 FFF7FEFF 		bl	HAL_DMA2D_Abort
 213 0034 0346     		mov	r3, r0
 214              		.loc 1 331 10
 215 0036 002B     		cmp	r3, #0
 216 0038 21D0     		beq	.L10
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Issue when aborting DMA2D transfer */
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
 217              		.loc 1 334 16
 218 003a 0123     		movs	r3, #1
 219 003c 4AE0     		b	.L9
 220              	.L11:
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Abort background CLUT loading if any */
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 221              		.loc 1 340 18
 222 003e 7B68     		ldr	r3, [r7, #4]
 223 0040 1B68     		ldr	r3, [r3]
 224              		.loc 1 340 28
 225 0042 5B6A     		ldr	r3, [r3, #36]
 226              		.loc 1 340 38
 227 0044 03F02003 		and	r3, r3, #32
 228              		.loc 1 340 10
 229 0048 202B     		cmp	r3, #32
 230 004a 08D1     		bne	.L12
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 231              		.loc 1 342 13
ARM GAS  /tmp/cccHQt6E.s 			page 11


 232 004c 0021     		movs	r1, #0
 233 004e 7868     		ldr	r0, [r7, #4]
 234 0050 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 235 0054 0346     		mov	r3, r0
 236              		.loc 1 342 12
 237 0056 002B     		cmp	r3, #0
 238 0058 11D0     		beq	.L10
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Issue when aborting background CLUT loading */
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_ERROR;
 239              		.loc 1 345 18
 240 005a 0123     		movs	r3, #1
 241 005c 3AE0     		b	.L9
 242              	.L12:
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       else
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Abort foreground CLUT loading if any */
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 243              		.loc 1 351 20
 244 005e 7B68     		ldr	r3, [r7, #4]
 245 0060 1B68     		ldr	r3, [r3]
 246              		.loc 1 351 30
 247 0062 DB69     		ldr	r3, [r3, #28]
 248              		.loc 1 351 40
 249 0064 03F02003 		and	r3, r3, #32
 250              		.loc 1 351 12
 251 0068 202B     		cmp	r3, #32
 252 006a 08D1     		bne	.L10
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 253              		.loc 1 353 15
 254 006c 0121     		movs	r1, #1
 255 006e 7868     		ldr	r0, [r7, #4]
 256 0070 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 257 0074 0346     		mov	r3, r0
 258              		.loc 1 353 14
 259 0076 002B     		cmp	r3, #0
 260 0078 01D0     		beq	.L10
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           {
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             /* Issue when aborting foreground CLUT loading */
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             return HAL_ERROR;
 261              		.loc 1 356 20
 262 007a 0123     		movs	r3, #1
 263 007c 2AE0     		b	.L9
 264              	.L10:
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           }
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Reset DMA2D control registers*/
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->CR       =    0U;
 265              		.loc 1 364 9
 266 007e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 12


 267 0080 1B68     		ldr	r3, [r3]
 268              		.loc 1 364 30
 269 0082 0022     		movs	r2, #0
 270 0084 1A60     		str	r2, [r3]
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 271              		.loc 1 365 9
 272 0086 7B68     		ldr	r3, [r7, #4]
 273 0088 1B68     		ldr	r3, [r3]
 274              		.loc 1 365 30
 275 008a 3F22     		movs	r2, #63
 276 008c 9A60     		str	r2, [r3, #8]
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 277              		.loc 1 366 9
 278 008e 7B68     		ldr	r3, [r7, #4]
 279 0090 1B68     		ldr	r3, [r3]
 280              		.loc 1 366 30
 281 0092 0022     		movs	r2, #0
 282 0094 1A61     		str	r2, [r3, #16]
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 283              		.loc 1 367 9
 284 0096 7B68     		ldr	r3, [r7, #4]
 285 0098 1B68     		ldr	r3, [r3]
 286              		.loc 1 367 30
 287 009a 0022     		movs	r2, #0
 288 009c 9A61     		str	r2, [r3, #24]
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 289              		.loc 1 368 9
 290 009e 7B68     		ldr	r3, [r7, #4]
 291 00a0 1B68     		ldr	r3, [r3]
 292              		.loc 1 368 30
 293 00a2 0022     		movs	r2, #0
 294 00a4 DA61     		str	r2, [r3, #28]
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 295              		.loc 1 369 9
 296 00a6 7B68     		ldr	r3, [r7, #4]
 297 00a8 1B68     		ldr	r3, [r3]
 298              		.loc 1 369 30
 299 00aa 0022     		movs	r2, #0
 300 00ac 5A62     		str	r2, [r3, #36]
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 301              		.loc 1 370 9
 302 00ae 7B68     		ldr	r3, [r7, #4]
 303 00b0 1B68     		ldr	r3, [r3]
 304              		.loc 1 370 30
 305 00b2 0022     		movs	r2, #0
 306 00b4 5A63     		str	r2, [r3, #52]
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->MspDeInitCallback == NULL)
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DeInit the low level hardware */
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->MspDeInitCallback(hdma2d);
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/cccHQt6E.s 			page 13


 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Carry on with de-initialization of low level hardware */
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_DMA2D_MspDeInit(hdma2d);
 307              		.loc 1 384 3
 308 00b6 7868     		ldr	r0, [r7, #4]
 309 00b8 FFF7FEFF 		bl	HAL_DMA2D_MspDeInit
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 310              		.loc 1 388 21
 311 00bc 7B68     		ldr	r3, [r7, #4]
 312 00be 0022     		movs	r2, #0
 313 00c0 5A66     		str	r2, [r3, #100]
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_RESET;
 314              		.loc 1 391 18
 315 00c2 7B68     		ldr	r3, [r7, #4]
 316 00c4 0022     		movs	r2, #0
 317 00c6 83F86120 		strb	r2, [r3, #97]
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 318              		.loc 1 394 3
 319 00ca 7B68     		ldr	r3, [r7, #4]
 320 00cc 0022     		movs	r2, #0
 321 00ce 83F86020 		strb	r2, [r3, #96]
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 322              		.loc 1 396 10
 323 00d2 0023     		movs	r3, #0
 324              	.L9:
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 325              		.loc 1 397 1
 326 00d4 1846     		mov	r0, r3
 327 00d6 0837     		adds	r7, r7, #8
 328              	.LCFI8:
 329              		.cfi_def_cfa_offset 8
 330 00d8 BD46     		mov	sp, r7
 331              	.LCFI9:
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 00da 80BD     		pop	{r7, pc}
 335              	.L14:
 336              		.align	2
 337              	.L13:
 338 00dc 00440258 		.word	1476543488
 339              		.cfi_endproc
 340              	.LFE332:
 342              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 343              		.align	1
 344              		.weak	HAL_DMA2D_MspInit
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv5-d16
ARM GAS  /tmp/cccHQt6E.s 			page 14


 350              	HAL_DMA2D_MspInit:
 351              	.LFB333:
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initializes the DMA2D MSP.
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef *hdma2d)
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 352              		.loc 1 406 1
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              	.LCFI10:
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 83B0     		sub	sp, sp, #12
 362              	.LCFI11:
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              	.LCFI12:
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspInit can be implemented in the user file.
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 368              		.loc 1 413 1
 369 0008 00BF     		nop
 370 000a 0C37     		adds	r7, r7, #12
 371              	.LCFI13:
 372              		.cfi_def_cfa_offset 4
 373 000c BD46     		mov	sp, r7
 374              	.LCFI14:
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 000e 5DF8047B 		ldr	r7, [sp], #4
 378              	.LCFI15:
 379              		.cfi_restore 7
 380              		.cfi_def_cfa_offset 0
 381 0012 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE333:
 385              		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 386              		.align	1
 387              		.weak	HAL_DMA2D_MspDeInit
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv5-d16
ARM GAS  /tmp/cccHQt6E.s 			page 15


 393              	HAL_DMA2D_MspDeInit:
 394              	.LFB334:
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  DeInitializes the DMA2D MSP.
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef *hdma2d)
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 395              		.loc 1 422 1
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI16:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 83B0     		sub	sp, sp, #12
 405              	.LCFI17:
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI18:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspDeInit can be implemented in the user file.
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 411              		.loc 1 429 1
 412 0008 00BF     		nop
 413 000a 0C37     		adds	r7, r7, #12
 414              	.LCFI19:
 415              		.cfi_def_cfa_offset 4
 416 000c BD46     		mov	sp, r7
 417              	.LCFI20:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 000e 5DF8047B 		ldr	r7, [sp], #4
 421              	.LCFI21:
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 0012 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE334:
 428              		.section	.text.HAL_DMA2D_Start,"ax",%progbits
 429              		.align	1
 430              		.global	HAL_DMA2D_Start
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv5-d16
ARM GAS  /tmp/cccHQt6E.s 			page 16


 436              	HAL_DMA2D_Start:
 437              	.LFB335:
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Register a User DMA2D Callback
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         To be used instead of the weak (surcharged) predefined callback
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be registered
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param pCallback pointer to the Callback function
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_RegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTypeD
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                              pDMA2D_CallbackTypeDef pCallback)
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_StatusTypeDef status = HAL_OK;
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (pCallback == NULL)
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (HAL_DMA2D_STATE_READY == hdma2d->State)
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback = pCallback;
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_TRANSFERERROR_CB_ID :
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback = pCallback;
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_LINEEVENT_CB_ID :
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->LineEventCallback = pCallback;
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->CLUTLoadingCpltCallback = pCallback;
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPINIT_CB_ID :
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspInitCallback = pCallback;
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
ARM GAS  /tmp/cccHQt6E.s 			page 17


 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPDEINIT_CB_ID :
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspDeInitCallback = pCallback;
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       default :
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Update the error code */
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* update return status */
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         status =  HAL_ERROR;
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (HAL_DMA2D_STATE_RESET == hdma2d->State)
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPINIT_CB_ID :
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspInitCallback = pCallback;
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPDEINIT_CB_ID :
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspDeInitCallback = pCallback;
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       default :
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Update the error code */
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* update return status */
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         status =  HAL_ERROR;
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* update return status */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     status =  HAL_ERROR;
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Unregister a DMA2D Callback
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         DMA2D Callback is redirected to the weak (surcharged) predefined callback
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be unregistered
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
ARM GAS  /tmp/cccHQt6E.s 			page 18


 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_UnRegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTyp
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_StatusTypeDef status = HAL_OK;
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (HAL_DMA2D_STATE_READY == hdma2d->State)
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback = NULL;
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_TRANSFERERROR_CB_ID :
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback = NULL;
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_LINEEVENT_CB_ID :
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->LineEventCallback = HAL_DMA2D_LineEventCallback;
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPINIT_CB_ID :
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspInitCallback = HAL_DMA2D_MspInit; /* Legacy weak (surcharged) Msp Init */
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPDEINIT_CB_ID :
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit; /* Legacy weak (surcharged) Msp DeInit */
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       default :
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Update the error code */
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* update return status */
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         status =  HAL_ERROR;
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (HAL_DMA2D_STATE_RESET == hdma2d->State)
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPINIT_CB_ID :
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspInitCallback = HAL_DMA2D_MspInit;   /* Legacy weak (surcharged) Msp Init */
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       case HAL_DMA2D_MSPDEINIT_CB_ID :
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;  /* Legacy weak (surcharged) Msp DeInit */
ARM GAS  /tmp/cccHQt6E.s 			page 19


 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       default :
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Update the error code */
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* update return status */
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         status =  HAL_ERROR;
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         break;
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* update return status */
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     status =  HAL_ERROR;
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group2 IO operation functions
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *  @brief   IO operation functions
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                       #####  IO operation functions  #####
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer.
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer.
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer with interrupt.
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer with interrupt.
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D transfer.
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D transfer.
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D transfer.
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable CLUT transfer.
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in polling mode.
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in interrupt mode.
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D CLUT loading.
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D CLUT loading.
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D CLUT loading.
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Poll for transfer complete.
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) handle DMA2D interrupt request.
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Transfer watermark callback.
ARM GAS  /tmp/cccHQt6E.s 			page 20


 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) CLUT Transfer Complete callback.
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer.
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     Memory-to-Memory or Memory-to-Memory with pixel format
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                    to destination (expressed in number of pixels per line).
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress,
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                   uint32_t Height)
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 438              		.loc 1 679 1
 439              		.cfi_startproc
 440              		@ args = 4, pretend = 0, frame = 16
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 80B5     		push	{r7, lr}
 443              	.LCFI22:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 86B0     		sub	sp, sp, #24
 448              	.LCFI23:
 449              		.cfi_def_cfa_offset 32
 450 0004 02AF     		add	r7, sp, #8
 451              	.LCFI24:
 452              		.cfi_def_cfa 7, 24
 453 0006 F860     		str	r0, [r7, #12]
 454 0008 B960     		str	r1, [r7, #8]
 455 000a 7A60     		str	r2, [r7, #4]
 456 000c 3B60     		str	r3, [r7]
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 457              		.loc 1 685 3
 458 000e FB68     		ldr	r3, [r7, #12]
 459 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 460 0014 012B     		cmp	r3, #1
 461 0016 01D1     		bne	.L18
 462              		.loc 1 685 3 is_stmt 0 discriminator 1
 463 0018 0223     		movs	r3, #2
 464 001a 18E0     		b	.L19
ARM GAS  /tmp/cccHQt6E.s 			page 21


 465              	.L18:
 466              		.loc 1 685 3 discriminator 2
 467 001c FB68     		ldr	r3, [r7, #12]
 468 001e 0122     		movs	r2, #1
 469 0020 83F86020 		strb	r2, [r3, #96]
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 470              		.loc 1 688 17 is_stmt 1 discriminator 2
 471 0024 FB68     		ldr	r3, [r7, #12]
 472 0026 0222     		movs	r2, #2
 473 0028 83F86120 		strb	r2, [r3, #97]
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 474              		.loc 1 691 3 discriminator 2
 475 002c BB69     		ldr	r3, [r7, #24]
 476 002e 0093     		str	r3, [sp]
 477 0030 3B68     		ldr	r3, [r7]
 478 0032 7A68     		ldr	r2, [r7, #4]
 479 0034 B968     		ldr	r1, [r7, #8]
 480 0036 F868     		ldr	r0, [r7, #12]
 481 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 482              		.loc 1 694 3 discriminator 2
 483 003c FB68     		ldr	r3, [r7, #12]
 484 003e 1B68     		ldr	r3, [r3]
 485 0040 1A68     		ldr	r2, [r3]
 486 0042 FB68     		ldr	r3, [r7, #12]
 487 0044 1B68     		ldr	r3, [r3]
 488 0046 42F00102 		orr	r2, r2, #1
 489 004a 1A60     		str	r2, [r3]
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 490              		.loc 1 696 10 discriminator 2
 491 004c 0023     		movs	r3, #0
 492              	.L19:
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 493              		.loc 1 697 1
 494 004e 1846     		mov	r0, r3
 495 0050 1037     		adds	r7, r7, #16
 496              	.LCFI25:
 497              		.cfi_def_cfa_offset 8
 498 0052 BD46     		mov	sp, r7
 499              	.LCFI26:
 500              		.cfi_def_cfa_register 13
 501              		@ sp needed
 502 0054 80BD     		pop	{r7, pc}
 503              		.cfi_endproc
 504              	.LFE335:
 506              		.section	.text.HAL_DMA2D_Start_IT,"ax",%progbits
 507              		.align	1
 508              		.global	HAL_DMA2D_Start_IT
 509              		.syntax unified
 510              		.thumb
ARM GAS  /tmp/cccHQt6E.s 			page 22


 511              		.thumb_func
 512              		.fpu fpv5-d16
 514              	HAL_DMA2D_Start_IT:
 515              	.LFB336:
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer with interrupt enabled.
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the Memory-to-Memory or Memory-to-Memory with pixel format
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                    to destination (expressed in number of pixels per line).
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddre
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                      uint32_t Height)
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 516              		.loc 1 715 1
 517              		.cfi_startproc
 518              		@ args = 4, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520 0000 80B5     		push	{r7, lr}
 521              	.LCFI27:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 86B0     		sub	sp, sp, #24
 526              	.LCFI28:
 527              		.cfi_def_cfa_offset 32
 528 0004 02AF     		add	r7, sp, #8
 529              	.LCFI29:
 530              		.cfi_def_cfa 7, 24
 531 0006 F860     		str	r0, [r7, #12]
 532 0008 B960     		str	r1, [r7, #8]
 533 000a 7A60     		str	r2, [r7, #4]
 534 000c 3B60     		str	r3, [r7]
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 535              		.loc 1 721 3
 536 000e FB68     		ldr	r3, [r7, #12]
 537 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 538 0014 012B     		cmp	r3, #1
 539 0016 01D1     		bne	.L21
 540              		.loc 1 721 3 is_stmt 0 discriminator 1
 541 0018 0223     		movs	r3, #2
 542 001a 20E0     		b	.L22
 543              	.L21:
 544              		.loc 1 721 3 discriminator 2
ARM GAS  /tmp/cccHQt6E.s 			page 23


 545 001c FB68     		ldr	r3, [r7, #12]
 546 001e 0122     		movs	r2, #1
 547 0020 83F86020 		strb	r2, [r3, #96]
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 548              		.loc 1 724 17 is_stmt 1 discriminator 2
 549 0024 FB68     		ldr	r3, [r7, #12]
 550 0026 0222     		movs	r2, #2
 551 0028 83F86120 		strb	r2, [r3, #97]
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 552              		.loc 1 727 3 discriminator 2
 553 002c BB69     		ldr	r3, [r7, #24]
 554 002e 0093     		str	r3, [sp]
 555 0030 3B68     		ldr	r3, [r7]
 556 0032 7A68     		ldr	r2, [r7, #4]
 557 0034 B968     		ldr	r1, [r7, #8]
 558 0036 F868     		ldr	r0, [r7, #12]
 559 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
 560              		.loc 1 730 3 discriminator 2
 561 003c FB68     		ldr	r3, [r7, #12]
 562 003e 1B68     		ldr	r3, [r3]
 563 0040 1A68     		ldr	r2, [r3]
 564 0042 FB68     		ldr	r3, [r7, #12]
 565 0044 1B68     		ldr	r3, [r3]
 566 0046 42F40C52 		orr	r2, r2, #8960
 567 004a 1A60     		str	r2, [r3]
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 568              		.loc 1 733 3 discriminator 2
 569 004c FB68     		ldr	r3, [r7, #12]
 570 004e 1B68     		ldr	r3, [r3]
 571 0050 1A68     		ldr	r2, [r3]
 572 0052 FB68     		ldr	r3, [r7, #12]
 573 0054 1B68     		ldr	r3, [r3]
 574 0056 42F00102 		orr	r2, r2, #1
 575 005a 1A60     		str	r2, [r3]
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 576              		.loc 1 735 10 discriminator 2
 577 005c 0023     		movs	r3, #0
 578              	.L22:
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 579              		.loc 1 736 1
 580 005e 1846     		mov	r0, r3
 581 0060 1037     		adds	r7, r7, #16
 582              	.LCFI30:
 583              		.cfi_def_cfa_offset 8
 584 0062 BD46     		mov	sp, r7
 585              	.LCFI31:
 586              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cccHQt6E.s 			page 24


 587              		@ sp needed
 588 0064 80BD     		pop	{r7, pc}
 589              		.cfi_endproc
 590              	.LFE336:
 592              		.section	.text.HAL_DMA2D_BlendingStart,"ax",%progbits
 593              		.align	1
 594              		.global	HAL_DMA2D_BlendingStart
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu fpv5-d16
 600              	HAL_DMA2D_BlendingStart:
 601              	.LFB337:
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer.
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d      Pointer to a DMA2D_HandleTypeDef structure that contains
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                      the configuration information for the DMA2D.
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     to destination (expressed in number of pixels per line).
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                           uint32_t DstAddress, uint32_t Width,  uint32_t Height)
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 602              		.loc 1 752 1
 603              		.cfi_startproc
 604              		@ args = 8, pretend = 0, frame = 16
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              	.LCFI32:
 608              		.cfi_def_cfa_offset 8
 609              		.cfi_offset 7, -8
 610              		.cfi_offset 14, -4
 611 0002 86B0     		sub	sp, sp, #24
 612              	.LCFI33:
 613              		.cfi_def_cfa_offset 32
 614 0004 02AF     		add	r7, sp, #8
 615              	.LCFI34:
 616              		.cfi_def_cfa 7, 24
 617 0006 F860     		str	r0, [r7, #12]
 618 0008 B960     		str	r1, [r7, #8]
 619 000a 7A60     		str	r2, [r7, #4]
 620 000c 3B60     		str	r3, [r7]
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 621              		.loc 1 758 3
 622 000e FB68     		ldr	r3, [r7, #12]
 623 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
ARM GAS  /tmp/cccHQt6E.s 			page 25


 624 0014 012B     		cmp	r3, #1
 625 0016 01D1     		bne	.L24
 626              		.loc 1 758 3 is_stmt 0 discriminator 1
 627 0018 0223     		movs	r3, #2
 628 001a 40E0     		b	.L25
 629              	.L24:
 630              		.loc 1 758 3 discriminator 2
 631 001c FB68     		ldr	r3, [r7, #12]
 632 001e 0122     		movs	r2, #1
 633 0020 83F86020 		strb	r2, [r3, #96]
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 634              		.loc 1 761 17 is_stmt 1 discriminator 2
 635 0024 FB68     		ldr	r3, [r7, #12]
 636 0026 0222     		movs	r2, #2
 637 0028 83F86120 		strb	r2, [r3, #97]
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
 638              		.loc 1 763 19 discriminator 2
 639 002c FB68     		ldr	r3, [r7, #12]
 640 002e 5B68     		ldr	r3, [r3, #4]
 641              		.loc 1 763 6 discriminator 2
 642 0030 B3F5802F 		cmp	r3, #262144
 643 0034 0CD1     		bne	.L26
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed FG*/
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
 644              		.loc 1 766 5
 645 0036 FB68     		ldr	r3, [r7, #12]
 646 0038 1B68     		ldr	r3, [r3]
 647 003a BA68     		ldr	r2, [r7, #8]
 648 003c 1A62     		str	r2, [r3, #32]
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
 649              		.loc 1 768 5
 650 003e FB69     		ldr	r3, [r7, #28]
 651 0040 0093     		str	r3, [sp]
 652 0042 BB69     		ldr	r3, [r7, #24]
 653 0044 3A68     		ldr	r2, [r7]
 654 0046 7968     		ldr	r1, [r7, #4]
 655 0048 F868     		ldr	r0, [r7, #12]
 656 004a FFF7FEFF 		bl	DMA2D_SetConfig
 657 004e 1DE0     		b	.L27
 658              	.L26:
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
 659              		.loc 1 770 24
 660 0050 FB68     		ldr	r3, [r7, #12]
 661 0052 5B68     		ldr	r3, [r3, #4]
 662              		.loc 1 770 11
 663 0054 B3F5A02F 		cmp	r3, #327680
 664 0058 0CD1     		bne	.L28
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed BG*/
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
 665              		.loc 1 773 5
ARM GAS  /tmp/cccHQt6E.s 			page 26


 666 005a FB68     		ldr	r3, [r7, #12]
 667 005c 1B68     		ldr	r3, [r3]
 668 005e 7A68     		ldr	r2, [r7, #4]
 669 0060 9A62     		str	r2, [r3, #40]
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 670              		.loc 1 775 5
 671 0062 FB69     		ldr	r3, [r7, #28]
 672 0064 0093     		str	r3, [sp]
 673 0066 BB69     		ldr	r3, [r7, #24]
 674 0068 3A68     		ldr	r2, [r7]
 675 006a B968     		ldr	r1, [r7, #8]
 676 006c F868     		ldr	r0, [r7, #12]
 677 006e FFF7FEFF 		bl	DMA2D_SetConfig
 678 0072 0BE0     		b	.L27
 679              	.L28:
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure DMA2D Stream source2 address */
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 680              		.loc 1 780 5
 681 0074 FB68     		ldr	r3, [r7, #12]
 682 0076 1B68     		ldr	r3, [r3]
 683 0078 7A68     		ldr	r2, [r7, #4]
 684 007a 5A61     		str	r2, [r3, #20]
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 685              		.loc 1 783 5
 686 007c FB69     		ldr	r3, [r7, #28]
 687 007e 0093     		str	r3, [sp]
 688 0080 BB69     		ldr	r3, [r7, #24]
 689 0082 3A68     		ldr	r2, [r7]
 690 0084 B968     		ldr	r1, [r7, #8]
 691 0086 F868     		ldr	r0, [r7, #12]
 692 0088 FFF7FEFF 		bl	DMA2D_SetConfig
 693              	.L27:
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 694              		.loc 1 787 3
 695 008c FB68     		ldr	r3, [r7, #12]
 696 008e 1B68     		ldr	r3, [r3]
 697 0090 1A68     		ldr	r2, [r3]
 698 0092 FB68     		ldr	r3, [r7, #12]
 699 0094 1B68     		ldr	r3, [r3]
 700 0096 42F00102 		orr	r2, r2, #1
 701 009a 1A60     		str	r2, [r3]
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 702              		.loc 1 789 10
 703 009c 0023     		movs	r3, #0
 704              	.L25:
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 705              		.loc 1 790 1
ARM GAS  /tmp/cccHQt6E.s 			page 27


 706 009e 1846     		mov	r0, r3
 707 00a0 1037     		adds	r7, r7, #16
 708              	.LCFI35:
 709              		.cfi_def_cfa_offset 8
 710 00a2 BD46     		mov	sp, r7
 711              	.LCFI36:
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 00a4 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE337:
 718              		.section	.text.HAL_DMA2D_BlendingStart_IT,"ax",%progbits
 719              		.align	1
 720              		.global	HAL_DMA2D_BlendingStart_IT
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-d16
 726              	HAL_DMA2D_BlendingStart_IT:
 727              	.LFB338:
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer with interrupt enabled.
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     to destination (expressed in number of pixels per line).
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uin
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                              uint32_t DstAddress, uint32_t Width,  uint32_t Height)
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 728              		.loc 1 806 1
 729              		.cfi_startproc
 730              		@ args = 8, pretend = 0, frame = 16
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI37:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 86B0     		sub	sp, sp, #24
 738              	.LCFI38:
 739              		.cfi_def_cfa_offset 32
 740 0004 02AF     		add	r7, sp, #8
 741              	.LCFI39:
 742              		.cfi_def_cfa 7, 24
 743 0006 F860     		str	r0, [r7, #12]
 744 0008 B960     		str	r1, [r7, #8]
 745 000a 7A60     		str	r2, [r7, #4]
 746 000c 3B60     		str	r3, [r7]
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
ARM GAS  /tmp/cccHQt6E.s 			page 28


 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 747              		.loc 1 812 3
 748 000e FB68     		ldr	r3, [r7, #12]
 749 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 750 0014 012B     		cmp	r3, #1
 751 0016 01D1     		bne	.L30
 752              		.loc 1 812 3 is_stmt 0 discriminator 1
 753 0018 0223     		movs	r3, #2
 754 001a 48E0     		b	.L31
 755              	.L30:
 756              		.loc 1 812 3 discriminator 2
 757 001c FB68     		ldr	r3, [r7, #12]
 758 001e 0122     		movs	r2, #1
 759 0020 83F86020 		strb	r2, [r3, #96]
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 760              		.loc 1 815 17 is_stmt 1 discriminator 2
 761 0024 FB68     		ldr	r3, [r7, #12]
 762 0026 0222     		movs	r2, #2
 763 0028 83F86120 		strb	r2, [r3, #97]
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
 764              		.loc 1 817 19 discriminator 2
 765 002c FB68     		ldr	r3, [r7, #12]
 766 002e 5B68     		ldr	r3, [r3, #4]
 767              		.loc 1 817 6 discriminator 2
 768 0030 B3F5802F 		cmp	r3, #262144
 769 0034 0CD1     		bne	.L32
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed FG*/
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
 770              		.loc 1 820 5
 771 0036 FB68     		ldr	r3, [r7, #12]
 772 0038 1B68     		ldr	r3, [r3]
 773 003a BA68     		ldr	r2, [r7, #8]
 774 003c 1A62     		str	r2, [r3, #32]
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
 775              		.loc 1 822 5
 776 003e FB69     		ldr	r3, [r7, #28]
 777 0040 0093     		str	r3, [sp]
 778 0042 BB69     		ldr	r3, [r7, #24]
 779 0044 3A68     		ldr	r2, [r7]
 780 0046 7968     		ldr	r1, [r7, #4]
 781 0048 F868     		ldr	r0, [r7, #12]
 782 004a FFF7FEFF 		bl	DMA2D_SetConfig
 783 004e 1DE0     		b	.L33
 784              	.L32:
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
 785              		.loc 1 824 24
 786 0050 FB68     		ldr	r3, [r7, #12]
 787 0052 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 29


 788              		.loc 1 824 11
 789 0054 B3F5A02F 		cmp	r3, #327680
 790 0058 0CD1     		bne	.L34
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed BG*/
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
 791              		.loc 1 827 5
 792 005a FB68     		ldr	r3, [r7, #12]
 793 005c 1B68     		ldr	r3, [r3]
 794 005e 7A68     		ldr	r2, [r7, #4]
 795 0060 9A62     		str	r2, [r3, #40]
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 796              		.loc 1 829 5
 797 0062 FB69     		ldr	r3, [r7, #28]
 798 0064 0093     		str	r3, [sp]
 799 0066 BB69     		ldr	r3, [r7, #24]
 800 0068 3A68     		ldr	r2, [r7]
 801 006a B968     		ldr	r1, [r7, #8]
 802 006c F868     		ldr	r0, [r7, #12]
 803 006e FFF7FEFF 		bl	DMA2D_SetConfig
 804 0072 0BE0     		b	.L33
 805              	.L34:
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 806              		.loc 1 833 5
 807 0074 FB68     		ldr	r3, [r7, #12]
 808 0076 1B68     		ldr	r3, [r3]
 809 0078 7A68     		ldr	r2, [r7, #4]
 810 007a 5A61     		str	r2, [r3, #20]
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 811              		.loc 1 836 5
 812 007c FB69     		ldr	r3, [r7, #28]
 813 007e 0093     		str	r3, [sp]
 814 0080 BB69     		ldr	r3, [r7, #24]
 815 0082 3A68     		ldr	r2, [r7]
 816 0084 B968     		ldr	r1, [r7, #8]
 817 0086 F868     		ldr	r0, [r7, #12]
 818 0088 FFF7FEFF 		bl	DMA2D_SetConfig
 819              	.L33:
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
 820              		.loc 1 840 3
 821 008c FB68     		ldr	r3, [r7, #12]
 822 008e 1B68     		ldr	r3, [r3]
 823 0090 1A68     		ldr	r2, [r3]
 824 0092 FB68     		ldr	r3, [r7, #12]
 825 0094 1B68     		ldr	r3, [r3]
 826 0096 42F40C52 		orr	r2, r2, #8960
 827 009a 1A60     		str	r2, [r3]
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/cccHQt6E.s 			page 30


 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 828              		.loc 1 843 3
 829 009c FB68     		ldr	r3, [r7, #12]
 830 009e 1B68     		ldr	r3, [r3]
 831 00a0 1A68     		ldr	r2, [r3]
 832 00a2 FB68     		ldr	r3, [r7, #12]
 833 00a4 1B68     		ldr	r3, [r3]
 834 00a6 42F00102 		orr	r2, r2, #1
 835 00aa 1A60     		str	r2, [r3]
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 836              		.loc 1 845 10
 837 00ac 0023     		movs	r3, #0
 838              	.L31:
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 839              		.loc 1 846 1
 840 00ae 1846     		mov	r0, r3
 841 00b0 1037     		adds	r7, r7, #16
 842              	.LCFI40:
 843              		.cfi_def_cfa_offset 8
 844 00b2 BD46     		mov	sp, r7
 845              	.LCFI41:
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 00b4 80BD     		pop	{r7, pc}
 849              		.cfi_endproc
 850              	.LFE338:
 852              		.section	.text.HAL_DMA2D_Abort,"ax",%progbits
 853              		.align	1
 854              		.global	HAL_DMA2D_Abort
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-d16
 860              	HAL_DMA2D_Abort:
 861              	.LFB339:
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D Transfer.
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 862              		.loc 1 855 1
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 16
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866 0000 80B5     		push	{r7, lr}
 867              	.LCFI42:
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 84B0     		sub	sp, sp, #16
 872              	.LCFI43:
ARM GAS  /tmp/cccHQt6E.s 			page 31


 873              		.cfi_def_cfa_offset 24
 874 0004 00AF     		add	r7, sp, #0
 875              	.LCFI44:
 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the DMA2D transfer */
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue) */
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT | DMA2D_CR_START, DMA2D_CR_ABORT);
 878              		.loc 1 862 3
 879 0008 7B68     		ldr	r3, [r7, #4]
 880 000a 1B68     		ldr	r3, [r3]
 881 000c 1B68     		ldr	r3, [r3]
 882 000e 23F00502 		bic	r2, r3, #5
 883 0012 7B68     		ldr	r3, [r7, #4]
 884 0014 1B68     		ldr	r3, [r3]
 885 0016 42F00402 		orr	r2, r2, #4
 886 001a 1A60     		str	r2, [r3]
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 887              		.loc 1 865 15
 888 001c FFF7FEFF 		bl	HAL_GetTick
 889 0020 F860     		str	r0, [r7, #12]
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively disabled */
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 890              		.loc 1 868 9
 891 0022 17E0     		b	.L36
 892              	.L38:
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_ABORT)
 893              		.loc 1 870 10
 894 0024 FFF7FEFF 		bl	HAL_GetTick
 895 0028 0246     		mov	r2, r0
 896              		.loc 1 870 24
 897 002a FB68     		ldr	r3, [r7, #12]
 898 002c D31A     		subs	r3, r2, r3
 899              		.loc 1 870 8
 900 002e B3F57A7F 		cmp	r3, #1000
 901 0032 0FD9     		bls	.L36
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 902              		.loc 1 873 25
 903 0034 7B68     		ldr	r3, [r7, #4]
 904 0036 5B6E     		ldr	r3, [r3, #100]
 905 0038 43F02002 		orr	r2, r3, #32
 906 003c 7B68     		ldr	r3, [r7, #4]
 907 003e 5A66     		str	r2, [r3, #100]
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 908              		.loc 1 876 21
ARM GAS  /tmp/cccHQt6E.s 			page 32


 909 0040 7B68     		ldr	r3, [r7, #4]
 910 0042 0322     		movs	r2, #3
 911 0044 83F86120 		strb	r2, [r3, #97]
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 912              		.loc 1 879 7
 913 0048 7B68     		ldr	r3, [r7, #4]
 914 004a 0022     		movs	r2, #0
 915 004c 83F86020 		strb	r2, [r3, #96]
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 916              		.loc 1 881 14
 917 0050 0323     		movs	r3, #3
 918 0052 17E0     		b	.L37
 919              	.L36:
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 920              		.loc 1 868 17
 921 0054 7B68     		ldr	r3, [r7, #4]
 922 0056 1B68     		ldr	r3, [r3]
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 923              		.loc 1 868 27
 924 0058 1B68     		ldr	r3, [r3]
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 925              		.loc 1 868 32
 926 005a 03F00103 		and	r3, r3, #1
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 927              		.loc 1 868 9
 928 005e 002B     		cmp	r3, #0
 929 0060 E0D1     		bne	.L38
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
 930              		.loc 1 886 3
 931 0062 7B68     		ldr	r3, [r7, #4]
 932 0064 1B68     		ldr	r3, [r3]
 933 0066 1A68     		ldr	r2, [r3]
 934 0068 7B68     		ldr	r3, [r7, #4]
 935 006a 1B68     		ldr	r3, [r3]
 936 006c 22F40C52 		bic	r2, r2, #8960
 937 0070 1A60     		str	r2, [r3]
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 938              		.loc 1 889 17
 939 0072 7B68     		ldr	r3, [r7, #4]
 940 0074 0122     		movs	r2, #1
 941 0076 83F86120 		strb	r2, [r3, #97]
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 942              		.loc 1 892 3
 943 007a 7B68     		ldr	r3, [r7, #4]
 944 007c 0022     		movs	r2, #0
 945 007e 83F86020 		strb	r2, [r3, #96]
ARM GAS  /tmp/cccHQt6E.s 			page 33


 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 946              		.loc 1 894 10
 947 0082 0023     		movs	r3, #0
 948              	.L37:
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 949              		.loc 1 895 1
 950 0084 1846     		mov	r0, r3
 951 0086 1037     		adds	r7, r7, #16
 952              	.LCFI45:
 953              		.cfi_def_cfa_offset 8
 954 0088 BD46     		mov	sp, r7
 955              	.LCFI46:
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 008a 80BD     		pop	{r7, pc}
 959              		.cfi_endproc
 960              	.LFE339:
 962              		.section	.text.HAL_DMA2D_Suspend,"ax",%progbits
 963              		.align	1
 964              		.global	HAL_DMA2D_Suspend
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 968              		.fpu fpv5-d16
 970              	HAL_DMA2D_Suspend:
 971              	.LFB340:
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D Transfer.
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Suspend(DMA2D_HandleTypeDef *hdma2d)
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 972              		.loc 1 904 1
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 16
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              	.LCFI47:
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 7, -8
 980              		.cfi_offset 14, -4
 981 0002 84B0     		sub	sp, sp, #16
 982              	.LCFI48:
 983              		.cfi_def_cfa_offset 24
 984 0004 00AF     		add	r7, sp, #0
 985              	.LCFI49:
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the DMA2D transfer */
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
ARM GAS  /tmp/cccHQt6E.s 			page 34


 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_SUSP | DMA2D_CR_START, DMA2D_CR_SUSP);
 988              		.loc 1 911 3
 989 0008 7B68     		ldr	r3, [r7, #4]
 990 000a 1B68     		ldr	r3, [r3]
 991 000c 1B68     		ldr	r3, [r3]
 992 000e 23F00302 		bic	r2, r3, #3
 993 0012 7B68     		ldr	r3, [r7, #4]
 994 0014 1B68     		ldr	r3, [r3]
 995 0016 42F00202 		orr	r2, r2, #2
 996 001a 1A60     		str	r2, [r3]
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 997              		.loc 1 914 15
 998 001c FFF7FEFF 		bl	HAL_GetTick
 999 0020 F860     		str	r0, [r7, #12]
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively suspended */
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while ((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == DMA2D_CR_START)
 1000              		.loc 1 917 9
 1001 0022 13E0     		b	.L40
 1002              	.L42:
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_SUSPEND)
 1003              		.loc 1 919 10
 1004 0024 FFF7FEFF 		bl	HAL_GetTick
 1005 0028 0246     		mov	r2, r0
 1006              		.loc 1 919 24
 1007 002a FB68     		ldr	r3, [r7, #12]
 1008 002c D31A     		subs	r3, r2, r3
 1009              		.loc 1 919 8
 1010 002e B3F57A7F 		cmp	r3, #1000
 1011 0032 0BD9     		bls	.L40
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 1012              		.loc 1 922 25
 1013 0034 7B68     		ldr	r3, [r7, #4]
 1014 0036 5B6E     		ldr	r3, [r3, #100]
 1015 0038 43F02002 		orr	r2, r3, #32
 1016 003c 7B68     		ldr	r3, [r7, #4]
 1017 003e 5A66     		str	r2, [r3, #100]
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 1018              		.loc 1 925 21
 1019 0040 7B68     		ldr	r3, [r7, #4]
 1020 0042 0322     		movs	r2, #3
 1021 0044 83F86120 		strb	r2, [r3, #97]
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 1022              		.loc 1 927 14
 1023 0048 0323     		movs	r3, #3
 1024 004a 1BE0     		b	.L41
 1025              	.L40:
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
ARM GAS  /tmp/cccHQt6E.s 			page 35


 1026              		.loc 1 917 17
 1027 004c 7B68     		ldr	r3, [r7, #4]
 1028 004e 1B68     		ldr	r3, [r3]
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1029              		.loc 1 917 27
 1030 0050 1B68     		ldr	r3, [r3]
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1031              		.loc 1 917 32
 1032 0052 03F00303 		and	r3, r3, #3
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1033              		.loc 1 917 9
 1034 0056 012B     		cmp	r3, #1
 1035 0058 E4D0     		beq	.L42
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly *
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 1036              		.loc 1 932 14
 1037 005a 7B68     		ldr	r3, [r7, #4]
 1038 005c 1B68     		ldr	r3, [r3]
 1039              		.loc 1 932 24
 1040 005e 1B68     		ldr	r3, [r3]
 1041              		.loc 1 932 29
 1042 0060 03F00103 		and	r3, r3, #1
 1043              		.loc 1 932 6
 1044 0064 002B     		cmp	r3, #0
 1045 0066 04D0     		beq	.L43
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 1046              		.loc 1 934 19
 1047 0068 7B68     		ldr	r3, [r7, #4]
 1048 006a 0522     		movs	r2, #5
 1049 006c 83F86120 		strb	r2, [r3, #97]
 1050 0070 07E0     		b	.L44
 1051              	.L43:
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no transfer is on-going */
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 1052              		.loc 1 940 5
 1053 0072 7B68     		ldr	r3, [r7, #4]
 1054 0074 1B68     		ldr	r3, [r3]
 1055 0076 1A68     		ldr	r2, [r3]
 1056 0078 7B68     		ldr	r3, [r7, #4]
 1057 007a 1B68     		ldr	r3, [r3]
 1058 007c 22F00202 		bic	r2, r2, #2
 1059 0080 1A60     		str	r2, [r3]
 1060              	.L44:
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1061              		.loc 1 943 10
 1062 0082 0023     		movs	r3, #0
 1063              	.L41:
ARM GAS  /tmp/cccHQt6E.s 			page 36


 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1064              		.loc 1 944 1
 1065 0084 1846     		mov	r0, r3
 1066 0086 1037     		adds	r7, r7, #16
 1067              	.LCFI50:
 1068              		.cfi_def_cfa_offset 8
 1069 0088 BD46     		mov	sp, r7
 1070              	.LCFI51:
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 008a 80BD     		pop	{r7, pc}
 1074              		.cfi_endproc
 1075              	.LFE340:
 1077              		.section	.text.HAL_DMA2D_Resume,"ax",%progbits
 1078              		.align	1
 1079              		.global	HAL_DMA2D_Resume
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1083              		.fpu fpv5-d16
 1085              	HAL_DMA2D_Resume:
 1086              	.LFB341:
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D Transfer.
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Resume(DMA2D_HandleTypeDef *hdma2d)
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1087              		.loc 1 953 1
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 8
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092 0000 80B4     		push	{r7}
 1093              	.LCFI52:
 1094              		.cfi_def_cfa_offset 4
 1095              		.cfi_offset 7, -4
 1096 0002 83B0     		sub	sp, sp, #12
 1097              	.LCFI53:
 1098              		.cfi_def_cfa_offset 16
 1099 0004 00AF     		add	r7, sp, #0
 1100              	.LCFI54:
 1101              		.cfi_def_cfa_register 7
 1102 0006 7860     		str	r0, [r7, #4]
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == (DMA2D_CR_SUSP | DMA2D_CR_START)
 1103              		.loc 1 955 14
 1104 0008 7B68     		ldr	r3, [r7, #4]
 1105 000a 1B68     		ldr	r3, [r3]
 1106              		.loc 1 955 24
 1107 000c 1B68     		ldr	r3, [r3]
 1108              		.loc 1 955 29
 1109 000e 03F00303 		and	r3, r3, #3
 1110              		.loc 1 955 6
ARM GAS  /tmp/cccHQt6E.s 			page 37


 1111 0012 032B     		cmp	r3, #3
 1112 0014 03D1     		bne	.L46
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Ongoing transfer is suspended: change the DMA2D state before resuming */
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1113              		.loc 1 958 19
 1114 0016 7B68     		ldr	r3, [r7, #4]
 1115 0018 0222     		movs	r2, #2
 1116 001a 83F86120 		strb	r2, [r3, #97]
 1117              	.L46:
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the DMA2D transfer */
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, (DMA2D_CR_SUSP | DMA2D_CR_START));
 1118              		.loc 1 965 3
 1119 001e 7B68     		ldr	r3, [r7, #4]
 1120 0020 1B68     		ldr	r3, [r3]
 1121 0022 1A68     		ldr	r2, [r3]
 1122 0024 7B68     		ldr	r3, [r7, #4]
 1123 0026 1B68     		ldr	r3, [r3]
 1124 0028 22F00302 		bic	r2, r2, #3
 1125 002c 1A60     		str	r2, [r3]
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1126              		.loc 1 967 10
 1127 002e 0023     		movs	r3, #0
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1128              		.loc 1 968 1
 1129 0030 1846     		mov	r0, r3
 1130 0032 0C37     		adds	r7, r7, #12
 1131              	.LCFI55:
 1132              		.cfi_def_cfa_offset 4
 1133 0034 BD46     		mov	sp, r7
 1134              	.LCFI56:
 1135              		.cfi_def_cfa_register 13
 1136              		@ sp needed
 1137 0036 5DF8047B 		ldr	r7, [sp], #4
 1138              	.LCFI57:
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 003a 7047     		bx	lr
 1142              		.cfi_endproc
 1143              	.LFE341:
 1145              		.section	.text.HAL_DMA2D_EnableCLUT,"ax",%progbits
 1146              		.align	1
 1147              		.global	HAL_DMA2D_EnableCLUT
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu fpv5-d16
 1153              	HAL_DMA2D_EnableCLUT:
 1154              	.LFB342:
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/cccHQt6E.s 			page 38


 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Enable the DMA2D CLUT Transfer.
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableCLUT(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1155              		.loc 1 981 1
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 8
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              	.LCFI58:
 1162              		.cfi_def_cfa_offset 4
 1163              		.cfi_offset 7, -4
 1164 0002 83B0     		sub	sp, sp, #12
 1165              	.LCFI59:
 1166              		.cfi_def_cfa_offset 16
 1167 0004 00AF     		add	r7, sp, #0
 1168              	.LCFI60:
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
 1171 0008 3960     		str	r1, [r7]
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1172              		.loc 1 986 3
 1173 000a 7B68     		ldr	r3, [r7, #4]
 1174 000c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1175 0010 012B     		cmp	r3, #1
 1176 0012 01D1     		bne	.L49
 1177              		.loc 1 986 3 is_stmt 0 discriminator 1
 1178 0014 0223     		movs	r3, #2
 1179 0016 1CE0     		b	.L50
 1180              	.L49:
 1181              		.loc 1 986 3 discriminator 2
 1182 0018 7B68     		ldr	r3, [r7, #4]
 1183 001a 0122     		movs	r2, #1
 1184 001c 83F86020 		strb	r2, [r3, #96]
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1185              		.loc 1 989 17 is_stmt 1 discriminator 2
 1186 0020 7B68     		ldr	r3, [r7, #4]
 1187 0022 0222     		movs	r2, #2
 1188 0024 83F86120 		strb	r2, [r3, #97]
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 1189              		.loc 1 991 6 discriminator 2
 1190 0028 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cccHQt6E.s 			page 39


 1191 002a 002B     		cmp	r3, #0
 1192 002c 08D1     		bne	.L51
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the background CLUT loading */
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1193              		.loc 1 994 5
 1194 002e 7B68     		ldr	r3, [r7, #4]
 1195 0030 1B68     		ldr	r3, [r3]
 1196 0032 5A6A     		ldr	r2, [r3, #36]
 1197 0034 7B68     		ldr	r3, [r7, #4]
 1198 0036 1B68     		ldr	r3, [r3]
 1199 0038 42F02002 		orr	r2, r2, #32
 1200 003c 5A62     		str	r2, [r3, #36]
 1201 003e 07E0     		b	.L52
 1202              	.L51:
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the foreground CLUT loading */
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 1203              		.loc 1 999 5
 1204 0040 7B68     		ldr	r3, [r7, #4]
 1205 0042 1B68     		ldr	r3, [r3]
 1206 0044 DA69     		ldr	r2, [r3, #28]
 1207 0046 7B68     		ldr	r3, [r7, #4]
 1208 0048 1B68     		ldr	r3, [r3]
 1209 004a 42F02002 		orr	r2, r2, #32
 1210 004e DA61     		str	r2, [r3, #28]
 1211              	.L52:
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1212              		.loc 1 1002 10
 1213 0050 0023     		movs	r3, #0
 1214              	.L50:
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1215              		.loc 1 1003 1
 1216 0052 1846     		mov	r0, r3
 1217 0054 0C37     		adds	r7, r7, #12
 1218              	.LCFI61:
 1219              		.cfi_def_cfa_offset 4
 1220 0056 BD46     		mov	sp, r7
 1221              	.LCFI62:
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 0058 5DF8047B 		ldr	r7, [sp], #4
 1225              	.LCFI63:
 1226              		.cfi_restore 7
 1227              		.cfi_def_cfa_offset 0
 1228 005c 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE342:
 1232              		.section	.text.HAL_DMA2D_CLUTStartLoad,"ax",%progbits
 1233              		.align	1
 1234              		.global	HAL_DMA2D_CLUTStartLoad
 1235              		.syntax unified
 1236              		.thumb
ARM GAS  /tmp/cccHQt6E.s 			page 40


 1237              		.thumb_func
 1238              		.fpu fpv5-d16
 1240              	HAL_DMA2D_CLUTStartLoad:
 1241              	.LFB343:
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTStartLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef *CLUTCf
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1242              		.loc 1 1017 1
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247 0000 80B4     		push	{r7}
 1248              	.LCFI64:
 1249              		.cfi_def_cfa_offset 4
 1250              		.cfi_offset 7, -4
 1251 0002 85B0     		sub	sp, sp, #20
 1252              	.LCFI65:
 1253              		.cfi_def_cfa_offset 24
 1254 0004 00AF     		add	r7, sp, #0
 1255              	.LCFI66:
 1256              		.cfi_def_cfa_register 7
 1257 0006 F860     		str	r0, [r7, #12]
 1258 0008 B960     		str	r1, [r7, #8]
 1259 000a 7A60     		str	r2, [r7, #4]
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg->CLUTColorMode));
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg->Size));
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1260              		.loc 1 1024 3
 1261 000c FB68     		ldr	r3, [r7, #12]
 1262 000e 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1263 0012 012B     		cmp	r3, #1
 1264 0014 01D1     		bne	.L54
 1265              		.loc 1 1024 3 is_stmt 0 discriminator 1
 1266 0016 0223     		movs	r3, #2
 1267 0018 46E0     		b	.L55
 1268              	.L54:
 1269              		.loc 1 1024 3 discriminator 2
 1270 001a FB68     		ldr	r3, [r7, #12]
 1271 001c 0122     		movs	r2, #1
 1272 001e 83F86020 		strb	r2, [r3, #96]
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/cccHQt6E.s 			page 41


1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1273              		.loc 1 1027 17 is_stmt 1 discriminator 2
 1274 0022 FB68     		ldr	r3, [r7, #12]
 1275 0024 0222     		movs	r2, #2
 1276 0026 83F86120 		strb	r2, [r3, #97]
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 1277              		.loc 1 1030 6 discriminator 2
 1278 002a 7B68     		ldr	r3, [r7, #4]
 1279 002c 002B     		cmp	r3, #0
 1280 002e 1DD1     		bne	.L56
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg->pCLUT);
 1281              		.loc 1 1033 5
 1282 0030 BB68     		ldr	r3, [r7, #8]
 1283 0032 1A68     		ldr	r2, [r3]
 1284 0034 FB68     		ldr	r3, [r7, #12]
 1285 0036 1B68     		ldr	r3, [r3]
 1286 0038 1A63     		str	r2, [r3, #48]
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 1287              		.loc 1 1036 5
 1288 003a FB68     		ldr	r3, [r7, #12]
 1289 003c 1B68     		ldr	r3, [r3]
 1290 003e 5A6A     		ldr	r2, [r3, #36]
 1291 0040 1C4B     		ldr	r3, .L58
 1292 0042 1340     		ands	r3, r3, r2
 1293 0044 BA68     		ldr	r2, [r7, #8]
 1294 0046 9268     		ldr	r2, [r2, #8]
 1295 0048 1102     		lsls	r1, r2, #8
 1296 004a BA68     		ldr	r2, [r7, #8]
 1297 004c 5268     		ldr	r2, [r2, #4]
 1298 004e 1201     		lsls	r2, r2, #4
 1299 0050 1143     		orrs	r1, r1, r2
 1300 0052 FA68     		ldr	r2, [r7, #12]
 1301 0054 1268     		ldr	r2, [r2]
 1302 0056 0B43     		orrs	r3, r3, r1
 1303 0058 5362     		str	r3, [r2, #36]
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1304              		.loc 1 1040 5
 1305 005a FB68     		ldr	r3, [r7, #12]
 1306 005c 1B68     		ldr	r3, [r3]
 1307 005e 5A6A     		ldr	r2, [r3, #36]
 1308 0060 FB68     		ldr	r3, [r7, #12]
 1309 0062 1B68     		ldr	r3, [r3]
 1310 0064 42F02002 		orr	r2, r2, #32
 1311 0068 5A62     		str	r2, [r3, #36]
 1312 006a 1CE0     		b	.L57
 1313              	.L56:
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/cccHQt6E.s 			page 42


1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg->pCLUT);
 1314              		.loc 1 1046 5
 1315 006c BB68     		ldr	r3, [r7, #8]
 1316 006e 1A68     		ldr	r2, [r3]
 1317 0070 FB68     		ldr	r3, [r7, #12]
 1318 0072 1B68     		ldr	r3, [r3]
 1319 0074 DA62     		str	r2, [r3, #44]
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
 1320              		.loc 1 1049 5
 1321 0076 FB68     		ldr	r3, [r7, #12]
 1322 0078 1B68     		ldr	r3, [r3]
 1323 007a DA69     		ldr	r2, [r3, #28]
 1324 007c 0D4B     		ldr	r3, .L58
 1325 007e 1340     		ands	r3, r3, r2
 1326 0080 BA68     		ldr	r2, [r7, #8]
 1327 0082 9268     		ldr	r2, [r2, #8]
 1328 0084 1102     		lsls	r1, r2, #8
 1329 0086 BA68     		ldr	r2, [r7, #8]
 1330 0088 5268     		ldr	r2, [r2, #4]
 1331 008a 1201     		lsls	r2, r2, #4
 1332 008c 1143     		orrs	r1, r1, r2
 1333 008e FA68     		ldr	r2, [r7, #12]
 1334 0090 1268     		ldr	r2, [r2]
 1335 0092 0B43     		orrs	r3, r3, r1
 1336 0094 D361     		str	r3, [r2, #28]
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 1337              		.loc 1 1053 5
 1338 0096 FB68     		ldr	r3, [r7, #12]
 1339 0098 1B68     		ldr	r3, [r3]
 1340 009a DA69     		ldr	r2, [r3, #28]
 1341 009c FB68     		ldr	r3, [r7, #12]
 1342 009e 1B68     		ldr	r3, [r3]
 1343 00a0 42F02002 		orr	r2, r2, #32
 1344 00a4 DA61     		str	r2, [r3, #28]
 1345              	.L57:
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1346              		.loc 1 1056 10
 1347 00a6 0023     		movs	r3, #0
 1348              	.L55:
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1349              		.loc 1 1057 1
 1350 00a8 1846     		mov	r0, r3
 1351 00aa 1437     		adds	r7, r7, #20
 1352              	.LCFI67:
 1353              		.cfi_def_cfa_offset 4
 1354 00ac BD46     		mov	sp, r7
ARM GAS  /tmp/cccHQt6E.s 			page 43


 1355              	.LCFI68:
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 00ae 5DF8047B 		ldr	r7, [sp], #4
 1359              	.LCFI69:
 1360              		.cfi_restore 7
 1361              		.cfi_def_cfa_offset 0
 1362 00b2 7047     		bx	lr
 1363              	.L59:
 1364              		.align	2
 1365              	.L58:
 1366 00b4 EF00FFFF 		.word	-65297
 1367              		.cfi_endproc
 1368              	.LFE343:
 1370              		.section	.text.HAL_DMA2D_CLUTStartLoad_IT,"ax",%progbits
 1371              		.align	1
 1372              		.global	HAL_DMA2D_CLUTStartLoad_IT
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1376              		.fpu fpv5-d16
 1378              	HAL_DMA2D_CLUTStartLoad_IT:
 1379              	.LFB344:
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTStartLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef *CLU
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                              uint32_t LayerIdx)
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1380              		.loc 1 1072 1
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 16
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384              		@ link register save eliminated.
 1385 0000 80B4     		push	{r7}
 1386              	.LCFI70:
 1387              		.cfi_def_cfa_offset 4
 1388              		.cfi_offset 7, -4
 1389 0002 85B0     		sub	sp, sp, #20
 1390              	.LCFI71:
 1391              		.cfi_def_cfa_offset 24
 1392 0004 00AF     		add	r7, sp, #0
 1393              	.LCFI72:
 1394              		.cfi_def_cfa_register 7
 1395 0006 F860     		str	r0, [r7, #12]
 1396 0008 B960     		str	r1, [r7, #8]
 1397 000a 7A60     		str	r2, [r7, #4]
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
ARM GAS  /tmp/cccHQt6E.s 			page 44


1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg->CLUTColorMode));
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg->Size));
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1398              		.loc 1 1079 3
 1399 000c FB68     		ldr	r3, [r7, #12]
 1400 000e 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1401 0012 012B     		cmp	r3, #1
 1402 0014 01D1     		bne	.L61
 1403              		.loc 1 1079 3 is_stmt 0 discriminator 1
 1404 0016 0223     		movs	r3, #2
 1405 0018 56E0     		b	.L62
 1406              	.L61:
 1407              		.loc 1 1079 3 discriminator 2
 1408 001a FB68     		ldr	r3, [r7, #12]
 1409 001c 0122     		movs	r2, #1
 1410 001e 83F86020 		strb	r2, [r3, #96]
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1411              		.loc 1 1082 17 is_stmt 1 discriminator 2
 1412 0022 FB68     		ldr	r3, [r7, #12]
 1413 0024 0222     		movs	r2, #2
 1414 0026 83F86120 		strb	r2, [r3, #97]
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 1415              		.loc 1 1085 6 discriminator 2
 1416 002a 7B68     		ldr	r3, [r7, #4]
 1417 002c 002B     		cmp	r3, #0
 1418 002e 25D1     		bne	.L63
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg->pCLUT);
 1419              		.loc 1 1088 5
 1420 0030 BB68     		ldr	r3, [r7, #8]
 1421 0032 1A68     		ldr	r2, [r3]
 1422 0034 FB68     		ldr	r3, [r7, #12]
 1423 0036 1B68     		ldr	r3, [r3]
 1424 0038 1A63     		str	r2, [r3, #48]
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 1425              		.loc 1 1091 5
 1426 003a FB68     		ldr	r3, [r7, #12]
 1427 003c 1B68     		ldr	r3, [r3]
 1428 003e 5A6A     		ldr	r2, [r3, #36]
 1429 0040 244B     		ldr	r3, .L65
 1430 0042 1340     		ands	r3, r3, r2
 1431 0044 BA68     		ldr	r2, [r7, #8]
 1432 0046 9268     		ldr	r2, [r2, #8]
 1433 0048 1102     		lsls	r1, r2, #8
 1434 004a BA68     		ldr	r2, [r7, #8]
 1435 004c 5268     		ldr	r2, [r2, #4]
 1436 004e 1201     		lsls	r2, r2, #4
ARM GAS  /tmp/cccHQt6E.s 			page 45


 1437 0050 1143     		orrs	r1, r1, r2
 1438 0052 FA68     		ldr	r2, [r7, #12]
 1439 0054 1268     		ldr	r2, [r2]
 1440 0056 0B43     		orrs	r3, r3, r1
 1441 0058 5362     		str	r3, [r2, #36]
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
 1442              		.loc 1 1095 5
 1443 005a FB68     		ldr	r3, [r7, #12]
 1444 005c 1B68     		ldr	r3, [r3]
 1445 005e 1A68     		ldr	r2, [r3]
 1446 0060 FB68     		ldr	r3, [r7, #12]
 1447 0062 1B68     		ldr	r3, [r3]
 1448 0064 42F46452 		orr	r2, r2, #14592
 1449 0068 1A60     		str	r2, [r3]
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1450              		.loc 1 1098 5
 1451 006a FB68     		ldr	r3, [r7, #12]
 1452 006c 1B68     		ldr	r3, [r3]
 1453 006e 5A6A     		ldr	r2, [r3, #36]
 1454 0070 FB68     		ldr	r3, [r7, #12]
 1455 0072 1B68     		ldr	r3, [r3]
 1456 0074 42F02002 		orr	r2, r2, #32
 1457 0078 5A62     		str	r2, [r3, #36]
 1458 007a 24E0     		b	.L64
 1459              	.L63:
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg->pCLUT);
 1460              		.loc 1 1104 5
 1461 007c BB68     		ldr	r3, [r7, #8]
 1462 007e 1A68     		ldr	r2, [r3]
 1463 0080 FB68     		ldr	r3, [r7, #12]
 1464 0082 1B68     		ldr	r3, [r3]
 1465 0084 DA62     		str	r2, [r3, #44]
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
 1466              		.loc 1 1107 5
 1467 0086 FB68     		ldr	r3, [r7, #12]
 1468 0088 1B68     		ldr	r3, [r3]
 1469 008a DA69     		ldr	r2, [r3, #28]
 1470 008c 114B     		ldr	r3, .L65
 1471 008e 1340     		ands	r3, r3, r2
 1472 0090 BA68     		ldr	r2, [r7, #8]
 1473 0092 9268     		ldr	r2, [r2, #8]
 1474 0094 1102     		lsls	r1, r2, #8
 1475 0096 BA68     		ldr	r2, [r7, #8]
 1476 0098 5268     		ldr	r2, [r2, #4]
 1477 009a 1201     		lsls	r2, r2, #4
ARM GAS  /tmp/cccHQt6E.s 			page 46


 1478 009c 1143     		orrs	r1, r1, r2
 1479 009e FA68     		ldr	r2, [r7, #12]
 1480 00a0 1268     		ldr	r2, [r2]
 1481 00a2 0B43     		orrs	r3, r3, r1
 1482 00a4 D361     		str	r3, [r2, #28]
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
 1483              		.loc 1 1111 5
 1484 00a6 FB68     		ldr	r3, [r7, #12]
 1485 00a8 1B68     		ldr	r3, [r3]
 1486 00aa 1A68     		ldr	r2, [r3]
 1487 00ac FB68     		ldr	r3, [r7, #12]
 1488 00ae 1B68     		ldr	r3, [r3]
 1489 00b0 42F46452 		orr	r2, r2, #14592
 1490 00b4 1A60     		str	r2, [r3]
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 1491              		.loc 1 1114 5
 1492 00b6 FB68     		ldr	r3, [r7, #12]
 1493 00b8 1B68     		ldr	r3, [r3]
 1494 00ba DA69     		ldr	r2, [r3, #28]
 1495 00bc FB68     		ldr	r3, [r7, #12]
 1496 00be 1B68     		ldr	r3, [r3]
 1497 00c0 42F02002 		orr	r2, r2, #32
 1498 00c4 DA61     		str	r2, [r3, #28]
 1499              	.L64:
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1500              		.loc 1 1117 10
 1501 00c6 0023     		movs	r3, #0
 1502              	.L62:
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1503              		.loc 1 1118 1
 1504 00c8 1846     		mov	r0, r3
 1505 00ca 1437     		adds	r7, r7, #20
 1506              	.LCFI73:
 1507              		.cfi_def_cfa_offset 4
 1508 00cc BD46     		mov	sp, r7
 1509              	.LCFI74:
 1510              		.cfi_def_cfa_register 13
 1511              		@ sp needed
 1512 00ce 5DF8047B 		ldr	r7, [sp], #4
 1513              	.LCFI75:
 1514              		.cfi_restore 7
 1515              		.cfi_def_cfa_offset 0
 1516 00d2 7047     		bx	lr
 1517              	.L66:
 1518              		.align	2
 1519              	.L65:
 1520 00d4 EF00FFFF 		.word	-65297
 1521              		.cfi_endproc
 1522              	.LFE344:
 1524              		.section	.text.HAL_DMA2D_CLUTLoad,"ax",%progbits
ARM GAS  /tmp/cccHQt6E.s 			page 47


 1525              		.align	1
 1526              		.global	HAL_DMA2D_CLUTLoad
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu fpv5-d16
 1532              	HAL_DMA2D_CLUTLoad:
 1533              	.LFB345:
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      invited to resort to HAL_DMA2D_CLUTStartLoad() instead to benefit from
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      code compactness, code size and improved heap usage.
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, uin
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1534              		.loc 1 1135 1
 1535              		.cfi_startproc
 1536              		@ args = 4, pretend = 0, frame = 16
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539 0000 80B4     		push	{r7}
 1540              	.LCFI76:
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 7, -4
 1543 0002 85B0     		sub	sp, sp, #20
 1544              	.LCFI77:
 1545              		.cfi_def_cfa_offset 24
 1546 0004 00AF     		add	r7, sp, #0
 1547              	.LCFI78:
 1548              		.cfi_def_cfa_register 7
 1549 0006 F860     		str	r0, [r7, #12]
 1550 0008 3846     		mov	r0, r7
 1551 000a 80E80E00 		stm	r0, {r1, r2, r3}
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1552              		.loc 1 1142 3
 1553 000e FB68     		ldr	r3, [r7, #12]
 1554 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1555 0014 012B     		cmp	r3, #1
 1556 0016 01D1     		bne	.L68
 1557              		.loc 1 1142 3 is_stmt 0 discriminator 1
 1558 0018 0223     		movs	r3, #2
ARM GAS  /tmp/cccHQt6E.s 			page 48


 1559 001a 40E0     		b	.L69
 1560              	.L68:
 1561              		.loc 1 1142 3 discriminator 2
 1562 001c FB68     		ldr	r3, [r7, #12]
 1563 001e 0122     		movs	r2, #1
 1564 0020 83F86020 		strb	r2, [r3, #96]
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1565              		.loc 1 1145 17 is_stmt 1 discriminator 2
 1566 0024 FB68     		ldr	r3, [r7, #12]
 1567 0026 0222     		movs	r2, #2
 1568 0028 83F86120 		strb	r2, [r3, #97]
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 1569              		.loc 1 1148 6 discriminator 2
 1570 002c BB69     		ldr	r3, [r7, #24]
 1571 002e 002B     		cmp	r3, #0
 1572 0030 1AD1     		bne	.L70
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1573              		.loc 1 1151 5
 1574 0032 3A68     		ldr	r2, [r7]
 1575 0034 FB68     		ldr	r3, [r7, #12]
 1576 0036 1B68     		ldr	r3, [r3]
 1577 0038 1A63     		str	r2, [r3, #48]
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 1578              		.loc 1 1154 5
 1579 003a FB68     		ldr	r3, [r7, #12]
 1580 003c 1B68     		ldr	r3, [r3]
 1581 003e 5A6A     		ldr	r2, [r3, #36]
 1582 0040 1A4B     		ldr	r3, .L72
 1583 0042 1340     		ands	r3, r3, r2
 1584 0044 BA68     		ldr	r2, [r7, #8]
 1585 0046 1102     		lsls	r1, r2, #8
 1586 0048 7A68     		ldr	r2, [r7, #4]
 1587 004a 1201     		lsls	r2, r2, #4
 1588 004c 1143     		orrs	r1, r1, r2
 1589 004e FA68     		ldr	r2, [r7, #12]
 1590 0050 1268     		ldr	r2, [r2]
 1591 0052 0B43     		orrs	r3, r3, r1
 1592 0054 5362     		str	r3, [r2, #36]
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CC
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1593              		.loc 1 1158 5
 1594 0056 FB68     		ldr	r3, [r7, #12]
 1595 0058 1B68     		ldr	r3, [r3]
 1596 005a 5A6A     		ldr	r2, [r3, #36]
 1597 005c FB68     		ldr	r3, [r7, #12]
 1598 005e 1B68     		ldr	r3, [r3]
 1599 0060 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/cccHQt6E.s 			page 49


 1600 0064 5A62     		str	r2, [r3, #36]
 1601 0066 19E0     		b	.L71
 1602              	.L70:
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1603              		.loc 1 1164 5
 1604 0068 3A68     		ldr	r2, [r7]
 1605 006a FB68     		ldr	r3, [r7, #12]
 1606 006c 1B68     		ldr	r3, [r3]
 1607 006e DA62     		str	r2, [r3, #44]
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
 1608              		.loc 1 1167 5
 1609 0070 FB68     		ldr	r3, [r7, #12]
 1610 0072 1B68     		ldr	r3, [r3]
 1611 0074 DA69     		ldr	r2, [r3, #28]
 1612 0076 0D4B     		ldr	r3, .L72
 1613 0078 1340     		ands	r3, r3, r2
 1614 007a BA68     		ldr	r2, [r7, #8]
 1615 007c 1102     		lsls	r1, r2, #8
 1616 007e 7A68     		ldr	r2, [r7, #4]
 1617 0080 1201     		lsls	r2, r2, #4
 1618 0082 1143     		orrs	r1, r1, r2
 1619 0084 FA68     		ldr	r2, [r7, #12]
 1620 0086 1268     		ldr	r2, [r2]
 1621 0088 0B43     		orrs	r3, r3, r1
 1622 008a D361     		str	r3, [r2, #28]
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CC
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 1623              		.loc 1 1171 5
 1624 008c FB68     		ldr	r3, [r7, #12]
 1625 008e 1B68     		ldr	r3, [r3]
 1626 0090 DA69     		ldr	r2, [r3, #28]
 1627 0092 FB68     		ldr	r3, [r7, #12]
 1628 0094 1B68     		ldr	r3, [r3]
 1629 0096 42F02002 		orr	r2, r2, #32
 1630 009a DA61     		str	r2, [r3, #28]
 1631              	.L71:
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1632              		.loc 1 1174 10
 1633 009c 0023     		movs	r3, #0
 1634              	.L69:
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1635              		.loc 1 1175 1
 1636 009e 1846     		mov	r0, r3
 1637 00a0 1437     		adds	r7, r7, #20
 1638              	.LCFI79:
 1639              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cccHQt6E.s 			page 50


 1640 00a2 BD46     		mov	sp, r7
 1641              	.LCFI80:
 1642              		.cfi_def_cfa_register 13
 1643              		@ sp needed
 1644 00a4 5DF8047B 		ldr	r7, [sp], #4
 1645              	.LCFI81:
 1646              		.cfi_restore 7
 1647              		.cfi_def_cfa_offset 0
 1648 00a8 7047     		bx	lr
 1649              	.L73:
 1650 00aa 00BF     		.align	2
 1651              	.L72:
 1652 00ac EF00FFFF 		.word	-65297
 1653              		.cfi_endproc
 1654              	.LFE345:
 1656              		.section	.text.HAL_DMA2D_CLUTLoad_IT,"ax",%progbits
 1657              		.align	1
 1658              		.global	HAL_DMA2D_CLUTLoad_IT
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1662              		.fpu fpv5-d16
 1664              	HAL_DMA2D_CLUTLoad_IT:
 1665              	.LFB346:
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      invited to resort to HAL_DMA2D_CLUTStartLoad_IT() instead to benefit
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      from code compactness, code size and improved heap usage.
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, 
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1666              		.loc 1 1192 1
 1667              		.cfi_startproc
 1668              		@ args = 4, pretend = 0, frame = 16
 1669              		@ frame_needed = 1, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
 1671 0000 80B4     		push	{r7}
 1672              	.LCFI82:
 1673              		.cfi_def_cfa_offset 4
 1674              		.cfi_offset 7, -4
 1675 0002 85B0     		sub	sp, sp, #20
 1676              	.LCFI83:
 1677              		.cfi_def_cfa_offset 24
 1678 0004 00AF     		add	r7, sp, #0
 1679              	.LCFI84:
 1680              		.cfi_def_cfa_register 7
 1681 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/cccHQt6E.s 			page 51


 1682 0008 3846     		mov	r0, r7
 1683 000a 80E80E00 		stm	r0, {r1, r2, r3}
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1684              		.loc 1 1199 3
 1685 000e FB68     		ldr	r3, [r7, #12]
 1686 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1687 0014 012B     		cmp	r3, #1
 1688 0016 01D1     		bne	.L75
 1689              		.loc 1 1199 3 is_stmt 0 discriminator 1
 1690 0018 0223     		movs	r3, #2
 1691 001a 50E0     		b	.L76
 1692              	.L75:
 1693              		.loc 1 1199 3 discriminator 2
 1694 001c FB68     		ldr	r3, [r7, #12]
 1695 001e 0122     		movs	r2, #1
 1696 0020 83F86020 		strb	r2, [r3, #96]
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1697              		.loc 1 1202 17 is_stmt 1 discriminator 2
 1698 0024 FB68     		ldr	r3, [r7, #12]
 1699 0026 0222     		movs	r2, #2
 1700 0028 83F86120 		strb	r2, [r3, #97]
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 1701              		.loc 1 1205 6 discriminator 2
 1702 002c BB69     		ldr	r3, [r7, #24]
 1703 002e 002B     		cmp	r3, #0
 1704 0030 22D1     		bne	.L77
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1705              		.loc 1 1208 5
 1706 0032 3A68     		ldr	r2, [r7]
 1707 0034 FB68     		ldr	r3, [r7, #12]
 1708 0036 1B68     		ldr	r3, [r3]
 1709 0038 1A63     		str	r2, [r3, #48]
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 1710              		.loc 1 1211 5
 1711 003a FB68     		ldr	r3, [r7, #12]
 1712 003c 1B68     		ldr	r3, [r3]
 1713 003e 5A6A     		ldr	r2, [r3, #36]
 1714 0040 224B     		ldr	r3, .L79
 1715 0042 1340     		ands	r3, r3, r2
 1716 0044 BA68     		ldr	r2, [r7, #8]
 1717 0046 1102     		lsls	r1, r2, #8
 1718 0048 7A68     		ldr	r2, [r7, #4]
 1719 004a 1201     		lsls	r2, r2, #4
ARM GAS  /tmp/cccHQt6E.s 			page 52


 1720 004c 1143     		orrs	r1, r1, r2
 1721 004e FA68     		ldr	r2, [r7, #12]
 1722 0050 1268     		ldr	r2, [r2]
 1723 0052 0B43     		orrs	r3, r3, r1
 1724 0054 5362     		str	r3, [r2, #36]
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CC
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
 1725              		.loc 1 1215 5
 1726 0056 FB68     		ldr	r3, [r7, #12]
 1727 0058 1B68     		ldr	r3, [r3]
 1728 005a 1A68     		ldr	r2, [r3]
 1729 005c FB68     		ldr	r3, [r7, #12]
 1730 005e 1B68     		ldr	r3, [r3]
 1731 0060 42F46452 		orr	r2, r2, #14592
 1732 0064 1A60     		str	r2, [r3]
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1733              		.loc 1 1218 5
 1734 0066 FB68     		ldr	r3, [r7, #12]
 1735 0068 1B68     		ldr	r3, [r3]
 1736 006a 5A6A     		ldr	r2, [r3, #36]
 1737 006c FB68     		ldr	r3, [r7, #12]
 1738 006e 1B68     		ldr	r3, [r3]
 1739 0070 42F02002 		orr	r2, r2, #32
 1740 0074 5A62     		str	r2, [r3, #36]
 1741 0076 21E0     		b	.L78
 1742              	.L77:
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1743              		.loc 1 1224 5
 1744 0078 3A68     		ldr	r2, [r7]
 1745 007a FB68     		ldr	r3, [r7, #12]
 1746 007c 1B68     		ldr	r3, [r3]
 1747 007e DA62     		str	r2, [r3, #44]
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
 1748              		.loc 1 1227 5
 1749 0080 FB68     		ldr	r3, [r7, #12]
 1750 0082 1B68     		ldr	r3, [r3]
 1751 0084 DA69     		ldr	r2, [r3, #28]
 1752 0086 114B     		ldr	r3, .L79
 1753 0088 1340     		ands	r3, r3, r2
 1754 008a BA68     		ldr	r2, [r7, #8]
 1755 008c 1102     		lsls	r1, r2, #8
 1756 008e 7A68     		ldr	r2, [r7, #4]
 1757 0090 1201     		lsls	r2, r2, #4
 1758 0092 1143     		orrs	r1, r1, r2
 1759 0094 FA68     		ldr	r2, [r7, #12]
 1760 0096 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cccHQt6E.s 			page 53


 1761 0098 0B43     		orrs	r3, r3, r1
 1762 009a D361     		str	r3, [r2, #28]
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CC
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
 1763              		.loc 1 1231 5
 1764 009c FB68     		ldr	r3, [r7, #12]
 1765 009e 1B68     		ldr	r3, [r3]
 1766 00a0 1A68     		ldr	r2, [r3]
 1767 00a2 FB68     		ldr	r3, [r7, #12]
 1768 00a4 1B68     		ldr	r3, [r3]
 1769 00a6 42F46452 		orr	r2, r2, #14592
 1770 00aa 1A60     		str	r2, [r3]
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 1771              		.loc 1 1234 5
 1772 00ac FB68     		ldr	r3, [r7, #12]
 1773 00ae 1B68     		ldr	r3, [r3]
 1774 00b0 DA69     		ldr	r2, [r3, #28]
 1775 00b2 FB68     		ldr	r3, [r7, #12]
 1776 00b4 1B68     		ldr	r3, [r3]
 1777 00b6 42F02002 		orr	r2, r2, #32
 1778 00ba DA61     		str	r2, [r3, #28]
 1779              	.L78:
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1780              		.loc 1 1237 10
 1781 00bc 0023     		movs	r3, #0
 1782              	.L76:
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1783              		.loc 1 1238 1
 1784 00be 1846     		mov	r0, r3
 1785 00c0 1437     		adds	r7, r7, #20
 1786              	.LCFI85:
 1787              		.cfi_def_cfa_offset 4
 1788 00c2 BD46     		mov	sp, r7
 1789              	.LCFI86:
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 00c4 5DF8047B 		ldr	r7, [sp], #4
 1793              	.LCFI87:
 1794              		.cfi_restore 7
 1795              		.cfi_def_cfa_offset 0
 1796 00c8 7047     		bx	lr
 1797              	.L80:
 1798 00ca 00BF     		.align	2
 1799              	.L79:
 1800 00cc EF00FFFF 		.word	-65297
 1801              		.cfi_endproc
 1802              	.LFE346:
 1804              		.section	.text.HAL_DMA2D_CLUTLoading_Abort,"ax",%progbits
 1805              		.align	1
 1806              		.global	HAL_DMA2D_CLUTLoading_Abort
 1807              		.syntax unified
ARM GAS  /tmp/cccHQt6E.s 			page 54


 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv5-d16
 1812              	HAL_DMA2D_CLUTLoading_Abort:
 1813              	.LFB347:
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D CLUT loading.
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  Pointer to a DMA2D_HandleTypeDef structure that contains
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1814              		.loc 1 1250 1
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 16
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              	.LCFI88:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 84B0     		sub	sp, sp, #16
 1824              	.LCFI89:
 1825              		.cfi_def_cfa_offset 24
 1826 0004 00AF     		add	r7, sp, #0
 1827              	.LCFI90:
 1828              		.cfi_def_cfa_register 7
 1829 0006 7860     		str	r0, [r7, #4]
 1830 0008 3960     		str	r1, [r7]
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t *reg =  &(hdma2d->Instance->BGPFCCR);  /* by default, point at background reg
 1831              		.loc 1 1252 39
 1832 000a 7B68     		ldr	r3, [r7, #4]
 1833 000c 1B68     		ldr	r3, [r3]
 1834              		.loc 1 1252 24
 1835 000e 2433     		adds	r3, r3, #36
 1836 0010 FB60     		str	r3, [r7, #12]
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the CLUT loading */
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 1837              		.loc 1 1255 3
 1838 0012 7B68     		ldr	r3, [r7, #4]
 1839 0014 1B68     		ldr	r3, [r3]
 1840 0016 1A68     		ldr	r2, [r3]
 1841 0018 7B68     		ldr	r3, [r7, #4]
 1842 001a 1B68     		ldr	r3, [r3]
 1843 001c 42F00402 		orr	r2, r2, #4
 1844 0020 1A60     		str	r2, [r3]
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_FOREGROUND_LAYER)
 1845              		.loc 1 1258 6
ARM GAS  /tmp/cccHQt6E.s 			page 55


 1846 0022 3B68     		ldr	r3, [r7]
 1847 0024 012B     		cmp	r3, #1
 1848 0026 03D1     		bne	.L82
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
 1849              		.loc 1 1260 20
 1850 0028 7B68     		ldr	r3, [r7, #4]
 1851 002a 1B68     		ldr	r3, [r3]
 1852              		.loc 1 1260 10
 1853 002c 1C33     		adds	r3, r3, #28
 1854 002e FB60     		str	r3, [r7, #12]
 1855              	.L82:
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 1856              		.loc 1 1265 15
 1857 0030 FFF7FEFF 		bl	HAL_GetTick
 1858 0034 B860     		str	r0, [r7, #8]
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is aborted */
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while ((*reg & DMA2D_BGPFCCR_START) != 0U)
 1859              		.loc 1 1268 9
 1860 0036 17E0     		b	.L83
 1861              	.L85:
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_ABORT)
 1862              		.loc 1 1270 10
 1863 0038 FFF7FEFF 		bl	HAL_GetTick
 1864 003c 0246     		mov	r2, r0
 1865              		.loc 1 1270 24
 1866 003e BB68     		ldr	r3, [r7, #8]
 1867 0040 D31A     		subs	r3, r2, r3
 1868              		.loc 1 1270 8
 1869 0042 B3F57A7F 		cmp	r3, #1000
 1870 0046 0FD9     		bls	.L83
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 1871              		.loc 1 1273 25
 1872 0048 7B68     		ldr	r3, [r7, #4]
 1873 004a 5B6E     		ldr	r3, [r3, #100]
 1874 004c 43F02002 		orr	r2, r3, #32
 1875 0050 7B68     		ldr	r3, [r7, #4]
 1876 0052 5A66     		str	r2, [r3, #100]
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 1877              		.loc 1 1276 21
 1878 0054 7B68     		ldr	r3, [r7, #4]
 1879 0056 0322     		movs	r2, #3
 1880 0058 83F86120 		strb	r2, [r3, #97]
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 1881              		.loc 1 1279 7
ARM GAS  /tmp/cccHQt6E.s 			page 56


 1882 005c 7B68     		ldr	r3, [r7, #4]
 1883 005e 0022     		movs	r2, #0
 1884 0060 83F86020 		strb	r2, [r3, #96]
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 1885              		.loc 1 1281 14
 1886 0064 0323     		movs	r3, #3
 1887 0066 16E0     		b	.L84
 1888              	.L83:
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1889              		.loc 1 1268 11
 1890 0068 FB68     		ldr	r3, [r7, #12]
 1891 006a 1B68     		ldr	r3, [r3]
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1892              		.loc 1 1268 16
 1893 006c 03F02003 		and	r3, r3, #32
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1894              		.loc 1 1268 9
 1895 0070 002B     		cmp	r3, #0
 1896 0072 E1D1     		bne	.L85
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error 
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
 1897              		.loc 1 1286 3
 1898 0074 7B68     		ldr	r3, [r7, #4]
 1899 0076 1B68     		ldr	r3, [r3]
 1900 0078 1A68     		ldr	r2, [r3]
 1901 007a 7B68     		ldr	r3, [r7, #4]
 1902 007c 1B68     		ldr	r3, [r3]
 1903 007e 22F46452 		bic	r2, r2, #14592
 1904 0082 1A60     		str	r2, [r3]
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 1905              		.loc 1 1289 17
 1906 0084 7B68     		ldr	r3, [r7, #4]
 1907 0086 0122     		movs	r2, #1
 1908 0088 83F86120 		strb	r2, [r3, #97]
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 1909              		.loc 1 1292 3
 1910 008c 7B68     		ldr	r3, [r7, #4]
 1911 008e 0022     		movs	r2, #0
 1912 0090 83F86020 		strb	r2, [r3, #96]
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 1913              		.loc 1 1294 10
 1914 0094 0023     		movs	r3, #0
 1915              	.L84:
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1916              		.loc 1 1295 1
 1917 0096 1846     		mov	r0, r3
 1918 0098 1037     		adds	r7, r7, #16
 1919              	.LCFI91:
ARM GAS  /tmp/cccHQt6E.s 			page 57


 1920              		.cfi_def_cfa_offset 8
 1921 009a BD46     		mov	sp, r7
 1922              	.LCFI92:
 1923              		.cfi_def_cfa_register 13
 1924              		@ sp needed
 1925 009c 80BD     		pop	{r7, pc}
 1926              		.cfi_endproc
 1927              	.LFE347:
 1929              		.section	.text.HAL_DMA2D_CLUTLoading_Suspend,"ax",%progbits
 1930              		.align	1
 1931              		.global	HAL_DMA2D_CLUTLoading_Suspend
 1932              		.syntax unified
 1933              		.thumb
 1934              		.thumb_func
 1935              		.fpu fpv5-d16
 1937              	HAL_DMA2D_CLUTLoading_Suspend:
 1938              	.LFB348:
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D CLUT loading.
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Suspend(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 1939              		.loc 1 1307 1
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 24
 1942              		@ frame_needed = 1, uses_anonymous_args = 0
 1943 0000 80B5     		push	{r7, lr}
 1944              	.LCFI93:
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 7, -8
 1947              		.cfi_offset 14, -4
 1948 0002 86B0     		sub	sp, sp, #24
 1949              	.LCFI94:
 1950              		.cfi_def_cfa_offset 32
 1951 0004 00AF     		add	r7, sp, #0
 1952              	.LCFI95:
 1953              		.cfi_def_cfa_register 7
 1954 0006 7860     		str	r0, [r7, #4]
 1955 0008 3960     		str	r1, [r7]
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t loadsuspended;
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t *reg =  &(hdma2d->Instance->BGPFCCR);  /* by default, point at background reg
 1956              		.loc 1 1310 39
 1957 000a 7B68     		ldr	r3, [r7, #4]
 1958 000c 1B68     		ldr	r3, [r3]
 1959              		.loc 1 1310 24
 1960 000e 2433     		adds	r3, r3, #36
 1961 0010 3B61     		str	r3, [r7, #16]
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the CLUT loading */
ARM GAS  /tmp/cccHQt6E.s 			page 58


1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 1962              		.loc 1 1313 3
 1963 0012 7B68     		ldr	r3, [r7, #4]
 1964 0014 1B68     		ldr	r3, [r3]
 1965 0016 1A68     		ldr	r2, [r3]
 1966 0018 7B68     		ldr	r3, [r7, #4]
 1967 001a 1B68     		ldr	r3, [r3]
 1968 001c 42F00202 		orr	r2, r2, #2
 1969 0020 1A60     		str	r2, [r3]
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_FOREGROUND_LAYER)
 1970              		.loc 1 1316 6
 1971 0022 3B68     		ldr	r3, [r7]
 1972 0024 012B     		cmp	r3, #1
 1973 0026 03D1     		bne	.L87
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
 1974              		.loc 1 1318 20
 1975 0028 7B68     		ldr	r3, [r7, #4]
 1976 002a 1B68     		ldr	r3, [r3]
 1977              		.loc 1 1318 10
 1978 002c 1C33     		adds	r3, r3, #28
 1979 002e 3B61     		str	r3, [r7, #16]
 1980              	.L87:
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 1981              		.loc 1 1322 15
 1982 0030 FFF7FEFF 		bl	HAL_GetTick
 1983 0034 F860     		str	r0, [r7, #12]
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is suspended */
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* 1st condition: Suspend Check */
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP) ? 1UL : 0UL;
 1984              		.loc 1 1326 27
 1985 0036 7B68     		ldr	r3, [r7, #4]
 1986 0038 1B68     		ldr	r3, [r3]
 1987              		.loc 1 1326 37
 1988 003a 1B68     		ldr	r3, [r3]
 1989              		.loc 1 1326 42
 1990 003c 03F00203 		and	r3, r3, #2
 1991              		.loc 1 1326 83
 1992 0040 022B     		cmp	r3, #2
 1993 0042 01D1     		bne	.L88
 1994              		.loc 1 1326 83 is_stmt 0 discriminator 1
 1995 0044 0123     		movs	r3, #1
 1996 0046 00E0     		b	.L89
 1997              	.L88:
 1998              		.loc 1 1326 83 discriminator 2
 1999 0048 0023     		movs	r3, #0
 2000              	.L89:
 2001              		.loc 1 1326 17 is_stmt 1 discriminator 4
 2002 004a 7B61     		str	r3, [r7, #20]
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* 2nd condition: Not Start Check */
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START) ? 1UL : 0UL;
ARM GAS  /tmp/cccHQt6E.s 			page 59


 2003              		.loc 1 1328 22 discriminator 4
 2004 004c 3B69     		ldr	r3, [r7, #16]
 2005 004e 1B68     		ldr	r3, [r3]
 2006              		.loc 1 1328 27 discriminator 4
 2007 0050 03F02003 		and	r3, r3, #32
 2008              		.loc 1 1328 80 discriminator 4
 2009 0054 202B     		cmp	r3, #32
 2010 0056 01D0     		beq	.L90
 2011              		.loc 1 1328 80 is_stmt 0 discriminator 1
 2012 0058 0123     		movs	r3, #1
 2013 005a 00E0     		b	.L91
 2014              	.L90:
 2015              		.loc 1 1328 80 discriminator 2
 2016 005c 0023     		movs	r3, #0
 2017              	.L91:
 2018              		.loc 1 1328 17 is_stmt 1 discriminator 4
 2019 005e 7A69     		ldr	r2, [r7, #20]
 2020 0060 1343     		orrs	r3, r3, r2
 2021 0062 7B61     		str	r3, [r7, #20]
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 2022              		.loc 1 1329 9 discriminator 4
 2023 0064 2AE0     		b	.L92
 2024              	.L99:
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_SUSPEND)
 2025              		.loc 1 1331 10
 2026 0066 FFF7FEFF 		bl	HAL_GetTick
 2027 006a 0246     		mov	r2, r0
 2028              		.loc 1 1331 24
 2029 006c FB68     		ldr	r3, [r7, #12]
 2030 006e D31A     		subs	r3, r2, r3
 2031              		.loc 1 1331 8
 2032 0070 B3F57A7F 		cmp	r3, #1000
 2033 0074 0BD9     		bls	.L93
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 2034              		.loc 1 1334 25
 2035 0076 7B68     		ldr	r3, [r7, #4]
 2036 0078 5B6E     		ldr	r3, [r3, #100]
 2037 007a 43F02002 		orr	r2, r3, #32
 2038 007e 7B68     		ldr	r3, [r7, #4]
 2039 0080 5A66     		str	r2, [r3, #100]
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 2040              		.loc 1 1337 21
 2041 0082 7B68     		ldr	r3, [r7, #4]
 2042 0084 0322     		movs	r2, #3
 2043 0086 83F86120 		strb	r2, [r3, #97]
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 2044              		.loc 1 1339 14
 2045 008a 0323     		movs	r3, #3
 2046 008c 2DE0     		b	.L94
 2047              	.L93:
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
ARM GAS  /tmp/cccHQt6E.s 			page 60


1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* 1st condition: Suspend Check */
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP) ? 1UL : 0UL;
 2048              		.loc 1 1342 29
 2049 008e 7B68     		ldr	r3, [r7, #4]
 2050 0090 1B68     		ldr	r3, [r3]
 2051              		.loc 1 1342 39
 2052 0092 1B68     		ldr	r3, [r3]
 2053              		.loc 1 1342 44
 2054 0094 03F00203 		and	r3, r3, #2
 2055              		.loc 1 1342 85
 2056 0098 022B     		cmp	r3, #2
 2057 009a 01D1     		bne	.L95
 2058              		.loc 1 1342 85 is_stmt 0 discriminator 1
 2059 009c 0123     		movs	r3, #1
 2060 009e 00E0     		b	.L96
 2061              	.L95:
 2062              		.loc 1 1342 85 discriminator 2
 2063 00a0 0023     		movs	r3, #0
 2064              	.L96:
 2065              		.loc 1 1342 19 is_stmt 1 discriminator 4
 2066 00a2 7B61     		str	r3, [r7, #20]
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* 2nd condition: Not Start Check */
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START) ? 1UL : 0UL;
 2067              		.loc 1 1344 24 discriminator 4
 2068 00a4 3B69     		ldr	r3, [r7, #16]
 2069 00a6 1B68     		ldr	r3, [r3]
 2070              		.loc 1 1344 29 discriminator 4
 2071 00a8 03F02003 		and	r3, r3, #32
 2072              		.loc 1 1344 82 discriminator 4
 2073 00ac 202B     		cmp	r3, #32
 2074 00ae 01D0     		beq	.L97
 2075              		.loc 1 1344 82 is_stmt 0 discriminator 1
 2076 00b0 0123     		movs	r3, #1
 2077 00b2 00E0     		b	.L98
 2078              	.L97:
 2079              		.loc 1 1344 82 discriminator 2
 2080 00b4 0023     		movs	r3, #0
 2081              	.L98:
 2082              		.loc 1 1344 19 is_stmt 1 discriminator 4
 2083 00b6 7A69     		ldr	r2, [r7, #20]
 2084 00b8 1343     		orrs	r3, r3, r2
 2085 00ba 7B61     		str	r3, [r7, #20]
 2086              	.L92:
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2087              		.loc 1 1329 9
 2088 00bc 7B69     		ldr	r3, [r7, #20]
 2089 00be 002B     		cmp	r3, #0
 2090 00c0 D1D0     		beq	.L99
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly *
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((*reg & DMA2D_BGPFCCR_START) != 0U)
 2091              		.loc 1 1348 8
 2092 00c2 3B69     		ldr	r3, [r7, #16]
 2093 00c4 1B68     		ldr	r3, [r3]
 2094              		.loc 1 1348 13
 2095 00c6 03F02003 		and	r3, r3, #32
ARM GAS  /tmp/cccHQt6E.s 			page 61


 2096              		.loc 1 1348 6
 2097 00ca 002B     		cmp	r3, #0
 2098 00cc 04D0     		beq	.L100
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 2099              		.loc 1 1350 19
 2100 00ce 7B68     		ldr	r3, [r7, #4]
 2101 00d0 0522     		movs	r2, #5
 2102 00d2 83F86120 		strb	r2, [r3, #97]
 2103 00d6 07E0     		b	.L101
 2104              	.L100:
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no transfer is on-going */
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 2105              		.loc 1 1356 5
 2106 00d8 7B68     		ldr	r3, [r7, #4]
 2107 00da 1B68     		ldr	r3, [r3]
 2108 00dc 1A68     		ldr	r2, [r3]
 2109 00de 7B68     		ldr	r3, [r7, #4]
 2110 00e0 1B68     		ldr	r3, [r3]
 2111 00e2 22F00202 		bic	r2, r2, #2
 2112 00e6 1A60     		str	r2, [r3]
 2113              	.L101:
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 2114              		.loc 1 1359 10
 2115 00e8 0023     		movs	r3, #0
 2116              	.L94:
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2117              		.loc 1 1360 1
 2118 00ea 1846     		mov	r0, r3
 2119 00ec 1837     		adds	r7, r7, #24
 2120              	.LCFI96:
 2121              		.cfi_def_cfa_offset 8
 2122 00ee BD46     		mov	sp, r7
 2123              	.LCFI97:
 2124              		.cfi_def_cfa_register 13
 2125              		@ sp needed
 2126 00f0 80BD     		pop	{r7, pc}
 2127              		.cfi_endproc
 2128              	.LFE348:
 2130              		.section	.text.HAL_DMA2D_CLUTLoading_Resume,"ax",%progbits
 2131              		.align	1
 2132              		.global	HAL_DMA2D_CLUTLoading_Resume
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu fpv5-d16
 2138              	HAL_DMA2D_CLUTLoading_Resume:
 2139              	.LFB349:
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D CLUT loading.
ARM GAS  /tmp/cccHQt6E.s 			page 62


1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Resume(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2140              		.loc 1 1372 1
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 8
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144              		@ link register save eliminated.
 2145 0000 80B4     		push	{r7}
 2146              	.LCFI98:
 2147              		.cfi_def_cfa_offset 4
 2148              		.cfi_offset 7, -4
 2149 0002 83B0     		sub	sp, sp, #12
 2150              	.LCFI99:
 2151              		.cfi_def_cfa_offset 16
 2152 0004 00AF     		add	r7, sp, #0
 2153              	.LCFI100:
 2154              		.cfi_def_cfa_register 7
 2155 0006 7860     		str	r0, [r7, #4]
 2156 0008 3960     		str	r1, [r7]
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 2157              		.loc 1 1374 6
 2158 000a 3B68     		ldr	r3, [r7]
 2159 000c 002B     		cmp	r3, #0
 2160 000e 12D1     		bne	.L103
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Background CLUT loading suspension check */
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
 2161              		.loc 1 1377 16
 2162 0010 7B68     		ldr	r3, [r7, #4]
 2163 0012 1B68     		ldr	r3, [r3]
 2164              		.loc 1 1377 26
 2165 0014 1B68     		ldr	r3, [r3]
 2166              		.loc 1 1377 31
 2167 0016 03F00203 		and	r3, r3, #2
 2168              		.loc 1 1377 8
 2169 001a 022B     		cmp	r3, #2
 2170 001c 1DD1     		bne	.L104
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 2171              		.loc 1 1379 18
 2172 001e 7B68     		ldr	r3, [r7, #4]
 2173 0020 1B68     		ldr	r3, [r3]
 2174              		.loc 1 1379 28
 2175 0022 5B6A     		ldr	r3, [r3, #36]
 2176              		.loc 1 1379 38
 2177 0024 03F02003 		and	r3, r3, #32
 2178              		.loc 1 1379 10
 2179 0028 202B     		cmp	r3, #32
 2180 002a 16D1     		bne	.L104
ARM GAS  /tmp/cccHQt6E.s 			page 63


1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_BUSY;
 2181              		.loc 1 1382 23
 2182 002c 7B68     		ldr	r3, [r7, #4]
 2183 002e 0222     		movs	r2, #2
 2184 0030 83F86120 		strb	r2, [r3, #97]
 2185 0034 11E0     		b	.L104
 2186              	.L103:
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Foreground CLUT loading suspension check */
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
 2187              		.loc 1 1389 16
 2188 0036 7B68     		ldr	r3, [r7, #4]
 2189 0038 1B68     		ldr	r3, [r3]
 2190              		.loc 1 1389 26
 2191 003a 1B68     		ldr	r3, [r3]
 2192              		.loc 1 1389 31
 2193 003c 03F00203 		and	r3, r3, #2
 2194              		.loc 1 1389 8
 2195 0040 022B     		cmp	r3, #2
 2196 0042 0AD1     		bne	.L104
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 2197              		.loc 1 1391 18
 2198 0044 7B68     		ldr	r3, [r7, #4]
 2199 0046 1B68     		ldr	r3, [r3]
 2200              		.loc 1 1391 28
 2201 0048 DB69     		ldr	r3, [r3, #28]
 2202              		.loc 1 1391 38
 2203 004a 03F02003 		and	r3, r3, #32
 2204              		.loc 1 1391 10
 2205 004e 202B     		cmp	r3, #32
 2206 0050 03D1     		bne	.L104
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_BUSY;
 2207              		.loc 1 1394 23
 2208 0052 7B68     		ldr	r3, [r7, #4]
 2209 0054 0222     		movs	r2, #2
 2210 0056 83F86120 		strb	r2, [r3, #97]
 2211              	.L104:
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the CLUT loading */
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 2212              		.loc 1 1400 3
 2213 005a 7B68     		ldr	r3, [r7, #4]
 2214 005c 1B68     		ldr	r3, [r3]
 2215 005e 1A68     		ldr	r2, [r3]
 2216 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 64


 2217 0062 1B68     		ldr	r3, [r3]
 2218 0064 22F00202 		bic	r2, r2, #2
 2219 0068 1A60     		str	r2, [r3]
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 2220              		.loc 1 1402 10
 2221 006a 0023     		movs	r3, #0
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2222              		.loc 1 1403 1
 2223 006c 1846     		mov	r0, r3
 2224 006e 0C37     		adds	r7, r7, #12
 2225              	.LCFI101:
 2226              		.cfi_def_cfa_offset 4
 2227 0070 BD46     		mov	sp, r7
 2228              	.LCFI102:
 2229              		.cfi_def_cfa_register 13
 2230              		@ sp needed
 2231 0072 5DF8047B 		ldr	r7, [sp], #4
 2232              	.LCFI103:
 2233              		.cfi_restore 7
 2234              		.cfi_def_cfa_offset 0
 2235 0076 7047     		bx	lr
 2236              		.cfi_endproc
 2237              	.LFE349:
 2239              		.section	.text.HAL_DMA2D_PollForTransfer,"ax",%progbits
 2240              		.align	1
 2241              		.global	HAL_DMA2D_PollForTransfer
 2242              		.syntax unified
 2243              		.thumb
 2244              		.thumb_func
 2245              		.fpu fpv5-d16
 2247              	HAL_DMA2D_PollForTransfer:
 2248              	.LFB350:
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Polling for transfer complete or CLUT loading.
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Timeout Timeout duration
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_PollForTransfer(DMA2D_HandleTypeDef *hdma2d, uint32_t Timeout)
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2249              		.loc 1 1415 1
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 24
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253 0000 80B5     		push	{r7, lr}
 2254              	.LCFI104:
 2255              		.cfi_def_cfa_offset 8
 2256              		.cfi_offset 7, -8
 2257              		.cfi_offset 14, -4
 2258 0002 86B0     		sub	sp, sp, #24
 2259              	.LCFI105:
 2260              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cccHQt6E.s 			page 65


 2261 0004 00AF     		add	r7, sp, #0
 2262              	.LCFI106:
 2263              		.cfi_def_cfa_register 7
 2264 0006 7860     		str	r0, [r7, #4]
 2265 0008 3960     		str	r1, [r7]
1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t layer_start;
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __IO uint32_t isrflags = 0x0U;
 2266              		.loc 1 1418 17
 2267 000a 0023     		movs	r3, #0
 2268 000c FB60     		str	r3, [r7, #12]
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for DMA2D transfer */
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 2269              		.loc 1 1421 14
 2270 000e 7B68     		ldr	r3, [r7, #4]
 2271 0010 1B68     		ldr	r3, [r3]
 2272              		.loc 1 1421 24
 2273 0012 1B68     		ldr	r3, [r3]
 2274              		.loc 1 1421 29
 2275 0014 03F00103 		and	r3, r3, #1
 2276              		.loc 1 1421 6
 2277 0018 002B     		cmp	r3, #0
 2278 001a 56D0     		beq	.L107
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Get tick */
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
 2279              		.loc 1 1424 17
 2280 001c FFF7FEFF 		bl	HAL_GetTick
 2281 0020 7861     		str	r0, [r7, #20]
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while (__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == 0U)
 2282              		.loc 1 1426 11
 2283 0022 4BE0     		b	.L108
 2284              	.L114:
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
 2285              		.loc 1 1428 18
 2286 0024 7B68     		ldr	r3, [r7, #4]
 2287 0026 1B68     		ldr	r3, [r3]
 2288 0028 5B68     		ldr	r3, [r3, #4]
 2289              		.loc 1 1428 16
 2290 002a FB60     		str	r3, [r7, #12]
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE | DMA2D_FLAG_TE)) != 0U)
 2291              		.loc 1 1429 21
 2292 002c FB68     		ldr	r3, [r7, #12]
 2293 002e 03F02103 		and	r3, r3, #33
 2294              		.loc 1 1429 10
 2295 0032 002B     		cmp	r3, #0
 2296 0034 23D0     		beq	.L109
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
 2297              		.loc 1 1431 23
 2298 0036 FB68     		ldr	r3, [r7, #12]
 2299 0038 03F02003 		and	r3, r3, #32
 2300              		.loc 1 1431 12
 2301 003c 002B     		cmp	r3, #0
ARM GAS  /tmp/cccHQt6E.s 			page 66


 2302 003e 05D0     		beq	.L110
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 2303              		.loc 1 1433 29
 2304 0040 7B68     		ldr	r3, [r7, #4]
 2305 0042 5B6E     		ldr	r3, [r3, #100]
 2306 0044 43F00202 		orr	r2, r3, #2
 2307 0048 7B68     		ldr	r3, [r7, #4]
 2308 004a 5A66     		str	r2, [r3, #100]
 2309              	.L110:
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
 2310              		.loc 1 1435 23
 2311 004c FB68     		ldr	r3, [r7, #12]
 2312 004e 03F00103 		and	r3, r3, #1
 2313              		.loc 1 1435 12
 2314 0052 002B     		cmp	r3, #0
 2315 0054 05D0     		beq	.L111
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 2316              		.loc 1 1437 29
 2317 0056 7B68     		ldr	r3, [r7, #4]
 2318 0058 5B6E     		ldr	r3, [r3, #100]
 2319 005a 43F00102 		orr	r2, r3, #1
 2320 005e 7B68     		ldr	r3, [r7, #4]
 2321 0060 5A66     		str	r2, [r3, #100]
 2322              	.L111:
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the transfer and configuration error flags */
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 2323              		.loc 1 1440 9
 2324 0062 7B68     		ldr	r3, [r7, #4]
 2325 0064 1B68     		ldr	r3, [r3]
 2326 0066 2122     		movs	r2, #33
 2327 0068 9A60     		str	r2, [r3, #8]
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2328              		.loc 1 1443 23
 2329 006a 7B68     		ldr	r3, [r7, #4]
 2330 006c 0422     		movs	r2, #4
 2331 006e 83F86120 		strb	r2, [r3, #97]
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
 2332              		.loc 1 1446 9
 2333 0072 7B68     		ldr	r3, [r7, #4]
 2334 0074 0022     		movs	r2, #0
 2335 0076 83F86020 		strb	r2, [r3, #96]
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
 2336              		.loc 1 1448 16
 2337 007a 0123     		movs	r3, #1
 2338 007c A5E0     		b	.L112
 2339              	.L109:
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
ARM GAS  /tmp/cccHQt6E.s 			page 67


1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (Timeout != HAL_MAX_DELAY)
 2340              		.loc 1 1451 10
 2341 007e 3B68     		ldr	r3, [r7]
 2342 0080 B3F1FF3F 		cmp	r3, #-1
 2343 0084 1AD0     		beq	.L108
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2344              		.loc 1 1453 15
 2345 0086 FFF7FEFF 		bl	HAL_GetTick
 2346 008a 0246     		mov	r2, r0
 2347              		.loc 1 1453 29
 2348 008c 7B69     		ldr	r3, [r7, #20]
 2349 008e D31A     		subs	r3, r2, r3
 2350              		.loc 1 1453 12
 2351 0090 3A68     		ldr	r2, [r7]
 2352 0092 9A42     		cmp	r2, r3
 2353 0094 02D3     		bcc	.L113
 2354              		.loc 1 1453 53 discriminator 1
 2355 0096 3B68     		ldr	r3, [r7]
 2356 0098 002B     		cmp	r3, #0
 2357 009a 0FD1     		bne	.L108
 2358              	.L113:
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 2359              		.loc 1 1456 29
 2360 009c 7B68     		ldr	r3, [r7, #4]
 2361 009e 5B6E     		ldr	r3, [r3, #100]
 2362 00a0 43F02002 		orr	r2, r3, #32
 2363 00a4 7B68     		ldr	r3, [r7, #4]
 2364 00a6 5A66     		str	r2, [r3, #100]
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 2365              		.loc 1 1459 25
 2366 00a8 7B68     		ldr	r3, [r7, #4]
 2367 00aa 0322     		movs	r2, #3
 2368 00ac 83F86120 		strb	r2, [r3, #97]
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
 2369              		.loc 1 1462 11
 2370 00b0 7B68     		ldr	r3, [r7, #4]
 2371 00b2 0022     		movs	r2, #0
 2372 00b4 83F86020 		strb	r2, [r3, #96]
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
 2373              		.loc 1 1464 18
 2374 00b8 0323     		movs	r3, #3
 2375 00ba 86E0     		b	.L112
 2376              	.L108:
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2377              		.loc 1 1426 12
 2378 00bc 7B68     		ldr	r3, [r7, #4]
 2379 00be 1B68     		ldr	r3, [r3]
 2380 00c0 5B68     		ldr	r3, [r3, #4]
 2381 00c2 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/cccHQt6E.s 			page 68


1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2382              		.loc 1 1426 11
 2383 00c6 002B     		cmp	r3, #0
 2384 00c8 ACD0     		beq	.L114
 2385              	.L107:
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for CLUT loading (foreground or background) */
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start = hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START;
 2386              		.loc 1 1470 23
 2387 00ca 7B68     		ldr	r3, [r7, #4]
 2388 00cc 1B68     		ldr	r3, [r3]
 2389              		.loc 1 1470 33
 2390 00ce DB69     		ldr	r3, [r3, #28]
 2391              		.loc 1 1470 15
 2392 00d0 03F02003 		and	r3, r3, #32
 2393 00d4 3B61     		str	r3, [r7, #16]
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
 2394              		.loc 1 1471 24
 2395 00d6 7B68     		ldr	r3, [r7, #4]
 2396 00d8 1B68     		ldr	r3, [r3]
 2397              		.loc 1 1471 34
 2398 00da 5B6A     		ldr	r3, [r3, #36]
 2399              		.loc 1 1471 44
 2400 00dc 03F02003 		and	r3, r3, #32
 2401              		.loc 1 1471 15
 2402 00e0 3A69     		ldr	r2, [r7, #16]
 2403 00e2 1343     		orrs	r3, r3, r2
 2404 00e4 3B61     		str	r3, [r7, #16]
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (layer_start != 0U)
 2405              		.loc 1 1472 6
 2406 00e6 3B69     		ldr	r3, [r7, #16]
 2407 00e8 002B     		cmp	r3, #0
 2408 00ea 61D0     		beq	.L115
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Get tick */
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
 2409              		.loc 1 1475 17
 2410 00ec FFF7FEFF 		bl	HAL_GetTick
 2411 00f0 7861     		str	r0, [r7, #20]
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while (__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == 0U)
 2412              		.loc 1 1477 11
 2413 00f2 56E0     		b	.L116
 2414              	.L122:
1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
 2415              		.loc 1 1479 18
 2416 00f4 7B68     		ldr	r3, [r7, #4]
 2417 00f6 1B68     		ldr	r3, [r3]
 2418 00f8 5B68     		ldr	r3, [r3, #4]
 2419              		.loc 1 1479 16
 2420 00fa FB60     		str	r3, [r7, #12]
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE)) != 0U)
 2421              		.loc 1 1480 21
ARM GAS  /tmp/cccHQt6E.s 			page 69


 2422 00fc FB68     		ldr	r3, [r7, #12]
 2423 00fe 03F02903 		and	r3, r3, #41
 2424              		.loc 1 1480 10
 2425 0102 002B     		cmp	r3, #0
 2426 0104 2ED0     		beq	.L117
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 2427              		.loc 1 1482 23
 2428 0106 FB68     		ldr	r3, [r7, #12]
 2429 0108 03F00803 		and	r3, r3, #8
 2430              		.loc 1 1482 12
 2431 010c 002B     		cmp	r3, #0
 2432 010e 05D0     		beq	.L118
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 2433              		.loc 1 1484 29
 2434 0110 7B68     		ldr	r3, [r7, #4]
 2435 0112 5B6E     		ldr	r3, [r3, #100]
 2436 0114 43F00402 		orr	r2, r3, #4
 2437 0118 7B68     		ldr	r3, [r7, #4]
 2438 011a 5A66     		str	r2, [r3, #100]
 2439              	.L118:
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
 2440              		.loc 1 1486 23
 2441 011c FB68     		ldr	r3, [r7, #12]
 2442 011e 03F02003 		and	r3, r3, #32
 2443              		.loc 1 1486 12
 2444 0122 002B     		cmp	r3, #0
 2445 0124 05D0     		beq	.L119
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 2446              		.loc 1 1488 29
 2447 0126 7B68     		ldr	r3, [r7, #4]
 2448 0128 5B6E     		ldr	r3, [r3, #100]
 2449 012a 43F00202 		orr	r2, r3, #2
 2450 012e 7B68     		ldr	r3, [r7, #4]
 2451 0130 5A66     		str	r2, [r3, #100]
 2452              	.L119:
1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
 2453              		.loc 1 1490 23
 2454 0132 FB68     		ldr	r3, [r7, #12]
 2455 0134 03F00103 		and	r3, r3, #1
 2456              		.loc 1 1490 12
 2457 0138 002B     		cmp	r3, #0
 2458 013a 05D0     		beq	.L120
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 2459              		.loc 1 1492 29
 2460 013c 7B68     		ldr	r3, [r7, #4]
 2461 013e 5B6E     		ldr	r3, [r3, #100]
 2462 0140 43F00102 		orr	r2, r3, #1
 2463 0144 7B68     		ldr	r3, [r7, #4]
 2464 0146 5A66     		str	r2, [r3, #100]
 2465              	.L120:
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
ARM GAS  /tmp/cccHQt6E.s 			page 70


1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the CLUT Access Error, Configuration Error and Transfer Error flags */
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 2466              		.loc 1 1495 9
 2467 0148 7B68     		ldr	r3, [r7, #4]
 2468 014a 1B68     		ldr	r3, [r3]
 2469 014c 2922     		movs	r2, #41
 2470 014e 9A60     		str	r2, [r3, #8]
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2471              		.loc 1 1498 23
 2472 0150 7B68     		ldr	r3, [r7, #4]
 2473 0152 0422     		movs	r2, #4
 2474 0154 83F86120 		strb	r2, [r3, #97]
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
 2475              		.loc 1 1501 9
 2476 0158 7B68     		ldr	r3, [r7, #4]
 2477 015a 0022     		movs	r2, #0
 2478 015c 83F86020 		strb	r2, [r3, #96]
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
 2479              		.loc 1 1503 16
 2480 0160 0123     		movs	r3, #1
 2481 0162 32E0     		b	.L112
 2482              	.L117:
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (Timeout != HAL_MAX_DELAY)
 2483              		.loc 1 1506 10
 2484 0164 3B68     		ldr	r3, [r7]
 2485 0166 B3F1FF3F 		cmp	r3, #-1
 2486 016a 1AD0     		beq	.L116
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2487              		.loc 1 1508 15
 2488 016c FFF7FEFF 		bl	HAL_GetTick
 2489 0170 0246     		mov	r2, r0
 2490              		.loc 1 1508 29
 2491 0172 7B69     		ldr	r3, [r7, #20]
 2492 0174 D31A     		subs	r3, r2, r3
 2493              		.loc 1 1508 12
 2494 0176 3A68     		ldr	r2, [r7]
 2495 0178 9A42     		cmp	r2, r3
 2496 017a 02D3     		bcc	.L121
 2497              		.loc 1 1508 53 discriminator 1
 2498 017c 3B68     		ldr	r3, [r7]
 2499 017e 002B     		cmp	r3, #0
 2500 0180 0FD1     		bne	.L116
 2501              	.L121:
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 2502              		.loc 1 1511 29
 2503 0182 7B68     		ldr	r3, [r7, #4]
 2504 0184 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/cccHQt6E.s 			page 71


 2505 0186 43F02002 		orr	r2, r3, #32
 2506 018a 7B68     		ldr	r3, [r7, #4]
 2507 018c 5A66     		str	r2, [r3, #100]
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 2508              		.loc 1 1514 25
 2509 018e 7B68     		ldr	r3, [r7, #4]
 2510 0190 0322     		movs	r2, #3
 2511 0192 83F86120 		strb	r2, [r3, #97]
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
 2512              		.loc 1 1517 11
 2513 0196 7B68     		ldr	r3, [r7, #4]
 2514 0198 0022     		movs	r2, #0
 2515 019a 83F86020 		strb	r2, [r3, #96]
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
 2516              		.loc 1 1519 18
 2517 019e 0323     		movs	r3, #3
 2518 01a0 13E0     		b	.L112
 2519              	.L116:
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2520              		.loc 1 1477 12
 2521 01a2 7B68     		ldr	r3, [r7, #4]
 2522 01a4 1B68     		ldr	r3, [r3]
 2523 01a6 5B68     		ldr	r3, [r3, #4]
 2524 01a8 03F01003 		and	r3, r3, #16
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2525              		.loc 1 1477 11
 2526 01ac 002B     		cmp	r3, #0
 2527 01ae A1D0     		beq	.L122
 2528              	.L115:
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear the transfer complete and CLUT loading flags */
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC | DMA2D_FLAG_CTC);
 2529              		.loc 1 1526 3
 2530 01b0 7B68     		ldr	r3, [r7, #4]
 2531 01b2 1B68     		ldr	r3, [r3]
 2532 01b4 1222     		movs	r2, #18
 2533 01b6 9A60     		str	r2, [r3, #8]
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D state */
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 2534              		.loc 1 1529 17
 2535 01b8 7B68     		ldr	r3, [r7, #4]
 2536 01ba 0122     		movs	r2, #1
 2537 01bc 83F86120 		strb	r2, [r3, #97]
1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 2538              		.loc 1 1532 3
ARM GAS  /tmp/cccHQt6E.s 			page 72


 2539 01c0 7B68     		ldr	r3, [r7, #4]
 2540 01c2 0022     		movs	r2, #0
 2541 01c4 83F86020 		strb	r2, [r3, #96]
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 2542              		.loc 1 1534 10
 2543 01c8 0023     		movs	r3, #0
 2544              	.L112:
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2545              		.loc 1 1535 1
 2546 01ca 1846     		mov	r0, r3
 2547 01cc 1837     		adds	r7, r7, #24
 2548              	.LCFI107:
 2549              		.cfi_def_cfa_offset 8
 2550 01ce BD46     		mov	sp, r7
 2551              	.LCFI108:
 2552              		.cfi_def_cfa_register 13
 2553              		@ sp needed
 2554 01d0 80BD     		pop	{r7, pc}
 2555              		.cfi_endproc
 2556              	.LFE350:
 2558              		.section	.text.HAL_DMA2D_IRQHandler,"ax",%progbits
 2559              		.align	1
 2560              		.global	HAL_DMA2D_IRQHandler
 2561              		.syntax unified
 2562              		.thumb
 2563              		.thumb_func
 2564              		.fpu fpv5-d16
 2566              	HAL_DMA2D_IRQHandler:
 2567              	.LFB351:
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Handle DMA2D interrupt request.
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2568              		.loc 1 1543 1
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 16
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572 0000 80B5     		push	{r7, lr}
 2573              	.LCFI109:
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 7, -8
 2576              		.cfi_offset 14, -4
 2577 0002 84B0     		sub	sp, sp, #16
 2578              	.LCFI110:
 2579              		.cfi_def_cfa_offset 24
 2580 0004 00AF     		add	r7, sp, #0
 2581              	.LCFI111:
 2582              		.cfi_def_cfa_register 7
 2583 0006 7860     		str	r0, [r7, #4]
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 2584              		.loc 1 1544 23
 2585 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 73


 2586 000a 1B68     		ldr	r3, [r3]
 2587              		.loc 1 1544 12
 2588 000c 5B68     		ldr	r3, [r3, #4]
 2589 000e FB60     		str	r3, [r7, #12]
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 2590              		.loc 1 1545 22
 2591 0010 7B68     		ldr	r3, [r7, #4]
 2592 0012 1B68     		ldr	r3, [r3]
 2593              		.loc 1 1545 12
 2594 0014 1B68     		ldr	r3, [r3]
 2595 0016 BB60     		str	r3, [r7, #8]
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Error Interrupt management ***************************************/
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TE) != 0U)
 2596              		.loc 1 1548 17
 2597 0018 FB68     		ldr	r3, [r7, #12]
 2598 001a 03F00103 		and	r3, r3, #1
 2599              		.loc 1 1548 6
 2600 001e 002B     		cmp	r3, #0
 2601 0020 26D0     		beq	.L124
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TE) != 0U)
 2602              		.loc 1 1550 18
 2603 0022 BB68     		ldr	r3, [r7, #8]
 2604 0024 03F48073 		and	r3, r3, #256
 2605              		.loc 1 1550 8
 2606 0028 002B     		cmp	r3, #0
 2607 002a 21D0     		beq	.L124
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer Error interrupt */
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 2608              		.loc 1 1553 7
 2609 002c 7B68     		ldr	r3, [r7, #4]
 2610 002e 1B68     		ldr	r3, [r3]
 2611 0030 1A68     		ldr	r2, [r3]
 2612 0032 7B68     		ldr	r3, [r7, #4]
 2613 0034 1B68     		ldr	r3, [r3]
 2614 0036 22F48072 		bic	r2, r2, #256
 2615 003a 1A60     		str	r2, [r3]
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 2616              		.loc 1 1556 25
 2617 003c 7B68     		ldr	r3, [r7, #4]
 2618 003e 5B6E     		ldr	r3, [r3, #100]
 2619 0040 43F00102 		orr	r2, r3, #1
 2620 0044 7B68     		ldr	r3, [r7, #4]
 2621 0046 5A66     		str	r2, [r3, #100]
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer error flag */
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 2622              		.loc 1 1559 7
 2623 0048 7B68     		ldr	r3, [r7, #4]
 2624 004a 1B68     		ldr	r3, [r3]
 2625 004c 0122     		movs	r2, #1
 2626 004e 9A60     		str	r2, [r3, #8]
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/cccHQt6E.s 			page 74


1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2627              		.loc 1 1562 21
 2628 0050 7B68     		ldr	r3, [r7, #4]
 2629 0052 0422     		movs	r2, #4
 2630 0054 83F86120 		strb	r2, [r3, #97]
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 2631              		.loc 1 1565 7
 2632 0058 7B68     		ldr	r3, [r7, #4]
 2633 005a 0022     		movs	r2, #0
 2634 005c 83F86020 		strb	r2, [r3, #96]
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (hdma2d->XferErrorCallback != NULL)
 2635              		.loc 1 1567 17
 2636 0060 7B68     		ldr	r3, [r7, #4]
 2637 0062 5B6A     		ldr	r3, [r3, #36]
 2638              		.loc 1 1567 10
 2639 0064 002B     		cmp	r3, #0
 2640 0066 03D0     		beq	.L124
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
 2641              		.loc 1 1570 15
 2642 0068 7B68     		ldr	r3, [r7, #4]
 2643 006a 5B6A     		ldr	r3, [r3, #36]
 2644              		.loc 1 1570 9
 2645 006c 7868     		ldr	r0, [r7, #4]
 2646 006e 9847     		blx	r3
 2647              	.LVL0:
 2648              	.L124:
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configuration Error Interrupt management **********************************/
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CE) != 0U)
 2649              		.loc 1 1575 17
 2650 0070 FB68     		ldr	r3, [r7, #12]
 2651 0072 03F02003 		and	r3, r3, #32
 2652              		.loc 1 1575 6
 2653 0076 002B     		cmp	r3, #0
 2654 0078 26D0     		beq	.L125
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CE) != 0U)
 2655              		.loc 1 1577 18
 2656 007a BB68     		ldr	r3, [r7, #8]
 2657 007c 03F40053 		and	r3, r3, #8192
 2658              		.loc 1 1577 8
 2659 0080 002B     		cmp	r3, #0
 2660 0082 21D0     		beq	.L125
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the Configuration Error interrupt */
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 2661              		.loc 1 1580 7
 2662 0084 7B68     		ldr	r3, [r7, #4]
 2663 0086 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccHQt6E.s 			page 75


 2664 0088 1A68     		ldr	r2, [r3]
 2665 008a 7B68     		ldr	r3, [r7, #4]
 2666 008c 1B68     		ldr	r3, [r3]
 2667 008e 22F40052 		bic	r2, r2, #8192
 2668 0092 1A60     		str	r2, [r3]
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the Configuration error flag */
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 2669              		.loc 1 1583 7
 2670 0094 7B68     		ldr	r3, [r7, #4]
 2671 0096 1B68     		ldr	r3, [r3]
 2672 0098 2022     		movs	r2, #32
 2673 009a 9A60     		str	r2, [r3, #8]
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 2674              		.loc 1 1586 25
 2675 009c 7B68     		ldr	r3, [r7, #4]
 2676 009e 5B6E     		ldr	r3, [r3, #100]
 2677 00a0 43F00202 		orr	r2, r3, #2
 2678 00a4 7B68     		ldr	r3, [r7, #4]
 2679 00a6 5A66     		str	r2, [r3, #100]
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2680              		.loc 1 1589 21
 2681 00a8 7B68     		ldr	r3, [r7, #4]
 2682 00aa 0422     		movs	r2, #4
 2683 00ac 83F86120 		strb	r2, [r3, #97]
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 2684              		.loc 1 1592 7
 2685 00b0 7B68     		ldr	r3, [r7, #4]
 2686 00b2 0022     		movs	r2, #0
 2687 00b4 83F86020 		strb	r2, [r3, #96]
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (hdma2d->XferErrorCallback != NULL)
 2688              		.loc 1 1594 17
 2689 00b8 7B68     		ldr	r3, [r7, #4]
 2690 00ba 5B6A     		ldr	r3, [r3, #36]
 2691              		.loc 1 1594 10
 2692 00bc 002B     		cmp	r3, #0
 2693 00be 03D0     		beq	.L125
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
 2694              		.loc 1 1597 15
 2695 00c0 7B68     		ldr	r3, [r7, #4]
 2696 00c2 5B6A     		ldr	r3, [r3, #36]
 2697              		.loc 1 1597 9
 2698 00c4 7868     		ldr	r0, [r7, #4]
 2699 00c6 9847     		blx	r3
 2700              	.LVL1:
 2701              	.L125:
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
ARM GAS  /tmp/cccHQt6E.s 			page 76


1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT access Error Interrupt management ***********************************/
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 2702              		.loc 1 1602 17
 2703 00c8 FB68     		ldr	r3, [r7, #12]
 2704 00ca 03F00803 		and	r3, r3, #8
 2705              		.loc 1 1602 6
 2706 00ce 002B     		cmp	r3, #0
 2707 00d0 26D0     		beq	.L126
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CAE) != 0U)
 2708              		.loc 1 1604 18
 2709 00d2 BB68     		ldr	r3, [r7, #8]
 2710 00d4 03F40063 		and	r3, r3, #2048
 2711              		.loc 1 1604 8
 2712 00d8 002B     		cmp	r3, #0
 2713 00da 21D0     		beq	.L126
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT access error interrupt */
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 2714              		.loc 1 1607 7
 2715 00dc 7B68     		ldr	r3, [r7, #4]
 2716 00de 1B68     		ldr	r3, [r3]
 2717 00e0 1A68     		ldr	r2, [r3]
 2718 00e2 7B68     		ldr	r3, [r7, #4]
 2719 00e4 1B68     		ldr	r3, [r3]
 2720 00e6 22F40062 		bic	r2, r2, #2048
 2721 00ea 1A60     		str	r2, [r3]
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT access error flag */
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 2722              		.loc 1 1610 7
 2723 00ec 7B68     		ldr	r3, [r7, #4]
 2724 00ee 1B68     		ldr	r3, [r3]
 2725 00f0 0822     		movs	r2, #8
 2726 00f2 9A60     		str	r2, [r3, #8]
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 2727              		.loc 1 1613 25
 2728 00f4 7B68     		ldr	r3, [r7, #4]
 2729 00f6 5B6E     		ldr	r3, [r3, #100]
 2730 00f8 43F00402 		orr	r2, r3, #4
 2731 00fc 7B68     		ldr	r3, [r7, #4]
 2732 00fe 5A66     		str	r2, [r3, #100]
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2733              		.loc 1 1616 21
 2734 0100 7B68     		ldr	r3, [r7, #4]
 2735 0102 0422     		movs	r2, #4
 2736 0104 83F86120 		strb	r2, [r3, #97]
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 2737              		.loc 1 1619 7
 2738 0108 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 77


 2739 010a 0022     		movs	r2, #0
 2740 010c 83F86020 		strb	r2, [r3, #96]
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (hdma2d->XferErrorCallback != NULL)
 2741              		.loc 1 1621 17
 2742 0110 7B68     		ldr	r3, [r7, #4]
 2743 0112 5B6A     		ldr	r3, [r3, #36]
 2744              		.loc 1 1621 10
 2745 0114 002B     		cmp	r3, #0
 2746 0116 03D0     		beq	.L126
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
 2747              		.loc 1 1624 15
 2748 0118 7B68     		ldr	r3, [r7, #4]
 2749 011a 5B6A     		ldr	r3, [r3, #36]
 2750              		.loc 1 1624 9
 2751 011c 7868     		ldr	r0, [r7, #4]
 2752 011e 9847     		blx	r3
 2753              	.LVL2:
 2754              	.L126:
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer watermark Interrupt management **********************************/
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TW) != 0U)
 2755              		.loc 1 1629 17
 2756 0120 FB68     		ldr	r3, [r7, #12]
 2757 0122 03F00403 		and	r3, r3, #4
 2758              		.loc 1 1629 6
 2759 0126 002B     		cmp	r3, #0
 2760 0128 13D0     		beq	.L127
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TW) != 0U)
 2761              		.loc 1 1631 18
 2762 012a BB68     		ldr	r3, [r7, #8]
 2763 012c 03F48063 		and	r3, r3, #1024
 2764              		.loc 1 1631 8
 2765 0130 002B     		cmp	r3, #0
 2766 0132 0ED0     		beq	.L127
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer watermark interrupt */
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 2767              		.loc 1 1634 7
 2768 0134 7B68     		ldr	r3, [r7, #4]
 2769 0136 1B68     		ldr	r3, [r3]
 2770 0138 1A68     		ldr	r2, [r3]
 2771 013a 7B68     		ldr	r3, [r7, #4]
 2772 013c 1B68     		ldr	r3, [r3]
 2773 013e 22F48062 		bic	r2, r2, #1024
 2774 0142 1A60     		str	r2, [r3]
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer watermark flag */
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 2775              		.loc 1 1637 7
 2776 0144 7B68     		ldr	r3, [r7, #4]
 2777 0146 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccHQt6E.s 			page 78


 2778 0148 0422     		movs	r2, #4
 2779 014a 9A60     		str	r2, [r3, #8]
1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Transfer watermark Callback */
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback(hdma2d);
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_LineEventCallback(hdma2d);
 2780              		.loc 1 1643 7
 2781 014c 7868     		ldr	r0, [r7, #4]
 2782 014e FFF7FEFF 		bl	HAL_DMA2D_LineEventCallback
 2783              	.L127:
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Complete Interrupt management ************************************/
1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TC) != 0U)
 2784              		.loc 1 1649 17
 2785 0152 FB68     		ldr	r3, [r7, #12]
 2786 0154 03F00203 		and	r3, r3, #2
 2787              		.loc 1 1649 6
 2788 0158 002B     		cmp	r3, #0
 2789 015a 24D0     		beq	.L128
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TC) != 0U)
 2790              		.loc 1 1651 18
 2791 015c BB68     		ldr	r3, [r7, #8]
 2792 015e 03F40073 		and	r3, r3, #512
 2793              		.loc 1 1651 8
 2794 0162 002B     		cmp	r3, #0
 2795 0164 1FD0     		beq	.L128
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer complete interrupt */
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 2796              		.loc 1 1654 7
 2797 0166 7B68     		ldr	r3, [r7, #4]
 2798 0168 1B68     		ldr	r3, [r3]
 2799 016a 1A68     		ldr	r2, [r3]
 2800 016c 7B68     		ldr	r3, [r7, #4]
 2801 016e 1B68     		ldr	r3, [r3]
 2802 0170 22F40072 		bic	r2, r2, #512
 2803 0174 1A60     		str	r2, [r3]
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer complete flag */
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 2804              		.loc 1 1657 7
 2805 0176 7B68     		ldr	r3, [r7, #4]
 2806 0178 1B68     		ldr	r3, [r3]
 2807 017a 0222     		movs	r2, #2
 2808 017c 9A60     		str	r2, [r3, #8]
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 2809              		.loc 1 1660 25
 2810 017e 7B68     		ldr	r3, [r7, #4]
 2811 0180 5A6E     		ldr	r2, [r3, #100]
ARM GAS  /tmp/cccHQt6E.s 			page 79


 2812 0182 7B68     		ldr	r3, [r7, #4]
 2813 0184 5A66     		str	r2, [r3, #100]
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
 2814              		.loc 1 1663 21
 2815 0186 7B68     		ldr	r3, [r7, #4]
 2816 0188 0122     		movs	r2, #1
 2817 018a 83F86120 		strb	r2, [r3, #97]
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 2818              		.loc 1 1666 7
 2819 018e 7B68     		ldr	r3, [r7, #4]
 2820 0190 0022     		movs	r2, #0
 2821 0192 83F86020 		strb	r2, [r3, #96]
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (hdma2d->XferCpltCallback != NULL)
 2822              		.loc 1 1668 17
 2823 0196 7B68     		ldr	r3, [r7, #4]
 2824 0198 1B6A     		ldr	r3, [r3, #32]
 2825              		.loc 1 1668 10
 2826 019a 002B     		cmp	r3, #0
 2827 019c 03D0     		beq	.L128
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer complete Callback */
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback(hdma2d);
 2828              		.loc 1 1671 15
 2829 019e 7B68     		ldr	r3, [r7, #4]
 2830 01a0 1B6A     		ldr	r3, [r3, #32]
 2831              		.loc 1 1671 9
 2832 01a2 7868     		ldr	r0, [r7, #4]
 2833 01a4 9847     		blx	r3
 2834              	.LVL3:
 2835              	.L128:
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT Transfer Complete Interrupt management ******************************/
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 2836              		.loc 1 1676 17
 2837 01a6 FB68     		ldr	r3, [r7, #12]
 2838 01a8 03F01003 		and	r3, r3, #16
 2839              		.loc 1 1676 6
 2840 01ac 002B     		cmp	r3, #0
 2841 01ae 1FD0     		beq	.L130
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CTC) != 0U)
 2842              		.loc 1 1678 18
 2843 01b0 BB68     		ldr	r3, [r7, #8]
 2844 01b2 03F48053 		and	r3, r3, #4096
 2845              		.loc 1 1678 8
 2846 01b6 002B     		cmp	r3, #0
 2847 01b8 1AD0     		beq	.L130
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT transfer complete interrupt */
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
ARM GAS  /tmp/cccHQt6E.s 			page 80


 2848              		.loc 1 1681 7
 2849 01ba 7B68     		ldr	r3, [r7, #4]
 2850 01bc 1B68     		ldr	r3, [r3]
 2851 01be 1A68     		ldr	r2, [r3]
 2852 01c0 7B68     		ldr	r3, [r7, #4]
 2853 01c2 1B68     		ldr	r3, [r3]
 2854 01c4 22F48052 		bic	r2, r2, #4096
 2855 01c8 1A60     		str	r2, [r3]
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT transfer complete flag */
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 2856              		.loc 1 1684 7
 2857 01ca 7B68     		ldr	r3, [r7, #4]
 2858 01cc 1B68     		ldr	r3, [r3]
 2859 01ce 1022     		movs	r2, #16
 2860 01d0 9A60     		str	r2, [r3, #8]
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 2861              		.loc 1 1687 25
 2862 01d2 7B68     		ldr	r3, [r7, #4]
 2863 01d4 5A6E     		ldr	r2, [r3, #100]
 2864 01d6 7B68     		ldr	r3, [r7, #4]
 2865 01d8 5A66     		str	r2, [r3, #100]
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
 2866              		.loc 1 1690 21
 2867 01da 7B68     		ldr	r3, [r7, #4]
 2868 01dc 0122     		movs	r2, #1
 2869 01de 83F86120 		strb	r2, [r3, #97]
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 2870              		.loc 1 1693 7
 2871 01e2 7B68     		ldr	r3, [r7, #4]
 2872 01e4 0022     		movs	r2, #0
 2873 01e6 83F86020 		strb	r2, [r3, #96]
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* CLUT Transfer complete Callback */
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback(hdma2d);
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 2874              		.loc 1 1699 7
 2875 01ea 7868     		ldr	r0, [r7, #4]
 2876 01ec FFF7FEFF 		bl	HAL_DMA2D_CLUTLoadingCpltCallback
 2877              	.L130:
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2878              		.loc 1 1704 1
 2879 01f0 00BF     		nop
 2880 01f2 1037     		adds	r7, r7, #16
 2881              	.LCFI112:
ARM GAS  /tmp/cccHQt6E.s 			page 81


 2882              		.cfi_def_cfa_offset 8
 2883 01f4 BD46     		mov	sp, r7
 2884              	.LCFI113:
 2885              		.cfi_def_cfa_register 13
 2886              		@ sp needed
 2887 01f6 80BD     		pop	{r7, pc}
 2888              		.cfi_endproc
 2889              	.LFE351:
 2891              		.section	.text.HAL_DMA2D_LineEventCallback,"ax",%progbits
 2892              		.align	1
 2893              		.weak	HAL_DMA2D_LineEventCallback
 2894              		.syntax unified
 2895              		.thumb
 2896              		.thumb_func
 2897              		.fpu fpv5-d16
 2899              	HAL_DMA2D_LineEventCallback:
 2900              	.LFB352:
1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Transfer watermark callback.
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2901              		.loc 1 1713 1
 2902              		.cfi_startproc
 2903              		@ args = 0, pretend = 0, frame = 8
 2904              		@ frame_needed = 1, uses_anonymous_args = 0
 2905              		@ link register save eliminated.
 2906 0000 80B4     		push	{r7}
 2907              	.LCFI114:
 2908              		.cfi_def_cfa_offset 4
 2909              		.cfi_offset 7, -4
 2910 0002 83B0     		sub	sp, sp, #12
 2911              	.LCFI115:
 2912              		.cfi_def_cfa_offset 16
 2913 0004 00AF     		add	r7, sp, #0
 2914              	.LCFI116:
 2915              		.cfi_def_cfa_register 7
 2916 0006 7860     		str	r0, [r7, #4]
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_LineEventCallback can be implemented in the user file.
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2917              		.loc 1 1720 1
 2918 0008 00BF     		nop
 2919 000a 0C37     		adds	r7, r7, #12
 2920              	.LCFI117:
 2921              		.cfi_def_cfa_offset 4
 2922 000c BD46     		mov	sp, r7
 2923              	.LCFI118:
 2924              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cccHQt6E.s 			page 82


 2925              		@ sp needed
 2926 000e 5DF8047B 		ldr	r7, [sp], #4
 2927              	.LCFI119:
 2928              		.cfi_restore 7
 2929              		.cfi_def_cfa_offset 0
 2930 0012 7047     		bx	lr
 2931              		.cfi_endproc
 2932              	.LFE352:
 2934              		.section	.text.HAL_DMA2D_CLUTLoadingCpltCallback,"ax",%progbits
 2935              		.align	1
 2936              		.weak	HAL_DMA2D_CLUTLoadingCpltCallback
 2937              		.syntax unified
 2938              		.thumb
 2939              		.thumb_func
 2940              		.fpu fpv5-d16
 2942              	HAL_DMA2D_CLUTLoadingCpltCallback:
 2943              	.LFB353:
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  CLUT Transfer Complete callback.
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2944              		.loc 1 1729 1
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 8
 2947              		@ frame_needed = 1, uses_anonymous_args = 0
 2948              		@ link register save eliminated.
 2949 0000 80B4     		push	{r7}
 2950              	.LCFI120:
 2951              		.cfi_def_cfa_offset 4
 2952              		.cfi_offset 7, -4
 2953 0002 83B0     		sub	sp, sp, #12
 2954              	.LCFI121:
 2955              		.cfi_def_cfa_offset 16
 2956 0004 00AF     		add	r7, sp, #0
 2957              	.LCFI122:
 2958              		.cfi_def_cfa_register 7
 2959 0006 7860     		str	r0, [r7, #4]
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2960              		.loc 1 1736 1
 2961 0008 00BF     		nop
 2962 000a 0C37     		adds	r7, r7, #12
 2963              	.LCFI123:
 2964              		.cfi_def_cfa_offset 4
 2965 000c BD46     		mov	sp, r7
 2966              	.LCFI124:
 2967              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cccHQt6E.s 			page 83


 2968              		@ sp needed
 2969 000e 5DF8047B 		ldr	r7, [sp], #4
 2970              	.LCFI125:
 2971              		.cfi_restore 7
 2972              		.cfi_def_cfa_offset 0
 2973 0012 7047     		bx	lr
 2974              		.cfi_endproc
 2975              	.LFE353:
 2977              		.section	.text.HAL_DMA2D_ConfigLayer,"ax",%progbits
 2978              		.align	1
 2979              		.global	HAL_DMA2D_ConfigLayer
 2980              		.syntax unified
 2981              		.thumb
 2982              		.thumb_func
 2983              		.fpu fpv5-d16
 2985              	HAL_DMA2D_ConfigLayer:
 2986              	.LFB354:
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group3 Peripheral Control functions
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *  @brief    Peripheral Control functions
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                     ##### Peripheral Control functions #####
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D foreground or background layer parameters.
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D CLUT transfer.
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the line watermark
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the dead time value.
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable or disable the dead time value functionality.
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D Layer according to the specified
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_HandleTypeDef.
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 2987              		.loc 1 1772 1
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 24
 2990              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cccHQt6E.s 			page 84


 2991              		@ link register save eliminated.
 2992 0000 80B4     		push	{r7}
 2993              	.LCFI126:
 2994              		.cfi_def_cfa_offset 4
 2995              		.cfi_offset 7, -4
 2996 0002 87B0     		sub	sp, sp, #28
 2997              	.LCFI127:
 2998              		.cfi_def_cfa_offset 32
 2999 0004 00AF     		add	r7, sp, #0
 3000              	.LCFI128:
 3001              		.cfi_def_cfa_register 7
 3002 0006 7860     		str	r0, [r7, #4]
 3003 0008 3960     		str	r1, [r7]
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t regMask;
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t regValue;
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode != DMA2D_R2M)
 3004              		.loc 1 1780 19
 3005 000a 7B68     		ldr	r3, [r7, #4]
 3006 000c 5B68     		ldr	r3, [r3, #4]
 3007              		.loc 1 1780 6
 3008 000e B3F5403F 		cmp	r3, #196608
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_INPUT_COLOR_MODE(hdma2d->LayerCfg[LayerIdx].InputColorMode));
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (hdma2d->Init.Mode != DMA2D_M2M)
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_I
 3009              		.loc 1 1791 6
 3010 0012 3B68     		ldr	r3, [r7]
 3011 0014 012B     		cmp	r3, #1
 3012 0016 04D1     		bne	.L135
 3013              		.loc 1 1791 74 discriminator 1
 3014 0018 3A68     		ldr	r2, [r7]
 3015 001a 1346     		mov	r3, r2
 3016 001c DB00     		lsls	r3, r3, #3
 3017 001e 9B1A     		subs	r3, r3, r2
 3018 0020 9B00     		lsls	r3, r3, #2
 3019              	.L135:
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3020              		.loc 1 1797 3
 3021 0022 7B68     		ldr	r3, [r7, #4]
 3022 0024 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
ARM GAS  /tmp/cccHQt6E.s 			page 85


 3023 0028 012B     		cmp	r3, #1
 3024 002a 01D1     		bne	.L136
 3025              		.loc 1 1797 3 is_stmt 0 discriminator 1
 3026 002c 0223     		movs	r3, #2
 3027 002e 92E0     		b	.L137
 3028              	.L136:
 3029              		.loc 1 1797 3 discriminator 2
 3030 0030 7B68     		ldr	r3, [r7, #4]
 3031 0032 0122     		movs	r2, #1
 3032 0034 83F86020 		strb	r2, [r3, #96]
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3033              		.loc 1 1800 17 is_stmt 1 discriminator 2
 3034 0038 7B68     		ldr	r3, [r7, #4]
 3035 003a 0222     		movs	r2, #2
 3036 003c 83F86120 		strb	r2, [r3, #97]
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 3037              		.loc 1 1802 13 discriminator 2
 3038 0040 3A68     		ldr	r2, [r7]
 3039 0042 1346     		mov	r3, r2
 3040 0044 DB00     		lsls	r3, r3, #3
 3041 0046 9B1A     		subs	r3, r3, r2
 3042 0048 9B00     		lsls	r3, r3, #2
 3043 004a 2833     		adds	r3, r3, #40
 3044 004c 7A68     		ldr	r2, [r7, #4]
 3045 004e 1344     		add	r3, r3, r2
 3046 0050 FB60     		str	r3, [r7, #12]
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 3047              		.loc 1 1805 23 discriminator 2
 3048 0052 FB68     		ldr	r3, [r7, #12]
 3049 0054 5A68     		ldr	r2, [r3, #4]
 3050              		.loc 1 1805 52 discriminator 2
 3051 0056 FB68     		ldr	r3, [r7, #12]
 3052 0058 9B68     		ldr	r3, [r3, #8]
 3053              		.loc 1 1805 64 discriminator 2
 3054 005a 1B04     		lsls	r3, r3, #16
 3055              		.loc 1 1805 40 discriminator 2
 3056 005c 1A43     		orrs	r2, r2, r3
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 3057              		.loc 1 1806 24 discriminator 2
 3058 005e FB68     		ldr	r3, [r7, #12]
 3059 0060 1B69     		ldr	r3, [r3, #16]
 3060              		.loc 1 1806 40 discriminator 2
 3061 0062 1B05     		lsls	r3, r3, #20
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 3062              		.loc 1 1805 89 discriminator 2
 3063 0064 1A43     		orrs	r2, r2, r3
 3064              		.loc 1 1806 77 discriminator 2
 3065 0066 FB68     		ldr	r3, [r7, #12]
 3066 0068 5B69     		ldr	r3, [r3, #20]
 3067              		.loc 1 1806 91 discriminator 2
 3068 006a 5B05     		lsls	r3, r3, #21
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
ARM GAS  /tmp/cccHQt6E.s 			page 86


 3069              		.loc 1 1805 12 discriminator 2
 3070 006c 1343     		orrs	r3, r3, r2
 3071 006e 3B61     		str	r3, [r7, #16]
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
 3072              		.loc 1 1807 12 discriminator 2
 3073 0070 3C4B     		ldr	r3, .L146
 3074 0072 7B61     		str	r3, [r7, #20]
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8
 3075              		.loc 1 1810 17 discriminator 2
 3076 0074 FB68     		ldr	r3, [r7, #12]
 3077 0076 5B68     		ldr	r3, [r3, #4]
 3078              		.loc 1 1810 6 discriminator 2
 3079 0078 0A2B     		cmp	r3, #10
 3080 007a 03D0     		beq	.L138
 3081              		.loc 1 1810 66 discriminator 1
 3082 007c FB68     		ldr	r3, [r7, #12]
 3083 007e 5B68     		ldr	r3, [r3, #4]
 3084              		.loc 1 1810 53 discriminator 1
 3085 0080 092B     		cmp	r3, #9
 3086 0082 07D1     		bne	.L139
 3087              	.L138:
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 3088              		.loc 1 1812 27
 3089 0084 FB68     		ldr	r3, [r7, #12]
 3090 0086 DB68     		ldr	r3, [r3, #12]
 3091              		.loc 1 1812 40
 3092 0088 03F07F43 		and	r3, r3, #-16777216
 3093              		.loc 1 1812 14
 3094 008c 3A69     		ldr	r2, [r7, #16]
 3095 008e 1343     		orrs	r3, r3, r2
 3096 0090 3B61     		str	r3, [r7, #16]
 3097 0092 05E0     		b	.L140
 3098              	.L139:
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 3099              		.loc 1 1816 27
 3100 0094 FB68     		ldr	r3, [r7, #12]
 3101 0096 DB68     		ldr	r3, [r3, #12]
 3102              		.loc 1 1816 40
 3103 0098 1B06     		lsls	r3, r3, #24
 3104              		.loc 1 1816 14
 3105 009a 3A69     		ldr	r2, [r7, #16]
 3106 009c 1343     		orrs	r3, r3, r2
 3107 009e 3B61     		str	r3, [r7, #16]
 3108              	.L140:
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the background DMA2D layer */
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 3109              		.loc 1 1820 6
 3110 00a0 3B68     		ldr	r3, [r7]
 3111 00a2 002B     		cmp	r3, #0
ARM GAS  /tmp/cccHQt6E.s 			page 87


 3112 00a4 20D1     		bne	.L141
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write DMA2D BGPFCCR register */
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 3113              		.loc 1 1823 5
 3114 00a6 7B68     		ldr	r3, [r7, #4]
 3115 00a8 1B68     		ldr	r3, [r3]
 3116 00aa 5A6A     		ldr	r2, [r3, #36]
 3117 00ac 7B69     		ldr	r3, [r7, #20]
 3118 00ae DB43     		mvns	r3, r3
 3119 00b0 02EA0301 		and	r1, r2, r3
 3120 00b4 7B68     		ldr	r3, [r7, #4]
 3121 00b6 1B68     		ldr	r3, [r3]
 3122 00b8 3A69     		ldr	r2, [r7, #16]
 3123 00ba 0A43     		orrs	r2, r2, r1
 3124 00bc 5A62     		str	r2, [r3, #36]
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGOR register configuration -------------------------------------*/
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 3125              		.loc 1 1826 5
 3126 00be 7B68     		ldr	r3, [r7, #4]
 3127 00c0 1B68     		ldr	r3, [r3]
 3128 00c2 FA68     		ldr	r2, [r7, #12]
 3129 00c4 1268     		ldr	r2, [r2]
 3130 00c6 9A61     		str	r2, [r3, #24]
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGCOLR register configuration -------------------------------------*/
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
 3131              		.loc 1 1829 19
 3132 00c8 FB68     		ldr	r3, [r7, #12]
 3133 00ca 5B68     		ldr	r3, [r3, #4]
 3134              		.loc 1 1829 8
 3135 00cc 0A2B     		cmp	r3, #10
 3136 00ce 03D0     		beq	.L142
 3137              		.loc 1 1829 68 discriminator 1
 3138 00d0 FB68     		ldr	r3, [r7, #12]
 3139 00d2 5B68     		ldr	r3, [r3, #4]
 3140              		.loc 1 1829 55 discriminator 1
 3141 00d4 092B     		cmp	r3, #9
 3142 00d6 35D1     		bne	.L143
 3143              	.L142:
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR
 3144              		.loc 1 1831 7
 3145 00d8 FB68     		ldr	r3, [r7, #12]
 3146 00da DA68     		ldr	r2, [r3, #12]
 3147 00dc 7B68     		ldr	r3, [r7, #4]
 3148 00de 1B68     		ldr	r3, [r3]
 3149 00e0 22F07F42 		bic	r2, r2, #-16777216
 3150 00e4 9A62     		str	r2, [r3, #40]
 3151 00e6 2DE0     		b	.L143
 3152              	.L141:
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                                                    DMA2D_BGCOLR_RED));
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the foreground DMA2D layer */
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
ARM GAS  /tmp/cccHQt6E.s 			page 88


1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
 3153              		.loc 1 1839 18
 3154 00e8 FB68     		ldr	r3, [r7, #12]
 3155 00ea 5B68     		ldr	r3, [r3, #4]
 3156              		.loc 1 1839 8
 3157 00ec 0B2B     		cmp	r3, #11
 3158 00ee 09D1     		bne	.L144
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
 3159              		.loc 1 1841 29
 3160 00f0 FB68     		ldr	r3, [r7, #12]
 3161 00f2 9B69     		ldr	r3, [r3, #24]
 3162              		.loc 1 1841 49
 3163 00f4 9B04     		lsls	r3, r3, #18
 3164              		.loc 1 1841 16
 3165 00f6 3A69     		ldr	r2, [r7, #16]
 3166 00f8 1343     		orrs	r3, r3, r2
 3167 00fa 3B61     		str	r3, [r7, #16]
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regMask  |= DMA2D_FGPFCCR_CSS;
 3168              		.loc 1 1842 16
 3169 00fc 7B69     		ldr	r3, [r7, #20]
 3170 00fe 43F44023 		orr	r3, r3, #786432
 3171 0102 7B61     		str	r3, [r7, #20]
 3172              	.L144:
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write DMA2D FGPFCCR register */
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 3173              		.loc 1 1846 5
 3174 0104 7B68     		ldr	r3, [r7, #4]
 3175 0106 1B68     		ldr	r3, [r3]
 3176 0108 DA69     		ldr	r2, [r3, #28]
 3177 010a 7B69     		ldr	r3, [r7, #20]
 3178 010c DB43     		mvns	r3, r3
 3179 010e 02EA0301 		and	r1, r2, r3
 3180 0112 7B68     		ldr	r3, [r7, #4]
 3181 0114 1B68     		ldr	r3, [r3]
 3182 0116 3A69     		ldr	r2, [r7, #16]
 3183 0118 0A43     		orrs	r2, r2, r1
 3184 011a DA61     		str	r2, [r3, #28]
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGOR register configuration -------------------------------------*/
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 3185              		.loc 1 1849 5
 3186 011c 7B68     		ldr	r3, [r7, #4]
 3187 011e 1B68     		ldr	r3, [r3]
 3188 0120 FA68     		ldr	r2, [r7, #12]
 3189 0122 1268     		ldr	r2, [r2]
 3190 0124 1A61     		str	r2, [r3, #16]
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGCOLR register configuration -------------------------------------*/
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
 3191              		.loc 1 1852 19
 3192 0126 FB68     		ldr	r3, [r7, #12]
 3193 0128 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 89


 3194              		.loc 1 1852 8
 3195 012a 0A2B     		cmp	r3, #10
 3196 012c 03D0     		beq	.L145
 3197              		.loc 1 1852 68 discriminator 1
 3198 012e FB68     		ldr	r3, [r7, #12]
 3199 0130 5B68     		ldr	r3, [r3, #4]
 3200              		.loc 1 1852 55 discriminator 1
 3201 0132 092B     		cmp	r3, #9
 3202 0134 06D1     		bne	.L143
 3203              	.L145:
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR
 3204              		.loc 1 1854 7
 3205 0136 FB68     		ldr	r3, [r7, #12]
 3206 0138 DA68     		ldr	r2, [r3, #12]
 3207 013a 7B68     		ldr	r3, [r7, #4]
 3208 013c 1B68     		ldr	r3, [r3]
 3209 013e 22F07F42 		bic	r2, r2, #-16777216
 3210 0142 1A62     		str	r2, [r3, #32]
 3211              	.L143:
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                                                                    DMA2D_FGCOLR_RED));
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3212              		.loc 1 1859 17
 3213 0144 7B68     		ldr	r3, [r7, #4]
 3214 0146 0122     		movs	r2, #1
 3215 0148 83F86120 		strb	r2, [r3, #97]
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3216              		.loc 1 1862 3
 3217 014c 7B68     		ldr	r3, [r7, #4]
 3218 014e 0022     		movs	r2, #0
 3219 0150 83F86020 		strb	r2, [r3, #96]
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 3220              		.loc 1 1864 10
 3221 0154 0023     		movs	r3, #0
 3222              	.L137:
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3223              		.loc 1 1865 1
 3224 0156 1846     		mov	r0, r3
 3225 0158 1C37     		adds	r7, r7, #28
 3226              	.LCFI129:
 3227              		.cfi_def_cfa_offset 4
 3228 015a BD46     		mov	sp, r7
 3229              	.LCFI130:
 3230              		.cfi_def_cfa_register 13
 3231              		@ sp needed
 3232 015c 5DF8047B 		ldr	r7, [sp], #4
 3233              	.LCFI131:
 3234              		.cfi_restore 7
 3235              		.cfi_def_cfa_offset 0
 3236 0160 7047     		bx	lr
 3237              	.L147:
ARM GAS  /tmp/cccHQt6E.s 			page 90


 3238 0162 00BF     		.align	2
 3239              	.L146:
 3240 0164 0F0033FF 		.word	-13434865
 3241              		.cfi_endproc
 3242              	.LFE354:
 3244              		.section	.text.HAL_DMA2D_ConfigCLUT,"ax",%progbits
 3245              		.align	1
 3246              		.global	HAL_DMA2D_ConfigCLUT
 3247              		.syntax unified
 3248              		.thumb
 3249              		.thumb_func
 3250              		.fpu fpv5-d16
 3252              	HAL_DMA2D_ConfigCLUT:
 3253              	.LFB355:
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D CLUT Transfer.
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is invited
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      to resort to HAL_DMA2D_CLUTStartLoad() instead to benefit from code compactness,
1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      code size and improved heap usage.
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigCLUT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, u
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3254              		.loc 1 1882 1
 3255              		.cfi_startproc
 3256              		@ args = 4, pretend = 0, frame = 16
 3257              		@ frame_needed = 1, uses_anonymous_args = 0
 3258              		@ link register save eliminated.
 3259 0000 80B4     		push	{r7}
 3260              	.LCFI132:
 3261              		.cfi_def_cfa_offset 4
 3262              		.cfi_offset 7, -4
 3263 0002 85B0     		sub	sp, sp, #20
 3264              	.LCFI133:
 3265              		.cfi_def_cfa_offset 24
 3266 0004 00AF     		add	r7, sp, #0
 3267              	.LCFI134:
 3268              		.cfi_def_cfa_register 7
 3269 0006 F860     		str	r0, [r7, #12]
 3270 0008 3846     		mov	r0, r7
 3271 000a 80E80E00 		stm	r0, {r1, r2, r3}
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3272              		.loc 1 1889 3
ARM GAS  /tmp/cccHQt6E.s 			page 91


 3273 000e FB68     		ldr	r3, [r7, #12]
 3274 0010 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3275 0014 012B     		cmp	r3, #1
 3276 0016 01D1     		bne	.L149
 3277              		.loc 1 1889 3 is_stmt 0 discriminator 1
 3278 0018 0223     		movs	r3, #2
 3279 001a 38E0     		b	.L150
 3280              	.L149:
 3281              		.loc 1 1889 3 discriminator 2
 3282 001c FB68     		ldr	r3, [r7, #12]
 3283 001e 0122     		movs	r2, #1
 3284 0020 83F86020 		strb	r2, [r3, #96]
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3285              		.loc 1 1892 17 is_stmt 1 discriminator 2
 3286 0024 FB68     		ldr	r3, [r7, #12]
 3287 0026 0222     		movs	r2, #2
 3288 0028 83F86120 		strb	r2, [r3, #97]
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 3289              		.loc 1 1895 6 discriminator 2
 3290 002c BB69     		ldr	r3, [r7, #24]
 3291 002e 002B     		cmp	r3, #0
 3292 0030 12D1     		bne	.L151
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 3293              		.loc 1 1898 5
 3294 0032 3A68     		ldr	r2, [r7]
 3295 0034 FB68     		ldr	r3, [r7, #12]
 3296 0036 1B68     		ldr	r3, [r3]
 3297 0038 1A63     		str	r2, [r3, #48]
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
 3298              		.loc 1 1901 5
 3299 003a FB68     		ldr	r3, [r7, #12]
 3300 003c 1B68     		ldr	r3, [r3]
 3301 003e 5A6A     		ldr	r2, [r3, #36]
 3302 0040 164B     		ldr	r3, .L153
 3303 0042 1340     		ands	r3, r3, r2
 3304 0044 BA68     		ldr	r2, [r7, #8]
 3305 0046 1102     		lsls	r1, r2, #8
 3306 0048 7A68     		ldr	r2, [r7, #4]
 3307 004a 1201     		lsls	r2, r2, #4
 3308 004c 1143     		orrs	r1, r1, r2
 3309 004e FA68     		ldr	r2, [r7, #12]
 3310 0050 1268     		ldr	r2, [r2]
 3311 0052 0B43     		orrs	r3, r3, r1
 3312 0054 5362     		str	r3, [r2, #36]
 3313 0056 11E0     		b	.L152
 3314              	.L151:
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CC
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
ARM GAS  /tmp/cccHQt6E.s 			page 92


1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 3315              		.loc 1 1908 5
 3316 0058 3A68     		ldr	r2, [r7]
 3317 005a FB68     		ldr	r3, [r7, #12]
 3318 005c 1B68     		ldr	r3, [r3]
 3319 005e DA62     		str	r2, [r3, #44]
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
 3320              		.loc 1 1911 5
 3321 0060 FB68     		ldr	r3, [r7, #12]
 3322 0062 1B68     		ldr	r3, [r3]
 3323 0064 DA69     		ldr	r2, [r3, #28]
 3324 0066 0D4B     		ldr	r3, .L153
 3325 0068 1340     		ands	r3, r3, r2
 3326 006a BA68     		ldr	r2, [r7, #8]
 3327 006c 1102     		lsls	r1, r2, #8
 3328 006e 7A68     		ldr	r2, [r7, #4]
 3329 0070 1201     		lsls	r2, r2, #4
 3330 0072 1143     		orrs	r1, r1, r2
 3331 0074 FA68     		ldr	r2, [r7, #12]
 3332 0076 1268     		ldr	r2, [r2]
 3333 0078 0B43     		orrs	r3, r3, r1
 3334 007a D361     		str	r3, [r2, #28]
 3335              	.L152:
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CC
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set the DMA2D state to Ready*/
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3336              		.loc 1 1916 17
 3337 007c FB68     		ldr	r3, [r7, #12]
 3338 007e 0122     		movs	r2, #1
 3339 0080 83F86120 		strb	r2, [r3, #97]
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3340              		.loc 1 1919 3
 3341 0084 FB68     		ldr	r3, [r7, #12]
 3342 0086 0022     		movs	r2, #0
 3343 0088 83F86020 		strb	r2, [r3, #96]
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 3344              		.loc 1 1921 10
 3345 008c 0023     		movs	r3, #0
 3346              	.L150:
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3347              		.loc 1 1922 1
 3348 008e 1846     		mov	r0, r3
 3349 0090 1437     		adds	r7, r7, #20
 3350              	.LCFI135:
 3351              		.cfi_def_cfa_offset 4
 3352 0092 BD46     		mov	sp, r7
 3353              	.LCFI136:
ARM GAS  /tmp/cccHQt6E.s 			page 93


 3354              		.cfi_def_cfa_register 13
 3355              		@ sp needed
 3356 0094 5DF8047B 		ldr	r7, [sp], #4
 3357              	.LCFI137:
 3358              		.cfi_restore 7
 3359              		.cfi_def_cfa_offset 0
 3360 0098 7047     		bx	lr
 3361              	.L154:
 3362 009a 00BF     		.align	2
 3363              	.L153:
 3364 009c EF00FFFF 		.word	-65297
 3365              		.cfi_endproc
 3366              	.LFE355:
 3368              		.section	.text.HAL_DMA2D_ProgramLineEvent,"ax",%progbits
 3369              		.align	1
 3370              		.global	HAL_DMA2D_ProgramLineEvent
 3371              		.syntax unified
 3372              		.thumb
 3373              		.thumb_func
 3374              		.fpu fpv5-d16
 3376              	HAL_DMA2D_ProgramLineEvent:
 3377              	.LFB356:
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the line watermark.
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Line   Line Watermark configuration (maximum 16-bit long value expected).
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   HAL_DMA2D_ProgramLineEvent() API enables the transfer watermark interrupt.
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   The transfer watermark interrupt is disabled once it has occurred.
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ProgramLineEvent(DMA2D_HandleTypeDef *hdma2d, uint32_t Line)
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3378              		.loc 1 1936 1
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 8
 3381              		@ frame_needed = 1, uses_anonymous_args = 0
 3382              		@ link register save eliminated.
 3383 0000 80B4     		push	{r7}
 3384              	.LCFI138:
 3385              		.cfi_def_cfa_offset 4
 3386              		.cfi_offset 7, -4
 3387 0002 83B0     		sub	sp, sp, #12
 3388              	.LCFI139:
 3389              		.cfi_def_cfa_offset 16
 3390 0004 00AF     		add	r7, sp, #0
 3391              	.LCFI140:
 3392              		.cfi_def_cfa_register 7
 3393 0006 7860     		str	r0, [r7, #4]
 3394 0008 3960     		str	r1, [r7]
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (Line > DMA2D_LWR_LW)
 3395              		.loc 1 1938 6
 3396 000a 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cccHQt6E.s 			page 94


 3397 000c B3F5803F 		cmp	r3, #65536
 3398 0010 01D3     		bcc	.L156
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
 3399              		.loc 1 1940 12
 3400 0012 0123     		movs	r3, #1
 3401 0014 23E0     		b	.L157
 3402              	.L156:
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process locked */
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_LOCK(hdma2d);
 3403              		.loc 1 1945 5
 3404 0016 7B68     		ldr	r3, [r7, #4]
 3405 0018 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3406 001c 012B     		cmp	r3, #1
 3407 001e 01D1     		bne	.L158
 3408              		.loc 1 1945 5 is_stmt 0 discriminator 1
 3409 0020 0223     		movs	r3, #2
 3410 0022 1CE0     		b	.L157
 3411              	.L158:
 3412              		.loc 1 1945 5 discriminator 2
 3413 0024 7B68     		ldr	r3, [r7, #4]
 3414 0026 0122     		movs	r2, #1
 3415 0028 83F86020 		strb	r2, [r3, #96]
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Change DMA2D peripheral state */
1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3416              		.loc 1 1948 19 is_stmt 1 discriminator 2
 3417 002c 7B68     		ldr	r3, [r7, #4]
 3418 002e 0222     		movs	r2, #2
 3419 0030 83F86120 		strb	r2, [r3, #97]
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Sets the Line watermark configuration */
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->LWR, Line);
 3420              		.loc 1 1951 5 discriminator 2
 3421 0034 7B68     		ldr	r3, [r7, #4]
 3422 0036 1B68     		ldr	r3, [r3]
 3423 0038 3A68     		ldr	r2, [r7]
 3424 003a 9A64     		str	r2, [r3, #72]
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the Line interrupt */
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TW);
 3425              		.loc 1 1954 5 discriminator 2
 3426 003c 7B68     		ldr	r3, [r7, #4]
 3427 003e 1B68     		ldr	r3, [r3]
 3428 0040 1A68     		ldr	r2, [r3]
 3429 0042 7B68     		ldr	r3, [r7, #4]
 3430 0044 1B68     		ldr	r3, [r3]
 3431 0046 42F48062 		orr	r2, r2, #1024
 3432 004a 1A60     		str	r2, [r3]
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Initialize the DMA2D state*/
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_READY;
 3433              		.loc 1 1957 19 discriminator 2
 3434 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccHQt6E.s 			page 95


 3435 004e 0122     		movs	r2, #1
 3436 0050 83F86120 		strb	r2, [r3, #97]
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process unlocked */
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_UNLOCK(hdma2d);
 3437              		.loc 1 1960 5 discriminator 2
 3438 0054 7B68     		ldr	r3, [r7, #4]
 3439 0056 0022     		movs	r2, #0
 3440 0058 83F86020 		strb	r2, [r3, #96]
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_OK;
 3441              		.loc 1 1962 12 discriminator 2
 3442 005c 0023     		movs	r3, #0
 3443              	.L157:
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3444              		.loc 1 1964 1
 3445 005e 1846     		mov	r0, r3
 3446 0060 0C37     		adds	r7, r7, #12
 3447              	.LCFI141:
 3448              		.cfi_def_cfa_offset 4
 3449 0062 BD46     		mov	sp, r7
 3450              	.LCFI142:
 3451              		.cfi_def_cfa_register 13
 3452              		@ sp needed
 3453 0064 5DF8047B 		ldr	r7, [sp], #4
 3454              	.LCFI143:
 3455              		.cfi_restore 7
 3456              		.cfi_def_cfa_offset 0
 3457 0068 7047     		bx	lr
 3458              		.cfi_endproc
 3459              	.LFE356:
 3461              		.section	.text.HAL_DMA2D_EnableDeadTime,"ax",%progbits
 3462              		.align	1
 3463              		.global	HAL_DMA2D_EnableDeadTime
 3464              		.syntax unified
 3465              		.thumb
 3466              		.thumb_func
 3467              		.fpu fpv5-d16
 3469              	HAL_DMA2D_EnableDeadTime:
 3470              	.LFB357:
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Enable DMA2D dead time feature.
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3471              		.loc 1 1972 1
 3472              		.cfi_startproc
 3473              		@ args = 0, pretend = 0, frame = 8
 3474              		@ frame_needed = 1, uses_anonymous_args = 0
 3475              		@ link register save eliminated.
 3476 0000 80B4     		push	{r7}
 3477              	.LCFI144:
 3478              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cccHQt6E.s 			page 96


 3479              		.cfi_offset 7, -4
 3480 0002 83B0     		sub	sp, sp, #12
 3481              	.LCFI145:
 3482              		.cfi_def_cfa_offset 16
 3483 0004 00AF     		add	r7, sp, #0
 3484              	.LCFI146:
 3485              		.cfi_def_cfa_register 7
 3486 0006 7860     		str	r0, [r7, #4]
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3487              		.loc 1 1974 3
 3488 0008 7B68     		ldr	r3, [r7, #4]
 3489 000a 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3490 000e 012B     		cmp	r3, #1
 3491 0010 01D1     		bne	.L160
 3492              		.loc 1 1974 3 is_stmt 0 discriminator 1
 3493 0012 0223     		movs	r3, #2
 3494 0014 18E0     		b	.L161
 3495              	.L160:
 3496              		.loc 1 1974 3 discriminator 2
 3497 0016 7B68     		ldr	r3, [r7, #4]
 3498 0018 0122     		movs	r2, #1
 3499 001a 83F86020 		strb	r2, [r3, #96]
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3500              		.loc 1 1976 17 is_stmt 1 discriminator 2
 3501 001e 7B68     		ldr	r3, [r7, #4]
 3502 0020 0222     		movs	r2, #2
 3503 0022 83F86120 		strb	r2, [r3, #97]
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR EN bit */
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
 3504              		.loc 1 1979 3 discriminator 2
 3505 0026 7B68     		ldr	r3, [r7, #4]
 3506 0028 1B68     		ldr	r3, [r3]
 3507 002a DA6C     		ldr	r2, [r3, #76]
 3508 002c 7B68     		ldr	r3, [r7, #4]
 3509 002e 1B68     		ldr	r3, [r3]
 3510 0030 42F00102 		orr	r2, r2, #1
 3511 0034 DA64     		str	r2, [r3, #76]
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3512              		.loc 1 1981 17 discriminator 2
 3513 0036 7B68     		ldr	r3, [r7, #4]
 3514 0038 0122     		movs	r2, #1
 3515 003a 83F86120 		strb	r2, [r3, #97]
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3516              		.loc 1 1984 3 discriminator 2
 3517 003e 7B68     		ldr	r3, [r7, #4]
 3518 0040 0022     		movs	r2, #0
 3519 0042 83F86020 		strb	r2, [r3, #96]
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 3520              		.loc 1 1986 10 discriminator 2
 3521 0046 0023     		movs	r3, #0
ARM GAS  /tmp/cccHQt6E.s 			page 97


 3522              	.L161:
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3523              		.loc 1 1987 1
 3524 0048 1846     		mov	r0, r3
 3525 004a 0C37     		adds	r7, r7, #12
 3526              	.LCFI147:
 3527              		.cfi_def_cfa_offset 4
 3528 004c BD46     		mov	sp, r7
 3529              	.LCFI148:
 3530              		.cfi_def_cfa_register 13
 3531              		@ sp needed
 3532 004e 5DF8047B 		ldr	r7, [sp], #4
 3533              	.LCFI149:
 3534              		.cfi_restore 7
 3535              		.cfi_def_cfa_offset 0
 3536 0052 7047     		bx	lr
 3537              		.cfi_endproc
 3538              	.LFE357:
 3540              		.section	.text.HAL_DMA2D_DisableDeadTime,"ax",%progbits
 3541              		.align	1
 3542              		.global	HAL_DMA2D_DisableDeadTime
 3543              		.syntax unified
 3544              		.thumb
 3545              		.thumb_func
 3546              		.fpu fpv5-d16
 3548              	HAL_DMA2D_DisableDeadTime:
 3549              	.LFB358:
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Disable DMA2D dead time feature.
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DisableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3550              		.loc 1 1995 1
 3551              		.cfi_startproc
 3552              		@ args = 0, pretend = 0, frame = 8
 3553              		@ frame_needed = 1, uses_anonymous_args = 0
 3554              		@ link register save eliminated.
 3555 0000 80B4     		push	{r7}
 3556              	.LCFI150:
 3557              		.cfi_def_cfa_offset 4
 3558              		.cfi_offset 7, -4
 3559 0002 83B0     		sub	sp, sp, #12
 3560              	.LCFI151:
 3561              		.cfi_def_cfa_offset 16
 3562 0004 00AF     		add	r7, sp, #0
 3563              	.LCFI152:
 3564              		.cfi_def_cfa_register 7
 3565 0006 7860     		str	r0, [r7, #4]
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3566              		.loc 1 1997 3
 3567 0008 7B68     		ldr	r3, [r7, #4]
 3568 000a 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3569 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/cccHQt6E.s 			page 98


 3570 0010 01D1     		bne	.L163
 3571              		.loc 1 1997 3 is_stmt 0 discriminator 1
 3572 0012 0223     		movs	r3, #2
 3573 0014 18E0     		b	.L164
 3574              	.L163:
 3575              		.loc 1 1997 3 discriminator 2
 3576 0016 7B68     		ldr	r3, [r7, #4]
 3577 0018 0122     		movs	r2, #1
 3578 001a 83F86020 		strb	r2, [r3, #96]
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3579              		.loc 1 1999 17 is_stmt 1 discriminator 2
 3580 001e 7B68     		ldr	r3, [r7, #4]
 3581 0020 0222     		movs	r2, #2
 3582 0022 83F86120 		strb	r2, [r3, #97]
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear DMA2D_AMTCR EN bit */
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
 3583              		.loc 1 2002 3 discriminator 2
 3584 0026 7B68     		ldr	r3, [r7, #4]
 3585 0028 1B68     		ldr	r3, [r3]
 3586 002a DA6C     		ldr	r2, [r3, #76]
 3587 002c 7B68     		ldr	r3, [r7, #4]
 3588 002e 1B68     		ldr	r3, [r3]
 3589 0030 22F00102 		bic	r2, r2, #1
 3590 0034 DA64     		str	r2, [r3, #76]
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3591              		.loc 1 2004 17 discriminator 2
 3592 0036 7B68     		ldr	r3, [r7, #4]
 3593 0038 0122     		movs	r2, #1
 3594 003a 83F86120 		strb	r2, [r3, #97]
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3595              		.loc 1 2007 3 discriminator 2
 3596 003e 7B68     		ldr	r3, [r7, #4]
 3597 0040 0022     		movs	r2, #0
 3598 0042 83F86020 		strb	r2, [r3, #96]
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 3599              		.loc 1 2009 10 discriminator 2
 3600 0046 0023     		movs	r3, #0
 3601              	.L164:
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3602              		.loc 1 2010 1
 3603 0048 1846     		mov	r0, r3
 3604 004a 0C37     		adds	r7, r7, #12
 3605              	.LCFI153:
 3606              		.cfi_def_cfa_offset 4
 3607 004c BD46     		mov	sp, r7
 3608              	.LCFI154:
 3609              		.cfi_def_cfa_register 13
 3610              		@ sp needed
 3611 004e 5DF8047B 		ldr	r7, [sp], #4
 3612              	.LCFI155:
 3613              		.cfi_restore 7
ARM GAS  /tmp/cccHQt6E.s 			page 99


 3614              		.cfi_def_cfa_offset 0
 3615 0052 7047     		bx	lr
 3616              		.cfi_endproc
 3617              	.LFE358:
 3619              		.section	.text.HAL_DMA2D_ConfigDeadTime,"ax",%progbits
 3620              		.align	1
 3621              		.global	HAL_DMA2D_ConfigDeadTime
 3622              		.syntax unified
 3623              		.thumb
 3624              		.thumb_func
 3625              		.fpu fpv5-d16
 3627              	HAL_DMA2D_ConfigDeadTime:
 3628              	.LFB359:
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Configure dead time.
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note The dead time value represents the guaranteed minimum number of cycles between
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *       two consecutive transactions on the AHB bus.
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param DeadTime dead time value.
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigDeadTime(DMA2D_HandleTypeDef *hdma2d, uint8_t DeadTime)
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3629              		.loc 1 2021 1
 3630              		.cfi_startproc
 3631              		@ args = 0, pretend = 0, frame = 8
 3632              		@ frame_needed = 1, uses_anonymous_args = 0
 3633              		@ link register save eliminated.
 3634 0000 80B4     		push	{r7}
 3635              	.LCFI156:
 3636              		.cfi_def_cfa_offset 4
 3637              		.cfi_offset 7, -4
 3638 0002 83B0     		sub	sp, sp, #12
 3639              	.LCFI157:
 3640              		.cfi_def_cfa_offset 16
 3641 0004 00AF     		add	r7, sp, #0
 3642              	.LCFI158:
 3643              		.cfi_def_cfa_register 7
 3644 0006 7860     		str	r0, [r7, #4]
 3645 0008 0B46     		mov	r3, r1
 3646 000a FB70     		strb	r3, [r7, #3]
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3647              		.loc 1 2023 3
 3648 000c 7B68     		ldr	r3, [r7, #4]
 3649 000e 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 3650 0012 012B     		cmp	r3, #1
 3651 0014 01D1     		bne	.L166
 3652              		.loc 1 2023 3 is_stmt 0 discriminator 1
 3653 0016 0223     		movs	r3, #2
 3654 0018 1BE0     		b	.L167
 3655              	.L166:
 3656              		.loc 1 2023 3 discriminator 2
 3657 001a 7B68     		ldr	r3, [r7, #4]
 3658 001c 0122     		movs	r2, #1
 3659 001e 83F86020 		strb	r2, [r3, #96]
ARM GAS  /tmp/cccHQt6E.s 			page 100


2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3660              		.loc 1 2025 17 is_stmt 1 discriminator 2
 3661 0022 7B68     		ldr	r3, [r7, #4]
 3662 0024 0222     		movs	r2, #2
 3663 0026 83F86120 		strb	r2, [r3, #97]
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR DT field */
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->AMTCR, DMA2D_AMTCR_DT, (((uint32_t) DeadTime) << DMA2D_AMTCR_DT_Pos)
 3664              		.loc 1 2028 3 discriminator 2
 3665 002a 7B68     		ldr	r3, [r7, #4]
 3666 002c 1B68     		ldr	r3, [r3]
 3667 002e DB6C     		ldr	r3, [r3, #76]
 3668 0030 23F47F41 		bic	r1, r3, #65280
 3669 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3670 0036 1A02     		lsls	r2, r3, #8
 3671 0038 7B68     		ldr	r3, [r7, #4]
 3672 003a 1B68     		ldr	r3, [r3]
 3673 003c 0A43     		orrs	r2, r2, r1
 3674 003e DA64     		str	r2, [r3, #76]
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3675              		.loc 1 2030 17 discriminator 2
 3676 0040 7B68     		ldr	r3, [r7, #4]
 3677 0042 0122     		movs	r2, #1
 3678 0044 83F86120 		strb	r2, [r3, #97]
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3679              		.loc 1 2033 3 discriminator 2
 3680 0048 7B68     		ldr	r3, [r7, #4]
 3681 004a 0022     		movs	r2, #0
 3682 004c 83F86020 		strb	r2, [r3, #96]
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 3683              		.loc 1 2035 10 discriminator 2
 3684 0050 0023     		movs	r3, #0
 3685              	.L167:
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3686              		.loc 1 2036 1
 3687 0052 1846     		mov	r0, r3
 3688 0054 0C37     		adds	r7, r7, #12
 3689              	.LCFI159:
 3690              		.cfi_def_cfa_offset 4
 3691 0056 BD46     		mov	sp, r7
 3692              	.LCFI160:
 3693              		.cfi_def_cfa_register 13
 3694              		@ sp needed
 3695 0058 5DF8047B 		ldr	r7, [sp], #4
 3696              	.LCFI161:
 3697              		.cfi_restore 7
 3698              		.cfi_def_cfa_offset 0
 3699 005c 7047     		bx	lr
 3700              		.cfi_endproc
 3701              	.LFE359:
 3703              		.section	.text.HAL_DMA2D_GetState,"ax",%progbits
 3704              		.align	1
ARM GAS  /tmp/cccHQt6E.s 			page 101


 3705              		.global	HAL_DMA2D_GetState
 3706              		.syntax unified
 3707              		.thumb
 3708              		.thumb_func
 3709              		.fpu fpv5-d16
 3711              	HAL_DMA2D_GetState:
 3712              	.LFB360:
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group4 Peripheral State and Error functions
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *  @brief    Peripheral State functions
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                   ##### Peripheral State and Errors functions #####
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     This subsection provides functions allowing to:
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D state
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D error code
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D state
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL state
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_DMA2D_StateTypeDef HAL_DMA2D_GetState(DMA2D_HandleTypeDef *hdma2d)
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3713              		.loc 1 2066 1
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 8
 3716              		@ frame_needed = 1, uses_anonymous_args = 0
 3717              		@ link register save eliminated.
 3718 0000 80B4     		push	{r7}
 3719              	.LCFI162:
 3720              		.cfi_def_cfa_offset 4
 3721              		.cfi_offset 7, -4
 3722 0002 83B0     		sub	sp, sp, #12
 3723              	.LCFI163:
 3724              		.cfi_def_cfa_offset 16
 3725 0004 00AF     		add	r7, sp, #0
 3726              	.LCFI164:
 3727              		.cfi_def_cfa_register 7
 3728 0006 7860     		str	r0, [r7, #4]
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->State;
 3729              		.loc 1 2067 16
 3730 0008 7B68     		ldr	r3, [r7, #4]
 3731 000a 93F86130 		ldrb	r3, [r3, #97]
ARM GAS  /tmp/cccHQt6E.s 			page 102


 3732 000e DBB2     		uxtb	r3, r3
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 3733              		.loc 1 2068 1
 3734 0010 1846     		mov	r0, r3
 3735 0012 0C37     		adds	r7, r7, #12
 3736              	.LCFI165:
 3737              		.cfi_def_cfa_offset 4
 3738 0014 BD46     		mov	sp, r7
 3739              	.LCFI166:
 3740              		.cfi_def_cfa_register 13
 3741              		@ sp needed
 3742 0016 5DF8047B 		ldr	r7, [sp], #4
 3743              	.LCFI167:
 3744              		.cfi_restore 7
 3745              		.cfi_def_cfa_offset 0
 3746 001a 7047     		bx	lr
 3747              		.cfi_endproc
 3748              	.LFE360:
 3750              		.section	.text.HAL_DMA2D_GetError,"ax",%progbits
 3751              		.align	1
 3752              		.global	HAL_DMA2D_GetError
 3753              		.syntax unified
 3754              		.thumb
 3755              		.thumb_func
 3756              		.fpu fpv5-d16
 3758              	HAL_DMA2D_GetError:
 3759              	.LFB361:
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D error code
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *               the configuration information for DMA2D.
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval DMA2D Error Code
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** uint32_t HAL_DMA2D_GetError(DMA2D_HandleTypeDef *hdma2d)
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3760              		.loc 1 2077 1
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 8
 3763              		@ frame_needed = 1, uses_anonymous_args = 0
 3764              		@ link register save eliminated.
 3765 0000 80B4     		push	{r7}
 3766              	.LCFI168:
 3767              		.cfi_def_cfa_offset 4
 3768              		.cfi_offset 7, -4
 3769 0002 83B0     		sub	sp, sp, #12
 3770              	.LCFI169:
 3771              		.cfi_def_cfa_offset 16
 3772 0004 00AF     		add	r7, sp, #0
 3773              	.LCFI170:
 3774              		.cfi_def_cfa_register 7
 3775 0006 7860     		str	r0, [r7, #4]
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
 3776              		.loc 1 2078 16
 3777 0008 7B68     		ldr	r3, [r7, #4]
 3778 000a 5B6E     		ldr	r3, [r3, #100]
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
ARM GAS  /tmp/cccHQt6E.s 			page 103


 3779              		.loc 1 2079 1
 3780 000c 1846     		mov	r0, r3
 3781 000e 0C37     		adds	r7, r7, #12
 3782              	.LCFI171:
 3783              		.cfi_def_cfa_offset 4
 3784 0010 BD46     		mov	sp, r7
 3785              	.LCFI172:
 3786              		.cfi_def_cfa_register 13
 3787              		@ sp needed
 3788 0012 5DF8047B 		ldr	r7, [sp], #4
 3789              	.LCFI173:
 3790              		.cfi_restore 7
 3791              		.cfi_def_cfa_offset 0
 3792 0016 7047     		bx	lr
 3793              		.cfi_endproc
 3794              	.LFE361:
 3796              		.section	.text.DMA2D_SetConfig,"ax",%progbits
 3797              		.align	1
 3798              		.syntax unified
 3799              		.thumb
 3800              		.thumb_func
 3801              		.fpu fpv5-d16
 3803              	DMA2D_SetConfig:
 3804              	.LFB362:
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Functions DMA2D Private Functions
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Set the DMA2D transfer parameters.
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the specified DMA2D.
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      The source memory Buffer address
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination.
2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination.
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                             uint32_t Height)
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 3805              		.loc 1 2106 1
 3806              		.cfi_startproc
 3807              		@ args = 4, pretend = 0, frame = 40
 3808              		@ frame_needed = 1, uses_anonymous_args = 0
 3809              		@ link register save eliminated.
 3810 0000 80B4     		push	{r7}
ARM GAS  /tmp/cccHQt6E.s 			page 104


 3811              	.LCFI174:
 3812              		.cfi_def_cfa_offset 4
 3813              		.cfi_offset 7, -4
 3814 0002 8BB0     		sub	sp, sp, #44
 3815              	.LCFI175:
 3816              		.cfi_def_cfa_offset 48
 3817 0004 00AF     		add	r7, sp, #0
 3818              	.LCFI176:
 3819              		.cfi_def_cfa_register 7
 3820 0006 F860     		str	r0, [r7, #12]
 3821 0008 B960     		str	r1, [r7, #8]
 3822 000a 7A60     		str	r2, [r7, #4]
 3823 000c 3B60     		str	r3, [r7]
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp;
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp1;
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp2;
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp3;
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp4;
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D data size */
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL | DMA2D_NLR_PL), (Height | (Width << DMA2D_NLR_PL
 3824              		.loc 1 2114 3
 3825 000e FB68     		ldr	r3, [r7, #12]
 3826 0010 1B68     		ldr	r3, [r3]
 3827 0012 5B6C     		ldr	r3, [r3, #68]
 3828 0014 03F04041 		and	r1, r3, #-1073741824
 3829 0018 3B68     		ldr	r3, [r7]
 3830 001a 1A04     		lsls	r2, r3, #16
 3831 001c 3B6B     		ldr	r3, [r7, #48]
 3832 001e 1A43     		orrs	r2, r2, r3
 3833 0020 FB68     		ldr	r3, [r7, #12]
 3834 0022 1B68     		ldr	r3, [r3]
 3835 0024 0A43     		orrs	r2, r2, r1
 3836 0026 5A64     		str	r2, [r3, #68]
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D destination address */
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 3837              		.loc 1 2117 3
 3838 0028 FB68     		ldr	r3, [r7, #12]
 3839 002a 1B68     		ldr	r3, [r3]
 3840 002c 7A68     		ldr	r2, [r7, #4]
 3841 002e DA63     		str	r2, [r3, #60]
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Register to memory DMA2D mode selected */
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_R2M)
 3842              		.loc 1 2120 19
 3843 0030 FB68     		ldr	r3, [r7, #12]
 3844 0032 5B68     		ldr	r3, [r3, #4]
 3845              		.loc 1 2120 6
 3846 0034 B3F5403F 		cmp	r3, #196608
 3847 0038 74D1     		bne	.L173
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 3848              		.loc 1 2122 10
 3849 003a BB68     		ldr	r3, [r7, #8]
 3850 003c 03F07F43 		and	r3, r3, #-16777216
 3851 0040 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/cccHQt6E.s 			page 105


2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
 3852              		.loc 1 2123 10
 3853 0042 BB68     		ldr	r3, [r7, #8]
 3854 0044 03F47F03 		and	r3, r3, #16711680
 3855 0048 FB61     		str	r3, [r7, #28]
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 3856              		.loc 1 2124 10
 3857 004a BB68     		ldr	r3, [r7, #8]
 3858 004c 03F47F43 		and	r3, r3, #65280
 3859 0050 BB61     		str	r3, [r7, #24]
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 3860              		.loc 1 2125 10
 3861 0052 BB68     		ldr	r3, [r7, #8]
 3862 0054 DBB2     		uxtb	r3, r3
 3863 0056 7B61     		str	r3, [r7, #20]
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Prepare the value to be written to the OCOLR register according to the color mode */
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 3864              		.loc 1 2128 21
 3865 0058 FB68     		ldr	r3, [r7, #12]
 3866 005a 9B68     		ldr	r3, [r3, #8]
 3867              		.loc 1 2128 8
 3868 005c 002B     		cmp	r3, #0
 3869 005e 08D1     		bne	.L174
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp1 | tmp4);
 3870              		.loc 1 2130 19
 3871 0060 BA69     		ldr	r2, [r7, #24]
 3872 0062 FB69     		ldr	r3, [r7, #28]
 3873 0064 1A43     		orrs	r2, r2, r3
 3874              		.loc 1 2130 26
 3875 0066 3B6A     		ldr	r3, [r7, #32]
 3876 0068 1343     		orrs	r3, r3, r2
 3877              		.loc 1 2130 11
 3878 006a 7A69     		ldr	r2, [r7, #20]
 3879 006c 1343     		orrs	r3, r3, r2
 3880 006e 7B62     		str	r3, [r7, #36]
 3881 0070 53E0     		b	.L175
 3882              	.L174:
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 3883              		.loc 1 2132 26
 3884 0072 FB68     		ldr	r3, [r7, #12]
 3885 0074 9B68     		ldr	r3, [r3, #8]
 3886              		.loc 1 2132 13
 3887 0076 012B     		cmp	r3, #1
 3888 0078 06D1     		bne	.L176
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp4);
 3889              		.loc 1 2134 19
 3890 007a BA69     		ldr	r2, [r7, #24]
 3891 007c FB69     		ldr	r3, [r7, #28]
 3892 007e 1343     		orrs	r3, r3, r2
 3893              		.loc 1 2134 11
 3894 0080 7A69     		ldr	r2, [r7, #20]
 3895 0082 1343     		orrs	r3, r3, r2
 3896 0084 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/cccHQt6E.s 			page 106


 3897 0086 48E0     		b	.L175
 3898              	.L176:
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 3899              		.loc 1 2136 26
 3900 0088 FB68     		ldr	r3, [r7, #12]
 3901 008a 9B68     		ldr	r3, [r3, #8]
 3902              		.loc 1 2136 13
 3903 008c 022B     		cmp	r3, #2
 3904 008e 11D1     		bne	.L177
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
 3905              		.loc 1 2138 12
 3906 0090 FB69     		ldr	r3, [r7, #28]
 3907 0092 DB0C     		lsrs	r3, r3, #19
 3908 0094 FB61     		str	r3, [r7, #28]
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
 3909              		.loc 1 2139 12
 3910 0096 BB69     		ldr	r3, [r7, #24]
 3911 0098 9B0A     		lsrs	r3, r3, #10
 3912 009a BB61     		str	r3, [r7, #24]
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U);
 3913              		.loc 1 2140 12
 3914 009c 7B69     		ldr	r3, [r7, #20]
 3915 009e DB08     		lsrs	r3, r3, #3
 3916 00a0 7B61     		str	r3, [r7, #20]
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 3917              		.loc 1 2141 21
 3918 00a2 BB69     		ldr	r3, [r7, #24]
 3919 00a4 5A01     		lsls	r2, r3, #5
 3920              		.loc 1 2141 36
 3921 00a6 FB69     		ldr	r3, [r7, #28]
 3922 00a8 DB02     		lsls	r3, r3, #11
 3923              		.loc 1 2141 28
 3924 00aa 1343     		orrs	r3, r3, r2
 3925              		.loc 1 2141 12
 3926 00ac 7A69     		ldr	r2, [r7, #20]
 3927 00ae 1343     		orrs	r3, r3, r2
 3928 00b0 7B62     		str	r3, [r7, #36]
 3929 00b2 32E0     		b	.L175
 3930              	.L177:
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 3931              		.loc 1 2143 26
 3932 00b4 FB68     		ldr	r3, [r7, #12]
 3933 00b6 9B68     		ldr	r3, [r3, #8]
 3934              		.loc 1 2143 13
 3935 00b8 032B     		cmp	r3, #3
 3936 00ba 17D1     		bne	.L178
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 31U);
 3937              		.loc 1 2145 12
 3938 00bc 3B6A     		ldr	r3, [r7, #32]
 3939 00be DB0F     		lsrs	r3, r3, #31
 3940 00c0 3B62     		str	r3, [r7, #32]
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
 3941              		.loc 1 2146 12
ARM GAS  /tmp/cccHQt6E.s 			page 107


 3942 00c2 FB69     		ldr	r3, [r7, #28]
 3943 00c4 DB0C     		lsrs	r3, r3, #19
 3944 00c6 FB61     		str	r3, [r7, #28]
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
 3945              		.loc 1 2147 12
 3946 00c8 BB69     		ldr	r3, [r7, #24]
 3947 00ca DB0A     		lsrs	r3, r3, #11
 3948 00cc BB61     		str	r3, [r7, #24]
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U);
 3949              		.loc 1 2148 12
 3950 00ce 7B69     		ldr	r3, [r7, #20]
 3951 00d0 DB08     		lsrs	r3, r3, #3
 3952 00d2 7B61     		str	r3, [r7, #20]
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 3953              		.loc 1 2149 21
 3954 00d4 BB69     		ldr	r3, [r7, #24]
 3955 00d6 5A01     		lsls	r2, r3, #5
 3956              		.loc 1 2149 36
 3957 00d8 FB69     		ldr	r3, [r7, #28]
 3958 00da 9B02     		lsls	r3, r3, #10
 3959              		.loc 1 2149 28
 3960 00dc 1A43     		orrs	r2, r2, r3
 3961              		.loc 1 2149 52
 3962 00de 3B6A     		ldr	r3, [r7, #32]
 3963 00e0 DB03     		lsls	r3, r3, #15
 3964              		.loc 1 2149 44
 3965 00e2 1343     		orrs	r3, r3, r2
 3966              		.loc 1 2149 12
 3967 00e4 7A69     		ldr	r2, [r7, #20]
 3968 00e6 1343     		orrs	r3, r3, r2
 3969 00e8 7B62     		str	r3, [r7, #36]
 3970 00ea 16E0     		b	.L175
 3971              	.L178:
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 28U);
 3972              		.loc 1 2153 12
 3973 00ec 3B6A     		ldr	r3, [r7, #32]
 3974 00ee 1B0F     		lsrs	r3, r3, #28
 3975 00f0 3B62     		str	r3, [r7, #32]
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
 3976              		.loc 1 2154 12
 3977 00f2 FB69     		ldr	r3, [r7, #28]
 3978 00f4 1B0D     		lsrs	r3, r3, #20
 3979 00f6 FB61     		str	r3, [r7, #28]
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
 3980              		.loc 1 2155 12
 3981 00f8 BB69     		ldr	r3, [r7, #24]
 3982 00fa 1B0B     		lsrs	r3, r3, #12
 3983 00fc BB61     		str	r3, [r7, #24]
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U);
 3984              		.loc 1 2156 12
 3985 00fe 7B69     		ldr	r3, [r7, #20]
 3986 0100 1B09     		lsrs	r3, r3, #4
 3987 0102 7B61     		str	r3, [r7, #20]
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
ARM GAS  /tmp/cccHQt6E.s 			page 108


 3988              		.loc 1 2157 21
 3989 0104 BB69     		ldr	r3, [r7, #24]
 3990 0106 1A01     		lsls	r2, r3, #4
 3991              		.loc 1 2157 36
 3992 0108 FB69     		ldr	r3, [r7, #28]
 3993 010a 1B02     		lsls	r3, r3, #8
 3994              		.loc 1 2157 28
 3995 010c 1A43     		orrs	r2, r2, r3
 3996              		.loc 1 2157 51
 3997 010e 3B6A     		ldr	r3, [r7, #32]
 3998 0110 1B03     		lsls	r3, r3, #12
 3999              		.loc 1 2157 43
 4000 0112 1343     		orrs	r3, r3, r2
 4001              		.loc 1 2157 12
 4002 0114 7A69     		ldr	r2, [r7, #20]
 4003 0116 1343     		orrs	r3, r3, r2
 4004 0118 7B62     		str	r3, [r7, #36]
 4005              	.L175:
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write to DMA2D OCOLR register */
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 4006              		.loc 1 2160 5
 4007 011a FB68     		ldr	r3, [r7, #12]
 4008 011c 1B68     		ldr	r3, [r3]
 4009 011e 7A6A     		ldr	r2, [r7, #36]
 4010 0120 9A63     		str	r2, [r3, #56]
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG) /*M2M_blending with fixed color FG DMA2D Mode s
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGMAR, pdata);
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else /* M2M, M2M_PFC,M2M_Blending or M2M_blending with fixed color BG DMA2D Mode */
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure DMA2D source address */
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGMAR, pdata);
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 4011              		.loc 1 2171 1
 4012 0122 0DE0     		b	.L181
 4013              	.L173:
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 4014              		.loc 1 2162 24
 4015 0124 FB68     		ldr	r3, [r7, #12]
 4016 0126 5B68     		ldr	r3, [r3, #4]
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 4017              		.loc 1 2162 11
 4018 0128 B3F5802F 		cmp	r3, #262144
 4019 012c 04D1     		bne	.L180
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 4020              		.loc 1 2164 5
 4021 012e FB68     		ldr	r3, [r7, #12]
 4022 0130 1B68     		ldr	r3, [r3]
 4023 0132 BA68     		ldr	r2, [r7, #8]
 4024 0134 5A61     		str	r2, [r3, #20]
 4025              		.loc 1 2171 1
 4026 0136 03E0     		b	.L181
 4027              	.L180:
ARM GAS  /tmp/cccHQt6E.s 			page 109


2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 4028              		.loc 1 2169 5
 4029 0138 FB68     		ldr	r3, [r7, #12]
 4030 013a 1B68     		ldr	r3, [r3]
 4031 013c BA68     		ldr	r2, [r7, #8]
 4032 013e DA60     		str	r2, [r3, #12]
 4033              	.L181:
 4034              		.loc 1 2171 1
 4035 0140 00BF     		nop
 4036 0142 2C37     		adds	r7, r7, #44
 4037              	.LCFI177:
 4038              		.cfi_def_cfa_offset 4
 4039 0144 BD46     		mov	sp, r7
 4040              	.LCFI178:
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 0146 5DF8047B 		ldr	r7, [sp], #4
 4044              	.LCFI179:
 4045              		.cfi_restore 7
 4046              		.cfi_def_cfa_offset 0
 4047 014a 7047     		bx	lr
 4048              		.cfi_endproc
 4049              	.LFE362:
 4051              		.text
 4052              	.Letext0:
 4053              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4054              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 4055              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 4056              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 4057              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4058              		.file 7 "/usr/include/newlib/sys/_types.h"
 4059              		.file 8 "/usr/include/newlib/sys/reent.h"
 4060              		.file 9 "/usr/include/newlib/sys/lock.h"
 4061              		.file 10 "/usr/include/newlib/math.h"
 4062              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4063              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 4064              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 4065              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 4066              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cccHQt6E.s 			page 110


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_dma2d.c
     /tmp/cccHQt6E.s:17     .text.HAL_DMA2D_Init:0000000000000000 $t
     /tmp/cccHQt6E.s:25     .text.HAL_DMA2D_Init:0000000000000000 HAL_DMA2D_Init
     /tmp/cccHQt6E.s:350    .text.HAL_DMA2D_MspInit:0000000000000000 HAL_DMA2D_MspInit
     /tmp/cccHQt6E.s:153    .text.HAL_DMA2D_Init:00000000000000bc $d
     /tmp/cccHQt6E.s:160    .text.HAL_DMA2D_DeInit:0000000000000000 $t
     /tmp/cccHQt6E.s:167    .text.HAL_DMA2D_DeInit:0000000000000000 HAL_DMA2D_DeInit
     /tmp/cccHQt6E.s:860    .text.HAL_DMA2D_Abort:0000000000000000 HAL_DMA2D_Abort
     /tmp/cccHQt6E.s:1812   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 HAL_DMA2D_CLUTLoading_Abort
     /tmp/cccHQt6E.s:393    .text.HAL_DMA2D_MspDeInit:0000000000000000 HAL_DMA2D_MspDeInit
     /tmp/cccHQt6E.s:338    .text.HAL_DMA2D_DeInit:00000000000000dc $d
     /tmp/cccHQt6E.s:343    .text.HAL_DMA2D_MspInit:0000000000000000 $t
     /tmp/cccHQt6E.s:386    .text.HAL_DMA2D_MspDeInit:0000000000000000 $t
     /tmp/cccHQt6E.s:429    .text.HAL_DMA2D_Start:0000000000000000 $t
     /tmp/cccHQt6E.s:436    .text.HAL_DMA2D_Start:0000000000000000 HAL_DMA2D_Start
     /tmp/cccHQt6E.s:3803   .text.DMA2D_SetConfig:0000000000000000 DMA2D_SetConfig
     /tmp/cccHQt6E.s:507    .text.HAL_DMA2D_Start_IT:0000000000000000 $t
     /tmp/cccHQt6E.s:514    .text.HAL_DMA2D_Start_IT:0000000000000000 HAL_DMA2D_Start_IT
     /tmp/cccHQt6E.s:593    .text.HAL_DMA2D_BlendingStart:0000000000000000 $t
     /tmp/cccHQt6E.s:600    .text.HAL_DMA2D_BlendingStart:0000000000000000 HAL_DMA2D_BlendingStart
     /tmp/cccHQt6E.s:719    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 $t
     /tmp/cccHQt6E.s:726    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 HAL_DMA2D_BlendingStart_IT
     /tmp/cccHQt6E.s:853    .text.HAL_DMA2D_Abort:0000000000000000 $t
     /tmp/cccHQt6E.s:963    .text.HAL_DMA2D_Suspend:0000000000000000 $t
     /tmp/cccHQt6E.s:970    .text.HAL_DMA2D_Suspend:0000000000000000 HAL_DMA2D_Suspend
     /tmp/cccHQt6E.s:1078   .text.HAL_DMA2D_Resume:0000000000000000 $t
     /tmp/cccHQt6E.s:1085   .text.HAL_DMA2D_Resume:0000000000000000 HAL_DMA2D_Resume
     /tmp/cccHQt6E.s:1146   .text.HAL_DMA2D_EnableCLUT:0000000000000000 $t
     /tmp/cccHQt6E.s:1153   .text.HAL_DMA2D_EnableCLUT:0000000000000000 HAL_DMA2D_EnableCLUT
     /tmp/cccHQt6E.s:1233   .text.HAL_DMA2D_CLUTStartLoad:0000000000000000 $t
     /tmp/cccHQt6E.s:1240   .text.HAL_DMA2D_CLUTStartLoad:0000000000000000 HAL_DMA2D_CLUTStartLoad
     /tmp/cccHQt6E.s:1366   .text.HAL_DMA2D_CLUTStartLoad:00000000000000b4 $d
     /tmp/cccHQt6E.s:1371   .text.HAL_DMA2D_CLUTStartLoad_IT:0000000000000000 $t
     /tmp/cccHQt6E.s:1378   .text.HAL_DMA2D_CLUTStartLoad_IT:0000000000000000 HAL_DMA2D_CLUTStartLoad_IT
     /tmp/cccHQt6E.s:1520   .text.HAL_DMA2D_CLUTStartLoad_IT:00000000000000d4 $d
     /tmp/cccHQt6E.s:1525   .text.HAL_DMA2D_CLUTLoad:0000000000000000 $t
     /tmp/cccHQt6E.s:1532   .text.HAL_DMA2D_CLUTLoad:0000000000000000 HAL_DMA2D_CLUTLoad
     /tmp/cccHQt6E.s:1652   .text.HAL_DMA2D_CLUTLoad:00000000000000ac $d
     /tmp/cccHQt6E.s:1657   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 $t
     /tmp/cccHQt6E.s:1664   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 HAL_DMA2D_CLUTLoad_IT
     /tmp/cccHQt6E.s:1800   .text.HAL_DMA2D_CLUTLoad_IT:00000000000000cc $d
     /tmp/cccHQt6E.s:1805   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 $t
     /tmp/cccHQt6E.s:1930   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 $t
     /tmp/cccHQt6E.s:1937   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 HAL_DMA2D_CLUTLoading_Suspend
     /tmp/cccHQt6E.s:2131   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 $t
     /tmp/cccHQt6E.s:2138   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 HAL_DMA2D_CLUTLoading_Resume
     /tmp/cccHQt6E.s:2240   .text.HAL_DMA2D_PollForTransfer:0000000000000000 $t
     /tmp/cccHQt6E.s:2247   .text.HAL_DMA2D_PollForTransfer:0000000000000000 HAL_DMA2D_PollForTransfer
     /tmp/cccHQt6E.s:2559   .text.HAL_DMA2D_IRQHandler:0000000000000000 $t
     /tmp/cccHQt6E.s:2566   .text.HAL_DMA2D_IRQHandler:0000000000000000 HAL_DMA2D_IRQHandler
     /tmp/cccHQt6E.s:2899   .text.HAL_DMA2D_LineEventCallback:0000000000000000 HAL_DMA2D_LineEventCallback
     /tmp/cccHQt6E.s:2942   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 HAL_DMA2D_CLUTLoadingCpltCallback
     /tmp/cccHQt6E.s:2892   .text.HAL_DMA2D_LineEventCallback:0000000000000000 $t
     /tmp/cccHQt6E.s:2935   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 $t
     /tmp/cccHQt6E.s:2978   .text.HAL_DMA2D_ConfigLayer:0000000000000000 $t
     /tmp/cccHQt6E.s:2985   .text.HAL_DMA2D_ConfigLayer:0000000000000000 HAL_DMA2D_ConfigLayer
ARM GAS  /tmp/cccHQt6E.s 			page 111


     /tmp/cccHQt6E.s:3240   .text.HAL_DMA2D_ConfigLayer:0000000000000164 $d
     /tmp/cccHQt6E.s:3245   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 $t
     /tmp/cccHQt6E.s:3252   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 HAL_DMA2D_ConfigCLUT
     /tmp/cccHQt6E.s:3364   .text.HAL_DMA2D_ConfigCLUT:000000000000009c $d
     /tmp/cccHQt6E.s:3369   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 $t
     /tmp/cccHQt6E.s:3376   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 HAL_DMA2D_ProgramLineEvent
     /tmp/cccHQt6E.s:3462   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 $t
     /tmp/cccHQt6E.s:3469   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 HAL_DMA2D_EnableDeadTime
     /tmp/cccHQt6E.s:3541   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 $t
     /tmp/cccHQt6E.s:3548   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 HAL_DMA2D_DisableDeadTime
     /tmp/cccHQt6E.s:3620   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 $t
     /tmp/cccHQt6E.s:3627   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 HAL_DMA2D_ConfigDeadTime
     /tmp/cccHQt6E.s:3704   .text.HAL_DMA2D_GetState:0000000000000000 $t
     /tmp/cccHQt6E.s:3711   .text.HAL_DMA2D_GetState:0000000000000000 HAL_DMA2D_GetState
     /tmp/cccHQt6E.s:3751   .text.HAL_DMA2D_GetError:0000000000000000 $t
     /tmp/cccHQt6E.s:3758   .text.HAL_DMA2D_GetError:0000000000000000 HAL_DMA2D_GetError
     /tmp/cccHQt6E.s:3797   .text.DMA2D_SetConfig:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
