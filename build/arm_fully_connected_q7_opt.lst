ARM GAS  /tmp/ccsf0BNJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_fully_connected_q7_opt.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_fully_connected_q7_opt,"ax",%progbits
  17              		.align	1
  18              		.global	arm_fully_connected_q7_opt
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_fully_connected_q7_opt:
  26              	.LFB149:
  27              		.file 1 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c"
   1:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** /*
   2:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
   4:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
   6:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
  10:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
  12:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  */
  18:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
  19:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Title:        arm_fully_connected_q7_opt.c
  22:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Description:  Q7 basic fully-connected layer function
  23:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
  24:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * $Date:        17. January 2018
  25:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
  27:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *
  29:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * -------------------------------------------------------------------- */
  30:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
  31:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #include "arm_math.h"
ARM GAS  /tmp/ccsf0BNJ.s 			page 2


  32:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #include "arm_nnfunctions.h"
  33:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
  34:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** /**
  35:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  *  @ingroup groupNN
  36:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  */
  37:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
  38:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** /**
  39:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * @addtogroup FC
  40:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  * @{
  41:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****  */
  42:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
  43:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****   /**
  44:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @brief Q7 opt fully-connected layer function
  45:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       pV          pointer to input vector
  46:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       pM          pointer to matrix weights
  47:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       dim_vec     length of the vector
  48:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       num_of_rows number of rows in weight matrix
  49:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       bias_shift  amount of left-shift for bias
  50:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       out_shift   amount of right-shift for output
  51:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in]       bias        pointer to bias
  52:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in,out]   pOut        pointer to output vector
  53:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @param[in,out]   vec_buffer  pointer to buffer space for input
  54:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @return     The function returns <code>ARM_MATH_SUCCESS</code>
  55:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  56:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * @details
  57:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  58:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * <b>Buffer size:</b>
  59:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  60:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * vec_buffer size: dim_vec
  61:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  62:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * This opt function is designed to work with interleaved weight
  63:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    * matrix. The vector input is assumed in q7_t format, we call
  64:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  arm_q7_to_q15_no_shift_shuffle function to expand into
  65:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  q15_t format with certain weight re-ordering, refer to the function
  66:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  comments for more details.
  67:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  Here we use only one pointer to read 4 rows in the weight
  68:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  matrix. So if the original q7_t matrix looks like this:
  69:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  70:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a11 | a12 | a13 | a14 | a15 | a16 | a17 |
  71:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  72:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a21 | a22 | a23 | a24 | a25 | a26 | a27 |
  73:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  74:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a31 | a32 | a33 | a34 | a35 | a36 | a37 |
  75:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  76:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a41 | a42 | a43 | a44 | a45 | a46 | a47 |
  77:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  78:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a51 | a52 | a53 | a54 | a55 | a56 | a57 |
  79:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  80:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a61 | a62 | a63 | a64 | a65 | a66 | a67 |
  81:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  82:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  83:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  We operates on multiple-of-4 rows, so the first four rows becomes
  84:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  85:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a11 | a21 | a13 | a23 | a31 | a41 | a33 | a43 |
  86:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  87:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a12 | a22 | a14 | a24 | a32 | a42 | a34 | a44 |
  88:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
ARM GAS  /tmp/ccsf0BNJ.s 			page 3


  89:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a15 | a25 | a35 | a45 | a16 | a26 | a36 | a46 |
  90:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  91:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  So within the kernel, we first read the re-ordered vector in as:
  92:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  93:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | b1  | b3  | and | b2  | b4  |
  94:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  95:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  the four q31_t weights will look like
  96:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  97:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a11 | a13 |, | a21 | a23 |, | a31 | a33 |, | a41 | a43 |
  98:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
  99:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a12 | a14 |, | a22 | a24 |, | a32 | a34 |, | a42 | a44 |
 100:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 101:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  The column left over will be in-order.
 102:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  which is:
 103:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 104:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a17 | a27 | a37 | a47 |
 105:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 106:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  For the left-over rows, we do 1x1 computation, so the data remains
 107:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  as its original order. 
 108:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 109:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  So the stored weight matrix looks like this:
 110:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 111:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a11 | a21 | a13 | a23 | a31 | a41 |
 112:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 113:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a33 | a43 | a12 | a22 | a14 | a24 |
 114:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 115:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a32 | a42 | a34 | a44 | a15 | a25 |
 116:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 117:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a35 | a45 | a16 | a26 | a36 | a46 |
 118:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 119:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a17 | a27 | a37 | a47 | a51 | a52 |
 120:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 121:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a53 | a54 | a55 | a56 | a57 | a61 |
 122:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 123:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *  | a62 | a63 | a64 | a65 | a66 | a67 |
 124:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 125:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    *
 126:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****    */
 127:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 128:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** arm_status
 129:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** arm_fully_connected_q7_opt(const q7_t * pV,
 130:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const q7_t * pM,
 131:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const uint16_t dim_vec,
 132:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const uint16_t num_of_rows,
 133:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const uint16_t bias_shift,
 134:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const uint16_t out_shift, 
 135:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            const q7_t * bias, 
 136:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            q7_t * pOut, 
 137:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                            q15_t * vec_buffer)
 138:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** {
  28              		.loc 1 138 1
  29              		.cfi_startproc
  30              		@ args = 20, pretend = 0, frame = 448
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccsf0BNJ.s 			page 4


  35              		.cfi_offset 4, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 F1B0     		sub	sp, sp, #452
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 464
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 07F10C04 		add	r4, r7, #12
  45 000a 2060     		str	r0, [r4]
  46 000c 07F10800 		add	r0, r7, #8
  47 0010 0160     		str	r1, [r0]
  48 0012 1946     		mov	r1, r3
  49 0014 BB1D     		adds	r3, r7, #6
  50 0016 1A80     		strh	r2, [r3]	@ movhi
  51 0018 3B1D     		adds	r3, r7, #4
  52 001a 0A46     		mov	r2, r1	@ movhi
  53 001c 1A80     		strh	r2, [r3]	@ movhi
 139:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 140:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #if defined (ARM_MATH_DSP)
 141:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     /* Run the following code for Cortex-M4 and Cortex-M7 */
 142:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 143:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     const q7_t *pB = pM;
  54              		.loc 1 143 17
  55 001e 07F12003 		add	r3, r7, #32
  56 0022 07F10802 		add	r2, r7, #8
  57 0026 1268     		ldr	r2, [r2]
  58 0028 1A60     		str	r2, [r3]
 144:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     q7_t     *pO = pOut;
  59              		.loc 1 144 15
  60 002a D7F8DC31 		ldr	r3, [r7, #476]
  61 002e C7F8BC31 		str	r3, [r7, #444]
 145:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     const q7_t *pBias = bias;
  62              		.loc 1 145 17
  63 0032 D7F8D831 		ldr	r3, [r7, #472]
  64 0036 C7F8B831 		str	r3, [r7, #440]
 146:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     q15_t    *pA;
 147:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     uint16_t  rowCnt = num_of_rows >> 2;
  65              		.loc 1 147 15
  66 003a 3B1D     		adds	r3, r7, #4
  67 003c 1B88     		ldrh	r3, [r3]
  68 003e 9B08     		lsrs	r3, r3, #2
  69 0040 A7F8B631 		strh	r3, [r7, #438]	@ movhi
 148:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 149:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     arm_q7_to_q15_reordered_no_shift(pV, vec_buffer, dim_vec);
  70              		.loc 1 149 5
  71 0044 BB1D     		adds	r3, r7, #6
  72 0046 1A88     		ldrh	r2, [r3]
  73 0048 07F10C03 		add	r3, r7, #12
  74 004c D7F8E011 		ldr	r1, [r7, #480]
  75 0050 1868     		ldr	r0, [r3]
  76 0052 FFF7FEFF 		bl	arm_q7_to_q15_reordered_no_shift
 150:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 151:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     while (rowCnt)
  77              		.loc 1 151 11
  78 0056 41E3     		b	.L2
ARM GAS  /tmp/ccsf0BNJ.s 			page 5


  79              	.L31:
  80              	.LBB71:
 152:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 153:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 154:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum =  ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
  81              		.loc 1 154 41
  82 0058 D7F8B831 		ldr	r3, [r7, #440]
  83 005c 5A1C     		adds	r2, r3, #1
  84 005e C7F8B821 		str	r2, [r7, #440]
  85              		.loc 1 154 35
  86 0062 93F90030 		ldrsb	r3, [r3]
  87              		.loc 1 154 27
  88 0066 1A46     		mov	r2, r3
  89              		.loc 1 154 45
  90 0068 B7F8D031 		ldrh	r3, [r7, #464]
  91 006c 02FA03F3 		lsl	r3, r2, r3
  92 0070 1946     		mov	r1, r3
  93              		.loc 1 154 62
  94 0072 B7F8D431 		ldrh	r3, [r7, #468]
  95 0076 0122     		movs	r2, #1
  96 0078 02FA03F3 		lsl	r3, r2, r3
  97 007c 5B08     		lsrs	r3, r3, #1
  98              		.loc 1 154 60
  99 007e 0B44     		add	r3, r3, r1
 100              		.loc 1 154 19
 101 0080 C7F8B031 		str	r3, [r7, #432]
 155:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 102              		.loc 1 155 41
 103 0084 D7F8B831 		ldr	r3, [r7, #440]
 104 0088 5A1C     		adds	r2, r3, #1
 105 008a C7F8B821 		str	r2, [r7, #440]
 106              		.loc 1 155 35
 107 008e 93F90030 		ldrsb	r3, [r3]
 108              		.loc 1 155 27
 109 0092 1A46     		mov	r2, r3
 110              		.loc 1 155 45
 111 0094 B7F8D031 		ldrh	r3, [r7, #464]
 112 0098 02FA03F3 		lsl	r3, r2, r3
 113 009c 1946     		mov	r1, r3
 114              		.loc 1 155 62
 115 009e B7F8D431 		ldrh	r3, [r7, #468]
 116 00a2 0122     		movs	r2, #1
 117 00a4 02FA03F3 		lsl	r3, r2, r3
 118 00a8 5B08     		lsrs	r3, r3, #1
 119              		.loc 1 155 60
 120 00aa 0B44     		add	r3, r3, r1
 121              		.loc 1 155 19
 122 00ac C7F8AC31 		str	r3, [r7, #428]
 156:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum3 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 123              		.loc 1 156 41
 124 00b0 D7F8B831 		ldr	r3, [r7, #440]
 125 00b4 5A1C     		adds	r2, r3, #1
 126 00b6 C7F8B821 		str	r2, [r7, #440]
 127              		.loc 1 156 35
 128 00ba 93F90030 		ldrsb	r3, [r3]
 129              		.loc 1 156 27
 130 00be 1A46     		mov	r2, r3
ARM GAS  /tmp/ccsf0BNJ.s 			page 6


 131              		.loc 1 156 45
 132 00c0 B7F8D031 		ldrh	r3, [r7, #464]
 133 00c4 02FA03F3 		lsl	r3, r2, r3
 134 00c8 1946     		mov	r1, r3
 135              		.loc 1 156 62
 136 00ca B7F8D431 		ldrh	r3, [r7, #468]
 137 00ce 0122     		movs	r2, #1
 138 00d0 02FA03F3 		lsl	r3, r2, r3
 139 00d4 5B08     		lsrs	r3, r3, #1
 140              		.loc 1 156 60
 141 00d6 0B44     		add	r3, r3, r1
 142              		.loc 1 156 19
 143 00d8 C7F8A831 		str	r3, [r7, #424]
 157:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum4 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 144              		.loc 1 157 41
 145 00dc D7F8B831 		ldr	r3, [r7, #440]
 146 00e0 5A1C     		adds	r2, r3, #1
 147 00e2 C7F8B821 		str	r2, [r7, #440]
 148              		.loc 1 157 35
 149 00e6 93F90030 		ldrsb	r3, [r3]
 150              		.loc 1 157 27
 151 00ea 1A46     		mov	r2, r3
 152              		.loc 1 157 45
 153 00ec B7F8D031 		ldrh	r3, [r7, #464]
 154 00f0 02FA03F3 		lsl	r3, r2, r3
 155 00f4 1946     		mov	r1, r3
 156              		.loc 1 157 62
 157 00f6 B7F8D431 		ldrh	r3, [r7, #468]
 158 00fa 0122     		movs	r2, #1
 159 00fc 02FA03F3 		lsl	r3, r2, r3
 160 0100 5B08     		lsrs	r3, r3, #1
 161              		.loc 1 157 60
 162 0102 0B44     		add	r3, r3, r1
 163              		.loc 1 157 19
 164 0104 C7F8A431 		str	r3, [r7, #420]
 158:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 159:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         uint16_t  colCnt = dim_vec >> 2;
 165              		.loc 1 159 19
 166 0108 BB1D     		adds	r3, r7, #6
 167 010a 1B88     		ldrh	r3, [r3]
 168 010c 9B08     		lsrs	r3, r3, #2
 169 010e A7F8A231 		strh	r3, [r7, #418]	@ movhi
 160:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 161:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         pA = vec_buffer;
 170              		.loc 1 161 12
 171 0112 07F11C03 		add	r3, r7, #28
 172 0116 D7F8E021 		ldr	r2, [r7, #480]
 173 011a 1A60     		str	r2, [r3]
 162:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 163:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #ifdef USE_INTRINSIC
 164:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 165:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #ifndef ARM_MATH_BIG_ENDIAN
 166:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 174              		.loc 1 166 15
 175 011c 0AE2     		b	.L3
 176              	.L28:
 177              	.LBB72:
ARM GAS  /tmp/ccsf0BNJ.s 			page 7


 167:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 168:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q31_t     inM11, inM12, inM13, inM14;
 169:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q31_t     inV;
 170:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 171:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV = *__SIMD32(pA)++;
 178              		.loc 1 171 20
 179 011e 07F11C02 		add	r2, r7, #28
 180 0122 1368     		ldr	r3, [r2]
 181              		.loc 1 171 32
 182 0124 191D     		adds	r1, r3, #4
 183 0126 1160     		str	r1, [r2]
 184              		.loc 1 171 17
 185 0128 1B68     		ldr	r3, [r3]
 186 012a C7F85831 		str	r3, [r7, #344]
 172:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = *__SIMD32(pB)++;
 187              		.loc 1 172 22
 188 012e 07F12002 		add	r2, r7, #32
 189 0132 1368     		ldr	r3, [r2]
 190              		.loc 1 172 34
 191 0134 191D     		adds	r1, r3, #4
 192 0136 1160     		str	r1, [r2]
 193              		.loc 1 172 19
 194 0138 1B68     		ldr	r3, [r3]
 195 013a C7F85431 		str	r3, [r7, #340]
 173:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM12 = __SXTB16(__ROR(inM11, 8));
 196              		.loc 1 173 21
 197 013e D7F85421 		ldr	r2, [r7, #340]
 198 0142 07F16C03 		add	r3, r7, #108
 199 0146 1A60     		str	r2, [r3]
 200 0148 07F16803 		add	r3, r7, #104
 201 014c 0822     		movs	r2, #8
 202 014e 1A60     		str	r2, [r3]
 203              	.LBB73:
 204              	.LBB74:
 205              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccsf0BNJ.s 			page 8


  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccsf0BNJ.s 			page 9


  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/ccsf0BNJ.s 			page 10


 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/ccsf0BNJ.s 			page 11


 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
ARM GAS  /tmp/ccsf0BNJ.s 			page 12


 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 13


 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  /tmp/ccsf0BNJ.s 			page 14


 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
ARM GAS  /tmp/ccsf0BNJ.s 			page 15


 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsf0BNJ.s 			page 16


 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 17


 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /tmp/ccsf0BNJ.s 			page 18


 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 19


 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccsf0BNJ.s 			page 20


 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /tmp/ccsf0BNJ.s 			page 21


 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsf0BNJ.s 			page 22


 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
ARM GAS  /tmp/ccsf0BNJ.s 			page 23


 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsf0BNJ.s 			page 24


 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccsf0BNJ.s 			page 25


 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 206              		.loc 2 1023 7
 207 0150 07F16803 		add	r3, r7, #104
 208 0154 07F16802 		add	r2, r7, #104
 209 0158 1268     		ldr	r2, [r2]
 210 015a 02F01F02 		and	r2, r2, #31
 211 015e 1A60     		str	r2, [r3]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 212              		.loc 2 1024 6
 213 0160 07F16803 		add	r3, r7, #104
 214 0164 1B68     		ldr	r3, [r3]
 215 0166 002B     		cmp	r3, #0
 216 0168 03D1     		bne	.L4
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
 217              		.loc 2 1026 12
 218 016a 07F16C03 		add	r3, r7, #108
 219 016e 1B68     		ldr	r3, [r3]
 220 0170 07E0     		b	.L5
 221              	.L4:
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 222              		.loc 2 1028 23
 223 0172 07F16C02 		add	r2, r7, #108
 224 0176 07F16803 		add	r3, r7, #104
 225 017a 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccsf0BNJ.s 			page 26


 226 017c 1B68     		ldr	r3, [r3]
 227 017e 62FA03F3 		ror	r3, r2, r3
 228              	.L5:
 229 0182 07F17402 		add	r2, r7, #116
 230 0186 1360     		str	r3, [r2]
 231              	.LBE74:
 232              	.LBE73:
 233              	.LBB75:
 234              	.LBB76:
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
ARM GAS  /tmp/ccsf0BNJ.s 			page 27


1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  /tmp/ccsf0BNJ.s 			page 28


1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccsf0BNJ.s 			page 29


1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  /tmp/ccsf0BNJ.s 			page 30


1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsf0BNJ.s 			page 31


1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
ARM GAS  /tmp/ccsf0BNJ.s 			page 32


1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
ARM GAS  /tmp/ccsf0BNJ.s 			page 33


1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 34


1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsf0BNJ.s 			page 35


1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 36


1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsf0BNJ.s 			page 37


1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsf0BNJ.s 			page 38


1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsf0BNJ.s 			page 39


1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccsf0BNJ.s 			page 40


1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 41


1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  /tmp/ccsf0BNJ.s 			page 42


1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
 235              		.loc 2 1961 3
 236 0188 07F17403 		add	r3, r7, #116
 237 018c 1B68     		ldr	r3, [r3]
 238              		.syntax unified
 239              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 240 018e 2FFA83F2 		sxtb16 r2, r3
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244 0192 07F17003 		add	r3, r7, #112
 245 0196 1A60     		str	r2, [r3]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 246              		.loc 2 1962 9
 247 0198 07F17003 		add	r3, r7, #112
 248 019c 1B68     		ldr	r3, [r3]
 249              	.LBE76:
 250              	.LBE75:
 251              		.loc 1 173 19
 252 019e C7F85031 		str	r3, [r7, #336]
 174:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = __SXTB16(inM11);
 253              		.loc 1 174 21
 254 01a2 D7F85421 		ldr	r2, [r7, #340]
 255 01a6 07F17C03 		add	r3, r7, #124
 256 01aa 1A60     		str	r2, [r3]
 257              	.LBB77:
 258              	.LBB78:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccsf0BNJ.s 			page 43


 259              		.loc 2 1961 3
 260 01ac 07F17C03 		add	r3, r7, #124
 261 01b0 1B68     		ldr	r3, [r3]
 262              		.syntax unified
 263              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 264 01b2 2FFA83F2 		sxtb16 r2, r3
 265              	@ 0 "" 2
 266              		.thumb
 267              		.syntax unified
 268 01b6 07F17803 		add	r3, r7, #120
 269 01ba 1A60     		str	r2, [r3]
 270              		.loc 2 1962 9
 271 01bc 07F17803 		add	r3, r7, #120
 272 01c0 1B68     		ldr	r3, [r3]
 273              	.LBE78:
 274              	.LBE77:
 275              		.loc 1 174 19
 276 01c2 C7F85431 		str	r3, [r7, #340]
 175:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inM11, inV, sum);
 277              		.loc 1 175 19
 278 01c6 D7F85401 		ldr	r0, [r7, #340]
 279 01ca D7F85811 		ldr	r1, [r7, #344]
 280 01ce D7F8B021 		ldr	r2, [r7, #432]
 281 01d2 07F18C03 		add	r3, r7, #140
 282 01d6 1860     		str	r0, [r3]
 283 01d8 07F18803 		add	r3, r7, #136
 284 01dc 1960     		str	r1, [r3]
 285 01de 07F18403 		add	r3, r7, #132
 286 01e2 1A60     		str	r2, [r3]
 287              	.LBB79:
 288              	.LBB80:
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 44


1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 289              		.loc 2 1993 3
 290 01e4 07F18C03 		add	r3, r7, #140
 291 01e8 1B68     		ldr	r3, [r3]
 292 01ea 07F18802 		add	r2, r7, #136
 293 01ee 1268     		ldr	r2, [r2]
 294 01f0 07F18401 		add	r1, r7, #132
 295 01f4 0968     		ldr	r1, [r1]
 296              		.syntax unified
 297              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 298 01f6 23FB0212 		smlad r2, r3, r2, r1
 299              	@ 0 "" 2
 300              		.thumb
 301              		.syntax unified
 302 01fa 07F18003 		add	r3, r7, #128
 303 01fe 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 304              		.loc 2 1994 9
 305 0200 07F18003 		add	r3, r7, #128
 306 0204 1B68     		ldr	r3, [r3]
 307              	.LBE80:
 308              	.LBE79:
 309              		.loc 1 175 17
 310 0206 C7F8B031 		str	r3, [r7, #432]
 176:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 = __SMLAD(inM12, inV, sum2);
 311              		.loc 1 176 20
 312 020a D7F85001 		ldr	r0, [r7, #336]
 313 020e D7F85811 		ldr	r1, [r7, #344]
 314 0212 D7F8AC21 		ldr	r2, [r7, #428]
 315 0216 07F19C03 		add	r3, r7, #156
 316 021a 1860     		str	r0, [r3]
 317 021c 07F19803 		add	r3, r7, #152
 318 0220 1960     		str	r1, [r3]
 319 0222 07F19403 		add	r3, r7, #148
 320 0226 1A60     		str	r2, [r3]
 321              	.LBB81:
 322              	.LBB82:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 323              		.loc 2 1993 3
 324 0228 07F19C03 		add	r3, r7, #156
 325 022c 1B68     		ldr	r3, [r3]
 326 022e 07F19802 		add	r2, r7, #152
 327 0232 1268     		ldr	r2, [r2]
 328 0234 07F19401 		add	r1, r7, #148
 329 0238 0968     		ldr	r1, [r1]
 330              		.syntax unified
 331              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 332 023a 23FB0212 		smlad r2, r3, r2, r1
 333              	@ 0 "" 2
 334              		.thumb
 335              		.syntax unified
 336 023e 07F19003 		add	r3, r7, #144
 337 0242 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccsf0BNJ.s 			page 45


 338              		.loc 2 1994 9
 339 0244 07F19003 		add	r3, r7, #144
 340 0248 1B68     		ldr	r3, [r3]
 341              	.LBE82:
 342              	.LBE81:
 343              		.loc 1 176 18
 344 024a C7F8AC31 		str	r3, [r7, #428]
 177:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = *__SIMD32(pB)++;
 345              		.loc 1 177 22
 346 024e 07F12002 		add	r2, r7, #32
 347 0252 1368     		ldr	r3, [r2]
 348              		.loc 1 177 34
 349 0254 191D     		adds	r1, r3, #4
 350 0256 1160     		str	r1, [r2]
 351              		.loc 1 177 19
 352 0258 1B68     		ldr	r3, [r3]
 353 025a C7F84C31 		str	r3, [r7, #332]
 178:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM14 = __SXTB16(__ROR(inM13, 8));
 354              		.loc 1 178 21
 355 025e D7F84C21 		ldr	r2, [r7, #332]
 356 0262 07F1A403 		add	r3, r7, #164
 357 0266 1A60     		str	r2, [r3]
 358 0268 07F1A003 		add	r3, r7, #160
 359 026c 0822     		movs	r2, #8
 360 026e 1A60     		str	r2, [r3]
 361              	.LBB83:
 362              	.LBB84:
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 363              		.loc 2 1023 7
 364 0270 07F1A003 		add	r3, r7, #160
 365 0274 07F1A002 		add	r2, r7, #160
 366 0278 1268     		ldr	r2, [r2]
 367 027a 02F01F02 		and	r2, r2, #31
 368 027e 1A60     		str	r2, [r3]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 369              		.loc 2 1024 6
 370 0280 07F1A003 		add	r3, r7, #160
 371 0284 1B68     		ldr	r3, [r3]
 372 0286 002B     		cmp	r3, #0
 373 0288 03D1     		bne	.L10
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 374              		.loc 2 1026 12
 375 028a 07F1A403 		add	r3, r7, #164
 376 028e 1B68     		ldr	r3, [r3]
 377 0290 07E0     		b	.L11
 378              	.L10:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 379              		.loc 2 1028 23
 380 0292 07F1A402 		add	r2, r7, #164
 381 0296 07F1A003 		add	r3, r7, #160
 382 029a 1268     		ldr	r2, [r2]
 383 029c 1B68     		ldr	r3, [r3]
 384 029e 62FA03F3 		ror	r3, r2, r3
 385              	.L11:
 386 02a2 07F1AC02 		add	r2, r7, #172
 387 02a6 1360     		str	r3, [r2]
 388              	.LBE84:
ARM GAS  /tmp/ccsf0BNJ.s 			page 46


 389              	.LBE83:
 390              	.LBB85:
 391              	.LBB86:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 392              		.loc 2 1961 3
 393 02a8 07F1AC03 		add	r3, r7, #172
 394 02ac 1B68     		ldr	r3, [r3]
 395              		.syntax unified
 396              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 397 02ae 2FFA83F2 		sxtb16 r2, r3
 398              	@ 0 "" 2
 399              		.thumb
 400              		.syntax unified
 401 02b2 07F1A803 		add	r3, r7, #168
 402 02b6 1A60     		str	r2, [r3]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 403              		.loc 2 1962 9
 404 02b8 07F1A803 		add	r3, r7, #168
 405 02bc 1B68     		ldr	r3, [r3]
 406              	.LBE86:
 407              	.LBE85:
 408              		.loc 1 178 19
 409 02be C7F84831 		str	r3, [r7, #328]
 179:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = __SXTB16(inM13);
 410              		.loc 1 179 21
 411 02c2 D7F84C21 		ldr	r2, [r7, #332]
 412 02c6 07F1B403 		add	r3, r7, #180
 413 02ca 1A60     		str	r2, [r3]
 414              	.LBB87:
 415              	.LBB88:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 416              		.loc 2 1961 3
 417 02cc 07F1B403 		add	r3, r7, #180
 418 02d0 1B68     		ldr	r3, [r3]
 419              		.syntax unified
 420              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 421 02d2 2FFA83F2 		sxtb16 r2, r3
 422              	@ 0 "" 2
 423              		.thumb
 424              		.syntax unified
 425 02d6 07F1B003 		add	r3, r7, #176
 426 02da 1A60     		str	r2, [r3]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 427              		.loc 2 1962 9
 428 02dc 07F1B003 		add	r3, r7, #176
 429 02e0 1B68     		ldr	r3, [r3]
 430              	.LBE88:
 431              	.LBE87:
 432              		.loc 1 179 19
 433 02e2 C7F84C31 		str	r3, [r7, #332]
 180:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 = __SMLAD(inM13, inV, sum3);
 434              		.loc 1 180 20
 435 02e6 D7F84C31 		ldr	r3, [r7, #332]
 436 02ea D7F85811 		ldr	r1, [r7, #344]
 437 02ee D7F8A821 		ldr	r2, [r7, #424]
 438 02f2 C7F8C430 		str	r3, [r7, #196]
 439 02f6 07F1C003 		add	r3, r7, #192
ARM GAS  /tmp/ccsf0BNJ.s 			page 47


 440 02fa 1960     		str	r1, [r3]
 441 02fc 07F1BC03 		add	r3, r7, #188
 442 0300 1A60     		str	r2, [r3]
 443              	.LBB89:
 444              	.LBB90:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 445              		.loc 2 1993 3
 446 0302 D7F8C430 		ldr	r3, [r7, #196]
 447 0306 07F1C002 		add	r2, r7, #192
 448 030a 1268     		ldr	r2, [r2]
 449 030c 07F1BC01 		add	r1, r7, #188
 450 0310 0968     		ldr	r1, [r1]
 451              		.syntax unified
 452              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 453 0312 23FB0212 		smlad r2, r3, r2, r1
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 0316 07F1B803 		add	r3, r7, #184
 458 031a 1A60     		str	r2, [r3]
 459              		.loc 2 1994 9
 460 031c 07F1B803 		add	r3, r7, #184
 461 0320 1B68     		ldr	r3, [r3]
 462              	.LBE90:
 463              	.LBE89:
 464              		.loc 1 180 18
 465 0322 C7F8A831 		str	r3, [r7, #424]
 181:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 = __SMLAD(inM14, inV, sum4);
 466              		.loc 1 181 20
 467 0326 D7F84811 		ldr	r1, [r7, #328]
 468 032a D7F85821 		ldr	r2, [r7, #344]
 469 032e D7F8A431 		ldr	r3, [r7, #420]
 470 0332 C7F8D410 		str	r1, [r7, #212]
 471 0336 C7F8D020 		str	r2, [r7, #208]
 472 033a C7F8CC30 		str	r3, [r7, #204]
 473              	.LBB91:
 474              	.LBB92:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 475              		.loc 2 1993 3
 476 033e D7F8D430 		ldr	r3, [r7, #212]
 477 0342 D7F8D020 		ldr	r2, [r7, #208]
 478 0346 D7F8CC10 		ldr	r1, [r7, #204]
 479              		.syntax unified
 480              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 481 034a 23FB0213 		smlad r3, r3, r2, r1
 482              	@ 0 "" 2
 483              		.thumb
 484              		.syntax unified
 485 034e C7F8C830 		str	r3, [r7, #200]
 486              		.loc 2 1994 9
 487 0352 D7F8C830 		ldr	r3, [r7, #200]
 488              	.LBE92:
 489              	.LBE91:
 490              		.loc 1 181 18
 491 0356 C7F8A431 		str	r3, [r7, #420]
 182:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 183:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV = *__SIMD32(pA)++;
ARM GAS  /tmp/ccsf0BNJ.s 			page 48


 492              		.loc 1 183 20
 493 035a 07F11C02 		add	r2, r7, #28
 494 035e 1368     		ldr	r3, [r2]
 495              		.loc 1 183 32
 496 0360 191D     		adds	r1, r3, #4
 497 0362 1160     		str	r1, [r2]
 498              		.loc 1 183 17
 499 0364 1B68     		ldr	r3, [r3]
 500 0366 C7F85831 		str	r3, [r7, #344]
 184:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = *__SIMD32(pB)++;
 501              		.loc 1 184 22
 502 036a 07F12002 		add	r2, r7, #32
 503 036e 1368     		ldr	r3, [r2]
 504              		.loc 1 184 34
 505 0370 191D     		adds	r1, r3, #4
 506 0372 1160     		str	r1, [r2]
 507              		.loc 1 184 19
 508 0374 1B68     		ldr	r3, [r3]
 509 0376 C7F85431 		str	r3, [r7, #340]
 185:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM12 = __SXTB16(__ROR(inM11, 8));
 510              		.loc 1 185 21
 511 037a D7F85431 		ldr	r3, [r7, #340]
 512 037e C7F8DC30 		str	r3, [r7, #220]
 513 0382 0823     		movs	r3, #8
 514 0384 C7F8D830 		str	r3, [r7, #216]
 515              	.LBB93:
 516              	.LBB94:
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 517              		.loc 2 1023 7
 518 0388 D7F8D830 		ldr	r3, [r7, #216]
 519 038c 03F01F03 		and	r3, r3, #31
 520 0390 C7F8D830 		str	r3, [r7, #216]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 521              		.loc 2 1024 6
 522 0394 D7F8D830 		ldr	r3, [r7, #216]
 523 0398 002B     		cmp	r3, #0
 524 039a 02D1     		bne	.L16
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 525              		.loc 2 1026 12
 526 039c D7F8DC30 		ldr	r3, [r7, #220]
 527 03a0 05E0     		b	.L17
 528              	.L16:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 529              		.loc 2 1028 23
 530 03a2 D7F8DC20 		ldr	r2, [r7, #220]
 531 03a6 D7F8D830 		ldr	r3, [r7, #216]
 532 03aa 62FA03F3 		ror	r3, r2, r3
 533              	.L17:
 534 03ae C7F8E430 		str	r3, [r7, #228]
 535              	.LBE94:
 536              	.LBE93:
 537              	.LBB95:
 538              	.LBB96:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 539              		.loc 2 1961 3
 540 03b2 D7F8E430 		ldr	r3, [r7, #228]
 541              		.syntax unified
ARM GAS  /tmp/ccsf0BNJ.s 			page 49


 542              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 543 03b6 2FFA83F3 		sxtb16 r3, r3
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547 03ba C7F8E030 		str	r3, [r7, #224]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 548              		.loc 2 1962 9
 549 03be D7F8E030 		ldr	r3, [r7, #224]
 550              	.LBE96:
 551              	.LBE95:
 552              		.loc 1 185 19
 553 03c2 C7F85031 		str	r3, [r7, #336]
 186:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = __SXTB16(inM11);
 554              		.loc 1 186 21
 555 03c6 D7F85431 		ldr	r3, [r7, #340]
 556 03ca C7F8EC30 		str	r3, [r7, #236]
 557              	.LBB97:
 558              	.LBB98:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 559              		.loc 2 1961 3
 560 03ce D7F8EC30 		ldr	r3, [r7, #236]
 561              		.syntax unified
 562              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 563 03d2 2FFA83F3 		sxtb16 r3, r3
 564              	@ 0 "" 2
 565              		.thumb
 566              		.syntax unified
 567 03d6 C7F8E830 		str	r3, [r7, #232]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 568              		.loc 2 1962 9
 569 03da D7F8E830 		ldr	r3, [r7, #232]
 570              	.LBE98:
 571              	.LBE97:
 572              		.loc 1 186 19
 573 03de C7F85431 		str	r3, [r7, #340]
 187:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inM11, inV, sum);
 574              		.loc 1 187 19
 575 03e2 D7F85411 		ldr	r1, [r7, #340]
 576 03e6 D7F85821 		ldr	r2, [r7, #344]
 577 03ea D7F8B031 		ldr	r3, [r7, #432]
 578 03ee C7F8FC10 		str	r1, [r7, #252]
 579 03f2 C7F8F820 		str	r2, [r7, #248]
 580 03f6 C7F8F430 		str	r3, [r7, #244]
 581              	.LBB99:
 582              	.LBB100:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 583              		.loc 2 1993 3
 584 03fa D7F8FC30 		ldr	r3, [r7, #252]
 585 03fe D7F8F820 		ldr	r2, [r7, #248]
 586 0402 D7F8F410 		ldr	r1, [r7, #244]
 587              		.syntax unified
 588              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 589 0406 23FB0213 		smlad r3, r3, r2, r1
 590              	@ 0 "" 2
 591              		.thumb
 592              		.syntax unified
ARM GAS  /tmp/ccsf0BNJ.s 			page 50


 593 040a C7F8F030 		str	r3, [r7, #240]
 594              		.loc 2 1994 9
 595 040e D7F8F030 		ldr	r3, [r7, #240]
 596              	.LBE100:
 597              	.LBE99:
 598              		.loc 1 187 17
 599 0412 C7F8B031 		str	r3, [r7, #432]
 188:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 = __SMLAD(inM12, inV, sum2);
 600              		.loc 1 188 20
 601 0416 D7F85011 		ldr	r1, [r7, #336]
 602 041a D7F85821 		ldr	r2, [r7, #344]
 603 041e D7F8AC31 		ldr	r3, [r7, #428]
 604 0422 C7F80C11 		str	r1, [r7, #268]
 605 0426 C7F80821 		str	r2, [r7, #264]
 606 042a C7F80431 		str	r3, [r7, #260]
 607              	.LBB101:
 608              	.LBB102:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 609              		.loc 2 1993 3
 610 042e D7F80C31 		ldr	r3, [r7, #268]
 611 0432 D7F80821 		ldr	r2, [r7, #264]
 612 0436 D7F80411 		ldr	r1, [r7, #260]
 613              		.syntax unified
 614              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 615 043a 23FB0213 		smlad r3, r3, r2, r1
 616              	@ 0 "" 2
 617              		.thumb
 618              		.syntax unified
 619 043e C7F80031 		str	r3, [r7, #256]
 620              		.loc 2 1994 9
 621 0442 D7F80031 		ldr	r3, [r7, #256]
 622              	.LBE102:
 623              	.LBE101:
 624              		.loc 1 188 18
 625 0446 C7F8AC31 		str	r3, [r7, #428]
 189:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = *__SIMD32(pB)++;
 626              		.loc 1 189 22
 627 044a 07F12002 		add	r2, r7, #32
 628 044e 1368     		ldr	r3, [r2]
 629              		.loc 1 189 34
 630 0450 191D     		adds	r1, r3, #4
 631 0452 1160     		str	r1, [r2]
 632              		.loc 1 189 19
 633 0454 1B68     		ldr	r3, [r3]
 634 0456 C7F84C31 		str	r3, [r7, #332]
 190:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM14 = __SXTB16(__ROR(inM13, 8));
 635              		.loc 1 190 21
 636 045a D7F84C31 		ldr	r3, [r7, #332]
 637 045e C7F81431 		str	r3, [r7, #276]
 638 0462 0823     		movs	r3, #8
 639 0464 C7F81031 		str	r3, [r7, #272]
 640              	.LBB103:
 641              	.LBB104:
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 642              		.loc 2 1023 7
 643 0468 D7F81031 		ldr	r3, [r7, #272]
 644 046c 03F01F03 		and	r3, r3, #31
ARM GAS  /tmp/ccsf0BNJ.s 			page 51


 645 0470 C7F81031 		str	r3, [r7, #272]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 646              		.loc 2 1024 6
 647 0474 D7F81031 		ldr	r3, [r7, #272]
 648 0478 002B     		cmp	r3, #0
 649 047a 02D1     		bne	.L22
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 650              		.loc 2 1026 12
 651 047c D7F81431 		ldr	r3, [r7, #276]
 652 0480 05E0     		b	.L23
 653              	.L22:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 654              		.loc 2 1028 23
 655 0482 D7F81421 		ldr	r2, [r7, #276]
 656 0486 D7F81031 		ldr	r3, [r7, #272]
 657 048a 62FA03F3 		ror	r3, r2, r3
 658              	.L23:
 659 048e C7F81C31 		str	r3, [r7, #284]
 660              	.LBE104:
 661              	.LBE103:
 662              	.LBB105:
 663              	.LBB106:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 664              		.loc 2 1961 3
 665 0492 D7F81C31 		ldr	r3, [r7, #284]
 666              		.syntax unified
 667              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 668 0496 2FFA83F3 		sxtb16 r3, r3
 669              	@ 0 "" 2
 670              		.thumb
 671              		.syntax unified
 672 049a C7F81831 		str	r3, [r7, #280]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 673              		.loc 2 1962 9
 674 049e D7F81831 		ldr	r3, [r7, #280]
 675              	.LBE106:
 676              	.LBE105:
 677              		.loc 1 190 19
 678 04a2 C7F84831 		str	r3, [r7, #328]
 191:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = __SXTB16(inM13);
 679              		.loc 1 191 21
 680 04a6 D7F84C31 		ldr	r3, [r7, #332]
 681 04aa C7F82431 		str	r3, [r7, #292]
 682              	.LBB107:
 683              	.LBB108:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 684              		.loc 2 1961 3
 685 04ae D7F82431 		ldr	r3, [r7, #292]
 686              		.syntax unified
 687              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 688 04b2 2FFA83F3 		sxtb16 r3, r3
 689              	@ 0 "" 2
 690              		.thumb
 691              		.syntax unified
 692 04b6 C7F82031 		str	r3, [r7, #288]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 693              		.loc 2 1962 9
ARM GAS  /tmp/ccsf0BNJ.s 			page 52


 694 04ba D7F82031 		ldr	r3, [r7, #288]
 695              	.LBE108:
 696              	.LBE107:
 697              		.loc 1 191 19
 698 04be C7F84C31 		str	r3, [r7, #332]
 192:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 = __SMLAD(inM13, inV, sum3);
 699              		.loc 1 192 20
 700 04c2 D7F84C11 		ldr	r1, [r7, #332]
 701 04c6 D7F85821 		ldr	r2, [r7, #344]
 702 04ca D7F8A831 		ldr	r3, [r7, #424]
 703 04ce C7F83411 		str	r1, [r7, #308]
 704 04d2 C7F83021 		str	r2, [r7, #304]
 705 04d6 C7F82C31 		str	r3, [r7, #300]
 706              	.LBB109:
 707              	.LBB110:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 708              		.loc 2 1993 3
 709 04da D7F83431 		ldr	r3, [r7, #308]
 710 04de D7F83021 		ldr	r2, [r7, #304]
 711 04e2 D7F82C11 		ldr	r1, [r7, #300]
 712              		.syntax unified
 713              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 714 04e6 23FB0213 		smlad r3, r3, r2, r1
 715              	@ 0 "" 2
 716              		.thumb
 717              		.syntax unified
 718 04ea C7F82831 		str	r3, [r7, #296]
 719              		.loc 2 1994 9
 720 04ee D7F82831 		ldr	r3, [r7, #296]
 721              	.LBE110:
 722              	.LBE109:
 723              		.loc 1 192 18
 724 04f2 C7F8A831 		str	r3, [r7, #424]
 193:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 = __SMLAD(inM14, inV, sum4);
 725              		.loc 1 193 20
 726 04f6 D7F84811 		ldr	r1, [r7, #328]
 727 04fa D7F85821 		ldr	r2, [r7, #344]
 728 04fe D7F8A431 		ldr	r3, [r7, #420]
 729 0502 C7F84411 		str	r1, [r7, #324]
 730 0506 C7F84021 		str	r2, [r7, #320]
 731 050a C7F83C31 		str	r3, [r7, #316]
 732              	.LBB111:
 733              	.LBB112:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 734              		.loc 2 1993 3
 735 050e D7F84431 		ldr	r3, [r7, #324]
 736 0512 D7F84021 		ldr	r2, [r7, #320]
 737 0516 D7F83C11 		ldr	r1, [r7, #316]
 738              		.syntax unified
 739              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 740 051a 23FB0213 		smlad r3, r3, r2, r1
 741              	@ 0 "" 2
 742              		.thumb
 743              		.syntax unified
 744 051e C7F83831 		str	r3, [r7, #312]
 745              		.loc 2 1994 9
 746 0522 D7F83831 		ldr	r3, [r7, #312]
ARM GAS  /tmp/ccsf0BNJ.s 			page 53


 747              	.LBE112:
 748              	.LBE111:
 749              		.loc 1 193 18
 750 0526 C7F8A431 		str	r3, [r7, #420]
 194:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 751              		.loc 1 194 19
 752 052a B7F8A231 		ldrh	r3, [r7, #418]
 753 052e 013B     		subs	r3, r3, #1
 754 0530 A7F8A231 		strh	r3, [r7, #418]	@ movhi
 755              	.L3:
 756              	.LBE72:
 166:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 757              		.loc 1 166 15
 758 0534 B7F8A231 		ldrh	r3, [r7, #418]
 759 0538 002B     		cmp	r3, #0
 760 053a 7FF4F0AD 		bne	.L28
 195:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 196:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #else
 197:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 198:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 199:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q31_t     inM11, inM12, inM13, inM14;
 200:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q31_t     inV;
 201:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 202:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV = *__SIMD32(pA)++;
 203:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = *__SIMD32(pB)++;
 204:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM12 = __SXTB16(__ROR(inM11, 8));
 205:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = __SXTB16(inM11);
 206:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inM12, inV, sum);
 207:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 = __SMLAD(inM11, inV, sum2);
 208:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = *__SIMD32(pB)++;
 209:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM14 = __SXTB16(__ROR(inM13, 8));
 210:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = __SXTB16(inM13);
 211:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 = __SMLAD(inM14, inV, sum3);
 212:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 = __SMLAD(inM13, inV, sum4);
 213:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 214:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV = *__SIMD32(pA)++;
 215:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = *__SIMD32(pB)++;
 216:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM12 = __SXTB16(__ROR(inM11, 8));
 217:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM11 = __SXTB16(inM11);
 218:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inM12, inV, sum);
 219:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 = __SMLAD(inM11, inV, sum2);
 220:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = *__SIMD32(pB)++;
 221:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM14 = __SXTB16(__ROR(inM13, 8));
 222:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inM13 = __SXTB16(inM13);
 223:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 = __SMLAD(inM14, inV, sum3);
 224:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 = __SMLAD(inM13, inV, sum4);
 225:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 226:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 227:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #endif                          /* ARM_MATH_BIG_ENDIAN */
 228:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 229:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #else
 230:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 231:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         /*
 232:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * register needed:
 233:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * loop counter: colCnt
 234:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * accumulators: sum, sum2, sum3, sum4
 235:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * pointers: pB, pA
ARM GAS  /tmp/ccsf0BNJ.s 			page 54


 236:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * weight data: inM11, inM12, inM13, inM14
 237:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          * activation data: inV
 238:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****          */
 239:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 240:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #ifndef ARM_MATH_BIG_ENDIAN
 241:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         asm volatile ("COL_LOOP_%=:\n"
 242:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r4, [%[pA]], #8\n"
 243:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r1, [%[pB]], #16\n"
 244:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r0, r1, ror #8\n"
 245:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r0, r0\n"
 246:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r1, r1\n"
 247:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum], r4, r1, %[sum]\n"
 248:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum2], r4, r0, %[sum2]\n"
 249:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r3, [%[pB], #-12]\n"
 250:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r2, r3, ror #8\n"
 251:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r2, r2\n"
 252:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r3, r3\n"
 253:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum3], r4, r3, %[sum3]\n"
 254:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum4], r4, r2, %[sum4]\n"
 255:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r4, [%[pA], #-4]\n"
 256:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r1, [%[pB], #-8]\n"
 257:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r0, r1, ror #8\n"
 258:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r0, r0\n"
 259:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r1, r1\n"
 260:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum], r4, r1, %[sum]\n"
 261:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum2], r4, r0, %[sum2]\n"
 262:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r3, [%[pB], #-4]\n"
 263:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r2, r3, ror #8\n"
 264:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r2, r2\n"
 265:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r3, r3\n"
 266:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum3], r4, r3, %[sum3]\n"
 267:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum4], r4, r2, %[sum4]\n"
 268:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "subs %[colCnt], #1\n"
 269:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "bne COL_LOOP_%=\n":[sum] "+r"(sum),
 270:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       [sum2] "+r"(sum2),[sum3] "+r"(sum3),
 271:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       [sum4] "+r"(sum4),[pB] "+r"(pB),[pA] "+r"(pA):[colCnt] "r"(colCnt):"r0", "r1"
 272:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #else
 273:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         asm volatile ("COL_LOOP_%=:\n"
 274:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r4, [%[pA]], #8\n"
 275:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r1, [%[pB]], #16\n"
 276:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r0, r1, ror #8\n"
 277:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r0, r0\n"
 278:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r1, r1\n"
 279:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum], r4, r0, %[sum]\n"
 280:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum2], r4, r1, %[sum2]\n"
 281:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r3, [%[pB], #-12]\n"
 282:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r2, r3, ror #8\n"
 283:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r2, r2\n"
 284:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r3, r3\n"
 285:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum3], r4, r2, %[sum3]\n"
 286:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum4], r4, r3, %[sum4]\n"
 287:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r4, [%[pA], #-4]\n"
 288:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r1, [%[pB], #-8]\n"
 289:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r0, r1, ror #8\n"
 290:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r0, r0\n"
 291:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r1, r1\n"
 292:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum], r4, r0, %[sum]\n"
ARM GAS  /tmp/ccsf0BNJ.s 			page 55


 293:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum2], r4, r1, %[sum2]\n"
 294:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "ldr.w r3, [%[pB], #-4]\n"
 295:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "mov.w r2, r3, ror #8\n"
 296:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r2, r2\n"
 297:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "sxtb16 r3, r3\n"
 298:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum3], r4, r2, %[sum3]\n"
 299:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "smlad %[sum4], r4, r3, %[sum4]\n"
 300:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "subs %[colCnt], #1\n"
 301:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       "bne COL_LOOP_%=\n":[sum] "+r"(sum),
 302:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       [sum2] "+r"(sum2),[sum3] "+r"(sum3),
 303:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****                       [sum4] "+r"(sum4),[pB] "+r"(pB),[pA] "+r"(pA):[colCnt] "r"(colCnt):"r0", "r1"
 304:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #endif                          /* ARM_MATH_BIG_ENDIAN */
 305:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 306:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #endif                          /* USE_INTRINSIC */
 307:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 308:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         colCnt = dim_vec & 0x3;
 761              		.loc 1 308 16
 762 053e BB1D     		adds	r3, r7, #6
 763 0540 1B88     		ldrh	r3, [r3]	@ movhi
 764 0542 03F00303 		and	r3, r3, #3
 765 0546 A7F8A231 		strh	r3, [r7, #418]	@ movhi
 309:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 766              		.loc 1 309 15
 767 054a 62E0     		b	.L29
 768              	.L30:
 769              	.LBB113:
 310:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 311:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q15_t     inV = *pA++;
 770              		.loc 1 311 32
 771 054c 07F11C03 		add	r3, r7, #28
 772 0550 1B68     		ldr	r3, [r3]
 773 0552 991C     		adds	r1, r3, #2
 774 0554 07F11C02 		add	r2, r7, #28
 775 0558 1160     		str	r1, [r2]
 776              		.loc 1 311 23
 777 055a 1B88     		ldrh	r3, [r3]	@ movhi
 778 055c A7F86231 		strh	r3, [r7, #354]	@ movhi
 312:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inM = *pB++;
 779              		.loc 1 312 32
 780 0560 07F12003 		add	r3, r7, #32
 781 0564 1B68     		ldr	r3, [r3]
 782 0566 591C     		adds	r1, r3, #1
 783 0568 07F12002 		add	r2, r7, #32
 784 056c 1160     		str	r1, [r2]
 785              		.loc 1 312 23
 786 056e 1B78     		ldrb	r3, [r3]
 787 0570 87F86131 		strb	r3, [r7, #353]
 313:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inM2 = *pB++;
 788              		.loc 1 313 33
 789 0574 07F12003 		add	r3, r7, #32
 790 0578 1B68     		ldr	r3, [r3]
 791 057a 591C     		adds	r1, r3, #1
 792 057c 07F12002 		add	r2, r7, #32
 793 0580 1160     		str	r1, [r2]
 794              		.loc 1 313 23
 795 0582 1B78     		ldrb	r3, [r3]
 796 0584 87F86031 		strb	r3, [r7, #352]
ARM GAS  /tmp/ccsf0BNJ.s 			page 56


 314:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inM3 = *pB++;
 797              		.loc 1 314 33
 798 0588 07F12003 		add	r3, r7, #32
 799 058c 1B68     		ldr	r3, [r3]
 800 058e 591C     		adds	r1, r3, #1
 801 0590 07F12002 		add	r2, r7, #32
 802 0594 1160     		str	r1, [r2]
 803              		.loc 1 314 23
 804 0596 1B78     		ldrb	r3, [r3]
 805 0598 87F85F31 		strb	r3, [r7, #351]
 315:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inM4 = *pB++;
 806              		.loc 1 315 33
 807 059c 07F12003 		add	r3, r7, #32
 808 05a0 1B68     		ldr	r3, [r3]
 809 05a2 591C     		adds	r1, r3, #1
 810 05a4 07F12002 		add	r2, r7, #32
 811 05a8 1160     		str	r1, [r2]
 812              		.loc 1 315 23
 813 05aa 1B78     		ldrb	r3, [r3]
 814 05ac 87F85E31 		strb	r3, [r7, #350]
 316:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 317:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum += inV * inM;
 815              		.loc 1 317 24
 816 05b0 B7F96231 		ldrsh	r3, [r7, #354]
 817 05b4 97F96121 		ldrsb	r2, [r7, #353]
 818 05b8 02FB03F3 		mul	r3, r2, r3
 819              		.loc 1 317 17
 820 05bc D7F8B021 		ldr	r2, [r7, #432]
 821 05c0 1344     		add	r3, r3, r2
 822 05c2 C7F8B031 		str	r3, [r7, #432]
 318:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 += inV * inM2;
 823              		.loc 1 318 25
 824 05c6 B7F96231 		ldrsh	r3, [r7, #354]
 825 05ca 97F96021 		ldrsb	r2, [r7, #352]
 826 05ce 02FB03F3 		mul	r3, r2, r3
 827              		.loc 1 318 18
 828 05d2 D7F8AC21 		ldr	r2, [r7, #428]
 829 05d6 1344     		add	r3, r3, r2
 830 05d8 C7F8AC31 		str	r3, [r7, #428]
 319:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 += inV * inM3;
 831              		.loc 1 319 25
 832 05dc B7F96231 		ldrsh	r3, [r7, #354]
 833 05e0 97F95F21 		ldrsb	r2, [r7, #351]
 834 05e4 02FB03F3 		mul	r3, r2, r3
 835              		.loc 1 319 18
 836 05e8 D7F8A821 		ldr	r2, [r7, #424]
 837 05ec 1344     		add	r3, r3, r2
 838 05ee C7F8A831 		str	r3, [r7, #424]
 320:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 += inV * inM4;
 839              		.loc 1 320 25
 840 05f2 B7F96231 		ldrsh	r3, [r7, #354]
 841 05f6 97F95E21 		ldrsb	r2, [r7, #350]
 842 05fa 02FB03F3 		mul	r3, r2, r3
 843              		.loc 1 320 18
 844 05fe D7F8A421 		ldr	r2, [r7, #420]
 845 0602 1344     		add	r3, r3, r2
 846 0604 C7F8A431 		str	r3, [r7, #420]
ARM GAS  /tmp/ccsf0BNJ.s 			page 57


 321:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 847              		.loc 1 321 19
 848 0608 B7F8A231 		ldrh	r3, [r7, #418]
 849 060c 013B     		subs	r3, r3, #1
 850 060e A7F8A231 		strh	r3, [r7, #418]	@ movhi
 851              	.L29:
 852              	.LBE113:
 309:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 853              		.loc 1 309 15
 854 0612 B7F8A231 		ldrh	r3, [r7, #418]
 855 0616 002B     		cmp	r3, #0
 856 0618 98D1     		bne	.L30
 857              	.LBB114:
 322:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }                       /* while over colCnt */
 323:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) (__SSAT((sum >> out_shift), 8));
 858              		.loc 1 323 25
 859 061a B7F8D431 		ldrh	r3, [r7, #468]
 860 061e D7F8B021 		ldr	r2, [r7, #432]
 861 0622 42FA03F3 		asr	r3, r2, r3
 862 0626 C7F88031 		str	r3, [r7, #384]
 863 062a D7F88031 		ldr	r3, [r7, #384]
 864              		.syntax unified
 865              	@ 323 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c" 1
 866 062e 03F30703 		ssat r3, #8, r3
 867              	@ 0 "" 2
 868              		.thumb
 869              		.syntax unified
 870 0632 C7F87C31 		str	r3, [r7, #380]
 871 0636 D7F87C11 		ldr	r1, [r7, #380]
 872              	.LBE114:
 873              		.loc 1 323 12
 874 063a D7F8BC31 		ldr	r3, [r7, #444]
 875 063e 5A1C     		adds	r2, r3, #1
 876 0640 C7F8BC21 		str	r2, [r7, #444]
 877              		.loc 1 323 17
 878 0644 4AB2     		sxtb	r2, r1
 879              		.loc 1 323 15
 880 0646 1A70     		strb	r2, [r3]
 881              	.LBB115:
 324:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) (__SSAT((sum2 >> out_shift), 8));
 882              		.loc 1 324 25
 883 0648 B7F8D431 		ldrh	r3, [r7, #468]
 884 064c D7F8AC21 		ldr	r2, [r7, #428]
 885 0650 42FA03F3 		asr	r3, r2, r3
 886 0654 C7F87831 		str	r3, [r7, #376]
 887 0658 D7F87831 		ldr	r3, [r7, #376]
 888              		.syntax unified
 889              	@ 324 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c" 1
 890 065c 03F30703 		ssat r3, #8, r3
 891              	@ 0 "" 2
 892              		.thumb
 893              		.syntax unified
 894 0660 C7F87431 		str	r3, [r7, #372]
 895 0664 D7F87411 		ldr	r1, [r7, #372]
 896              	.LBE115:
 897              		.loc 1 324 12
 898 0668 D7F8BC31 		ldr	r3, [r7, #444]
ARM GAS  /tmp/ccsf0BNJ.s 			page 58


 899 066c 5A1C     		adds	r2, r3, #1
 900 066e C7F8BC21 		str	r2, [r7, #444]
 901              		.loc 1 324 17
 902 0672 4AB2     		sxtb	r2, r1
 903              		.loc 1 324 15
 904 0674 1A70     		strb	r2, [r3]
 905              	.LBB116:
 325:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) (__SSAT((sum3 >> out_shift), 8));
 906              		.loc 1 325 25
 907 0676 B7F8D431 		ldrh	r3, [r7, #468]
 908 067a D7F8A821 		ldr	r2, [r7, #424]
 909 067e 42FA03F3 		asr	r3, r2, r3
 910 0682 C7F87031 		str	r3, [r7, #368]
 911 0686 D7F87031 		ldr	r3, [r7, #368]
 912              		.syntax unified
 913              	@ 325 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c" 1
 914 068a 03F30703 		ssat r3, #8, r3
 915              	@ 0 "" 2
 916              		.thumb
 917              		.syntax unified
 918 068e C7F86C31 		str	r3, [r7, #364]
 919 0692 D7F86C11 		ldr	r1, [r7, #364]
 920              	.LBE116:
 921              		.loc 1 325 12
 922 0696 D7F8BC31 		ldr	r3, [r7, #444]
 923 069a 5A1C     		adds	r2, r3, #1
 924 069c C7F8BC21 		str	r2, [r7, #444]
 925              		.loc 1 325 17
 926 06a0 4AB2     		sxtb	r2, r1
 927              		.loc 1 325 15
 928 06a2 1A70     		strb	r2, [r3]
 929              	.LBB117:
 326:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) (__SSAT((sum4 >> out_shift), 8));
 930              		.loc 1 326 25
 931 06a4 B7F8D431 		ldrh	r3, [r7, #468]
 932 06a8 D7F8A421 		ldr	r2, [r7, #420]
 933 06ac 42FA03F3 		asr	r3, r2, r3
 934 06b0 C7F86831 		str	r3, [r7, #360]
 935 06b4 D7F86831 		ldr	r3, [r7, #360]
 936              		.syntax unified
 937              	@ 326 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c" 1
 938 06b8 03F30703 		ssat r3, #8, r3
 939              	@ 0 "" 2
 940              		.thumb
 941              		.syntax unified
 942 06bc C7F86431 		str	r3, [r7, #356]
 943 06c0 D7F86411 		ldr	r1, [r7, #356]
 944              	.LBE117:
 945              		.loc 1 326 12
 946 06c4 D7F8BC31 		ldr	r3, [r7, #444]
 947 06c8 5A1C     		adds	r2, r3, #1
 948 06ca C7F8BC21 		str	r2, [r7, #444]
 949              		.loc 1 326 17
 950 06ce 4AB2     		sxtb	r2, r1
 951              		.loc 1 326 15
 952 06d0 1A70     		strb	r2, [r3]
 327:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 59


 328:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         /* adjust the pointers and counters */
 329:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         rowCnt--;
 953              		.loc 1 329 15
 954 06d2 B7F8B631 		ldrh	r3, [r7, #438]
 955 06d6 013B     		subs	r3, r3, #1
 956 06d8 A7F8B631 		strh	r3, [r7, #438]	@ movhi
 957              	.L2:
 958              	.LBE71:
 151:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 959              		.loc 1 151 11
 960 06dc B7F8B631 		ldrh	r3, [r7, #438]
 961 06e0 002B     		cmp	r3, #0
 962 06e2 7FF4B9AC 		bne	.L31
 330:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     }
 331:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 332:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     /* left-over part of the rows */
 333:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     rowCnt = num_of_rows & 0x3;
 963              		.loc 1 333 12
 964 06e6 3B1D     		adds	r3, r7, #4
 965 06e8 1B88     		ldrh	r3, [r3]	@ movhi
 966 06ea 03F00303 		and	r3, r3, #3
 967 06ee A7F8B631 		strh	r3, [r7, #438]	@ movhi
 334:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 335:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     while (rowCnt)
 968              		.loc 1 335 11
 969 06f2 38E1     		b	.L32
 970              	.L44:
 971              	.LBB118:
 336:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 337:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 972              		.loc 1 337 40
 973 06f4 D7F8B831 		ldr	r3, [r7, #440]
 974 06f8 5A1C     		adds	r2, r3, #1
 975 06fa C7F8B821 		str	r2, [r7, #440]
 976              		.loc 1 337 34
 977 06fe 93F90030 		ldrsb	r3, [r3]
 978              		.loc 1 337 26
 979 0702 1A46     		mov	r2, r3
 980              		.loc 1 337 44
 981 0704 B7F8D031 		ldrh	r3, [r7, #464]
 982 0708 02FA03F3 		lsl	r3, r2, r3
 983 070c 1946     		mov	r1, r3
 984              		.loc 1 337 61
 985 070e B7F8D431 		ldrh	r3, [r7, #468]
 986 0712 0122     		movs	r2, #1
 987 0714 02FA03F3 		lsl	r3, r2, r3
 988 0718 5B08     		lsrs	r3, r3, #1
 989              		.loc 1 337 59
 990 071a 0B44     		add	r3, r3, r1
 991              		.loc 1 337 19
 992 071c C7F89C31 		str	r3, [r7, #412]
 338:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         uint16_t  colCnt = dim_vec >> 2;
 993              		.loc 1 338 19
 994 0720 BB1D     		adds	r3, r7, #6
 995 0722 1B88     		ldrh	r3, [r3]
 996 0724 9B08     		lsrs	r3, r3, #2
 997 0726 A7F89A31 		strh	r3, [r7, #410]	@ movhi
ARM GAS  /tmp/ccsf0BNJ.s 			page 60


 339:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 340:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         pA = vec_buffer;
 998              		.loc 1 340 12
 999 072a 07F11C03 		add	r3, r7, #28
 1000 072e D7F8E021 		ldr	r2, [r7, #480]
 1001 0732 1A60     		str	r2, [r3]
 341:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 342:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 1002              		.loc 1 342 15
 1003 0734 C7E0     		b	.L33
 1004              	.L41:
 1005              	.LBB119:
 343:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 344:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q31_t     inV1, inV2, inM11, inM12;
 345:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 346:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             pB = (q7_t *) read_and_pad_reordered((void *)pB, &inM11, &inM12);
 1006              		.loc 1 346 27
 1007 0736 07F12003 		add	r3, r7, #32
 1008 073a 1A68     		ldr	r2, [r3]
 1009 073c 07F11003 		add	r3, r7, #16
 1010 0740 1A60     		str	r2, [r3]
 1011 0742 07F14403 		add	r3, r7, #68
 1012 0746 07F11802 		add	r2, r7, #24
 1013 074a 1A60     		str	r2, [r3]
 1014 074c 07F14003 		add	r3, r7, #64
 1015 0750 07F11402 		add	r2, r7, #20
 1016 0754 1A60     		str	r2, [r3]
 1017              	.LBB120:
 1018              	.LBB121:
 1019              		.file 3 "./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h"
   1:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /*
   2:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   4:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
   6:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  10:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  12:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  18:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  19:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Title:        arm_nnsupportfunctions.h
  22:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Description:  Public header file of support functions for CMSIS NN Library
  23:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  24:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Date:        13. July 2018
  25:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  27:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Target Processor:  Cortex-M cores
ARM GAS  /tmp/ccsf0BNJ.s 			page 61


  28:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * -------------------------------------------------------------------- */
  29:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  30:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef _ARM_NNSUPPORTFUNCTIONS_H_
  31:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define _ARM_NNSUPPORTFUNCTIONS_H_
  32:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  33:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_math.h"
  34:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #include "arm_common_tables.h"
  35:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  36:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifdef __cplusplus
  37:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** extern    "C"
  38:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  39:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
  40:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  41:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define LEFT_SHIFT(_shift)  (_shift > 0 ? _shift : 0)
  42:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define RIGHT_SHIFT(_shift) (_shift > 0 ? 0 : -_shift)
  43:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MIN (0x80000000L)
  44:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #define Q31_MAX (0x7FFFFFFFL)
  45:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  46:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  47:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Union for SIMD access of Q31/Q15/Q7 types
  48:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  49:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** union arm_nnword
  50:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  51:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q31_t     word;
  52:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q31 type */
  53:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q15_t     half_words[2];
  54:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q15 type */
  55:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     q7_t      bytes[4];
  56:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                /**< Q7 type */
  57:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** };
  58:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  59:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  60:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Struct for specifying activation function types
  61:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  62:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  63:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** typedef enum
  64:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
  65:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_SIGMOID = 0,
  66:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****                 /**< Sigmoid activation function */
  67:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****     ARM_TANH = 1,
  68:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****              /**< Tanh activation function */
  69:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** } arm_nn_activation_type;
  70:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  71:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  72:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @defgroup nndata_convert Neural Network Data Conversion Functions
  73:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  74:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * Perform data type conversion in-between neural network operations
  75:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  76:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  77:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  78:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  79:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief Converts the elements of the Q7 vector to Q15 vector without left-shift
  80:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  81:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  82:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  83:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  84:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
ARM GAS  /tmp/ccsf0BNJ.s 			page 62


  85:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  86:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  87:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  88:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  89:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
  90:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief  Converts the elements of the Q7 vector to reordered Q15 vector without left-shift
  91:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       *pSrc points to the Q7 input vector
  92:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[out]      *pDst points to the Q15 output vector
  93:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @param[in]       blockSize length of the input vector
  94:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @return none.
  95:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  *
  96:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
  97:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
  98:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** void      arm_q7_to_q15_reordered_no_shift(const q7_t * pSrc, q15_t * pDst, uint32_t blockSize);
  99:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 100:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #if defined (ARM_MATH_DSP)
 101:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 102:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
 103:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief read and expand one Q7 word into two Q15 words
 104:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
 105:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 106:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** __STATIC_FORCEINLINE void *read_and_pad(void *source, q31_t * out1, q31_t * out2)
 107:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 108:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inA = *__SIMD32(source)++;
 109:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf1 = __SXTB16(__ROR(inA, 8));
 110:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inAbuf2 = __SXTB16(inA);
 111:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 112:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef ARM_MATH_BIG_ENDIAN
 113:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHTB(inAbuf1, inAbuf2, 16);
 114:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHBT(inAbuf2, inAbuf1, 16);
 115:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 116:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __PKHTB(inAbuf1, inAbuf2, 16);
 117:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __PKHBT(inAbuf2, inAbuf1, 16);
 118:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
 119:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 120:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         return source;
 121:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** }
 122:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 123:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** /**
 124:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  * @brief read and expand one Q7 word into two Q15 words with reordering
 125:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****  */
 126:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 127:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** __STATIC_FORCEINLINE void *read_and_pad_reordered(void *source, q31_t * out1, q31_t * out2)
 128:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** {
 129:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         q31_t     inA = *__SIMD32(source)++;
 1020              		.loc 3 129 26
 1021 0756 07F11002 		add	r2, r7, #16
 1022 075a 1368     		ldr	r3, [r2]
 1023              		.loc 3 129 42
 1024 075c 191D     		adds	r1, r3, #4
 1025 075e 1160     		str	r1, [r2]
 1026              		.loc 3 129 19
 1027 0760 07F13C02 		add	r2, r7, #60
 1028 0764 1B68     		ldr	r3, [r3]
 1029 0766 1360     		str	r3, [r2]
 130:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #ifndef ARM_MATH_BIG_ENDIAN
 131:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __SXTB16(__ROR(inA, 8));
ARM GAS  /tmp/ccsf0BNJ.s 			page 63


 1030              		.loc 3 131 17
 1031 0768 07F13C03 		add	r3, r7, #60
 1032 076c 1A68     		ldr	r2, [r3]
 1033 076e 07F13803 		add	r3, r7, #56
 1034 0772 1A60     		str	r2, [r3]
 1035 0774 07F13403 		add	r3, r7, #52
 1036 0778 0822     		movs	r2, #8
 1037 077a 1A60     		str	r2, [r3]
 1038              	.LBB122:
 1039              	.LBB123:
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 1040              		.loc 2 1023 7
 1041 077c 07F13403 		add	r3, r7, #52
 1042 0780 07F13402 		add	r2, r7, #52
 1043 0784 1268     		ldr	r2, [r2]
 1044 0786 02F01F02 		and	r2, r2, #31
 1045 078a 1A60     		str	r2, [r3]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 1046              		.loc 2 1024 6
 1047 078c 07F13403 		add	r3, r7, #52
 1048 0790 1B68     		ldr	r3, [r3]
 1049 0792 002B     		cmp	r3, #0
 1050 0794 03D1     		bne	.L34
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 1051              		.loc 2 1026 12
 1052 0796 07F13803 		add	r3, r7, #56
 1053 079a 1B68     		ldr	r3, [r3]
 1054 079c 07E0     		b	.L35
 1055              	.L34:
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1056              		.loc 2 1028 23
 1057 079e 07F13802 		add	r2, r7, #56
 1058 07a2 07F13403 		add	r3, r7, #52
 1059 07a6 1268     		ldr	r2, [r2]
 1060 07a8 1B68     		ldr	r3, [r3]
 1061 07aa 62FA03F3 		ror	r3, r2, r3
 1062              	.L35:
 1063 07ae 07F13002 		add	r2, r7, #48
 1064 07b2 1360     		str	r3, [r2]
 1065              	.LBE123:
 1066              	.LBE122:
 1067              	.LBB124:
 1068              	.LBB125:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1069              		.loc 2 1961 3
 1070 07b4 07F13003 		add	r3, r7, #48
 1071 07b8 1B68     		ldr	r3, [r3]
 1072              		.syntax unified
 1073              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1074 07ba 2FFA83F2 		sxtb16 r2, r3
 1075              	@ 0 "" 2
 1076              		.thumb
 1077              		.syntax unified
 1078 07be 07F12C03 		add	r3, r7, #44
 1079 07c2 1A60     		str	r2, [r3]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1080              		.loc 2 1962 9
ARM GAS  /tmp/ccsf0BNJ.s 			page 64


 1081 07c4 07F12C03 		add	r3, r7, #44
 1082 07c8 1B68     		ldr	r3, [r3]
 1083              	.LBE125:
 1084              	.LBE124:
 1085              		.loc 3 131 17
 1086 07ca 1A46     		mov	r2, r3
 1087              		.loc 3 131 15
 1088 07cc 07F14003 		add	r3, r7, #64
 1089 07d0 1B68     		ldr	r3, [r3]
 1090 07d2 1A60     		str	r2, [r3]
 132:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __SXTB16(inA);
 1091              		.loc 3 132 17
 1092 07d4 07F13C03 		add	r3, r7, #60
 1093 07d8 1A68     		ldr	r2, [r3]
 1094 07da 07F12803 		add	r3, r7, #40
 1095 07de 1A60     		str	r2, [r3]
 1096              	.LBB126:
 1097              	.LBB127:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1098              		.loc 2 1961 3
 1099 07e0 07F12803 		add	r3, r7, #40
 1100 07e4 1B68     		ldr	r3, [r3]
 1101              		.syntax unified
 1102              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1103 07e6 2FFA83F2 		sxtb16 r2, r3
 1104              	@ 0 "" 2
 1105              		.thumb
 1106              		.syntax unified
 1107 07ea 07F12403 		add	r3, r7, #36
 1108 07ee 1A60     		str	r2, [r3]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1109              		.loc 2 1962 9
 1110 07f0 07F12403 		add	r3, r7, #36
 1111 07f4 1B68     		ldr	r3, [r3]
 1112              	.LBE127:
 1113              	.LBE126:
 1114              		.loc 3 132 17
 1115 07f6 1A46     		mov	r2, r3
 1116              		.loc 3 132 15
 1117 07f8 07F14403 		add	r3, r7, #68
 1118 07fc 1B68     		ldr	r3, [r3]
 1119 07fe 1A60     		str	r2, [r3]
 133:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #else
 134:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out1 = __SXTB16(__ROR(inA, 8));
 135:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         *out2 = __SXTB16(inA);
 136:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** #endif
 137:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h **** 
 138:./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h ****         return source;
 1120              		.loc 3 138 16
 1121 0800 07F11003 		add	r3, r7, #16
 1122 0804 1A68     		ldr	r2, [r3]
 1123              	.LBE121:
 1124              	.LBE120:
 1125              		.loc 1 346 16
 1126 0806 07F12003 		add	r3, r7, #32
 1127 080a 1A60     		str	r2, [r3]
 347:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
ARM GAS  /tmp/ccsf0BNJ.s 			page 65


 348:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV1 = *__SIMD32(pA)++;
 1128              		.loc 1 348 21
 1129 080c 07F11C02 		add	r2, r7, #28
 1130 0810 1368     		ldr	r3, [r2]
 1131              		.loc 1 348 33
 1132 0812 191D     		adds	r1, r3, #4
 1133 0814 1160     		str	r1, [r2]
 1134              		.loc 1 348 18
 1135 0816 1B68     		ldr	r3, [r3]
 1136 0818 C7F88831 		str	r3, [r7, #392]
 349:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inV1, inM11, sum);
 1137              		.loc 1 349 19
 1138 081c D7F88811 		ldr	r1, [r7, #392]
 1139 0820 07F11803 		add	r3, r7, #24
 1140 0824 1B68     		ldr	r3, [r3]
 1141 0826 1846     		mov	r0, r3
 1142 0828 D7F89C21 		ldr	r2, [r7, #412]
 1143 082c 07F15403 		add	r3, r7, #84
 1144 0830 1960     		str	r1, [r3]
 1145 0832 07F15003 		add	r3, r7, #80
 1146 0836 1860     		str	r0, [r3]
 1147 0838 07F14C03 		add	r3, r7, #76
 1148 083c 1A60     		str	r2, [r3]
 1149              	.LBB128:
 1150              	.LBB129:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1151              		.loc 2 1993 3
 1152 083e 07F15403 		add	r3, r7, #84
 1153 0842 1B68     		ldr	r3, [r3]
 1154 0844 07F15002 		add	r2, r7, #80
 1155 0848 1268     		ldr	r2, [r2]
 1156 084a 07F14C01 		add	r1, r7, #76
 1157 084e 0968     		ldr	r1, [r1]
 1158              		.syntax unified
 1159              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1160 0850 23FB0212 		smlad r2, r3, r2, r1
 1161              	@ 0 "" 2
 1162              		.thumb
 1163              		.syntax unified
 1164 0854 07F14803 		add	r3, r7, #72
 1165 0858 1A60     		str	r2, [r3]
 1166              		.loc 2 1994 9
 1167 085a 07F14803 		add	r3, r7, #72
 1168 085e 1B68     		ldr	r3, [r3]
 1169              	.LBE129:
 1170              	.LBE128:
 1171              		.loc 1 349 17
 1172 0860 C7F89C31 		str	r3, [r7, #412]
 350:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 351:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inV2 = *__SIMD32(pA)++;
 1173              		.loc 1 351 21
 1174 0864 07F11C02 		add	r2, r7, #28
 1175 0868 1368     		ldr	r3, [r2]
 1176              		.loc 1 351 33
 1177 086a 191D     		adds	r1, r3, #4
 1178 086c 1160     		str	r1, [r2]
 1179              		.loc 1 351 18
ARM GAS  /tmp/ccsf0BNJ.s 			page 66


 1180 086e 1B68     		ldr	r3, [r3]
 1181 0870 C7F88431 		str	r3, [r7, #388]
 352:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum = __SMLAD(inV2, inM12, sum);
 1182              		.loc 1 352 19
 1183 0874 D7F88411 		ldr	r1, [r7, #388]
 1184 0878 07F11403 		add	r3, r7, #20
 1185 087c 1B68     		ldr	r3, [r3]
 1186 087e 1846     		mov	r0, r3
 1187 0880 D7F89C21 		ldr	r2, [r7, #412]
 1188 0884 07F16403 		add	r3, r7, #100
 1189 0888 1960     		str	r1, [r3]
 1190 088a 07F16003 		add	r3, r7, #96
 1191 088e 1860     		str	r0, [r3]
 1192 0890 07F15C03 		add	r3, r7, #92
 1193 0894 1A60     		str	r2, [r3]
 1194              	.LBB130:
 1195              	.LBB131:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 1196              		.loc 2 1993 3
 1197 0896 07F16403 		add	r3, r7, #100
 1198 089a 1B68     		ldr	r3, [r3]
 1199 089c 07F16002 		add	r2, r7, #96
 1200 08a0 1268     		ldr	r2, [r2]
 1201 08a2 07F15C01 		add	r1, r7, #92
 1202 08a6 0968     		ldr	r1, [r1]
 1203              		.syntax unified
 1204              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1205 08a8 23FB0212 		smlad r2, r3, r2, r1
 1206              	@ 0 "" 2
 1207              		.thumb
 1208              		.syntax unified
 1209 08ac 07F15803 		add	r3, r7, #88
 1210 08b0 1A60     		str	r2, [r3]
 1211              		.loc 2 1994 9
 1212 08b2 07F15803 		add	r3, r7, #88
 1213 08b6 1B68     		ldr	r3, [r3]
 1214              	.LBE131:
 1215              	.LBE130:
 1216              		.loc 1 352 17
 1217 08b8 C7F89C31 		str	r3, [r7, #412]
 353:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 354:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 1218              		.loc 1 354 19
 1219 08bc B7F89A31 		ldrh	r3, [r7, #410]
 1220 08c0 013B     		subs	r3, r3, #1
 1221 08c2 A7F89A31 		strh	r3, [r7, #410]	@ movhi
 1222              	.L33:
 1223              	.LBE119:
 342:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 1224              		.loc 1 342 15
 1225 08c6 B7F89A31 		ldrh	r3, [r7, #410]
 1226 08ca 002B     		cmp	r3, #0
 1227 08cc 7FF433AF 		bne	.L41
 355:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 356:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 357:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         /* left-over of the vector */
 358:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         colCnt = dim_vec & 0x3;
ARM GAS  /tmp/ccsf0BNJ.s 			page 67


 1228              		.loc 1 358 16
 1229 08d0 BB1D     		adds	r3, r7, #6
 1230 08d2 1B88     		ldrh	r3, [r3]	@ movhi
 1231 08d4 03F00303 		and	r3, r3, #3
 1232 08d8 A7F89A31 		strh	r3, [r7, #410]	@ movhi
 359:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 1233              		.loc 1 359 15
 1234 08dc 23E0     		b	.L42
 1235              	.L43:
 1236              	.LBB132:
 360:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 361:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q15_t     inV = *pA++;
 1237              		.loc 1 361 32
 1238 08de 07F11C03 		add	r3, r7, #28
 1239 08e2 1B68     		ldr	r3, [r3]
 1240 08e4 991C     		adds	r1, r3, #2
 1241 08e6 07F11C02 		add	r2, r7, #28
 1242 08ea 1160     		str	r1, [r2]
 1243              		.loc 1 361 23
 1244 08ec 1B88     		ldrh	r3, [r3]	@ movhi
 1245 08ee A7F88E31 		strh	r3, [r7, #398]	@ movhi
 362:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inM = *pB++;
 1246              		.loc 1 362 32
 1247 08f2 07F12003 		add	r3, r7, #32
 1248 08f6 1B68     		ldr	r3, [r3]
 1249 08f8 591C     		adds	r1, r3, #1
 1250 08fa 07F12002 		add	r2, r7, #32
 1251 08fe 1160     		str	r1, [r2]
 1252              		.loc 1 362 23
 1253 0900 1B78     		ldrb	r3, [r3]
 1254 0902 87F88D31 		strb	r3, [r7, #397]
 363:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum += inV * inM;
 1255              		.loc 1 363 24
 1256 0906 B7F98E31 		ldrsh	r3, [r7, #398]
 1257 090a 97F98D21 		ldrsb	r2, [r7, #397]
 1258 090e 02FB03F3 		mul	r3, r2, r3
 1259              		.loc 1 363 17
 1260 0912 D7F89C21 		ldr	r2, [r7, #412]
 1261 0916 1344     		add	r3, r3, r2
 1262 0918 C7F89C31 		str	r3, [r7, #412]
 364:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 1263              		.loc 1 364 19
 1264 091c B7F89A31 		ldrh	r3, [r7, #410]
 1265 0920 013B     		subs	r3, r3, #1
 1266 0922 A7F89A31 		strh	r3, [r7, #410]	@ movhi
 1267              	.L42:
 1268              	.LBE132:
 359:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 1269              		.loc 1 359 15
 1270 0926 B7F89A31 		ldrh	r3, [r7, #410]
 1271 092a 002B     		cmp	r3, #0
 1272 092c D7D1     		bne	.L43
 1273              	.LBB133:
 365:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 366:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 367:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) (__SSAT((sum >> out_shift), 8));
 1274              		.loc 1 367 25
ARM GAS  /tmp/ccsf0BNJ.s 			page 68


 1275 092e B7F8D431 		ldrh	r3, [r7, #468]
 1276 0932 D7F89C21 		ldr	r2, [r7, #412]
 1277 0936 42FA03F3 		asr	r3, r2, r3
 1278 093a C7F89431 		str	r3, [r7, #404]
 1279 093e D7F89431 		ldr	r3, [r7, #404]
 1280              		.syntax unified
 1281              	@ 367 "./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c" 1
 1282 0942 03F30703 		ssat r3, #8, r3
 1283              	@ 0 "" 2
 1284              		.thumb
 1285              		.syntax unified
 1286 0946 C7F89031 		str	r3, [r7, #400]
 1287 094a D7F89011 		ldr	r1, [r7, #400]
 1288              	.LBE133:
 1289              		.loc 1 367 12
 1290 094e D7F8BC31 		ldr	r3, [r7, #444]
 1291 0952 5A1C     		adds	r2, r3, #1
 1292 0954 C7F8BC21 		str	r2, [r7, #444]
 1293              		.loc 1 367 17
 1294 0958 4AB2     		sxtb	r2, r1
 1295              		.loc 1 367 15
 1296 095a 1A70     		strb	r2, [r3]
 368:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 369:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         rowCnt--;
 1297              		.loc 1 369 15
 1298 095c B7F8B631 		ldrh	r3, [r7, #438]
 1299 0960 013B     		subs	r3, r3, #1
 1300 0962 A7F8B631 		strh	r3, [r7, #438]	@ movhi
 1301              	.L32:
 1302              	.LBE118:
 335:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 1303              		.loc 1 335 11
 1304 0966 B7F8B631 		ldrh	r3, [r7, #438]
 1305 096a 002B     		cmp	r3, #0
 1306 096c 7FF4C2AE 		bne	.L44
 370:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     }
 371:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 372:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #else
 373:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     /* Run the following code as reference implementation for Cortex-M0 and Cortex-M3 */
 374:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     uint16_t  rowCnt = num_of_rows >> 2;
 375:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     const q7_t *pB = pM;
 376:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     const q7_t *pA;
 377:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     q7_t     *pO = pOut;
 378:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     const q7_t *pBias = bias;
 379:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 380:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     while (rowCnt)
 381:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 382:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum =  ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 383:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum2 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 384:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum3 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 385:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         q31_t     sum4 = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 386:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 387:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         uint16_t  colCnt = dim_vec >> 2;
 388:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 389:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         pA = pV;
 390:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 391:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
ARM GAS  /tmp/ccsf0BNJ.s 			page 69


 392:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 393:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA1 = *pA++;
 394:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA3 = *pA++;
 395:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA2 = *pA++;
 396:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA4 = *pA++;
 397:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 398:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB1 = *pB++;
 399:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB3 = *pB++;
 400:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB2 = *pB++;
 401:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB4 = *pB++;
 402:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 403:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum += inA1 * inB1 + inA2 * inB2;
 404:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 += inA1 * inB3 + inA2 * inB4;
 405:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 406:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB1 = *pB++;
 407:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB3 = *pB++;
 408:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB2 = *pB++;
 409:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB4 = *pB++;
 410:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 411:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 += inA1 * inB1 + inA2 * inB2;
 412:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 += inA1 * inB3 + inA2 * inB4;
 413:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 414:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB1 = *pB++;
 415:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB3 = *pB++;
 416:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB2 = *pB++;
 417:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB4 = *pB++;
 418:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 419:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum += inA3 * inB1 + inA4 * inB2;
 420:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 += inA3 * inB3 + inA4 * inB4;
 421:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 422:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB1 = *pB++;
 423:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB3 = *pB++;
 424:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB2 = *pB++;
 425:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB4 = *pB++;
 426:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 427:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 += inA3 * inB1 + inA4 * inB2;
 428:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 += inA3 * inB3 + inA4 * inB4;
 429:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 430:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 431:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 432:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         colCnt = dim_vec & 0x3;
 433:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         while (colCnt)
 434:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 435:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA = *pA++;
 436:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB = *pB++;
 437:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum += inA * inB;
 438:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB = *pB++;
 439:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum2 += inA * inB;
 440:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB = *pB++;
 441:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum3 += inA * inB;
 442:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             inB = *pB++;
 443:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             sum4 += inA * inB;
 444:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 445:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             colCnt--;
 446:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 447:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) __SSAT((sum >> out_shift), 8);
 448:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) __SSAT((sum2 >> out_shift), 8);
ARM GAS  /tmp/ccsf0BNJ.s 			page 70


 449:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) __SSAT((sum3 >> out_shift), 8);
 450:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) __SSAT((sum4 >> out_shift), 8);
 451:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 452:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         rowCnt--;
 453:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     }
 454:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 455:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     rowCnt = num_of_rows & 0x3;
 456:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 457:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     while (rowCnt)
 458:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     {
 459:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         int       ip_out = ((q31_t)(*pBias++) << bias_shift) + NN_ROUND(out_shift);
 460:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 461:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         int       j;
 462:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 463:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         pA = pV;
 464:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         for (j = 0; j < dim_vec; j++)
 465:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         {
 466:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inA = *pA++;
 467:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             q7_t      inB = *pB++;
 468:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****             ip_out += inA * inB;
 469:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         }
 470:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         *pO++ = (q7_t) __SSAT((ip_out >> out_shift), 8);
 471:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 472:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****         rowCnt--;
 473:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     }
 474:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 475:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** #endif                          /* ARM_MATH_DSP */
 476:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 477:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     /* Return to ARM_MATH_SUCCESS */
 478:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c ****     return (ARM_MATH_SUCCESS);
 1307              		.loc 1 478 12
 1308 0970 0023     		movs	r3, #0
 479:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** 
 480:./Libraries/CMSIS/NN/Source/FullyConnectedFunctions/arm_fully_connected_q7_opt.c **** }
 1309              		.loc 1 480 1
 1310 0972 1846     		mov	r0, r3
 1311 0974 07F5E277 		add	r7, r7, #452
 1312              	.LCFI3:
 1313              		.cfi_def_cfa_offset 12
 1314 0978 BD46     		mov	sp, r7
 1315              	.LCFI4:
 1316              		.cfi_def_cfa_register 13
 1317              		@ sp needed
 1318 097a 90BD     		pop	{r4, r7, pc}
 1319              		.cfi_endproc
 1320              	.LFE149:
 1322              		.text
 1323              	.Letext0:
 1324              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1325              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1326              		.file 6 "/usr/include/newlib/sys/_types.h"
 1327              		.file 7 "/usr/include/newlib/sys/reent.h"
 1328              		.file 8 "/usr/include/newlib/sys/lock.h"
 1329              		.file 9 "/usr/include/newlib/math.h"
 1330              		.file 10 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 1331              		.file 11 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 1332              		.file 12 "./Libraries/CMSIS/NN/Include/arm_nn_tables.h"
ARM GAS  /tmp/ccsf0BNJ.s 			page 71


ARM GAS  /tmp/ccsf0BNJ.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_fully_connected_q7_opt.c
     /tmp/ccsf0BNJ.s:17     .text.arm_fully_connected_q7_opt:0000000000000000 $t
     /tmp/ccsf0BNJ.s:25     .text.arm_fully_connected_q7_opt:0000000000000000 arm_fully_connected_q7_opt

UNDEFINED SYMBOLS
arm_q7_to_q15_reordered_no_shift
