ARM GAS  /tmp/cc5hidfq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mult_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mult_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_mult_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_mult_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Title:        arm_mult_q15.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Description:  Q15 vector multiplication
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** /**
ARM GAS  /tmp/cc5hidfq.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @addtogroup BasicMult
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @brief         Q15 vector multiplication
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @param[in]     pSrcA      points to first input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @param[in]     pSrcB      points to second input vector
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @param[out]    pDst       points to output vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @param[in]     blockSize  number of samples in each vector
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****                    The function uses saturating arithmetic.
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****                    Results outside of the allowable Q15 range [0x8000 0x7FFF] are saturated.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****  */
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** void arm_mult_q15(
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   const q15_t * pSrcA,
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   const q15_t * pSrcB,
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****         q15_t * pDst,
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****         uint32_t blockSize)
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** {
  28              		.loc 1 58 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #if defined (ARM_MATH_DSP)
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   q31_t inA1, inA2, inB1, inB2;                  /* Temporary input variables */
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   q15_t out1, out2, out3, out4;                  /* Temporary output variables */
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   q31_t mul1, mul2, mul3, mul4;                  /* Temporary variables */
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #endif
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
ARM GAS  /tmp/cc5hidfq.s 			page 3


  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   blkCnt = blockSize >> 2U;
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   while (blkCnt > 0U)
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   {
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* C = A * B */
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #if defined (ARM_MATH_DSP)
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* read 2 samples at a time from sourceA */
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     inA1 = read_q15x2_ia ((q15_t **) &pSrcA);
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* read 2 samples at a time from sourceB */
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     inB1 = read_q15x2_ia ((q15_t **) &pSrcB);
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* read 2 samples at a time from sourceA */
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     inA2 = read_q15x2_ia ((q15_t **) &pSrcA);
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* read 2 samples at a time from sourceB */
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     inB2 = read_q15x2_ia ((q15_t **) &pSrcB);
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* multiply mul = sourceA * sourceB */
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1      ) * (q15_t) (inB1      ));
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB2 >> 16));
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2      ) * (q15_t) (inB2      ));
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* saturate result to 16 bit */
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     out1 = (q15_t) __SSAT(mul1 >> 15, 16);
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     out2 = (q15_t) __SSAT(mul2 >> 15, 16);
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     out3 = (q15_t) __SSAT(mul3 >> 15, 16);
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     out4 = (q15_t) __SSAT(mul4 >> 15, 16);
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* store result to destination */
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(out2, out1, 16));
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(out4, out3, 16));
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #else
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(out1, out2, 16));
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(out3, out4, 16));
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #else
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++)) >> 15), 16);
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++)) >> 15), 16);
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++)) >> 15), 16);
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++)) >> 15), 16);
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #endif
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* Decrement loop counter */
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     blkCnt--;
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   }
 117:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   /* Loop unrolling: Compute remaining outputs */
 119:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   blkCnt = blockSize % 0x4U;
 120:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 121:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #else
 122:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 123:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   /* Initialize blkCnt with number of samples */
 124:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   blkCnt = blockSize;
  47              		.loc 1 124 10
  48 000e 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cc5hidfq.s 			page 4


  49 0010 FB61     		str	r3, [r7, #28]
 125:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 126:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 127:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 128:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   while (blkCnt > 0U)
  50              		.loc 1 128 9
  51 0012 1BE0     		b	.L2
  52              	.L3:
  53              	.LBB2:
 129:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   {
 130:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* C = A * B */
 131:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 132:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* Multiply inputs and store result in destination buffer. */
 133:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++)) >> 15), 16);
  54              		.loc 1 133 23
  55 0014 FB68     		ldr	r3, [r7, #12]
  56 0016 9A1C     		adds	r2, r3, #2
  57 0018 FA60     		str	r2, [r7, #12]
  58 001a B3F90030 		ldrsh	r3, [r3]
  59 001e 1946     		mov	r1, r3
  60 0020 BB68     		ldr	r3, [r7, #8]
  61 0022 9A1C     		adds	r2, r3, #2
  62 0024 BA60     		str	r2, [r7, #8]
  63 0026 B3F90030 		ldrsh	r3, [r3]
  64 002a 03FB01F3 		mul	r3, r3, r1
  65 002e DB13     		asrs	r3, r3, #15
  66 0030 BB61     		str	r3, [r7, #24]
  67 0032 BB69     		ldr	r3, [r7, #24]
  68              		.syntax unified
  69              	@ 133 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c" 1
  70 0034 03F30F03 		ssat r3, #16, r3
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74 0038 7B61     		str	r3, [r7, #20]
  75 003a 7969     		ldr	r1, [r7, #20]
  76              	.LBE2:
  77              		.loc 1 133 10
  78 003c 7B68     		ldr	r3, [r7, #4]
  79 003e 9A1C     		adds	r2, r3, #2
  80 0040 7A60     		str	r2, [r7, #4]
  81              		.loc 1 133 15
  82 0042 0AB2     		sxth	r2, r1
  83              		.loc 1 133 13
  84 0044 1A80     		strh	r2, [r3]	@ movhi
 134:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 135:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     /* Decrement loop counter */
 136:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****     blkCnt--;
  85              		.loc 1 136 11
  86 0046 FB69     		ldr	r3, [r7, #28]
  87 0048 013B     		subs	r3, r3, #1
  88 004a FB61     		str	r3, [r7, #28]
  89              	.L2:
 128:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   {
  90              		.loc 1 128 9
  91 004c FB69     		ldr	r3, [r7, #28]
  92 004e 002B     		cmp	r3, #0
ARM GAS  /tmp/cc5hidfq.s 			page 5


  93 0050 E0D1     		bne	.L3
 137:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c ****   }
 138:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** 
 139:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_q15.c **** }
  94              		.loc 1 139 1
  95 0052 00BF     		nop
  96 0054 00BF     		nop
  97 0056 2437     		adds	r7, r7, #36
  98              	.LCFI3:
  99              		.cfi_def_cfa_offset 4
 100 0058 BD46     		mov	sp, r7
 101              	.LCFI4:
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 005a 5DF8047B 		ldr	r7, [sp], #4
 105              	.LCFI5:
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 005e 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE145:
 112              		.text
 113              	.Letext0:
 114              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 115              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 116              		.file 4 "/usr/include/newlib/sys/_types.h"
 117              		.file 5 "/usr/include/newlib/sys/reent.h"
 118              		.file 6 "/usr/include/newlib/sys/lock.h"
 119              		.file 7 "/usr/include/newlib/math.h"
 120              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cc5hidfq.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mult_q15.c
     /tmp/cc5hidfq.s:17     .text.arm_mult_q15:0000000000000000 $t
     /tmp/cc5hidfq.s:25     .text.arm_mult_q15:0000000000000000 arm_mult_q15

NO UNDEFINED SYMBOLS
