ARM GAS  /tmp/cccT7tTu.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_dot_prod_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_dot_prod_q31,"ax",%progbits
  17              		.align	1
  18              		.global	arm_dot_prod_q31
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_dot_prod_q31:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Title:        arm_dot_prod_q31.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Description:  Q31 dot product
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
ARM GAS  /tmp/cccT7tTu.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @addtogroup BasicDotProd
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @brief         Dot product of Q31 vectors.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     pSrcA      points to the first input vector.
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     pSrcB      points to the second input vector.
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[in]     blockSize  number of samples in each vector.
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @param[out]    result     output result returned here.
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The intermediate multiplications are in 1.31 x 1.31 = 2.62 format and these
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    are truncated to 2.48 format by discarding the lower 14 bits.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The 2.48 result is then added without saturation to a 64-bit accumulator in 16.4
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    There are 15 guard bits in the accumulator and there is no risk of overflow as l
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    the length of the vectors is less than 2^16 elements.
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****                    The return result is in 16.48 format.
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****  */
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** void arm_dot_prod_q31(
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   const q31_t * pSrcA,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   const q31_t * pSrcB,
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         uint32_t blockSize,
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         q63_t * result)
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** {
  28              		.loc 1 62 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 F0B4     		push	{r4, r5, r6, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 7, -4
  40 0002 88B0     		sub	sp, sp, #32
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 48
  43 0004 00AF     		add	r7, sp, #0
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 F860     		str	r0, [r7, #12]
  47 0008 B960     		str	r1, [r7, #8]
  48 000a 7A60     		str	r2, [r7, #4]
  49 000c 3B60     		str	r3, [r7]
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****         q63_t sum = 0;                                 /* Temporary return variable */
  50              		.loc 1 64 15
  51 000e 4FF00002 		mov	r2, #0
ARM GAS  /tmp/cccT7tTu.s 			page 3


  52 0012 4FF00003 		mov	r3, #0
  53 0016 C7E90423 		strd	r2, [r7, #16]
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize >> 2U;
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0U)
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and store result in a temporary buffer. */
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement loop counter */
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   }
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Loop unrolling: Compute remaining outputs */
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize % 0x4U;
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #else
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Initialize blkCnt with number of samples */
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   blkCnt = blockSize;
  54              		.loc 1 94 10
  55 001a 7B68     		ldr	r3, [r7, #4]
  56 001c FB61     		str	r3, [r7, #28]
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   while (blkCnt > 0U)
  57              		.loc 1 98 9
  58 001e 28E0     		b	.L2
  59              	.L3:
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Calculate dot product and store result in a temporary buffer. */
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     sum += ((q63_t) *pSrcA++ * *pSrcB++) >> 14U;
  60              		.loc 1 103 27
  61 0020 FB68     		ldr	r3, [r7, #12]
  62 0022 1A1D     		adds	r2, r3, #4
  63 0024 FA60     		str	r2, [r7, #12]
  64              		.loc 1 103 21
  65 0026 1B68     		ldr	r3, [r3]
  66              		.loc 1 103 13
  67 0028 1846     		mov	r0, r3
  68 002a 4FEAE071 		asr	r1, r0, #31
  69              		.loc 1 103 38
ARM GAS  /tmp/cccT7tTu.s 			page 4


  70 002e BB68     		ldr	r3, [r7, #8]
  71 0030 1A1D     		adds	r2, r3, #4
  72 0032 BA60     		str	r2, [r7, #8]
  73              		.loc 1 103 32
  74 0034 1B68     		ldr	r3, [r3]
  75 0036 1A46     		mov	r2, r3
  76 0038 4FEAE273 		asr	r3, r2, #31
  77              		.loc 1 103 30
  78 003c 02FB01FC 		mul	ip, r2, r1
  79 0040 00FB03F6 		mul	r6, r0, r3
  80 0044 6644     		add	r6, r6, ip
  81 0046 A0FB0201 		umull	r0, r1, r0, r2
  82 004a 7318     		adds	r3, r6, r1
  83 004c 1946     		mov	r1, r3
  84              		.loc 1 103 42
  85 004e 4FF00002 		mov	r2, #0
  86 0052 4FF00003 		mov	r3, #0
  87 0056 820B     		lsrs	r2, r0, #14
  88 0058 42EA8142 		orr	r2, r2, r1, lsl #18
  89 005c 8B13     		asrs	r3, r1, #14
  90              		.loc 1 103 9
  91 005e D7E90401 		ldrd	r0, [r7, #16]
  92 0062 8418     		adds	r4, r0, r2
  93 0064 41EB0305 		adc	r5, r1, r3
  94 0068 C7E90445 		strd	r4, [r7, #16]
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     /* Decrement loop counter */
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****     blkCnt--;
  95              		.loc 1 106 11
  96 006c FB69     		ldr	r3, [r7, #28]
  97 006e 013B     		subs	r3, r3, #1
  98 0070 FB61     		str	r3, [r7, #28]
  99              	.L2:
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   {
 100              		.loc 1 98 9
 101 0072 FB69     		ldr	r3, [r7, #28]
 102 0074 002B     		cmp	r3, #0
 103 0076 D3D1     		bne	.L3
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   }
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** 
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   /* Store result in destination buffer in 16.48 format */
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c ****   *result = sum;
 104              		.loc 1 110 11
 105 0078 3968     		ldr	r1, [r7]
 106 007a D7E90423 		ldrd	r2, [r7, #16]
 107 007e C1E90023 		strd	r2, [r1]
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q31.c **** }
 108              		.loc 1 111 1
 109 0082 00BF     		nop
 110 0084 2037     		adds	r7, r7, #32
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 16
 113 0086 BD46     		mov	sp, r7
 114              	.LCFI4:
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0088 F0BC     		pop	{r4, r5, r6, r7}
ARM GAS  /tmp/cccT7tTu.s 			page 5


 118              	.LCFI5:
 119              		.cfi_restore 7
 120              		.cfi_restore 6
 121              		.cfi_restore 5
 122              		.cfi_restore 4
 123              		.cfi_def_cfa_offset 0
 124 008a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE145:
 128              		.text
 129              	.Letext0:
 130              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 131              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 132              		.file 4 "/usr/include/newlib/sys/_types.h"
 133              		.file 5 "/usr/include/newlib/sys/reent.h"
 134              		.file 6 "/usr/include/newlib/sys/lock.h"
 135              		.file 7 "/usr/include/newlib/math.h"
 136              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cccT7tTu.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_dot_prod_q31.c
     /tmp/cccT7tTu.s:17     .text.arm_dot_prod_q31:0000000000000000 $t
     /tmp/cccT7tTu.s:25     .text.arm_dot_prod_q31:0000000000000000 arm_dot_prod_q31

NO UNDEFINED SYMBOLS
