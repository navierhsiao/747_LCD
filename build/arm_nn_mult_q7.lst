ARM GAS  /tmp/ccU6mGcM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_nn_mult_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_nn_mult_q7,"ax",%progbits
  17              		.align	1
  18              		.global	arm_nn_mult_q7
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_nn_mult_q7:
  26              	.LFB149:
  27              		.file 1 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c"
   1:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /*
   2:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
   4:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
   6:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  10:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  12:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  */
  18:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  19:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Title:        arm_nn_mult_q7.c
  22:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Description:  Q7 vector multiplication with variable output shifts
  23:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  24:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * $Date:        13. July 2018
  25:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  27:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  29:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * -------------------------------------------------------------------- */
  30:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  31:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** #include "arm_nnfunctions.h"
ARM GAS  /tmp/ccU6mGcM.s 			page 2


  32:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  33:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /**    
  34:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @ingroup groupSupport    
  35:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  */
  36:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  37:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /**
  38:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @addtogroup NNBasicMath
  39:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @{
  40:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  */
  41:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  42:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /**
  43:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @brief           Q7 vector multiplication with variable output shifts
  44:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @param[in]       *pSrcA        pointer to the first input vector
  45:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @param[in]       *pSrcB        pointer to the second input vector
  46:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @param[out]      *pDst         pointer to the output vector
  47:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @param[in]       out_shift     amount of right-shift for output
  48:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @param[in]       blockSize     number of samples in each vector
  49:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * @return none.
  50:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  *
  51:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * <b>Scaling and Overflow Behavior:</b>
  52:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * \par
  53:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * The function uses saturating arithmetic.
  54:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  * Results outside of the allowable Q7 range [0x80 0x7F] will be saturated.
  55:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****  */
  56:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  57:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** void arm_nn_mult_q7(
  58:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   q7_t * pSrcA,
  59:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   q7_t * pSrcB,
  60:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   q7_t * pDst,
  61:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   const uint16_t out_shift,
  62:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   uint32_t blockSize)
  63:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** {
  28              		.loc 1 63 1
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 80
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 90B4     		push	{r4, r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 7, -4
  38 0002 94B0     		sub	sp, sp, #80
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 88
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
  47 000c 7B80     		strh	r3, [r7, #2]	@ movhi
  64:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   uint32_t blkCnt;                               /* loop counters */
  65:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  66:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** #if defined (ARM_MATH_DSP)
  67:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  68:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
ARM GAS  /tmp/ccU6mGcM.s 			page 3


  69:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   q7_t out1, out2, out3, out4;                   /* Temporary variables to store the product */
  70:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  71:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   /* loop Unrolling */
  72:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   blkCnt = blockSize >> 2U;
  48              		.loc 1 72 10
  49 000e BB6D     		ldr	r3, [r7, #88]
  50 0010 9B08     		lsrs	r3, r3, #2
  51 0012 FB64     		str	r3, [r7, #76]
  73:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  74:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  75:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  76:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   while (blkCnt > 0U)
  52              		.loc 1 76 9
  53 0014 96E0     		b	.L2
  54              	.L3:
  55              	.LBB2:
  77:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   {
  78:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* C = A * B */
  79:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* Multiply the inputs and store the results in temporary variables */
  80:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     out1 = (q7_t) __SSAT((((q15_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift), 8)
  56              		.loc 1 80 19
  57 0016 FB68     		ldr	r3, [r7, #12]
  58 0018 5A1C     		adds	r2, r3, #1
  59 001a FA60     		str	r2, [r7, #12]
  60 001c 93F90030 		ldrsb	r3, [r3]
  61 0020 1946     		mov	r1, r3
  62 0022 BB68     		ldr	r3, [r7, #8]
  63 0024 5A1C     		adds	r2, r3, #1
  64 0026 BA60     		str	r2, [r7, #8]
  65 0028 93F90030 		ldrsb	r3, [r3]
  66 002c 03FB01F3 		mul	r3, r3, r1
  67 0030 1946     		mov	r1, r3
  68 0032 7B88     		ldrh	r3, [r7, #2]
  69 0034 0122     		movs	r2, #1
  70 0036 02FA03F3 		lsl	r3, r2, r3
  71 003a 5B08     		lsrs	r3, r3, #1
  72 003c CA18     		adds	r2, r1, r3
  73 003e 7B88     		ldrh	r3, [r7, #2]
  74 0040 22FA03F3 		lsr	r3, r2, r3
  75 0044 3B64     		str	r3, [r7, #64]
  76 0046 3B6C     		ldr	r3, [r7, #64]
  77              		.syntax unified
  78              	@ 80 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c" 1
  79 0048 03F30703 		ssat r3, #8, r3
  80              	@ 0 "" 2
  81              		.thumb
  82              		.syntax unified
  83 004c FB63     		str	r3, [r7, #60]
  84 004e FB6B     		ldr	r3, [r7, #60]
  85              	.LBE2:
  86              		.loc 1 80 10
  87 0050 87F83B30 		strb	r3, [r7, #59]
  88              	.LBB3:
  81:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     out2 = (q7_t) __SSAT((((q15_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift), 8)
  89              		.loc 1 81 19
  90 0054 FB68     		ldr	r3, [r7, #12]
  91 0056 5A1C     		adds	r2, r3, #1
ARM GAS  /tmp/ccU6mGcM.s 			page 4


  92 0058 FA60     		str	r2, [r7, #12]
  93 005a 93F90030 		ldrsb	r3, [r3]
  94 005e 1946     		mov	r1, r3
  95 0060 BB68     		ldr	r3, [r7, #8]
  96 0062 5A1C     		adds	r2, r3, #1
  97 0064 BA60     		str	r2, [r7, #8]
  98 0066 93F90030 		ldrsb	r3, [r3]
  99 006a 03FB01F3 		mul	r3, r3, r1
 100 006e 1946     		mov	r1, r3
 101 0070 7B88     		ldrh	r3, [r7, #2]
 102 0072 0122     		movs	r2, #1
 103 0074 02FA03F3 		lsl	r3, r2, r3
 104 0078 5B08     		lsrs	r3, r3, #1
 105 007a CA18     		adds	r2, r1, r3
 106 007c 7B88     		ldrh	r3, [r7, #2]
 107 007e 22FA03F3 		lsr	r3, r2, r3
 108 0082 7B63     		str	r3, [r7, #52]
 109 0084 7B6B     		ldr	r3, [r7, #52]
 110              		.syntax unified
 111              	@ 81 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c" 1
 112 0086 03F30703 		ssat r3, #8, r3
 113              	@ 0 "" 2
 114              		.thumb
 115              		.syntax unified
 116 008a 3B63     		str	r3, [r7, #48]
 117 008c 3B6B     		ldr	r3, [r7, #48]
 118              	.LBE3:
 119              		.loc 1 81 10
 120 008e 87F82F30 		strb	r3, [r7, #47]
 121              	.LBB4:
  82:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     out3 = (q7_t) __SSAT((((q15_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift), 8)
 122              		.loc 1 82 19
 123 0092 FB68     		ldr	r3, [r7, #12]
 124 0094 5A1C     		adds	r2, r3, #1
 125 0096 FA60     		str	r2, [r7, #12]
 126 0098 93F90030 		ldrsb	r3, [r3]
 127 009c 1946     		mov	r1, r3
 128 009e BB68     		ldr	r3, [r7, #8]
 129 00a0 5A1C     		adds	r2, r3, #1
 130 00a2 BA60     		str	r2, [r7, #8]
 131 00a4 93F90030 		ldrsb	r3, [r3]
 132 00a8 03FB01F3 		mul	r3, r3, r1
 133 00ac 1946     		mov	r1, r3
 134 00ae 7B88     		ldrh	r3, [r7, #2]
 135 00b0 0122     		movs	r2, #1
 136 00b2 02FA03F3 		lsl	r3, r2, r3
 137 00b6 5B08     		lsrs	r3, r3, #1
 138 00b8 CA18     		adds	r2, r1, r3
 139 00ba 7B88     		ldrh	r3, [r7, #2]
 140 00bc 22FA03F3 		lsr	r3, r2, r3
 141 00c0 BB62     		str	r3, [r7, #40]
 142 00c2 BB6A     		ldr	r3, [r7, #40]
 143              		.syntax unified
 144              	@ 82 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c" 1
 145 00c4 03F30703 		ssat r3, #8, r3
 146              	@ 0 "" 2
 147              		.thumb
ARM GAS  /tmp/ccU6mGcM.s 			page 5


 148              		.syntax unified
 149 00c8 7B62     		str	r3, [r7, #36]
 150 00ca 7B6A     		ldr	r3, [r7, #36]
 151              	.LBE4:
 152              		.loc 1 82 10
 153 00cc 87F82330 		strb	r3, [r7, #35]
 154              	.LBB5:
  83:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     out4 = (q7_t) __SSAT((((q15_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift), 8)
 155              		.loc 1 83 19
 156 00d0 FB68     		ldr	r3, [r7, #12]
 157 00d2 5A1C     		adds	r2, r3, #1
 158 00d4 FA60     		str	r2, [r7, #12]
 159 00d6 93F90030 		ldrsb	r3, [r3]
 160 00da 1946     		mov	r1, r3
 161 00dc BB68     		ldr	r3, [r7, #8]
 162 00de 5A1C     		adds	r2, r3, #1
 163 00e0 BA60     		str	r2, [r7, #8]
 164 00e2 93F90030 		ldrsb	r3, [r3]
 165 00e6 03FB01F3 		mul	r3, r3, r1
 166 00ea 1946     		mov	r1, r3
 167 00ec 7B88     		ldrh	r3, [r7, #2]
 168 00ee 0122     		movs	r2, #1
 169 00f0 02FA03F3 		lsl	r3, r2, r3
 170 00f4 5B08     		lsrs	r3, r3, #1
 171 00f6 CA18     		adds	r2, r1, r3
 172 00f8 7B88     		ldrh	r3, [r7, #2]
 173 00fa 22FA03F3 		lsr	r3, r2, r3
 174 00fe FB61     		str	r3, [r7, #28]
 175 0100 FB69     		ldr	r3, [r7, #28]
 176              		.syntax unified
 177              	@ 83 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c" 1
 178 0102 03F30703 		ssat r3, #8, r3
 179              	@ 0 "" 2
 180              		.thumb
 181              		.syntax unified
 182 0106 BB61     		str	r3, [r7, #24]
 183 0108 BB69     		ldr	r3, [r7, #24]
 184              	.LBE5:
 185              		.loc 1 83 10
 186 010a FB75     		strb	r3, [r7, #23]
  84:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  85:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* Store the results of 4 inputs in the destination buffer in single cycle by packing */
  86:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     *__SIMD32(pDst)++ = __PACKq7(out1, out2, out3, out4);
 187              		.loc 1 86 25
 188 010c 97F93B30 		ldrsb	r3, [r7, #59]
 189 0110 DAB2     		uxtb	r2, r3
 190 0112 97F92F30 		ldrsb	r3, [r7, #47]
 191 0116 1B02     		lsls	r3, r3, #8
 192 0118 9BB2     		uxth	r3, r3
 193 011a 1A43     		orrs	r2, r2, r3
 194 011c 97F92330 		ldrsb	r3, [r7, #35]
 195 0120 1B04     		lsls	r3, r3, #16
 196 0122 03F47F03 		and	r3, r3, #16711680
 197 0126 42EA0300 		orr	r0, r2, r3
 198 012a 97F91730 		ldrsb	r3, [r7, #23]
 199 012e 1906     		lsls	r1, r3, #24
 200              		.loc 1 86 6
ARM GAS  /tmp/ccU6mGcM.s 			page 6


 201 0130 3A1D     		adds	r2, r7, #4
 202 0132 1368     		ldr	r3, [r2]
 203              		.loc 1 86 20
 204 0134 1C1D     		adds	r4, r3, #4
 205 0136 1460     		str	r4, [r2]
 206              		.loc 1 86 25
 207 0138 40EA0102 		orr	r2, r0, r1
 208              		.loc 1 86 23
 209 013c 1A60     		str	r2, [r3]
  87:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  88:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* Decrement the blockSize loop counter */
  89:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     blkCnt--;
 210              		.loc 1 89 11
 211 013e FB6C     		ldr	r3, [r7, #76]
 212 0140 013B     		subs	r3, r3, #1
 213 0142 FB64     		str	r3, [r7, #76]
 214              	.L2:
  76:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   {
 215              		.loc 1 76 9
 216 0144 FB6C     		ldr	r3, [r7, #76]
 217 0146 002B     		cmp	r3, #0
 218 0148 7FF465AF 		bne	.L3
  90:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   }
  91:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  92:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  93:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****    ** No loop unrolling is used. */
  94:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   blkCnt = blockSize % 0x4U;
 219              		.loc 1 94 10
 220 014c BB6D     		ldr	r3, [r7, #88]
 221 014e 03F00303 		and	r3, r3, #3
 222 0152 FB64     		str	r3, [r7, #76]
  95:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  96:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** #else
  97:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
  98:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   /* Run the below code for Cortex-M0 */
  99:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
 100:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   /* Initialize blkCnt with number of samples */
 101:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   blkCnt = blockSize;
 102:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
 103:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** #endif /* #if defined (ARM_MATH_DSP) */
 104:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
 105:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
 106:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   while (blkCnt > 0U)
 223              		.loc 1 106 9
 224 0154 24E0     		b	.L4
 225              	.L5:
 226              	.LBB6:
 107:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   {
 108:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* C = A * B */
 109:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* Multiply the inputs and store the result in the destination buffer */
 110:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     *pDst++ = (q7_t) __SSAT((((q15_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift),
 227              		.loc 1 110 22
 228 0156 FB68     		ldr	r3, [r7, #12]
 229 0158 5A1C     		adds	r2, r3, #1
 230 015a FA60     		str	r2, [r7, #12]
 231 015c 93F90030 		ldrsb	r3, [r3]
 232 0160 1946     		mov	r1, r3
ARM GAS  /tmp/ccU6mGcM.s 			page 7


 233 0162 BB68     		ldr	r3, [r7, #8]
 234 0164 5A1C     		adds	r2, r3, #1
 235 0166 BA60     		str	r2, [r7, #8]
 236 0168 93F90030 		ldrsb	r3, [r3]
 237 016c 03FB01F3 		mul	r3, r3, r1
 238 0170 1946     		mov	r1, r3
 239 0172 7B88     		ldrh	r3, [r7, #2]
 240 0174 0122     		movs	r2, #1
 241 0176 02FA03F3 		lsl	r3, r2, r3
 242 017a 5B08     		lsrs	r3, r3, #1
 243 017c CA18     		adds	r2, r1, r3
 244 017e 7B88     		ldrh	r3, [r7, #2]
 245 0180 22FA03F3 		lsr	r3, r2, r3
 246 0184 BB64     		str	r3, [r7, #72]
 247 0186 BB6C     		ldr	r3, [r7, #72]
 248              		.syntax unified
 249              	@ 110 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c" 1
 250 0188 03F30703 		ssat r3, #8, r3
 251              	@ 0 "" 2
 252              		.thumb
 253              		.syntax unified
 254 018c 7B64     		str	r3, [r7, #68]
 255 018e 796C     		ldr	r1, [r7, #68]
 256              	.LBE6:
 257              		.loc 1 110 10
 258 0190 7B68     		ldr	r3, [r7, #4]
 259 0192 5A1C     		adds	r2, r3, #1
 260 0194 7A60     		str	r2, [r7, #4]
 261              		.loc 1 110 15
 262 0196 4AB2     		sxtb	r2, r1
 263              		.loc 1 110 13
 264 0198 1A70     		strb	r2, [r3]
 111:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** 
 112:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     /* Decrement the blockSize loop counter */
 113:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****     blkCnt--;
 265              		.loc 1 113 11
 266 019a FB6C     		ldr	r3, [r7, #76]
 267 019c 013B     		subs	r3, r3, #1
 268 019e FB64     		str	r3, [r7, #76]
 269              	.L4:
 106:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   {
 270              		.loc 1 106 9
 271 01a0 FB6C     		ldr	r3, [r7, #76]
 272 01a2 002B     		cmp	r3, #0
 273 01a4 D7D1     		bne	.L5
 114:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c ****   }
 115:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q7.c **** }
 274              		.loc 1 115 1
 275 01a6 00BF     		nop
 276 01a8 00BF     		nop
 277 01aa 5037     		adds	r7, r7, #80
 278              	.LCFI3:
 279              		.cfi_def_cfa_offset 8
 280 01ac BD46     		mov	sp, r7
 281              	.LCFI4:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
ARM GAS  /tmp/ccU6mGcM.s 			page 8


 284 01ae 90BC     		pop	{r4, r7}
 285              	.LCFI5:
 286              		.cfi_restore 7
 287              		.cfi_restore 4
 288              		.cfi_def_cfa_offset 0
 289 01b0 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE149:
 293              		.text
 294              	.Letext0:
 295              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 296              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 297              		.file 4 "/usr/include/newlib/sys/_types.h"
 298              		.file 5 "/usr/include/newlib/sys/reent.h"
 299              		.file 6 "/usr/include/newlib/sys/lock.h"
 300              		.file 7 "/usr/include/newlib/math.h"
 301              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 302              		.file 9 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 303              		.file 10 "./Libraries/CMSIS/NN/Include/arm_nn_tables.h"
ARM GAS  /tmp/ccU6mGcM.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_nn_mult_q7.c
     /tmp/ccU6mGcM.s:17     .text.arm_nn_mult_q7:0000000000000000 $t
     /tmp/ccU6mGcM.s:25     .text.arm_nn_mult_q7:0000000000000000 arm_nn_mult_q7

NO UNDEFINED SYMBOLS
