ARM GAS  /tmp/ccWK6iaK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_correlate_opt_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_correlate_opt_q7,"ax",%progbits
  17              		.align	1
  18              		.global	arm_correlate_opt_q7
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_correlate_opt_q7:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Title:        arm_correlate_opt_q7.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Description:  Correlation of Q7 sequences
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @addtogroup Corr
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @brief         Correlation of Q7 sequences.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     pSrcA      points to the first input sequence
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     srcALen    length of the first input sequence
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     pSrcB      points to the second input sequence
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     srcBLen    length of the second input sequence
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[out]    pDst       points to the location where the output result is written.  Length 2 * 
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @param[in]     pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @return        none
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   @par           Scaling and Overflow Behavior
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****                    The function is implemented using a 32-bit internal accumulator.
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****                    Both the inputs are represented in 1.7 format and multiplications yield a 2.14 r
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****                    The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 f
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****                    This approach provides 17 guard bits and there is no risk of overflow as long as
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****                    The 18.14 result is then truncated to 18.7 format by discarding the low 7 bits a
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****  */
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** void arm_correlate_opt_q7(
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   const q7_t * pSrcA,
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         uint32_t srcALen,
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   const q7_t * pSrcB,
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         uint32_t srcBLen,
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q7_t * pDst,
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t * pScratch1,
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t * pScratch2)
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** {
  28              		.loc 1 67 1
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 320
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 D1B0     		sub	sp, sp, #324
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 336
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 07F10C04 		add	r4, r7, #12
  45 000a 2060     		str	r0, [r4]
  46 000c 07F10800 		add	r0, r7, #8
  47 0010 0160     		str	r1, [r0]
  48 0012 391D     		adds	r1, r7, #4
ARM GAS  /tmp/ccWK6iaK.s 			page 3


  49 0014 0A60     		str	r2, [r1]
  50 0016 3A46     		mov	r2, r7
  51 0018 1360     		str	r3, [r2]
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t *pScr1 = pScratch1;                      /* Temporary pointer for scratch */
  52              		.loc 1 68 16
  53 001a 07F13003 		add	r3, r7, #48
  54 001e D7F85421 		ldr	r2, [r7, #340]
  55 0022 1A60     		str	r2, [r3]
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t *pScr2 = pScratch2;                      /* Temporary pointer for scratch */
  56              		.loc 1 69 16
  57 0024 07F12C03 		add	r3, r7, #44
  58 0028 D7F85821 		ldr	r2, [r7, #344]
  59 002c 1A60     		str	r2, [r3]
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t x4;                                      /* Temporary input variable */
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q15_t *py;                                     /* Temporary input2 pointer */
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   const q7_t *pIn1, *pIn2;                             /* InputA and inputB pointer */
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         uint32_t j, k, blkCnt, tapCnt;                 /* Loop counter */
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         int32_t inc = 1;                               /* Output pointer increment */
  60              		.loc 1 75 17
  61 002e 0123     		movs	r3, #1
  62 0030 C7F81831 		str	r3, [r7, #280]
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         uint32_t outBlockSize;                         /* Loop counter */
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q31_t x1, x2, x3, y1;                          /* Temporary input variables */
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****         q7_t *pOut = pDst;                             /* Output pointer */
  63              		.loc 1 78 15
  64 0034 D7F85031 		ldr	r3, [r7, #336]
  65 0038 C7F80C31 		str	r3, [r7, #268]
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* srcB is always made to slide across srcA. */
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* and the destination pointer modifier, inc is set to -1 */
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* But to improve the performance,
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****    * we include zeroes in the output instead of zero padding either of the the inputs*/
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen > srcBLen,
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* If srcALen < srcBLen,
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   if (srcALen >= srcBLen)
  66              		.loc 1 93 6
  67 003c 07F10802 		add	r2, r7, #8
  68 0040 3B46     		mov	r3, r7
  69 0042 1268     		ldr	r2, [r2]
  70 0044 1B68     		ldr	r3, [r3]
  71 0046 9A42     		cmp	r2, r3
  72 0048 23D3     		bcc	.L2
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputA pointer */
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pIn1 = pSrcA;
  73              		.loc 1 96 10
  74 004a 07F10C03 		add	r3, r7, #12
  75 004e 1B68     		ldr	r3, [r3]
  76 0050 C7F82C31 		str	r3, [r7, #300]
ARM GAS  /tmp/ccWK6iaK.s 			page 4


  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pIn2 = pSrcB;
  77              		.loc 1 99 10
  78 0054 3B1D     		adds	r3, r7, #4
  79 0056 1B68     		ldr	r3, [r3]
  80 0058 C7F82831 		str	r3, [r7, #296]
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Number of output samples is calculated */
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     outBlockSize = (srcALen * 2U) - 1U;
  81              		.loc 1 102 29
  82 005c 07F10803 		add	r3, r7, #8
  83 0060 1B68     		ldr	r3, [r3]
  84 0062 5B00     		lsls	r3, r3, #1
  85              		.loc 1 102 18
  86 0064 013B     		subs	r3, r3, #1
  87 0066 C7F80431 		str	r3, [r7, #260]
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* When srcALen > srcBLen, zero padding is done to srcB
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      * to make their lengths equal.
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      * number of output samples are made zero */
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     j = outBlockSize - (srcALen + (srcBLen - 1U));
  88              		.loc 1 108 33
  89 006a 3A46     		mov	r2, r7
  90 006c 07F10803 		add	r3, r7, #8
  91 0070 1268     		ldr	r2, [r2]
  92 0072 1B68     		ldr	r3, [r3]
  93 0074 1344     		add	r3, r3, r2
  94              		.loc 1 108 22
  95 0076 D7F80421 		ldr	r2, [r7, #260]
  96 007a D31A     		subs	r3, r2, r3
  97              		.loc 1 108 7
  98 007c 0133     		adds	r3, r3, #1
  99 007e C7F80831 		str	r3, [r7, #264]
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Updating the pointer position to non zero value */
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += j;
 100              		.loc 1 111 10
 101 0082 D7F80C21 		ldr	r2, [r7, #268]
 102 0086 D7F80831 		ldr	r3, [r7, #264]
 103 008a 1344     		add	r3, r3, r2
 104 008c C7F80C31 		str	r3, [r7, #268]
 105 0090 26E0     		b	.L3
 106              	.L2:
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   else
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputA pointer */
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pIn1 = pSrcB;
 107              		.loc 1 116 10
 108 0092 3B1D     		adds	r3, r7, #4
 109 0094 1B68     		ldr	r3, [r3]
 110 0096 C7F82C31 		str	r3, [r7, #300]
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pIn2 = pSrcA;
ARM GAS  /tmp/ccWK6iaK.s 			page 5


 111              		.loc 1 119 10
 112 009a 07F10C03 		add	r3, r7, #12
 113 009e 1B68     		ldr	r3, [r3]
 114 00a0 C7F82831 		str	r3, [r7, #296]
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     j = srcBLen;
 115              		.loc 1 122 7
 116 00a4 3B46     		mov	r3, r7
 117 00a6 1B68     		ldr	r3, [r3]
 118 00a8 C7F80831 		str	r3, [r7, #264]
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     srcBLen = srcALen;
 119              		.loc 1 123 13
 120 00ac 3B46     		mov	r3, r7
 121 00ae 07F10802 		add	r2, r7, #8
 122 00b2 1268     		ldr	r2, [r2]
 123 00b4 1A60     		str	r2, [r3]
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     srcALen = j;
 124              		.loc 1 124 13
 125 00b6 07F10803 		add	r3, r7, #8
 126 00ba D7F80821 		ldr	r2, [r7, #264]
 127 00be 1A60     		str	r2, [r3]
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Hence set the destination pointer to point to the last output sample */
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut = pDst + ((srcALen + srcBLen) - 2U);
 128              		.loc 1 128 29
 129 00c0 07F10802 		add	r2, r7, #8
 130 00c4 3B46     		mov	r3, r7
 131 00c6 1268     		ldr	r2, [r2]
 132 00c8 1B68     		ldr	r3, [r3]
 133 00ca 1344     		add	r3, r3, r2
 134              		.loc 1 128 17
 135 00cc 023B     		subs	r3, r3, #2
 136              		.loc 1 128 10
 137 00ce D7F85021 		ldr	r2, [r7, #336]
 138 00d2 1344     		add	r3, r3, r2
 139 00d4 C7F80C31 		str	r3, [r7, #268]
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Destination address modifier is set to -1 */
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     inc = -1;
 140              		.loc 1 131 9
 141 00d8 4FF0FF33 		mov	r3, #-1
 142 00dc C7F81831 		str	r3, [r7, #280]
 143              	.L3:
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Copy (srcBLen) samples in scratch buffer */
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcBLen >> 2U;
 144              		.loc 1 136 5
 145 00e0 3B46     		mov	r3, r7
 146 00e2 1B68     		ldr	r3, [r3]
 147 00e4 9B08     		lsrs	r3, r3, #2
 148 00e6 C7F82431 		str	r3, [r7, #292]
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
ARM GAS  /tmp/ccWK6iaK.s 			page 6


 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      a second loop below copies for the remaining 1 to 3 samples. */
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0U)
 149              		.loc 1 140 9
 150 00ea 50E0     		b	.L4
 151              	.L5:
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner */
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn2++;
 152              		.loc 1 143 23
 153 00ec D7F82831 		ldr	r3, [r7, #296]
 154 00f0 5A1C     		adds	r2, r3, #1
 155 00f2 C7F82821 		str	r2, [r7, #296]
 156              		.loc 1 143 18
 157 00f6 93F90030 		ldrsb	r3, [r3]
 158              		.loc 1 143 8
 159 00fa A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 160              		.loc 1 144 11
 161 00fe 07F12C03 		add	r3, r7, #44
 162 0102 1B68     		ldr	r3, [r3]
 163 0104 991C     		adds	r1, r3, #2
 164 0106 07F12C02 		add	r2, r7, #44
 165 010a 1160     		str	r1, [r2]
 166              		.loc 1 144 14
 167 010c B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 168 0110 1A80     		strh	r2, [r3]	@ movhi
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn2++;
 169              		.loc 1 145 23
 170 0112 D7F82831 		ldr	r3, [r7, #296]
 171 0116 5A1C     		adds	r2, r3, #1
 172 0118 C7F82821 		str	r2, [r7, #296]
 173              		.loc 1 145 18
 174 011c 93F90030 		ldrsb	r3, [r3]
 175              		.loc 1 145 8
 176 0120 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 177              		.loc 1 146 11
 178 0124 07F12C03 		add	r3, r7, #44
 179 0128 1B68     		ldr	r3, [r3]
 180 012a 991C     		adds	r1, r3, #2
 181 012c 07F12C02 		add	r2, r7, #44
 182 0130 1160     		str	r1, [r2]
 183              		.loc 1 146 14
 184 0132 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 185 0136 1A80     		strh	r2, [r3]	@ movhi
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn2++;
 186              		.loc 1 147 23
 187 0138 D7F82831 		ldr	r3, [r7, #296]
 188 013c 5A1C     		adds	r2, r3, #1
 189 013e C7F82821 		str	r2, [r7, #296]
 190              		.loc 1 147 18
 191 0142 93F90030 		ldrsb	r3, [r3]
 192              		.loc 1 147 8
 193 0146 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 194              		.loc 1 148 11
 195 014a 07F12C03 		add	r3, r7, #44
ARM GAS  /tmp/ccWK6iaK.s 			page 7


 196 014e 1B68     		ldr	r3, [r3]
 197 0150 991C     		adds	r1, r3, #2
 198 0152 07F12C02 		add	r2, r7, #44
 199 0156 1160     		str	r1, [r2]
 200              		.loc 1 148 14
 201 0158 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 202 015c 1A80     		strh	r2, [r3]	@ movhi
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn2++;
 203              		.loc 1 149 23
 204 015e D7F82831 		ldr	r3, [r7, #296]
 205 0162 5A1C     		adds	r2, r3, #1
 206 0164 C7F82821 		str	r2, [r7, #296]
 207              		.loc 1 149 18
 208 0168 93F90030 		ldrsb	r3, [r3]
 209              		.loc 1 149 8
 210 016c A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 211              		.loc 1 150 11
 212 0170 07F12C03 		add	r3, r7, #44
 213 0174 1B68     		ldr	r3, [r3]
 214 0176 991C     		adds	r1, r3, #2
 215 0178 07F12C02 		add	r2, r7, #44
 216 017c 1160     		str	r1, [r2]
 217              		.loc 1 150 14
 218 017e B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 219 0182 1A80     		strh	r2, [r3]	@ movhi
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement loop counter */
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 220              		.loc 1 153 6
 221 0184 D7F82431 		ldr	r3, [r7, #292]
 222 0188 013B     		subs	r3, r3, #1
 223 018a C7F82431 		str	r3, [r7, #292]
 224              	.L4:
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 225              		.loc 1 140 9
 226 018e D7F82431 		ldr	r3, [r7, #292]
 227 0192 002B     		cmp	r3, #0
 228 0194 AAD1     		bne	.L5
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      No loop unrolling is used. */
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcBLen % 0x4U;
 229              		.loc 1 158 5
 230 0196 3B46     		mov	r3, r7
 231 0198 1B68     		ldr	r3, [r3]
 232 019a 03F00303 		and	r3, r3, #3
 233 019e C7F82431 		str	r3, [r7, #292]
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0U)
 234              		.loc 1 160 9
 235 01a2 17E0     		b	.L6
 236              	.L7:
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn2++;
ARM GAS  /tmp/ccWK6iaK.s 			page 8


 237              		.loc 1 163 23
 238 01a4 D7F82831 		ldr	r3, [r7, #296]
 239 01a8 5A1C     		adds	r2, r3, #1
 240 01aa C7F82821 		str	r2, [r7, #296]
 241              		.loc 1 163 18
 242 01ae 93F90030 		ldrsb	r3, [r3]
 243              		.loc 1 163 8
 244 01b2 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr2++ = x4;
 245              		.loc 1 164 11
 246 01b6 07F12C03 		add	r3, r7, #44
 247 01ba 1B68     		ldr	r3, [r3]
 248 01bc 991C     		adds	r1, r3, #2
 249 01be 07F12C02 		add	r2, r7, #44
 250 01c2 1160     		str	r1, [r2]
 251              		.loc 1 164 14
 252 01c4 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 253 01c8 1A80     		strh	r2, [r3]	@ movhi
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement loop counter */
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 254              		.loc 1 167 6
 255 01ca D7F82431 		ldr	r3, [r7, #292]
 256 01ce 013B     		subs	r3, r3, #1
 257 01d0 C7F82431 		str	r3, [r7, #292]
 258              	.L6:
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 259              		.loc 1 160 9
 260 01d4 D7F82431 		ldr	r3, [r7, #292]
 261 01d8 002B     		cmp	r3, #0
 262 01da E3D1     		bne	.L7
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Fill (srcBLen - 1U) zeros in scratch buffer */
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1U));
 263              		.loc 1 171 3
 264 01dc 07F13003 		add	r3, r7, #48
 265 01e0 1968     		ldr	r1, [r3]
 266 01e2 3B46     		mov	r3, r7
 267 01e4 1B68     		ldr	r3, [r3]
 268 01e6 013B     		subs	r3, r3, #1
 269 01e8 1A46     		mov	r2, r3
 270 01ea 0020     		movs	r0, #0
 271 01ec FFF7FEFF 		bl	arm_fill_q15
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Update temporary scratch pointer */
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   pScr1 += (srcBLen - 1U);
 272              		.loc 1 174 9
 273 01f0 07F13003 		add	r3, r7, #48
 274 01f4 1A68     		ldr	r2, [r3]
 275 01f6 3B46     		mov	r3, r7
 276 01f8 1968     		ldr	r1, [r3]
 277 01fa 6FF00043 		mvn	r3, #-2147483648
 278 01fe 0B44     		add	r3, r3, r1
 279 0200 5B00     		lsls	r3, r3, #1
 280 0202 1A44     		add	r2, r2, r3
 281 0204 07F13003 		add	r3, r7, #48
ARM GAS  /tmp/ccWK6iaK.s 			page 9


 282 0208 1A60     		str	r2, [r3]
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Copy (srcALen) samples in scratch buffer */
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Apply loop unrolling and do 4 Copies simultaneously. */
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcALen >> 2U;
 283              		.loc 1 178 5
 284 020a 07F10803 		add	r3, r7, #8
 285 020e 1B68     		ldr	r3, [r3]
 286 0210 9B08     		lsrs	r3, r3, #2
 287 0212 C7F82431 		str	r3, [r7, #292]
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* First part of the processing with loop unrolling copies 4 data points at a time.
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      a second loop below copies for the remaining 1 to 3 samples. */
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0U)
 288              		.loc 1 182 9
 289 0216 50E0     		b	.L8
 290              	.L9:
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner */
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 291              		.loc 1 185 23
 292 0218 D7F82C31 		ldr	r3, [r7, #300]
 293 021c 5A1C     		adds	r2, r3, #1
 294 021e C7F82C21 		str	r2, [r7, #300]
 295              		.loc 1 185 18
 296 0222 93F90030 		ldrsb	r3, [r3]
 297              		.loc 1 185 8
 298 0226 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 299              		.loc 1 186 11
 300 022a 07F13003 		add	r3, r7, #48
 301 022e 1B68     		ldr	r3, [r3]
 302 0230 991C     		adds	r1, r3, #2
 303 0232 07F13002 		add	r2, r7, #48
 304 0236 1160     		str	r1, [r2]
 305              		.loc 1 186 14
 306 0238 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 307 023c 1A80     		strh	r2, [r3]	@ movhi
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 308              		.loc 1 187 23
 309 023e D7F82C31 		ldr	r3, [r7, #300]
 310 0242 5A1C     		adds	r2, r3, #1
 311 0244 C7F82C21 		str	r2, [r7, #300]
 312              		.loc 1 187 18
 313 0248 93F90030 		ldrsb	r3, [r3]
 314              		.loc 1 187 8
 315 024c A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 316              		.loc 1 188 11
 317 0250 07F13003 		add	r3, r7, #48
 318 0254 1B68     		ldr	r3, [r3]
 319 0256 991C     		adds	r1, r3, #2
 320 0258 07F13002 		add	r2, r7, #48
 321 025c 1160     		str	r1, [r2]
 322              		.loc 1 188 14
 323 025e B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 324 0262 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccWK6iaK.s 			page 10


 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 325              		.loc 1 189 23
 326 0264 D7F82C31 		ldr	r3, [r7, #300]
 327 0268 5A1C     		adds	r2, r3, #1
 328 026a C7F82C21 		str	r2, [r7, #300]
 329              		.loc 1 189 18
 330 026e 93F90030 		ldrsb	r3, [r3]
 331              		.loc 1 189 8
 332 0272 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 333              		.loc 1 190 11
 334 0276 07F13003 		add	r3, r7, #48
 335 027a 1B68     		ldr	r3, [r3]
 336 027c 991C     		adds	r1, r3, #2
 337 027e 07F13002 		add	r2, r7, #48
 338 0282 1160     		str	r1, [r2]
 339              		.loc 1 190 14
 340 0284 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 341 0288 1A80     		strh	r2, [r3]	@ movhi
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) *pIn1++;
 342              		.loc 1 191 23
 343 028a D7F82C31 		ldr	r3, [r7, #300]
 344 028e 5A1C     		adds	r2, r3, #1
 345 0290 C7F82C21 		str	r2, [r7, #300]
 346              		.loc 1 191 18
 347 0294 93F90030 		ldrsb	r3, [r3]
 348              		.loc 1 191 8
 349 0298 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 350              		.loc 1 192 11
 351 029c 07F13003 		add	r3, r7, #48
 352 02a0 1B68     		ldr	r3, [r3]
 353 02a2 991C     		adds	r1, r3, #2
 354 02a4 07F13002 		add	r2, r7, #48
 355 02a8 1160     		str	r1, [r2]
 356              		.loc 1 192 14
 357 02aa B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 358 02ae 1A80     		strh	r2, [r3]	@ movhi
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement loop counter */
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 359              		.loc 1 195 6
 360 02b0 D7F82431 		ldr	r3, [r7, #292]
 361 02b4 013B     		subs	r3, r3, #1
 362 02b6 C7F82431 		str	r3, [r7, #292]
 363              	.L8:
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 364              		.loc 1 182 9
 365 02ba D7F82431 		ldr	r3, [r7, #292]
 366 02be 002B     		cmp	r3, #0
 367 02c0 AAD1     		bne	.L9
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* If the count is not a multiple of 4, copy remaining samples here.
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****      No loop unrolling is used. */
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   k = srcALen % 0x4U;
 368              		.loc 1 200 5
ARM GAS  /tmp/ccWK6iaK.s 			page 11


 369 02c2 07F10803 		add	r3, r7, #8
 370 02c6 1B68     		ldr	r3, [r3]
 371 02c8 03F00303 		and	r3, r3, #3
 372 02cc C7F82431 		str	r3, [r7, #292]
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (k > 0U)
 373              		.loc 1 202 9
 374 02d0 17E0     		b	.L10
 375              	.L11:
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* copy second buffer in reversal manner for remaining samples */
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x4 = (q15_t) * pIn1++;
 376              		.loc 1 205 24
 377 02d2 D7F82C31 		ldr	r3, [r7, #300]
 378 02d6 5A1C     		adds	r2, r3, #1
 379 02d8 C7F82C21 		str	r2, [r7, #300]
 380              		.loc 1 205 18
 381 02dc 93F90030 		ldrsb	r3, [r3]
 382              		.loc 1 205 8
 383 02e0 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pScr1++ = x4;
 384              		.loc 1 206 11
 385 02e4 07F13003 		add	r3, r7, #48
 386 02e8 1B68     		ldr	r3, [r3]
 387 02ea 991C     		adds	r1, r3, #2
 388 02ec 07F13002 		add	r2, r7, #48
 389 02f0 1160     		str	r1, [r2]
 390              		.loc 1 206 14
 391 02f2 B7F8CE20 		ldrh	r2, [r7, #206]	@ movhi
 392 02f6 1A80     		strh	r2, [r3]	@ movhi
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Decrement the loop counter */
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     k--;
 393              		.loc 1 209 6
 394 02f8 D7F82431 		ldr	r3, [r7, #292]
 395 02fc 013B     		subs	r3, r3, #1
 396 02fe C7F82431 		str	r3, [r7, #292]
 397              	.L10:
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 398              		.loc 1 202 9
 399 0302 D7F82431 		ldr	r3, [r7, #292]
 400 0306 002B     		cmp	r3, #0
 401 0308 E3D1     		bne	.L11
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Fill (srcBLen - 1U) zeros at end of scratch buffer */
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   arm_fill_q15(0, pScr1, (srcBLen - 1U));
 402              		.loc 1 213 3
 403 030a 07F13003 		add	r3, r7, #48
 404 030e 1968     		ldr	r1, [r3]
 405 0310 3B46     		mov	r3, r7
 406 0312 1B68     		ldr	r3, [r3]
 407 0314 013B     		subs	r3, r3, #1
 408 0316 1A46     		mov	r2, r3
 409 0318 0020     		movs	r0, #0
 410 031a FFF7FEFF 		bl	arm_fill_q15
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 12


 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Update pointer */
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   pScr1 += (srcBLen - 1U);
 411              		.loc 1 216 9
 412 031e 07F13003 		add	r3, r7, #48
 413 0322 1A68     		ldr	r2, [r3]
 414 0324 3B46     		mov	r3, r7
 415 0326 1968     		ldr	r1, [r3]
 416 0328 6FF00043 		mvn	r3, #-2147483648
 417 032c 0B44     		add	r3, r3, r1
 418 032e 5B00     		lsls	r3, r3, #1
 419 0330 1A44     		add	r2, r2, r3
 420 0332 07F13003 		add	r3, r7, #48
 421 0336 1A60     		str	r2, [r3]
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Temporary pointer for scratch2 */
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   py = pScratch2;
 422              		.loc 1 219 6
 423 0338 D7F85831 		ldr	r3, [r7, #344]
 424 033c C7F80031 		str	r3, [r7, #256]
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Initialization of pScr2 pointer */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   pScr2 = pScratch2;
 425              		.loc 1 222 9
 426 0340 07F12C03 		add	r3, r7, #44
 427 0344 D7F85821 		ldr	r2, [r7, #344]
 428 0348 1A60     		str	r2, [r3]
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Actual correlation process starts here */
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1U) >> 2;
 429              		.loc 1 225 21
 430 034a 07F10802 		add	r2, r7, #8
 431 034e 3B46     		mov	r3, r7
 432 0350 1268     		ldr	r2, [r2]
 433 0352 1B68     		ldr	r3, [r3]
 434 0354 1344     		add	r3, r3, r2
 435              		.loc 1 225 31
 436 0356 013B     		subs	r3, r3, #1
 437              		.loc 1 225 10
 438 0358 9B08     		lsrs	r3, r3, #2
 439 035a C7F82031 		str	r3, [r7, #288]
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (blkCnt > 0)
 440              		.loc 1 227 9
 441 035e 72E2     		b	.L12
 442              	.L31:
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 = pScratch1;
 443              		.loc 1 230 11
 444 0360 07F13003 		add	r3, r7, #48
 445 0364 D7F85421 		ldr	r2, [r7, #340]
 446 0368 1A60     		str	r2, [r3]
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Clear Accumlators */
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     acc0 = 0;
 447              		.loc 1 233 10
 448 036a 0023     		movs	r3, #0
ARM GAS  /tmp/ccWK6iaK.s 			page 13


 449 036c C7F83C31 		str	r3, [r7, #316]
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     acc1 = 0;
 450              		.loc 1 234 10
 451 0370 0023     		movs	r3, #0
 452 0372 C7F83831 		str	r3, [r7, #312]
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     acc2 = 0;
 453              		.loc 1 235 10
 454 0376 0023     		movs	r3, #0
 455 0378 C7F83431 		str	r3, [r7, #308]
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     acc3 = 0;
 456              		.loc 1 236 10
 457 037c 0023     		movs	r3, #0
 458 037e C7F83031 		str	r3, [r7, #304]
 459 0382 07F13003 		add	r3, r7, #48
 460 0386 C7F8C430 		str	r3, [r7, #196]
 461              	.LBB35:
 462              	.LBB36:
 463              		.file 2 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
ARM GAS  /tmp/ccWK6iaK.s 			page 14


  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
ARM GAS  /tmp/ccWK6iaK.s 			page 15


  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 16


 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
ARM GAS  /tmp/ccWK6iaK.s 			page 17


 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 18


 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 19


 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
ARM GAS  /tmp/ccWK6iaK.s 			page 20


 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
ARM GAS  /tmp/ccWK6iaK.s 			page 21


 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 464              		.loc 2 474 3
 465 038a D7F8C430 		ldr	r3, [r7, #196]
 466 038e 1B68     		ldr	r3, [r3]
 467 0390 1B68     		ldr	r3, [r3]	@ unaligned
 468 0392 1A46     		mov	r2, r3
 469 0394 07F11803 		add	r3, r7, #24
 470 0398 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 471              		.loc 2 475 9
 472 039a D7F8C430 		ldr	r3, [r7, #196]
 473 039e 1B68     		ldr	r3, [r3]
 474 03a0 1A1D     		adds	r2, r3, #4
 475 03a2 D7F8C430 		ldr	r3, [r7, #196]
 476 03a6 1A60     		str	r2, [r3]
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 477              		.loc 2 477 10
 478 03a8 07F11803 		add	r3, r7, #24
 479 03ac 1B68     		ldr	r3, [r3]
 480              	.LBE36:
 481              	.LBE35:
ARM GAS  /tmp/ccWK6iaK.s 			page 22


 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Read two samples from scratch1 buffer */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x1 = read_q15x2_ia (&pScr1);
 482              		.loc 1 239 10
 483 03ae C7F81431 		str	r3, [r7, #276]
 484 03b2 07F13003 		add	r3, r7, #48
 485 03b6 C7F8C830 		str	r3, [r7, #200]
 486              	.LBB37:
 487              	.LBB38:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 488              		.loc 2 474 3
 489 03ba D7F8C830 		ldr	r3, [r7, #200]
 490 03be 1B68     		ldr	r3, [r3]
 491 03c0 1B68     		ldr	r3, [r3]	@ unaligned
 492 03c2 1A46     		mov	r2, r3
 493 03c4 07F11403 		add	r3, r7, #20
 494 03c8 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 495              		.loc 2 475 9
 496 03ca D7F8C830 		ldr	r3, [r7, #200]
 497 03ce 1B68     		ldr	r3, [r3]
 498 03d0 1A1D     		adds	r2, r3, #4
 499 03d2 D7F8C830 		ldr	r3, [r7, #200]
 500 03d6 1A60     		str	r2, [r3]
 501              		.loc 2 477 10
 502 03d8 07F11403 		add	r3, r7, #20
 503 03dc 1B68     		ldr	r3, [r3]
 504              	.LBE38:
 505              	.LBE37:
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Read next two samples from scratch1 buffer */
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     x2 = read_q15x2_ia (&pScr1);
 506              		.loc 1 242 10
 507 03de C7F81031 		str	r3, [r7, #272]
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) >> 2U;
 508              		.loc 1 244 12
 509 03e2 3B46     		mov	r3, r7
 510 03e4 1B68     		ldr	r3, [r3]
 511 03e6 9B08     		lsrs	r3, r3, #2
 512 03e8 C7F81C31 		str	r3, [r7, #284]
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0U)
 513              		.loc 1 246 11
 514 03ec 3AE1     		b	.L15
 515              	.L28:
 516 03ee 07F13403 		add	r3, r7, #52
 517 03f2 07F12C02 		add	r2, r7, #44
 518 03f6 1A60     		str	r2, [r3]
 519              	.LBB39:
 520              	.LBB40:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 521              		.loc 2 474 3
 522 03f8 07F13403 		add	r3, r7, #52
 523 03fc 1B68     		ldr	r3, [r3]
 524 03fe 1B68     		ldr	r3, [r3]
 525 0400 1B68     		ldr	r3, [r3]	@ unaligned
ARM GAS  /tmp/ccWK6iaK.s 			page 23


 526 0402 1A46     		mov	r2, r3
 527 0404 07F12803 		add	r3, r7, #40
 528 0408 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 529              		.loc 2 475 9
 530 040a 07F13403 		add	r3, r7, #52
 531 040e 1B68     		ldr	r3, [r3]
 532 0410 1B68     		ldr	r3, [r3]
 533 0412 1A1D     		adds	r2, r3, #4
 534 0414 07F13403 		add	r3, r7, #52
 535 0418 1B68     		ldr	r3, [r3]
 536 041a 1A60     		str	r2, [r3]
 537              		.loc 2 477 10
 538 041c 07F12803 		add	r3, r7, #40
 539 0420 1B68     		ldr	r3, [r3]
 540              	.LBE40:
 541              	.LBE39:
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read four samples from smaller buffer */
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       y1 = read_q15x2_ia (&pScr2);
 542              		.loc 1 249 12
 543 0422 C7F8D430 		str	r3, [r7, #212]
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* multiply and accumlate */
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 = __SMLAD(x1, y1, acc0);
 544              		.loc 1 252 14
 545 0426 D7F81431 		ldr	r3, [r7, #276]
 546 042a D7F8D410 		ldr	r1, [r7, #212]
 547 042e D7F83C21 		ldr	r2, [r7, #316]
 548 0432 7B64     		str	r3, [r7, #68]
 549 0434 07F14003 		add	r3, r7, #64
 550 0438 1960     		str	r1, [r3]
 551 043a 07F13C03 		add	r3, r7, #60
 552 043e 1A60     		str	r2, [r3]
 553              	.LBB41:
 554              	.LBB42:
 555              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccWK6iaK.s 			page 24


  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccWK6iaK.s 			page 25


  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccWK6iaK.s 			page 26


 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 27


 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
ARM GAS  /tmp/ccWK6iaK.s 			page 28


 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccWK6iaK.s 			page 29


 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 30


 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
ARM GAS  /tmp/ccWK6iaK.s 			page 31


 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  /tmp/ccWK6iaK.s 			page 32


 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccWK6iaK.s 			page 33


 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  /tmp/ccWK6iaK.s 			page 34


 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  /tmp/ccWK6iaK.s 			page 35


 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
ARM GAS  /tmp/ccWK6iaK.s 			page 36


 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 37


 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccWK6iaK.s 			page 38


 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 39


 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccWK6iaK.s 			page 40


 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 41


 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/ccWK6iaK.s 			page 42


1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
ARM GAS  /tmp/ccWK6iaK.s 			page 43


1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccWK6iaK.s 			page 44


1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
ARM GAS  /tmp/ccWK6iaK.s 			page 45


1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccWK6iaK.s 			page 46


1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /tmp/ccWK6iaK.s 			page 47


1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
ARM GAS  /tmp/ccWK6iaK.s 			page 48


1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 49


1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
ARM GAS  /tmp/ccWK6iaK.s 			page 50


1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
ARM GAS  /tmp/ccWK6iaK.s 			page 51


1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/ccWK6iaK.s 			page 52


1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 53


1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccWK6iaK.s 			page 54


1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
ARM GAS  /tmp/ccWK6iaK.s 			page 55


1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccWK6iaK.s 			page 56


1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccWK6iaK.s 			page 57


1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccWK6iaK.s 			page 58


1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 556              		.loc 3 1993 3
 557 0440 7B6C     		ldr	r3, [r7, #68]
 558 0442 07F14002 		add	r2, r7, #64
 559 0446 1268     		ldr	r2, [r2]
 560 0448 07F13C01 		add	r1, r7, #60
 561 044c 0968     		ldr	r1, [r1]
 562              		.syntax unified
 563              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 564 044e 23FB0212 		smlad r2, r3, r2, r1
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 0452 07F13803 		add	r3, r7, #56
 569 0456 1A60     		str	r2, [r3]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 570              		.loc 3 1994 9
 571 0458 07F13803 		add	r3, r7, #56
 572 045c 1B68     		ldr	r3, [r3]
 573              	.LBE42:
 574              	.LBE41:
 575              		.loc 1 252 12
 576 045e C7F83C31 		str	r3, [r7, #316]
ARM GAS  /tmp/ccWK6iaK.s 			page 59


 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 = __SMLAD(x2, y1, acc2);
 577              		.loc 1 253 14
 578 0462 D7F81011 		ldr	r1, [r7, #272]
 579 0466 D7F8D420 		ldr	r2, [r7, #212]
 580 046a D7F83431 		ldr	r3, [r7, #308]
 581 046e 7965     		str	r1, [r7, #84]
 582 0470 3A65     		str	r2, [r7, #80]
 583 0472 FB64     		str	r3, [r7, #76]
 584              	.LBB43:
 585              	.LBB44:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 586              		.loc 3 1993 3
 587 0474 7B6D     		ldr	r3, [r7, #84]
 588 0476 3A6D     		ldr	r2, [r7, #80]
 589 0478 F96C     		ldr	r1, [r7, #76]
 590              		.syntax unified
 591              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 592 047a 23FB0213 		smlad r3, r3, r2, r1
 593              	@ 0 "" 2
 594              		.thumb
 595              		.syntax unified
 596 047e BB64     		str	r3, [r7, #72]
 597              		.loc 3 1994 9
 598 0480 BB6C     		ldr	r3, [r7, #72]
 599              	.LBE44:
 600              	.LBE43:
 601              		.loc 1 253 12
 602 0482 C7F83431 		str	r3, [r7, #308]
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* pack input data */
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 603              		.loc 1 257 12
 604 0486 D7F81031 		ldr	r3, [r7, #272]
 605 048a 9AB2     		uxth	r2, r3
 606 048c D7F81411 		ldr	r1, [r7, #276]
 607 0490 7E4B     		ldr	r3, .L38
 608 0492 0B40     		ands	r3, r3, r1
 609 0494 1343     		orrs	r3, r3, r2
 610              		.loc 1 257 10
 611 0496 C7F8D030 		str	r3, [r7, #208]
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #else
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* multiply and accumlate */
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 612              		.loc 1 263 14
 613 049a D7F8D010 		ldr	r1, [r7, #208]
 614 049e D7F8D420 		ldr	r2, [r7, #212]
 615 04a2 D7F83831 		ldr	r3, [r7, #312]
 616 04a6 7966     		str	r1, [r7, #100]
 617 04a8 3A66     		str	r2, [r7, #96]
 618 04aa FB65     		str	r3, [r7, #92]
 619              	.LBB45:
 620              	.LBB46:
1995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccWK6iaK.s 			page 60


1996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 621              		.loc 3 2001 3
 622 04ac 7B6E     		ldr	r3, [r7, #100]
 623 04ae 3A6E     		ldr	r2, [r7, #96]
 624 04b0 F96D     		ldr	r1, [r7, #92]
 625              		.syntax unified
 626              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 627 04b2 23FB1213 		smladx r3, r3, r2, r1
 628              	@ 0 "" 2
 629              		.thumb
 630              		.syntax unified
 631 04b6 BB65     		str	r3, [r7, #88]
2002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 632              		.loc 3 2002 9
 633 04b8 BB6D     		ldr	r3, [r7, #88]
 634              	.LBE46:
 635              	.LBE45:
 636              		.loc 1 263 12
 637 04ba C7F83831 		str	r3, [r7, #312]
 638 04be 07F13003 		add	r3, r7, #48
 639 04c2 BB66     		str	r3, [r7, #104]
 640              	.LBB47:
 641              	.LBB48:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 642              		.loc 2 474 3
 643 04c4 BB6E     		ldr	r3, [r7, #104]
 644 04c6 1B68     		ldr	r3, [r3]
 645 04c8 1B68     		ldr	r3, [r3]	@ unaligned
 646 04ca 1A46     		mov	r2, r3
 647 04cc 07F12403 		add	r3, r7, #36
 648 04d0 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 649              		.loc 2 475 9
 650 04d2 BB6E     		ldr	r3, [r7, #104]
 651 04d4 1B68     		ldr	r3, [r3]
 652 04d6 1A1D     		adds	r2, r3, #4
 653 04d8 BB6E     		ldr	r3, [r7, #104]
 654 04da 1A60     		str	r2, [r3]
 655              		.loc 2 477 10
 656 04dc 07F12403 		add	r3, r7, #36
 657 04e0 1B68     		ldr	r3, [r3]
 658              	.LBE48:
 659              	.LBE47:
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read next two samples from scratch1 buffer */
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x1 = read_q15x2_ia (&pScr1);
 660              		.loc 1 266 12
 661 04e2 C7F81431 		str	r3, [r7, #276]
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* pack input data */
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
ARM GAS  /tmp/ccWK6iaK.s 			page 61


 662              		.loc 1 270 12
 663 04e6 D7F81431 		ldr	r3, [r7, #276]
 664 04ea 9AB2     		uxth	r2, r3
 665 04ec D7F81011 		ldr	r1, [r7, #272]
 666 04f0 664B     		ldr	r3, .L38
 667 04f2 0B40     		ands	r3, r3, r1
 668 04f4 1343     		orrs	r3, r3, r2
 669              		.loc 1 270 10
 670 04f6 C7F8D030 		str	r3, [r7, #208]
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #else
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 671              		.loc 1 275 14
 672 04fa D7F8D010 		ldr	r1, [r7, #208]
 673 04fe D7F8D420 		ldr	r2, [r7, #212]
 674 0502 D7F83031 		ldr	r3, [r7, #304]
 675 0506 B967     		str	r1, [r7, #120]
 676 0508 7A67     		str	r2, [r7, #116]
 677 050a 3B67     		str	r3, [r7, #112]
 678              	.LBB49:
 679              	.LBB50:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 680              		.loc 3 2001 3
 681 050c BB6F     		ldr	r3, [r7, #120]
 682 050e 7A6F     		ldr	r2, [r7, #116]
 683 0510 396F     		ldr	r1, [r7, #112]
 684              		.syntax unified
 685              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 686 0512 23FB1213 		smladx r3, r3, r2, r1
 687              	@ 0 "" 2
 688              		.thumb
 689              		.syntax unified
 690 0516 FB66     		str	r3, [r7, #108]
 691              		.loc 3 2002 9
 692 0518 FB6E     		ldr	r3, [r7, #108]
 693              	.LBE50:
 694              	.LBE49:
 695              		.loc 1 275 12
 696 051a C7F83031 		str	r3, [r7, #304]
 697 051e 07F12C03 		add	r3, r7, #44
 698 0522 FB67     		str	r3, [r7, #124]
 699              	.LBB51:
 700              	.LBB52:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 701              		.loc 2 474 3
 702 0524 FB6F     		ldr	r3, [r7, #124]
 703 0526 1B68     		ldr	r3, [r3]
 704 0528 1B68     		ldr	r3, [r3]	@ unaligned
 705 052a 1A46     		mov	r2, r3
 706 052c 07F12003 		add	r3, r7, #32
 707 0530 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 708              		.loc 2 475 9
 709 0532 FB6F     		ldr	r3, [r7, #124]
 710 0534 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWK6iaK.s 			page 62


 711 0536 1A1D     		adds	r2, r3, #4
 712 0538 FB6F     		ldr	r3, [r7, #124]
 713 053a 1A60     		str	r2, [r3]
 714              		.loc 2 477 10
 715 053c 07F12003 		add	r3, r7, #32
 716 0540 1B68     		ldr	r3, [r3]
 717              	.LBE52:
 718              	.LBE51:
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Read four samples from smaller buffer */
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       y1 = read_q15x2_ia (&pScr2);
 719              		.loc 1 278 12
 720 0542 C7F8D430 		str	r3, [r7, #212]
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 = __SMLAD(x2, y1, acc0);
 721              		.loc 1 280 14
 722 0546 D7F81011 		ldr	r1, [r7, #272]
 723 054a D7F8D420 		ldr	r2, [r7, #212]
 724 054e D7F83C31 		ldr	r3, [r7, #316]
 725 0552 C7F88C10 		str	r1, [r7, #140]
 726 0556 C7F88820 		str	r2, [r7, #136]
 727 055a C7F88430 		str	r3, [r7, #132]
 728              	.LBB53:
 729              	.LBB54:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 730              		.loc 3 1993 3
 731 055e D7F88C30 		ldr	r3, [r7, #140]
 732 0562 D7F88820 		ldr	r2, [r7, #136]
 733 0566 D7F88410 		ldr	r1, [r7, #132]
 734              		.syntax unified
 735              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 736 056a 23FB0213 		smlad r3, r3, r2, r1
 737              	@ 0 "" 2
 738              		.thumb
 739              		.syntax unified
 740 056e C7F88030 		str	r3, [r7, #128]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 741              		.loc 3 1994 9
 742 0572 D7F88030 		ldr	r3, [r7, #128]
 743              	.LBE54:
 744              	.LBE53:
 745              		.loc 1 280 12
 746 0576 C7F83C31 		str	r3, [r7, #316]
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 = __SMLAD(x1, y1, acc2);
 747              		.loc 1 282 14
 748 057a D7F81411 		ldr	r1, [r7, #276]
 749 057e D7F8D420 		ldr	r2, [r7, #212]
 750 0582 D7F83431 		ldr	r3, [r7, #308]
 751 0586 C7F89C10 		str	r1, [r7, #156]
 752 058a C7F89820 		str	r2, [r7, #152]
 753 058e C7F89430 		str	r3, [r7, #148]
 754              	.LBB55:
 755              	.LBB56:
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 756              		.loc 3 1993 3
 757 0592 D7F89C30 		ldr	r3, [r7, #156]
ARM GAS  /tmp/ccWK6iaK.s 			page 63


 758 0596 D7F89820 		ldr	r2, [r7, #152]
 759 059a D7F89410 		ldr	r1, [r7, #148]
 760              		.syntax unified
 761              	@ 1993 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 762 059e 23FB0213 		smlad r3, r3, r2, r1
 763              	@ 0 "" 2
 764              		.thumb
 765              		.syntax unified
 766 05a2 C7F89030 		str	r3, [r7, #144]
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 767              		.loc 3 1994 9
 768 05a6 D7F89030 		ldr	r3, [r7, #144]
 769              	.LBE56:
 770              	.LBE55:
 771              		.loc 1 282 12
 772 05aa C7F83431 		str	r3, [r7, #308]
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 = __SMLADX(x3, y1, acc1);
 773              		.loc 1 284 14
 774 05ae D7F8D010 		ldr	r1, [r7, #208]
 775 05b2 D7F8D420 		ldr	r2, [r7, #212]
 776 05b6 D7F83831 		ldr	r3, [r7, #312]
 777 05ba C7F8AC10 		str	r1, [r7, #172]
 778 05be C7F8A820 		str	r2, [r7, #168]
 779 05c2 C7F8A430 		str	r3, [r7, #164]
 780              	.LBB57:
 781              	.LBB58:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 782              		.loc 3 2001 3
 783 05c6 D7F8AC30 		ldr	r3, [r7, #172]
 784 05ca D7F8A820 		ldr	r2, [r7, #168]
 785 05ce D7F8A410 		ldr	r1, [r7, #164]
 786              		.syntax unified
 787              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 788 05d2 23FB1213 		smladx r3, r3, r2, r1
 789              	@ 0 "" 2
 790              		.thumb
 791              		.syntax unified
 792 05d6 C7F8A030 		str	r3, [r7, #160]
 793              		.loc 3 2002 9
 794 05da D7F8A030 		ldr	r3, [r7, #160]
 795              	.LBE58:
 796              	.LBE57:
 797              		.loc 1 284 12
 798 05de C7F83831 		str	r3, [r7, #312]
 799 05e2 07F13003 		add	r3, r7, #48
 800 05e6 C7F8B030 		str	r3, [r7, #176]
 801              	.LBB59:
 802              	.LBB60:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 803              		.loc 2 474 3
 804 05ea D7F8B030 		ldr	r3, [r7, #176]
 805 05ee 1B68     		ldr	r3, [r3]
 806 05f0 1B68     		ldr	r3, [r3]	@ unaligned
 807 05f2 1A46     		mov	r2, r3
 808 05f4 07F11C03 		add	r3, r7, #28
 809 05f8 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccWK6iaK.s 			page 64


 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 810              		.loc 2 475 9
 811 05fa D7F8B030 		ldr	r3, [r7, #176]
 812 05fe 1B68     		ldr	r3, [r3]
 813 0600 1A1D     		adds	r2, r3, #4
 814 0602 D7F8B030 		ldr	r3, [r7, #176]
 815 0606 1A60     		str	r2, [r3]
 816              		.loc 2 477 10
 817 0608 07F11C03 		add	r3, r7, #28
 818 060c 1B68     		ldr	r3, [r3]
 819              	.LBE60:
 820              	.LBE59:
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x2 = read_q15x2_ia (&pScr1);
 821              		.loc 1 286 12
 822 060e C7F81031 		str	r3, [r7, #272]
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x2, x1, 0);
 823              		.loc 1 289 12
 824 0612 D7F81031 		ldr	r3, [r7, #272]
 825 0616 9AB2     		uxth	r2, r3
 826 0618 D7F81411 		ldr	r1, [r7, #276]
 827 061c 1B4B     		ldr	r3, .L38
 828 061e 0B40     		ands	r3, r3, r1
 829 0620 1343     		orrs	r3, r3, r2
 830              		.loc 1 289 10
 831 0622 C7F8D030 		str	r3, [r7, #208]
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #else
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       x3 = __PKHBT(x1, x2, 0);
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** #endif
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 = __SMLADX(x3, y1, acc3);
 832              		.loc 1 294 14
 833 0626 D7F8D010 		ldr	r1, [r7, #208]
 834 062a D7F8D420 		ldr	r2, [r7, #212]
 835 062e D7F83031 		ldr	r3, [r7, #304]
 836 0632 C7F8C010 		str	r1, [r7, #192]
 837 0636 C7F8BC20 		str	r2, [r7, #188]
 838 063a C7F8B830 		str	r3, [r7, #184]
 839              	.LBB61:
 840              	.LBB62:
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 841              		.loc 3 2001 3
 842 063e D7F8C030 		ldr	r3, [r7, #192]
 843 0642 D7F8BC20 		ldr	r2, [r7, #188]
 844 0646 D7F8B810 		ldr	r1, [r7, #184]
 845              		.syntax unified
 846              	@ 2001 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 847 064a 23FB1213 		smladx r3, r3, r2, r1
 848              	@ 0 "" 2
 849              		.thumb
 850              		.syntax unified
 851 064e C7F8B430 		str	r3, [r7, #180]
 852              		.loc 3 2002 9
 853 0652 D7F8B430 		ldr	r3, [r7, #180]
 854              	.LBE62:
ARM GAS  /tmp/ccWK6iaK.s 			page 65


 855              	.LBE61:
 856              		.loc 1 294 12
 857 0656 C7F83031 		str	r3, [r7, #304]
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement loop counter */
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 858              		.loc 1 297 13
 859 065a D7F81C31 		ldr	r3, [r7, #284]
 860 065e 013B     		subs	r3, r3, #1
 861 0660 C7F81C31 		str	r3, [r7, #284]
 862              	.L15:
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 863              		.loc 1 246 11
 864 0664 D7F81C31 		ldr	r3, [r7, #284]
 865 0668 002B     		cmp	r3, #0
 866 066a 7FF4C0AE 		bne	.L28
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     }
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Update scratch pointer for remaining samples of smaller length sequence */
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 -= 4U;
 867              		.loc 1 301 11
 868 066e 07F13003 		add	r3, r7, #48
 869 0672 1B68     		ldr	r3, [r3]
 870 0674 A3F10802 		sub	r2, r3, #8
 871 0678 07F13003 		add	r3, r7, #48
 872 067c 1A60     		str	r2, [r3]
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) & 3U;
 873              		.loc 1 304 12
 874 067e 3B46     		mov	r3, r7
 875 0680 1B68     		ldr	r3, [r3]
 876 0682 03F00303 		and	r3, r3, #3
 877 0686 C7F81C31 		str	r3, [r7, #284]
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0U)
 878              		.loc 1 306 11
 879 068a 69E0     		b	.L29
 880              	.L39:
 881              		.align	2
 882              	.L38:
 883 068c 0000FFFF 		.word	-65536
 884              	.L30:
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* accumlate the results */
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2);
 885              		.loc 1 309 22
 886 0690 07F13003 		add	r3, r7, #48
 887 0694 1B68     		ldr	r3, [r3]
 888 0696 991C     		adds	r1, r3, #2
 889 0698 07F13002 		add	r2, r7, #48
 890 069c 1160     		str	r1, [r2]
 891              		.loc 1 309 16
 892 069e B3F90030 		ldrsh	r3, [r3]
 893 06a2 1A46     		mov	r2, r3
 894              		.loc 1 309 27
 895 06a4 07F12C03 		add	r3, r7, #44
ARM GAS  /tmp/ccWK6iaK.s 			page 66


 896 06a8 1B68     		ldr	r3, [r3]
 897 06aa B3F90030 		ldrsh	r3, [r3]
 898              		.loc 1 309 25
 899 06ae 03FB02F3 		mul	r3, r3, r2
 900              		.loc 1 309 12
 901 06b2 D7F83C21 		ldr	r2, [r7, #316]
 902 06b6 1344     		add	r3, r3, r2
 903 06b8 C7F83C31 		str	r3, [r7, #316]
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc1 += (*pScr1++ * *pScr2);
 904              		.loc 1 310 22
 905 06bc 07F13003 		add	r3, r7, #48
 906 06c0 1B68     		ldr	r3, [r3]
 907 06c2 991C     		adds	r1, r3, #2
 908 06c4 07F13002 		add	r2, r7, #48
 909 06c8 1160     		str	r1, [r2]
 910              		.loc 1 310 16
 911 06ca B3F90030 		ldrsh	r3, [r3]
 912 06ce 1A46     		mov	r2, r3
 913              		.loc 1 310 27
 914 06d0 07F12C03 		add	r3, r7, #44
 915 06d4 1B68     		ldr	r3, [r3]
 916 06d6 B3F90030 		ldrsh	r3, [r3]
 917              		.loc 1 310 25
 918 06da 03FB02F3 		mul	r3, r3, r2
 919              		.loc 1 310 12
 920 06de D7F83821 		ldr	r2, [r7, #312]
 921 06e2 1344     		add	r3, r3, r2
 922 06e4 C7F83831 		str	r3, [r7, #312]
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc2 += (*pScr1++ * *pScr2);
 923              		.loc 1 311 22
 924 06e8 07F13003 		add	r3, r7, #48
 925 06ec 1B68     		ldr	r3, [r3]
 926 06ee 991C     		adds	r1, r3, #2
 927 06f0 07F13002 		add	r2, r7, #48
 928 06f4 1160     		str	r1, [r2]
 929              		.loc 1 311 16
 930 06f6 B3F90030 		ldrsh	r3, [r3]
 931 06fa 1A46     		mov	r2, r3
 932              		.loc 1 311 27
 933 06fc 07F12C03 		add	r3, r7, #44
 934 0700 1B68     		ldr	r3, [r3]
 935 0702 B3F90030 		ldrsh	r3, [r3]
 936              		.loc 1 311 25
 937 0706 03FB02F3 		mul	r3, r3, r2
 938              		.loc 1 311 12
 939 070a D7F83421 		ldr	r2, [r7, #308]
 940 070e 1344     		add	r3, r3, r2
 941 0710 C7F83431 		str	r3, [r7, #308]
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc3 += (*pScr1++ * *pScr2++);
 942              		.loc 1 312 22
 943 0714 07F13003 		add	r3, r7, #48
 944 0718 1B68     		ldr	r3, [r3]
 945 071a 991C     		adds	r1, r3, #2
 946 071c 07F13002 		add	r2, r7, #48
 947 0720 1160     		str	r1, [r2]
 948              		.loc 1 312 16
 949 0722 B3F90030 		ldrsh	r3, [r3]
ARM GAS  /tmp/ccWK6iaK.s 			page 67


 950 0726 1846     		mov	r0, r3
 951              		.loc 1 312 33
 952 0728 07F12C03 		add	r3, r7, #44
 953 072c 1B68     		ldr	r3, [r3]
 954 072e 991C     		adds	r1, r3, #2
 955 0730 07F12C02 		add	r2, r7, #44
 956 0734 1160     		str	r1, [r2]
 957              		.loc 1 312 27
 958 0736 B3F90030 		ldrsh	r3, [r3]
 959              		.loc 1 312 25
 960 073a 03FB00F3 		mul	r3, r3, r0
 961              		.loc 1 312 12
 962 073e D7F83021 		ldr	r2, [r7, #304]
 963 0742 1344     		add	r3, r3, r2
 964 0744 C7F83031 		str	r3, [r7, #304]
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       pScr1 -= 3U;
 965              		.loc 1 314 13
 966 0748 07F13003 		add	r3, r7, #48
 967 074c 1B68     		ldr	r3, [r3]
 968 074e 9A1F     		subs	r2, r3, #6
 969 0750 07F13003 		add	r3, r7, #48
 970 0754 1A60     		str	r2, [r3]
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement loop counter */
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 971              		.loc 1 317 13
 972 0756 D7F81C31 		ldr	r3, [r7, #284]
 973 075a 013B     		subs	r3, r3, #1
 974 075c C7F81C31 		str	r3, [r7, #284]
 975              	.L29:
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 976              		.loc 1 306 11
 977 0760 D7F81C31 		ldr	r3, [r7, #284]
 978 0764 002B     		cmp	r3, #0
 979 0766 93D1     		bne	.L30
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     }
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     blkCnt--;
 980              		.loc 1 320 11
 981 0768 D7F82031 		ldr	r3, [r7, #288]
 982 076c 013B     		subs	r3, r3, #1
 983 076e C7F82031 		str	r3, [r7, #288]
 984              	.LBB63:
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc0 >> 7U, 8));
 985              		.loc 1 323 21
 986 0772 D7F83C31 		ldr	r3, [r7, #316]
 987 0776 DB11     		asrs	r3, r3, #7
 988 0778 C7F8F430 		str	r3, [r7, #244]
 989 077c D7F8F430 		ldr	r3, [r7, #244]
 990              		.syntax unified
 991              	@ 323 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c" 1
 992 0780 03F30703 		ssat r3, #8, r3
 993              	@ 0 "" 2
 994              		.thumb
ARM GAS  /tmp/ccWK6iaK.s 			page 68


 995              		.syntax unified
 996 0784 C7F8F030 		str	r3, [r7, #240]
 997 0788 D7F8F030 		ldr	r3, [r7, #240]
 998              	.LBE63:
 999              		.loc 1 323 13
 1000 078c 5AB2     		sxtb	r2, r3
 1001              		.loc 1 323 11
 1002 078e D7F80C31 		ldr	r3, [r7, #268]
 1003 0792 1A70     		strb	r2, [r3]
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1004              		.loc 1 324 10
 1005 0794 D7F81831 		ldr	r3, [r7, #280]
 1006 0798 D7F80C21 		ldr	r2, [r7, #268]
 1007 079c 1344     		add	r3, r3, r2
 1008 079e C7F80C31 		str	r3, [r7, #268]
 1009              	.LBB64:
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc1 >> 7U, 8));
 1010              		.loc 1 325 21
 1011 07a2 D7F83831 		ldr	r3, [r7, #312]
 1012 07a6 DB11     		asrs	r3, r3, #7
 1013 07a8 C7F8EC30 		str	r3, [r7, #236]
 1014 07ac D7F8EC30 		ldr	r3, [r7, #236]
 1015              		.syntax unified
 1016              	@ 325 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c" 1
 1017 07b0 03F30703 		ssat r3, #8, r3
 1018              	@ 0 "" 2
 1019              		.thumb
 1020              		.syntax unified
 1021 07b4 C7F8E830 		str	r3, [r7, #232]
 1022 07b8 D7F8E830 		ldr	r3, [r7, #232]
 1023              	.LBE64:
 1024              		.loc 1 325 13
 1025 07bc 5AB2     		sxtb	r2, r3
 1026              		.loc 1 325 11
 1027 07be D7F80C31 		ldr	r3, [r7, #268]
 1028 07c2 1A70     		strb	r2, [r3]
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1029              		.loc 1 326 10
 1030 07c4 D7F81831 		ldr	r3, [r7, #280]
 1031 07c8 D7F80C21 		ldr	r2, [r7, #268]
 1032 07cc 1344     		add	r3, r3, r2
 1033 07ce C7F80C31 		str	r3, [r7, #268]
 1034              	.LBB65:
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc2 >> 7U, 8));
 1035              		.loc 1 327 21
 1036 07d2 D7F83431 		ldr	r3, [r7, #308]
 1037 07d6 DB11     		asrs	r3, r3, #7
 1038 07d8 C7F8E430 		str	r3, [r7, #228]
 1039 07dc D7F8E430 		ldr	r3, [r7, #228]
 1040              		.syntax unified
 1041              	@ 327 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c" 1
 1042 07e0 03F30703 		ssat r3, #8, r3
 1043              	@ 0 "" 2
 1044              		.thumb
 1045              		.syntax unified
 1046 07e4 C7F8E030 		str	r3, [r7, #224]
 1047 07e8 D7F8E030 		ldr	r3, [r7, #224]
ARM GAS  /tmp/ccWK6iaK.s 			page 69


 1048              	.LBE65:
 1049              		.loc 1 327 13
 1050 07ec 5AB2     		sxtb	r2, r3
 1051              		.loc 1 327 11
 1052 07ee D7F80C31 		ldr	r3, [r7, #268]
 1053 07f2 1A70     		strb	r2, [r3]
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1054              		.loc 1 328 10
 1055 07f4 D7F81831 		ldr	r3, [r7, #280]
 1056 07f8 D7F80C21 		ldr	r2, [r7, #268]
 1057 07fc 1344     		add	r3, r3, r2
 1058 07fe C7F80C31 		str	r3, [r7, #268]
 1059              	.LBB66:
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc3 >> 7U, 8));
 1060              		.loc 1 329 21
 1061 0802 D7F83031 		ldr	r3, [r7, #304]
 1062 0806 DB11     		asrs	r3, r3, #7
 1063 0808 C7F8DC30 		str	r3, [r7, #220]
 1064 080c D7F8DC30 		ldr	r3, [r7, #220]
 1065              		.syntax unified
 1066              	@ 329 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c" 1
 1067 0810 03F30703 		ssat r3, #8, r3
 1068              	@ 0 "" 2
 1069              		.thumb
 1070              		.syntax unified
 1071 0814 C7F8D830 		str	r3, [r7, #216]
 1072 0818 D7F8D830 		ldr	r3, [r7, #216]
 1073              	.LBE66:
 1074              		.loc 1 329 13
 1075 081c 5AB2     		sxtb	r2, r3
 1076              		.loc 1 329 11
 1077 081e D7F80C31 		ldr	r3, [r7, #268]
 1078 0822 1A70     		strb	r2, [r3]
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1079              		.loc 1 330 10
 1080 0824 D7F81831 		ldr	r3, [r7, #280]
 1081 0828 D7F80C21 		ldr	r2, [r7, #268]
 1082 082c 1344     		add	r3, r3, r2
 1083 082e C7F80C31 		str	r3, [r7, #268]
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScr2 = py;
 1084              		.loc 1 333 11
 1085 0832 07F12C03 		add	r3, r7, #44
 1086 0836 D7F80021 		ldr	r2, [r7, #256]
 1087 083a 1A60     		str	r2, [r3]
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScratch1 += 4U;
 1088              		.loc 1 335 15
 1089 083c D7F85431 		ldr	r3, [r7, #340]
 1090 0840 0833     		adds	r3, r3, #8
 1091 0842 C7F85431 		str	r3, [r7, #340]
 1092              	.L12:
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 1093              		.loc 1 227 9
 1094 0846 D7F82031 		ldr	r3, [r7, #288]
 1095 084a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccWK6iaK.s 			page 70


 1096 084c 7FF488AD 		bne	.L31
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   blkCnt = (srcALen + srcBLen - 1U) & 0x3;
 1097              		.loc 1 338 21
 1098 0850 07F10802 		add	r2, r7, #8
 1099 0854 3B46     		mov	r3, r7
 1100 0856 1268     		ldr	r2, [r2]
 1101 0858 1B68     		ldr	r3, [r3]
 1102 085a 1344     		add	r3, r3, r2
 1103              		.loc 1 338 31
 1104 085c 013B     		subs	r3, r3, #1
 1105              		.loc 1 338 10
 1106 085e 03F00303 		and	r3, r3, #3
 1107 0862 C7F82031 		str	r3, [r7, #288]
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   /* Calculate correlation for remaining samples of Bigger length sequence */
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   while (blkCnt > 0)
 1108              		.loc 1 341 9
 1109 0866 9BE0     		b	.L32
 1110              	.L37:
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialze temporary scratch pointer as scratch1 */
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScr1 = pScratch1;
 1111              		.loc 1 344 11
 1112 0868 07F13003 		add	r3, r7, #48
 1113 086c D7F85421 		ldr	r2, [r7, #340]
 1114 0870 1A60     		str	r2, [r3]
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Clear Accumlators */
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     acc0 = 0;
 1115              		.loc 1 347 10
 1116 0872 0023     		movs	r3, #0
 1117 0874 C7F83C31 		str	r3, [r7, #316]
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) >> 1U;
 1118              		.loc 1 349 12
 1119 0878 3B46     		mov	r3, r7
 1120 087a 1B68     		ldr	r3, [r3]
 1121 087c 5B08     		lsrs	r3, r3, #1
 1122 087e C7F81C31 		str	r3, [r7, #284]
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0U)
 1123              		.loc 1 351 11
 1124 0882 38E0     		b	.L33
 1125              	.L34:
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1126              		.loc 1 353 22
 1127 0884 07F13003 		add	r3, r7, #48
 1128 0888 1B68     		ldr	r3, [r3]
 1129 088a 991C     		adds	r1, r3, #2
 1130 088c 07F13002 		add	r2, r7, #48
 1131 0890 1160     		str	r1, [r2]
 1132              		.loc 1 353 16
 1133 0892 B3F90030 		ldrsh	r3, [r3]
 1134 0896 1846     		mov	r0, r3
ARM GAS  /tmp/ccWK6iaK.s 			page 71


 1135              		.loc 1 353 33
 1136 0898 07F12C03 		add	r3, r7, #44
 1137 089c 1B68     		ldr	r3, [r3]
 1138 089e 991C     		adds	r1, r3, #2
 1139 08a0 07F12C02 		add	r2, r7, #44
 1140 08a4 1160     		str	r1, [r2]
 1141              		.loc 1 353 27
 1142 08a6 B3F90030 		ldrsh	r3, [r3]
 1143              		.loc 1 353 25
 1144 08aa 03FB00F3 		mul	r3, r3, r0
 1145              		.loc 1 353 12
 1146 08ae D7F83C21 		ldr	r2, [r7, #316]
 1147 08b2 1344     		add	r3, r3, r2
 1148 08b4 C7F83C31 		str	r3, [r7, #316]
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1149              		.loc 1 354 22
 1150 08b8 07F13003 		add	r3, r7, #48
 1151 08bc 1B68     		ldr	r3, [r3]
 1152 08be 991C     		adds	r1, r3, #2
 1153 08c0 07F13002 		add	r2, r7, #48
 1154 08c4 1160     		str	r1, [r2]
 1155              		.loc 1 354 16
 1156 08c6 B3F90030 		ldrsh	r3, [r3]
 1157 08ca 1846     		mov	r0, r3
 1158              		.loc 1 354 33
 1159 08cc 07F12C03 		add	r3, r7, #44
 1160 08d0 1B68     		ldr	r3, [r3]
 1161 08d2 991C     		adds	r1, r3, #2
 1162 08d4 07F12C02 		add	r2, r7, #44
 1163 08d8 1160     		str	r1, [r2]
 1164              		.loc 1 354 27
 1165 08da B3F90030 		ldrsh	r3, [r3]
 1166              		.loc 1 354 25
 1167 08de 03FB00F3 		mul	r3, r3, r0
 1168              		.loc 1 354 12
 1169 08e2 D7F83C21 		ldr	r2, [r7, #316]
 1170 08e6 1344     		add	r3, r3, r2
 1171 08e8 C7F83C31 		str	r3, [r7, #316]
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement loop counter */
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1172              		.loc 1 357 13
 1173 08ec D7F81C31 		ldr	r3, [r7, #284]
 1174 08f0 013B     		subs	r3, r3, #1
 1175 08f2 C7F81C31 		str	r3, [r7, #284]
 1176              	.L33:
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1177              		.loc 1 351 11
 1178 08f6 D7F81C31 		ldr	r3, [r7, #284]
 1179 08fa 002B     		cmp	r3, #0
 1180 08fc C2D1     		bne	.L34
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     }
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     tapCnt = (srcBLen) & 1U;
 1181              		.loc 1 360 12
 1182 08fe 3B46     		mov	r3, r7
 1183 0900 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWK6iaK.s 			page 72


 1184 0902 03F00103 		and	r3, r3, #1
 1185 0906 C7F81C31 		str	r3, [r7, #284]
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* apply same above for remaining samples of smaller length sequence */
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     while (tapCnt > 0U)
 1186              		.loc 1 363 11
 1187 090a 1EE0     		b	.L35
 1188              	.L36:
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* accumlate the results */
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       acc0 += (*pScr1++ * *pScr2++);
 1189              		.loc 1 366 22
 1190 090c 07F13003 		add	r3, r7, #48
 1191 0910 1B68     		ldr	r3, [r3]
 1192 0912 991C     		adds	r1, r3, #2
 1193 0914 07F13002 		add	r2, r7, #48
 1194 0918 1160     		str	r1, [r2]
 1195              		.loc 1 366 16
 1196 091a B3F90030 		ldrsh	r3, [r3]
 1197 091e 1846     		mov	r0, r3
 1198              		.loc 1 366 33
 1199 0920 07F12C03 		add	r3, r7, #44
 1200 0924 1B68     		ldr	r3, [r3]
 1201 0926 991C     		adds	r1, r3, #2
 1202 0928 07F12C02 		add	r2, r7, #44
 1203 092c 1160     		str	r1, [r2]
 1204              		.loc 1 366 27
 1205 092e B3F90030 		ldrsh	r3, [r3]
 1206              		.loc 1 366 25
 1207 0932 03FB00F3 		mul	r3, r3, r0
 1208              		.loc 1 366 12
 1209 0936 D7F83C21 		ldr	r2, [r7, #316]
 1210 093a 1344     		add	r3, r3, r2
 1211 093c C7F83C31 		str	r3, [r7, #316]
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       /* Decrement loop counter */
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****       tapCnt--;
 1212              		.loc 1 369 13
 1213 0940 D7F81C31 		ldr	r3, [r7, #284]
 1214 0944 013B     		subs	r3, r3, #1
 1215 0946 C7F81C31 		str	r3, [r7, #284]
 1216              	.L35:
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     {
 1217              		.loc 1 363 11
 1218 094a D7F81C31 		ldr	r3, [r7, #284]
 1219 094e 002B     		cmp	r3, #0
 1220 0950 DCD1     		bne	.L36
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     }
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     blkCnt--;
 1221              		.loc 1 372 11
 1222 0952 D7F82031 		ldr	r3, [r7, #288]
 1223 0956 013B     		subs	r3, r3, #1
 1224 0958 C7F82031 		str	r3, [r7, #288]
 1225              	.LBB67:
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Store the result in the accumulator in the destination buffer. */
ARM GAS  /tmp/ccWK6iaK.s 			page 73


 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     *pOut = (q7_t) (__SSAT(acc0 >> 7U, 8));
 1226              		.loc 1 375 21
 1227 095c D7F83C31 		ldr	r3, [r7, #316]
 1228 0960 DB11     		asrs	r3, r3, #7
 1229 0962 C7F8FC30 		str	r3, [r7, #252]
 1230 0966 D7F8FC30 		ldr	r3, [r7, #252]
 1231              		.syntax unified
 1232              	@ 375 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c" 1
 1233 096a 03F30703 		ssat r3, #8, r3
 1234              	@ 0 "" 2
 1235              		.thumb
 1236              		.syntax unified
 1237 096e C7F8F830 		str	r3, [r7, #248]
 1238 0972 D7F8F830 		ldr	r3, [r7, #248]
 1239              	.LBE67:
 1240              		.loc 1 375 13
 1241 0976 5AB2     		sxtb	r2, r3
 1242              		.loc 1 375 11
 1243 0978 D7F80C31 		ldr	r3, [r7, #268]
 1244 097c 1A70     		strb	r2, [r3]
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pOut += inc;
 1245              		.loc 1 376 10
 1246 097e D7F81831 		ldr	r3, [r7, #280]
 1247 0982 D7F80C21 		ldr	r2, [r7, #268]
 1248 0986 1344     		add	r3, r3, r2
 1249 0988 C7F80C31 		str	r3, [r7, #268]
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     /* Initialization of inputB pointer */
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScr2 = py;
 1250              		.loc 1 379 11
 1251 098c 07F12C03 		add	r3, r7, #44
 1252 0990 D7F80021 		ldr	r2, [r7, #256]
 1253 0994 1A60     		str	r2, [r3]
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****     pScratch1 += 1U;
 1254              		.loc 1 381 15
 1255 0996 D7F85431 		ldr	r3, [r7, #340]
 1256 099a 0233     		adds	r3, r3, #2
 1257 099c C7F85431 		str	r3, [r7, #340]
 1258              	.L32:
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   {
 1259              		.loc 1 341 9
 1260 09a0 D7F82031 		ldr	r3, [r7, #288]
 1261 09a4 002B     		cmp	r3, #0
 1262 09a6 7FF45FAF 		bne	.L37
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c ****   }
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** 
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_correlate_opt_q7.c **** }
 1263              		.loc 1 384 1
 1264 09aa 00BF     		nop
 1265 09ac 00BF     		nop
 1266 09ae 07F5A277 		add	r7, r7, #324
 1267              	.LCFI3:
 1268              		.cfi_def_cfa_offset 12
 1269 09b2 BD46     		mov	sp, r7
 1270              	.LCFI4:
 1271              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccWK6iaK.s 			page 74


 1272              		@ sp needed
 1273 09b4 90BD     		pop	{r4, r7, pc}
 1274              		.cfi_endproc
 1275              	.LFE145:
 1277 09b6 00BF     		.text
 1278              	.Letext0:
 1279              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1280              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1281              		.file 6 "/usr/include/newlib/sys/_types.h"
 1282              		.file 7 "/usr/include/newlib/sys/reent.h"
 1283              		.file 8 "/usr/include/newlib/sys/lock.h"
 1284              		.file 9 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccWK6iaK.s 			page 75


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_correlate_opt_q7.c
     /tmp/ccWK6iaK.s:17     .text.arm_correlate_opt_q7:0000000000000000 $t
     /tmp/ccWK6iaK.s:25     .text.arm_correlate_opt_q7:0000000000000000 arm_correlate_opt_q7
     /tmp/ccWK6iaK.s:883    .text.arm_correlate_opt_q7:000000000000068c $d
     /tmp/ccWK6iaK.s:886    .text.arm_correlate_opt_q7:0000000000000690 $t

UNDEFINED SYMBOLS
arm_fill_q15
