ARM GAS  /tmp/ccIha2OY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_rfft_fast_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.stage_rfft_f32,"ax",%progbits
  17              		.align	1
  18              		.global	stage_rfft_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	stage_rfft_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c"
   1:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Title:        arm_rfft_f32.c
   4:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Description:  RFFT & RIFFT Floating point process function
   5:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** void stage_rfft_f32(
ARM GAS  /tmp/ccIha2OY.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   const arm_rfft_fast_instance_f32 * S,
  33:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t * p,
  34:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t * pOut)
  35:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** {
  28              		.loc 1 35 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 95B0     		sub	sp, sp, #84
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 88
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  36:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         uint32_t  k;                                /* Loop Counter */
  37:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t twR, twI;                         /* RFFT Twiddle coefficients */
  38:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   const float32_t * pCoeff = S->pTwiddleRFFT;       /* Points to RFFT Twiddle factors */
  46              		.loc 1 38 21
  47 000c FB68     		ldr	r3, [r7, #12]
  48 000e 5B69     		ldr	r3, [r3, #20]
  49 0010 BB64     		str	r3, [r7, #72]
  39:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t *pA = p;                          /* increasing pointer */
  50              		.loc 1 39 20
  51 0012 BB68     		ldr	r3, [r7, #8]
  52 0014 7B64     		str	r3, [r7, #68]
  40:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t *pB = p;                          /* decreasing pointer */
  53              		.loc 1 40 20
  54 0016 BB68     		ldr	r3, [r7, #8]
  55 0018 3B64     		str	r3, [r7, #64]
  41:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t xAR, xAI, xBR, xBI;               /* temporary variables */
  42:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t t1a, t1b;                         /* temporary variables */
  43:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t p0, p1, p2, p3;                   /* temporary variables */
  44:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  45:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  46:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    k = (S->Sint).fftLen - 1;
  56              		.loc 1 46 17
  57 001a FB68     		ldr	r3, [r7, #12]
  58 001c 1B88     		ldrh	r3, [r3]
  59              		.loc 1 46 25
  60 001e 013B     		subs	r3, r3, #1
  61              		.loc 1 46 6
  62 0020 FB64     		str	r3, [r7, #76]
  47:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    /* Pack first and last sample of the frequency domain together */
  49:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  50:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xBR = pB[0];
  63              		.loc 1 50 8
  64 0022 3B6C     		ldr	r3, [r7, #64]
  65 0024 1B68     		ldr	r3, [r3]	@ float
ARM GAS  /tmp/ccIha2OY.s 			page 3


  66 0026 FB63     		str	r3, [r7, #60]	@ float
  51:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xBI = pB[1];
  67              		.loc 1 51 8
  68 0028 3B6C     		ldr	r3, [r7, #64]
  69 002a 5B68     		ldr	r3, [r3, #4]	@ float
  70 002c BB63     		str	r3, [r7, #56]	@ float
  52:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xAR = pA[0];
  71              		.loc 1 52 8
  72 002e 7B6C     		ldr	r3, [r7, #68]
  73 0030 1B68     		ldr	r3, [r3]	@ float
  74 0032 7B63     		str	r3, [r7, #52]	@ float
  53:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xAI = pA[1];
  75              		.loc 1 53 8
  76 0034 7B6C     		ldr	r3, [r7, #68]
  77 0036 5B68     		ldr	r3, [r3, #4]	@ float
  78 0038 3B63     		str	r3, [r7, #48]	@ float
  54:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  55:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    twR = *pCoeff++ ;
  79              		.loc 1 55 17
  80 003a BB6C     		ldr	r3, [r7, #72]
  81 003c 1A1D     		adds	r2, r3, #4
  82 003e BA64     		str	r2, [r7, #72]
  83              		.loc 1 55 8
  84 0040 1B68     		ldr	r3, [r3]	@ float
  85 0042 FB62     		str	r3, [r7, #44]	@ float
  56:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    twI = *pCoeff++ ;
  86              		.loc 1 56 17
  87 0044 BB6C     		ldr	r3, [r7, #72]
  88 0046 1A1D     		adds	r2, r3, #4
  89 0048 BA64     		str	r2, [r7, #72]
  90              		.loc 1 56 8
  91 004a 1B68     		ldr	r3, [r3]	@ float
  92 004c BB62     		str	r3, [r7, #40]	@ float
  57:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  58:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    // U1 = XA(1) + XB(1); % It is real
  59:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    t1a = xBR + xAR  ;
  93              		.loc 1 59 8
  94 004e 97ED0F7A 		vldr.32	s14, [r7, #60]
  95 0052 D7ED0D7A 		vldr.32	s15, [r7, #52]
  96 0056 77EE277A 		vadd.f32	s15, s14, s15
  97 005a C7ED097A 		vstr.32	s15, [r7, #36]
  60:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  61:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    // U2 = XB(1) - XA(1); % It is imaginary
  62:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    t1b = xBI + xAI  ;
  98              		.loc 1 62 8
  99 005e 97ED0E7A 		vldr.32	s14, [r7, #56]
 100 0062 D7ED0C7A 		vldr.32	s15, [r7, #48]
 101 0066 77EE277A 		vadd.f32	s15, s14, s15
 102 006a C7ED087A 		vstr.32	s15, [r7, #32]
  63:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  64:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    // real(tw * (xB - xA)) = twR * (xBR - xAR) - twI * (xBI - xAI);
  65:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    // imag(tw * (xB - xA)) = twI * (xBR - xAR) + twR * (xBI - xAI);
  66:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    *pOut++ = 0.5f * ( t1a + t1b );
 103              		.loc 1 66 27
 104 006e 97ED097A 		vldr.32	s14, [r7, #36]
 105 0072 D7ED087A 		vldr.32	s15, [r7, #32]
 106 0076 77EE277A 		vadd.f32	s15, s14, s15
ARM GAS  /tmp/ccIha2OY.s 			page 4


 107              		.loc 1 66 9
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 1A1D     		adds	r2, r3, #4
 110 007e 7A60     		str	r2, [r7, #4]
 111              		.loc 1 66 19
 112 0080 B6EE007A 		vmov.f32	s14, #5.0e-1
 113 0084 67EE877A 		vmul.f32	s15, s15, s14
 114              		.loc 1 66 12
 115 0088 C3ED007A 		vstr.32	s15, [r3]
  67:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    *pOut++ = 0.5f * ( t1a - t1b );
 116              		.loc 1 67 27
 117 008c 97ED097A 		vldr.32	s14, [r7, #36]
 118 0090 D7ED087A 		vldr.32	s15, [r7, #32]
 119 0094 77EE677A 		vsub.f32	s15, s14, s15
 120              		.loc 1 67 9
 121 0098 7B68     		ldr	r3, [r7, #4]
 122 009a 1A1D     		adds	r2, r3, #4
 123 009c 7A60     		str	r2, [r7, #4]
 124              		.loc 1 67 19
 125 009e B6EE007A 		vmov.f32	s14, #5.0e-1
 126 00a2 67EE877A 		vmul.f32	s15, s15, s14
 127              		.loc 1 67 12
 128 00a6 C3ED007A 		vstr.32	s15, [r3]
  68:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  69:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    // XA(1) = 1/2*( U1 - imag(U2) +  i*( U1 +imag(U2) ));
  70:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    pB  = p + 2*k;
 129              		.loc 1 70 12
 130 00aa FB6C     		ldr	r3, [r7, #76]
 131 00ac DB00     		lsls	r3, r3, #3
 132              		.loc 1 70 8
 133 00ae BA68     		ldr	r2, [r7, #8]
 134 00b0 1344     		add	r3, r3, r2
 135 00b2 3B64     		str	r3, [r7, #64]
  71:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    pA += 2;
 136              		.loc 1 71 7
 137 00b4 7B6C     		ldr	r3, [r7, #68]
 138 00b6 0833     		adds	r3, r3, #8
 139 00b8 7B64     		str	r3, [r7, #68]
 140              	.L2:
  72:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  73:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    do
  74:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    {
  75:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /*
  76:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          function X = my_split_rfft(X, ifftFlag)
  77:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          % X is a series of real numbers
  78:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          L  = length(X);
  79:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          XC = X(1:2:end) +i*X(2:2:end);
  80:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          XA = fft(XC);
  81:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          XB = conj(XA([1 end:-1:2]));
  82:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          TW = i*exp(-2*pi*i*[0:L/2-1]/L).';
  83:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          for l = 2:L/2
  84:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****             XA(l) = 1/2 * (XA(l) + XB(l) + TW(l) * (XB(l) - XA(l)));
  85:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          end
  86:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          XA(1) = 1/2* (XA(1) + XB(1) + TW(1) * (XB(1) - XA(1))) + i*( 1/2*( XA(1) + XB(1) + i*( XA(
  87:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****          X = XA;
  88:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       */
  89:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
ARM GAS  /tmp/ccIha2OY.s 			page 5


  90:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xBI = pB[1];
 141              		.loc 1 90 11 discriminator 1
 142 00ba 3B6C     		ldr	r3, [r7, #64]
 143 00bc 5B68     		ldr	r3, [r3, #4]	@ float
 144 00be BB63     		str	r3, [r7, #56]	@ float
  91:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xBR = pB[0];
 145              		.loc 1 91 11 discriminator 1
 146 00c0 3B6C     		ldr	r3, [r7, #64]
 147 00c2 1B68     		ldr	r3, [r3]	@ float
 148 00c4 FB63     		str	r3, [r7, #60]	@ float
  92:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xAR = pA[0];
 149              		.loc 1 92 11 discriminator 1
 150 00c6 7B6C     		ldr	r3, [r7, #68]
 151 00c8 1B68     		ldr	r3, [r3]	@ float
 152 00ca 7B63     		str	r3, [r7, #52]	@ float
  93:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xAI = pA[1];
 153              		.loc 1 93 11 discriminator 1
 154 00cc 7B6C     		ldr	r3, [r7, #68]
 155 00ce 5B68     		ldr	r3, [r3, #4]	@ float
 156 00d0 3B63     		str	r3, [r7, #48]	@ float
  94:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  95:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       twR = *pCoeff++;
 157              		.loc 1 95 20 discriminator 1
 158 00d2 BB6C     		ldr	r3, [r7, #72]
 159 00d4 1A1D     		adds	r2, r3, #4
 160 00d6 BA64     		str	r2, [r7, #72]
 161              		.loc 1 95 11 discriminator 1
 162 00d8 1B68     		ldr	r3, [r3]	@ float
 163 00da FB62     		str	r3, [r7, #44]	@ float
  96:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       twI = *pCoeff++;
 164              		.loc 1 96 20 discriminator 1
 165 00dc BB6C     		ldr	r3, [r7, #72]
 166 00de 1A1D     		adds	r2, r3, #4
 167 00e0 BA64     		str	r2, [r7, #72]
 168              		.loc 1 96 11 discriminator 1
 169 00e2 1B68     		ldr	r3, [r3]	@ float
 170 00e4 BB62     		str	r3, [r7, #40]	@ float
  97:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
  98:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       t1a = xBR - xAR ;
 171              		.loc 1 98 11 discriminator 1
 172 00e6 97ED0F7A 		vldr.32	s14, [r7, #60]
 173 00ea D7ED0D7A 		vldr.32	s15, [r7, #52]
 174 00ee 77EE677A 		vsub.f32	s15, s14, s15
 175 00f2 C7ED097A 		vstr.32	s15, [r7, #36]
  99:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       t1b = xBI + xAI ;
 176              		.loc 1 99 11 discriminator 1
 177 00f6 97ED0E7A 		vldr.32	s14, [r7, #56]
 178 00fa D7ED0C7A 		vldr.32	s15, [r7, #48]
 179 00fe 77EE277A 		vadd.f32	s15, s14, s15
 180 0102 C7ED087A 		vstr.32	s15, [r7, #32]
 100:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 101:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       // real(tw * (xB - xA)) = twR * (xBR - xAR) - twI * (xBI - xAI);
 102:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       // imag(tw * (xB - xA)) = twI * (xBR - xAR) + twR * (xBI - xAI);
 103:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       p0 = twR * t1a;
 181              		.loc 1 103 10 discriminator 1
 182 0106 97ED0B7A 		vldr.32	s14, [r7, #44]
 183 010a D7ED097A 		vldr.32	s15, [r7, #36]
ARM GAS  /tmp/ccIha2OY.s 			page 6


 184 010e 67EE277A 		vmul.f32	s15, s14, s15
 185 0112 C7ED077A 		vstr.32	s15, [r7, #28]
 104:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       p1 = twI * t1a;
 186              		.loc 1 104 10 discriminator 1
 187 0116 97ED0A7A 		vldr.32	s14, [r7, #40]
 188 011a D7ED097A 		vldr.32	s15, [r7, #36]
 189 011e 67EE277A 		vmul.f32	s15, s14, s15
 190 0122 C7ED067A 		vstr.32	s15, [r7, #24]
 105:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       p2 = twR * t1b;
 191              		.loc 1 105 10 discriminator 1
 192 0126 97ED0B7A 		vldr.32	s14, [r7, #44]
 193 012a D7ED087A 		vldr.32	s15, [r7, #32]
 194 012e 67EE277A 		vmul.f32	s15, s14, s15
 195 0132 C7ED057A 		vstr.32	s15, [r7, #20]
 106:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       p3 = twI * t1b;
 196              		.loc 1 106 10 discriminator 1
 197 0136 97ED0A7A 		vldr.32	s14, [r7, #40]
 198 013a D7ED087A 		vldr.32	s15, [r7, #32]
 199 013e 67EE277A 		vmul.f32	s15, s14, s15
 200 0142 C7ED047A 		vstr.32	s15, [r7, #16]
 107:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 108:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       *pOut++ = 0.5f * (xAR + xBR + p0 + p3 ); //xAR
 201              		.loc 1 108 29 discriminator 1
 202 0146 97ED0D7A 		vldr.32	s14, [r7, #52]
 203 014a D7ED0F7A 		vldr.32	s15, [r7, #60]
 204 014e 37EE277A 		vadd.f32	s14, s14, s15
 205              		.loc 1 108 35 discriminator 1
 206 0152 D7ED077A 		vldr.32	s15, [r7, #28]
 207 0156 37EE277A 		vadd.f32	s14, s14, s15
 208              		.loc 1 108 40 discriminator 1
 209 015a D7ED047A 		vldr.32	s15, [r7, #16]
 210 015e 77EE277A 		vadd.f32	s15, s14, s15
 211              		.loc 1 108 12 discriminator 1
 212 0162 7B68     		ldr	r3, [r7, #4]
 213 0164 1A1D     		adds	r2, r3, #4
 214 0166 7A60     		str	r2, [r7, #4]
 215              		.loc 1 108 22 discriminator 1
 216 0168 B6EE007A 		vmov.f32	s14, #5.0e-1
 217 016c 67EE877A 		vmul.f32	s15, s15, s14
 218              		.loc 1 108 15 discriminator 1
 219 0170 C3ED007A 		vstr.32	s15, [r3]
 109:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       *pOut++ = 0.5f * (xAI - xBI + p1 - p2 ); //xAI
 220              		.loc 1 109 29 discriminator 1
 221 0174 97ED0C7A 		vldr.32	s14, [r7, #48]
 222 0178 D7ED0E7A 		vldr.32	s15, [r7, #56]
 223 017c 37EE677A 		vsub.f32	s14, s14, s15
 224              		.loc 1 109 35 discriminator 1
 225 0180 D7ED067A 		vldr.32	s15, [r7, #24]
 226 0184 37EE277A 		vadd.f32	s14, s14, s15
 227              		.loc 1 109 40 discriminator 1
 228 0188 D7ED057A 		vldr.32	s15, [r7, #20]
 229 018c 77EE677A 		vsub.f32	s15, s14, s15
 230              		.loc 1 109 12 discriminator 1
 231 0190 7B68     		ldr	r3, [r7, #4]
 232 0192 1A1D     		adds	r2, r3, #4
 233 0194 7A60     		str	r2, [r7, #4]
 234              		.loc 1 109 22 discriminator 1
ARM GAS  /tmp/ccIha2OY.s 			page 7


 235 0196 B6EE007A 		vmov.f32	s14, #5.0e-1
 236 019a 67EE877A 		vmul.f32	s15, s15, s14
 237              		.loc 1 109 15 discriminator 1
 238 019e C3ED007A 		vstr.32	s15, [r3]
 110:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 111:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       pA += 2;
 239              		.loc 1 111 10 discriminator 1
 240 01a2 7B6C     		ldr	r3, [r7, #68]
 241 01a4 0833     		adds	r3, r3, #8
 242 01a6 7B64     		str	r3, [r7, #68]
 112:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       pB -= 2;
 243              		.loc 1 112 10 discriminator 1
 244 01a8 3B6C     		ldr	r3, [r7, #64]
 245 01aa 083B     		subs	r3, r3, #8
 246 01ac 3B64     		str	r3, [r7, #64]
 113:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       k--;
 247              		.loc 1 113 8 discriminator 1
 248 01ae FB6C     		ldr	r3, [r7, #76]
 249 01b0 013B     		subs	r3, r3, #1
 250 01b2 FB64     		str	r3, [r7, #76]
 114:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    } while (k > 0U);
 251              		.loc 1 114 4 discriminator 1
 252 01b4 FB6C     		ldr	r3, [r7, #76]
 253 01b6 002B     		cmp	r3, #0
 254 01b8 7FF47FAF 		bne	.L2
 115:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** }
 255              		.loc 1 115 1
 256 01bc 00BF     		nop
 257 01be 00BF     		nop
 258 01c0 5437     		adds	r7, r7, #84
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 4
 261 01c2 BD46     		mov	sp, r7
 262              	.LCFI4:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 01c4 5DF8047B 		ldr	r7, [sp], #4
 266              	.LCFI5:
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 01c8 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE145:
 273              		.section	.text.merge_rfft_f32,"ax",%progbits
 274              		.align	1
 275              		.global	merge_rfft_f32
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv5-d16
 281              	merge_rfft_f32:
 282              	.LFB146:
 116:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 117:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /* Prepares data for inverse cfft */
 118:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** void merge_rfft_f32(
 119:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   const arm_rfft_fast_instance_f32 * S,
 120:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t * p,
ARM GAS  /tmp/ccIha2OY.s 			page 8


 121:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t * pOut)
 122:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** {
 283              		.loc 1 122 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 80
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 95B0     		sub	sp, sp, #84
 293              	.LCFI7:
 294              		.cfi_def_cfa_offset 88
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI8:
 297              		.cfi_def_cfa_register 7
 298 0006 F860     		str	r0, [r7, #12]
 299 0008 B960     		str	r1, [r7, #8]
 300 000a 7A60     		str	r2, [r7, #4]
 123:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         uint32_t  k;                                /* Loop Counter */
 124:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t twR, twI;                         /* RFFT Twiddle coefficients */
 125:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   const float32_t *pCoeff = S->pTwiddleRFFT;        /* Points to RFFT Twiddle factors */
 301              		.loc 1 125 20
 302 000c FB68     		ldr	r3, [r7, #12]
 303 000e 5B69     		ldr	r3, [r3, #20]
 304 0010 BB64     		str	r3, [r7, #72]
 126:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t *pA = p;                          /* increasing pointer */
 305              		.loc 1 126 20
 306 0012 BB68     		ldr	r3, [r7, #8]
 307 0014 7B64     		str	r3, [r7, #68]
 127:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t *pB = p;                          /* decreasing pointer */
 308              		.loc 1 127 20
 309 0016 BB68     		ldr	r3, [r7, #8]
 310 0018 3B64     		str	r3, [r7, #64]
 128:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t xAR, xAI, xBR, xBI;               /* temporary variables */
 129:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****         float32_t t1a, t1b, r, s, t, u;             /* temporary variables */
 130:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 131:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    k = (S->Sint).fftLen - 1;
 311              		.loc 1 131 17
 312 001a FB68     		ldr	r3, [r7, #12]
 313 001c 1B88     		ldrh	r3, [r3]
 314              		.loc 1 131 25
 315 001e 013B     		subs	r3, r3, #1
 316              		.loc 1 131 6
 317 0020 FB64     		str	r3, [r7, #76]
 132:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 133:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xAR = pA[0];
 318              		.loc 1 133 8
 319 0022 7B6C     		ldr	r3, [r7, #68]
 320 0024 1B68     		ldr	r3, [r3]	@ float
 321 0026 FB63     		str	r3, [r7, #60]	@ float
 134:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    xAI = pA[1];
 322              		.loc 1 134 8
 323 0028 7B6C     		ldr	r3, [r7, #68]
 324 002a 5B68     		ldr	r3, [r3, #4]	@ float
 325 002c BB63     		str	r3, [r7, #56]	@ float
ARM GAS  /tmp/ccIha2OY.s 			page 9


 135:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 136:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    pCoeff += 2 ;
 326              		.loc 1 136 11
 327 002e BB6C     		ldr	r3, [r7, #72]
 328 0030 0833     		adds	r3, r3, #8
 329 0032 BB64     		str	r3, [r7, #72]
 137:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 138:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    *pOut++ = 0.5f * ( xAR + xAI );
 330              		.loc 1 138 27
 331 0034 97ED0F7A 		vldr.32	s14, [r7, #60]
 332 0038 D7ED0E7A 		vldr.32	s15, [r7, #56]
 333 003c 77EE277A 		vadd.f32	s15, s14, s15
 334              		.loc 1 138 9
 335 0040 7B68     		ldr	r3, [r7, #4]
 336 0042 1A1D     		adds	r2, r3, #4
 337 0044 7A60     		str	r2, [r7, #4]
 338              		.loc 1 138 19
 339 0046 B6EE007A 		vmov.f32	s14, #5.0e-1
 340 004a 67EE877A 		vmul.f32	s15, s15, s14
 341              		.loc 1 138 12
 342 004e C3ED007A 		vstr.32	s15, [r3]
 139:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    *pOut++ = 0.5f * ( xAR - xAI );
 343              		.loc 1 139 27
 344 0052 97ED0F7A 		vldr.32	s14, [r7, #60]
 345 0056 D7ED0E7A 		vldr.32	s15, [r7, #56]
 346 005a 77EE677A 		vsub.f32	s15, s14, s15
 347              		.loc 1 139 9
 348 005e 7B68     		ldr	r3, [r7, #4]
 349 0060 1A1D     		adds	r2, r3, #4
 350 0062 7A60     		str	r2, [r7, #4]
 351              		.loc 1 139 19
 352 0064 B6EE007A 		vmov.f32	s14, #5.0e-1
 353 0068 67EE877A 		vmul.f32	s15, s15, s14
 354              		.loc 1 139 12
 355 006c C3ED007A 		vstr.32	s15, [r3]
 140:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 141:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    pB  =  p + 2*k ;
 356              		.loc 1 141 13
 357 0070 FB6C     		ldr	r3, [r7, #76]
 358 0072 DB00     		lsls	r3, r3, #3
 359              		.loc 1 141 8
 360 0074 BA68     		ldr	r2, [r7, #8]
 361 0076 1344     		add	r3, r3, r2
 362 0078 3B64     		str	r3, [r7, #64]
 142:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    pA +=  2	   ;
 363              		.loc 1 142 7
 364 007a 7B6C     		ldr	r3, [r7, #68]
 365 007c 0833     		adds	r3, r3, #8
 366 007e 7B64     		str	r3, [r7, #68]
 143:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 144:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    while (k > 0U)
 367              		.loc 1 144 10
 368 0080 7CE0     		b	.L4
 369              	.L5:
 145:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    {
 146:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /* G is half of the frequency complex spectrum */
 147:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       //for k = 2:N
ARM GAS  /tmp/ccIha2OY.s 			page 10


 148:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       //    Xk(k) = 1/2 * (G(k) + conj(G(N-k+2)) + Tw(k)*( G(k) - conj(G(N-k+2))));
 149:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xBI =   pB[1]    ;
 370              		.loc 1 149 11
 371 0082 3B6C     		ldr	r3, [r7, #64]
 372 0084 5B68     		ldr	r3, [r3, #4]	@ float
 373 0086 7B63     		str	r3, [r7, #52]	@ float
 150:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xBR =   pB[0]    ;
 374              		.loc 1 150 11
 375 0088 3B6C     		ldr	r3, [r7, #64]
 376 008a 1B68     		ldr	r3, [r3]	@ float
 377 008c 3B63     		str	r3, [r7, #48]	@ float
 151:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xAR =  pA[0];
 378              		.loc 1 151 11
 379 008e 7B6C     		ldr	r3, [r7, #68]
 380 0090 1B68     		ldr	r3, [r3]	@ float
 381 0092 FB63     		str	r3, [r7, #60]	@ float
 152:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       xAI =  pA[1];
 382              		.loc 1 152 11
 383 0094 7B6C     		ldr	r3, [r7, #68]
 384 0096 5B68     		ldr	r3, [r3, #4]	@ float
 385 0098 BB63     		str	r3, [r7, #56]	@ float
 153:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 154:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       twR = *pCoeff++;
 386              		.loc 1 154 20
 387 009a BB6C     		ldr	r3, [r7, #72]
 388 009c 1A1D     		adds	r2, r3, #4
 389 009e BA64     		str	r2, [r7, #72]
 390              		.loc 1 154 11
 391 00a0 1B68     		ldr	r3, [r3]	@ float
 392 00a2 FB62     		str	r3, [r7, #44]	@ float
 155:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       twI = *pCoeff++;
 393              		.loc 1 155 20
 394 00a4 BB6C     		ldr	r3, [r7, #72]
 395 00a6 1A1D     		adds	r2, r3, #4
 396 00a8 BA64     		str	r2, [r7, #72]
 397              		.loc 1 155 11
 398 00aa 1B68     		ldr	r3, [r3]	@ float
 399 00ac BB62     		str	r3, [r7, #40]	@ float
 156:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 157:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       t1a = xAR - xBR ;
 400              		.loc 1 157 11
 401 00ae 97ED0F7A 		vldr.32	s14, [r7, #60]
 402 00b2 D7ED0C7A 		vldr.32	s15, [r7, #48]
 403 00b6 77EE677A 		vsub.f32	s15, s14, s15
 404 00ba C7ED097A 		vstr.32	s15, [r7, #36]
 158:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       t1b = xAI + xBI ;
 405              		.loc 1 158 11
 406 00be 97ED0E7A 		vldr.32	s14, [r7, #56]
 407 00c2 D7ED0D7A 		vldr.32	s15, [r7, #52]
 408 00c6 77EE277A 		vadd.f32	s15, s14, s15
 409 00ca C7ED087A 		vstr.32	s15, [r7, #32]
 159:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 160:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       r = twR * t1a;
 410              		.loc 1 160 9
 411 00ce 97ED0B7A 		vldr.32	s14, [r7, #44]
 412 00d2 D7ED097A 		vldr.32	s15, [r7, #36]
 413 00d6 67EE277A 		vmul.f32	s15, s14, s15
ARM GAS  /tmp/ccIha2OY.s 			page 11


 414 00da C7ED077A 		vstr.32	s15, [r7, #28]
 161:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       s = twI * t1b;
 415              		.loc 1 161 9
 416 00de 97ED0A7A 		vldr.32	s14, [r7, #40]
 417 00e2 D7ED087A 		vldr.32	s15, [r7, #32]
 418 00e6 67EE277A 		vmul.f32	s15, s14, s15
 419 00ea C7ED067A 		vstr.32	s15, [r7, #24]
 162:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       t = twI * t1a;
 420              		.loc 1 162 9
 421 00ee 97ED0A7A 		vldr.32	s14, [r7, #40]
 422 00f2 D7ED097A 		vldr.32	s15, [r7, #36]
 423 00f6 67EE277A 		vmul.f32	s15, s14, s15
 424 00fa C7ED057A 		vstr.32	s15, [r7, #20]
 163:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       u = twR * t1b;
 425              		.loc 1 163 9
 426 00fe 97ED0B7A 		vldr.32	s14, [r7, #44]
 427 0102 D7ED087A 		vldr.32	s15, [r7, #32]
 428 0106 67EE277A 		vmul.f32	s15, s14, s15
 429 010a C7ED047A 		vstr.32	s15, [r7, #16]
 164:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 165:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       // real(tw * (xA - xB)) = twR * (xAR - xBR) - twI * (xAI - xBI);
 166:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       // imag(tw * (xA - xB)) = twI * (xAR - xBR) + twR * (xAI - xBI);
 167:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       *pOut++ = 0.5f * (xAR + xBR - r - s ); //xAR
 430              		.loc 1 167 29
 431 010e 97ED0F7A 		vldr.32	s14, [r7, #60]
 432 0112 D7ED0C7A 		vldr.32	s15, [r7, #48]
 433 0116 37EE277A 		vadd.f32	s14, s14, s15
 434              		.loc 1 167 35
 435 011a D7ED077A 		vldr.32	s15, [r7, #28]
 436 011e 37EE677A 		vsub.f32	s14, s14, s15
 437              		.loc 1 167 39
 438 0122 D7ED067A 		vldr.32	s15, [r7, #24]
 439 0126 77EE677A 		vsub.f32	s15, s14, s15
 440              		.loc 1 167 12
 441 012a 7B68     		ldr	r3, [r7, #4]
 442 012c 1A1D     		adds	r2, r3, #4
 443 012e 7A60     		str	r2, [r7, #4]
 444              		.loc 1 167 22
 445 0130 B6EE007A 		vmov.f32	s14, #5.0e-1
 446 0134 67EE877A 		vmul.f32	s15, s15, s14
 447              		.loc 1 167 15
 448 0138 C3ED007A 		vstr.32	s15, [r3]
 168:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       *pOut++ = 0.5f * (xAI - xBI + t - u ); //xAI
 449              		.loc 1 168 29
 450 013c 97ED0E7A 		vldr.32	s14, [r7, #56]
 451 0140 D7ED0D7A 		vldr.32	s15, [r7, #52]
 452 0144 37EE677A 		vsub.f32	s14, s14, s15
 453              		.loc 1 168 35
 454 0148 D7ED057A 		vldr.32	s15, [r7, #20]
 455 014c 37EE277A 		vadd.f32	s14, s14, s15
 456              		.loc 1 168 39
 457 0150 D7ED047A 		vldr.32	s15, [r7, #16]
 458 0154 77EE677A 		vsub.f32	s15, s14, s15
 459              		.loc 1 168 12
 460 0158 7B68     		ldr	r3, [r7, #4]
 461 015a 1A1D     		adds	r2, r3, #4
 462 015c 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/ccIha2OY.s 			page 12


 463              		.loc 1 168 22
 464 015e B6EE007A 		vmov.f32	s14, #5.0e-1
 465 0162 67EE877A 		vmul.f32	s15, s15, s14
 466              		.loc 1 168 15
 467 0166 C3ED007A 		vstr.32	s15, [r3]
 169:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 170:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       pA += 2;
 468              		.loc 1 170 10
 469 016a 7B6C     		ldr	r3, [r7, #68]
 470 016c 0833     		adds	r3, r3, #8
 471 016e 7B64     		str	r3, [r7, #68]
 171:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       pB -= 2;
 472              		.loc 1 171 10
 473 0170 3B6C     		ldr	r3, [r7, #64]
 474 0172 083B     		subs	r3, r3, #8
 475 0174 3B64     		str	r3, [r7, #64]
 172:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       k--;
 476              		.loc 1 172 8
 477 0176 FB6C     		ldr	r3, [r7, #76]
 478 0178 013B     		subs	r3, r3, #1
 479 017a FB64     		str	r3, [r7, #76]
 480              	.L4:
 144:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    {
 481              		.loc 1 144 10
 482 017c FB6C     		ldr	r3, [r7, #76]
 483 017e 002B     		cmp	r3, #0
 484 0180 7FF47FAF 		bne	.L5
 173:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    }
 174:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** }
 485              		.loc 1 175 1
 486 0184 00BF     		nop
 487 0186 00BF     		nop
 488 0188 5437     		adds	r7, r7, #84
 489              	.LCFI9:
 490              		.cfi_def_cfa_offset 4
 491 018a BD46     		mov	sp, r7
 492              	.LCFI10:
 493              		.cfi_def_cfa_register 13
 494              		@ sp needed
 495 018c 5DF8047B 		ldr	r7, [sp], #4
 496              	.LCFI11:
 497              		.cfi_restore 7
 498              		.cfi_def_cfa_offset 0
 499 0190 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE146:
 503              		.section	.text.arm_rfft_fast_f32,"ax",%progbits
 504              		.align	1
 505              		.global	arm_rfft_fast_f32
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv5-d16
 511              	arm_rfft_fast_f32:
 512              	.LFB147:
 176:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
ARM GAS  /tmp/ccIha2OY.s 			page 13


 177:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /**
 178:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @ingroup groupTransforms
 179:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** */
 180:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 181:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /**
 182:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @defgroup RealFFT Real FFT Functions
 183:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  
 184:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 185:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The CMSIS DSP library includes specialized algorithms for computing the
 186:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    FFT of real data sequences.  The FFT is defined over complex data but
 187:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    in many applications the input is real.  Real FFT algorithms take advantage
 188:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    of the symmetry properties of the FFT and have a speed advantage over complex
 189:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    algorithms of the same length.
 190:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 191:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The Fast RFFT algorith relays on the mixed radix CFFT that save processor usage.
 192:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 193:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The real length N forward FFT of a sequence is computed using the steps shown be
 194:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 195:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    \image html RFFT.gif "Real Fast Fourier Transform"
 196:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 197:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The real sequence is initially treated as if it were complex to perform a CFFT.
 198:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    Later, a processing stage reshapes the data to obtain half of the frequency spec
 199:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    in complex format. Except the first complex number that contains the two real nu
 200:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    X[0] and X[N/2] all the data is complex. In other words, the first complex sampl
 201:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    contains two real values packed.
 202:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 203:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The input for the inverse RFFT should keep the same format as the output of the
 204:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    forward RFFT. A first processing stage pre-process the data to later perform an
 205:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    inverse CFFT.
 206:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 207:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    \image html RIFFT.gif "Real Inverse Fast Fourier Transform"
 208:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 209:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The algorithms for floating-point, Q15, and Q31 data are slightly different
 210:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    and we describe each algorithm in turn.
 211:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par           Floating-point
 212:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The main functions are \ref arm_rfft_fast_f32() and \ref arm_rfft_fast_init_f32(
 213:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The older functions \ref arm_rfft_f32() and \ref arm_rfft_init_f32() have been d
 214:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    but are still documented.
 215:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 216:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The FFT of a real N-point sequence has even symmetry in the frequency domain. 
 217:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The second half of the data equals the conjugate of the first half flipped in fr
 218:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    Looking at the data, we see that we can uniquely represent the FFT using only N/
 219:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    These are packed into the output array in alternating real and imaginary compone
 220:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 221:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    X = { real[0], imag[0], real[1], imag[1], real[2], imag[2] ...
 222:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    real[(N/2)-1], imag[(N/2)-1 }
 223:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 224:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    It happens that the first complex number (real[0], imag[0]) is actually
 225:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    all real. real[0] represents the DC offset, and imag[0] should be 0.
 226:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    (real[1], imag[1]) is the fundamental frequency, (real[2], imag[2]) is
 227:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    the first harmonic and so on.
 228:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 229:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The real FFT functions pack the frequency domain data in this fashion.
 230:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The forward transform outputs the data in this form and the inverse
 231:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    transform expects input data in this form. The function always performs
 232:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    the needed bitreversal so that the input and output data is always in
 233:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    normal order. The functions support lengths of [32, 64, 128, ..., 4096]
ARM GAS  /tmp/ccIha2OY.s 			page 14


 234:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    samples.
 235:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par           Q15 and Q31
 236:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The real algorithms are defined in a similar manner and utilize N/2 complex
 237:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    transforms behind the scenes.
 238:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 239:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The complex transforms used internally include scaling to prevent fixed-point
 240:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    overflows.  The overall scaling equals 1/(fftLen/2).
 241:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 242:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    A separate instance structure must be defined for each transform used but
 243:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    twiddle factor and bit reversal tables can be reused.
 244:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 245:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    There is also an associated initialization function for each data type.
 246:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The initialization function performs the following operations:
 247:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                     - Sets the values of the internal structure fields.
 248:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                     - Initializes twiddle factor table and bit reversal table pointers.
 249:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                     - Initializes the internal complex FFT data structure.
 250:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @par
 251:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    Use of the initialization function is optional.
 252:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    However, if the initialization function is used, then the instance structure
 253:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    cannot be placed into a const data section. To place an instance structure
 254:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    into a const data section, the instance structure should be manually
 255:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    initialized as follows:
 256:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   <pre>
 257:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       arm_rfft_instance_q31 S = {fftLenReal, fftLenBy2, ifftFlagR, bitReverseFlagR, twidCoefRModifi
 258:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       arm_rfft_instance_q15 S = {fftLenReal, fftLenBy2, ifftFlagR, bitReverseFlagR, twidCoefRModifi
 259:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   </pre>
 260:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    where <code>fftLenReal</code> is the length of the real transform;
 261:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>fftLenBy2</code> length of  the internal complex transform.
 262:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>ifftFlagR</code> Selects forward (=0) or inverse (=1) transform.
 263:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>bitReverseFlagR</code> Selects bit reversed output (=0) or normal order
 264:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    output (=1).
 265:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>twidCoefRModifier</code> stride modifier for the twiddle factor table.
 266:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    The value is based on the FFT length;
 267:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>pTwiddleAReal</code>points to the A array of twiddle coefficients;
 268:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>pTwiddleBReal</code>points to the B array of twiddle coefficients;
 269:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    <code>pCfft</code> points to the CFFT Instance structure. The CFFT structure
 270:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    must also be initialized.  Refer to arm_cfft_radix4_f32() for details regarding
 271:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    static initialization of the complex FFT instance structure.
 272:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****  */
 273:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 274:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /**
 275:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @addtogroup RealFFT
 276:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @{
 277:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** */
 278:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 279:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** /**
 280:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @brief         Processing function for the floating-point real FFT.
 281:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @param[in]     S         points to an arm_rfft_fast_instance_f32 structure
 282:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @param[in]     p         points to input buffer
 283:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @param[in]     pOut      points to output buffer
 284:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @param[in]     ifftFlag
 285:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    - value = 0: RFFT
 286:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****                    - value = 1: RIFFT
 287:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   @return        none
 288:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** */
 289:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 290:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** void arm_rfft_fast_f32(
ARM GAS  /tmp/ccIha2OY.s 			page 15


 291:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   arm_rfft_fast_instance_f32 * S,
 292:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   float32_t * p,
 293:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   float32_t * pOut,
 294:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****   uint8_t ifftFlag)
 295:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** {
 513              		.loc 1 295 1
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 24
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 86B0     		sub	sp, sp, #24
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 32
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI14:
 527              		.cfi_def_cfa_register 7
 528 0006 F860     		str	r0, [r7, #12]
 529 0008 B960     		str	r1, [r7, #8]
 530 000a 7A60     		str	r2, [r7, #4]
 531 000c FB70     		strb	r3, [r7, #3]
 296:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    arm_cfft_instance_f32 * Sint = &(S->Sint);
 532              		.loc 1 296 28
 533 000e FB68     		ldr	r3, [r7, #12]
 534 0010 7B61     		str	r3, [r7, #20]
 297:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    Sint->fftLen = S->fftLenRFFT / 2;
 535              		.loc 1 297 20
 536 0012 FB68     		ldr	r3, [r7, #12]
 537 0014 1B8A     		ldrh	r3, [r3, #16]
 538              		.loc 1 297 17
 539 0016 5B08     		lsrs	r3, r3, #1
 540 0018 9AB2     		uxth	r2, r3
 541 001a 7B69     		ldr	r3, [r7, #20]
 542 001c 1A80     		strh	r2, [r3]	@ movhi
 298:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 299:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    /* Calculation of Real FFT */
 300:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    if (ifftFlag)
 543              		.loc 1 300 7
 544 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 545 0020 002B     		cmp	r3, #0
 546 0022 0BD0     		beq	.L7
 301:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    {
 302:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /*  Real FFT compression */
 303:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       merge_rfft_f32(S, p, pOut);
 547              		.loc 1 303 7
 548 0024 7A68     		ldr	r2, [r7, #4]
 549 0026 B968     		ldr	r1, [r7, #8]
 550 0028 F868     		ldr	r0, [r7, #12]
 551 002a FFF7FEFF 		bl	merge_rfft_f32
 304:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 305:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /* Complex radix-4 IFFT process */
 306:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       arm_cfft_f32( Sint, pOut, ifftFlag, 1);
 552              		.loc 1 306 7
 553 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  /tmp/ccIha2OY.s 			page 16


 554 0030 0123     		movs	r3, #1
 555 0032 7968     		ldr	r1, [r7, #4]
 556 0034 7869     		ldr	r0, [r7, #20]
 557 0036 FFF7FEFF 		bl	arm_cfft_f32
 307:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    }
 308:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    else
 309:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    {
 310:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /* Calculation of RFFT of input */
 311:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       arm_cfft_f32( Sint, p, ifftFlag, 1);
 312:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 313:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       /*  Real FFT extraction */
 314:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****       stage_rfft_f32(S, p, pOut);
 315:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    }
 316:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** }
 558              		.loc 1 316 1
 559 003a 0AE0     		b	.L9
 560              	.L7:
 311:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c **** 
 561              		.loc 1 311 7
 562 003c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 563 003e 0123     		movs	r3, #1
 564 0040 B968     		ldr	r1, [r7, #8]
 565 0042 7869     		ldr	r0, [r7, #20]
 566 0044 FFF7FEFF 		bl	arm_cfft_f32
 314:./Libraries/CMSIS/DSP/Source/TransformFunctions/arm_rfft_fast_f32.c ****    }
 567              		.loc 1 314 7
 568 0048 7A68     		ldr	r2, [r7, #4]
 569 004a B968     		ldr	r1, [r7, #8]
 570 004c F868     		ldr	r0, [r7, #12]
 571 004e FFF7FEFF 		bl	stage_rfft_f32
 572              	.L9:
 573              		.loc 1 316 1
 574 0052 00BF     		nop
 575 0054 1837     		adds	r7, r7, #24
 576              	.LCFI15:
 577              		.cfi_def_cfa_offset 8
 578 0056 BD46     		mov	sp, r7
 579              	.LCFI16:
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0058 80BD     		pop	{r7, pc}
 583              		.cfi_endproc
 584              	.LFE147:
 586              		.text
 587              	.Letext0:
 588              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 589              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 590              		.file 4 "/usr/include/newlib/sys/_types.h"
 591              		.file 5 "/usr/include/newlib/sys/reent.h"
 592              		.file 6 "/usr/include/newlib/sys/lock.h"
 593              		.file 7 "/usr/include/newlib/math.h"
 594              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccIha2OY.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_rfft_fast_f32.c
     /tmp/ccIha2OY.s:17     .text.stage_rfft_f32:0000000000000000 $t
     /tmp/ccIha2OY.s:25     .text.stage_rfft_f32:0000000000000000 stage_rfft_f32
     /tmp/ccIha2OY.s:274    .text.merge_rfft_f32:0000000000000000 $t
     /tmp/ccIha2OY.s:281    .text.merge_rfft_f32:0000000000000000 merge_rfft_f32
     /tmp/ccIha2OY.s:504    .text.arm_rfft_fast_f32:0000000000000000 $t
     /tmp/ccIha2OY.s:511    .text.arm_rfft_fast_f32:0000000000000000 arm_rfft_fast_f32

UNDEFINED SYMBOLS
arm_cfft_f32
