ARM GAS  /tmp/cclMTuax.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_lms_norm_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_lms_norm_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_lms_norm_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_lms_norm_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Title:        arm_lms_norm_f32.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Description:  Processing function for the floating-point NLMS filter
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /**
ARM GAS  /tmp/cclMTuax.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @defgroup LMS_NORM Normalized LMS Filters
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   This set of functions implements a commonly used adaptive filter.
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   It is related to the Least Mean Square (LMS) adaptive filter and includes an additional normaliza
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   factor which increases the adaptation rate of the filter.
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The CMSIS DSP Library contains normalized LMS filter functions that operate on Q15, Q31, and floa
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   A normalized least mean square (NLMS) filter consists of two components as shown below.
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The first component is a standard transversal or FIR filter.
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The second component is a coefficient update mechanism.
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The NLMS filter has two input signals.
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The "input" feeds the FIR filter while the "reference input" corresponds to the desired output of
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   That is, the FIR filter coefficients are updated so that the output of the FIR filter matches the
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The filter coefficient update mechanism is based on the difference between the FIR filter output 
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   This "error signal" tends towards zero as the filter adapts.
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The NLMS processing functions accept the input and reference input signals and generate the filte
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   \image html LMS.gif "Internal structure of the NLMS adaptive filter"
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The functions operate on blocks of data and each call to the function processes
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <code>blockSize</code> samples through the filter.
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <code>pSrc</code> points to input signal, <code>pRef</code> points to reference signal,
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <code>pOut</code> points to output signal and <code>pErr</code> points to error signal.
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   All arrays contain <code>blockSize</code> values.
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The functions operate on a block-by-block basis.
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   Internally, the filter coefficients <code>b[n]</code> are updated on a sample-by-sample basis.
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   The convergence of the LMS filter is slower compared to the normalized LMS algorithm.
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Algorithm
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The output signal <code>y[n]</code> is computed by a standard FIR filter:
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       y[n] = b[0] * x[n] + b[1] * x[n-1] + b[2] * x[n-2] + ...+ b[numTaps-1] * x[n-numTaps+1]
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The error signal equals the difference between the reference signal <code>d[n]</
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       e[n] = d[n] - y[n].
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    After each sample of the error signal is computed the instanteous energy of the 
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      E = x[n]^2 + x[n-1]^2 + ... + x[n-numTaps+1]^2.
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The filter coefficients <code>b[k]</code> are then updated on a sample-by-sample
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       b[k] = b[k] + e[n] * (mu/E) * x[n-k],  for k=0, 1, ..., numTaps-1
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    where <code>mu</code> is the step size and controls the rate of coefficient conv
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    In the APIs, <code>pCoeffs</code> points to a coefficient array of size <code>nu
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Coefficients are stored in time reversed order.
ARM GAS  /tmp/cclMTuax.s 			page 3


  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    <code>pState</code> points to a state array of size <code>numTaps + blockSize - 
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Samples in the state buffer are stored in the order:
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   <pre>
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      {x[n-numTaps+1], x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2]....x[0], x[1], ..., x[blockSize-
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   </pre>
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Note that the length of the state buffer exceeds the length of the coefficient a
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The increased state buffer length allows circular addressing, which is tradition
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    to be avoided and yields a significant speed improvement.
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The state variables are updated after each block of data is processed.
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Instance Structure
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The coefficients and state variables for a filter are stored together in an inst
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    A separate instance structure must be defined for each filter and
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    coefficient and state arrays cannot be shared among instances.
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    There are separate instance structure declarations for each of the 3 supported d
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Initialization Functions
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    There is also an associated initialization function for each data type.
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The initialization function performs the following operations:
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    - Sets the values of the internal structure fields.
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    - Zeros out the values in the state buffer.
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    To do this manually without calling the init function, assign the follow subfiel
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    numTaps, pCoeffs, mu, energy, x0, pState. Also set all of the values in pState t
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    For Q7, Q15, and Q31 the following fields must also be initialized;
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    recipTable, postShift
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Instance structure cannot be placed into a const data section and it is recommen
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Fixed-Point Behavior
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Care must be taken when using the Q15 and Q31 versions of the normalised LMS fil
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The following issues must be considered:
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    - Scaling of coefficients
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    - Overflow and saturation
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Scaling of Coefficients
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Filter coefficients are represented as fractional values and
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    coefficients are restricted to lie in the range <code>[-1 +1)</code>.
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The fixed-point functions have an additional scaling parameter <code>postShift</
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    At the output of the filter's accumulator is a shift register which shifts the r
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    This essentially scales the filter coefficients by <code>2^postShift</code> and
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    allows the filter coefficients to exceed the range <code>[+1 -1)</code>.
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    The value of <code>postShift</code> is set by the user based on the expected gai
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  @par            Overflow and Saturation
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    Overflow and saturation behavior of the fixed-point Q15 and Q31 versions are
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****                    described separately as part of the function specific documentation below.
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  */
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /**
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @addtogroup LMS_NORM
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @{
ARM GAS  /tmp/cclMTuax.s 			page 4


 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  */
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** /**
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @brief         Processing function for floating-point normalized LMS filter.
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[in]     S         points to an instance of the floating-point normalized LMS filter struct
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[in]     pSrc      points to the block of input data
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[in]     pRef      points to the block of reference data
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[out]    pOut      points to the block of output data
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[out]    pErr      points to the block of error data
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @param[in]     blockSize number of samples to process
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   @return        none
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****  */
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #if defined(ARM_MATH_NEON)
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** void arm_lms_norm_f32(
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   arm_lms_norm_instance_f32 * S,
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   const float32_t * pSrc,
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t * pRef,
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t * pOut,
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t * pErr,
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   uint32_t blockSize)
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** {
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t *pState = S->pState;                 /* State pointer */
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t *px, *pb;                            /* Temporary pointers for state and coefficient bu
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t mu = S->mu;                          /* Adaptive factor */
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   uint32_t tapCnt, blkCnt;                       /* Loop counters */
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t energy;                              /* Energy of the input */
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t sum, e, d;                           /* accumulator, error, reference data sample */
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32_t w, x0, in;                           /* weight factor, temporary variable to hold input
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32x4_t tempV, sumV, xV, bV;
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   float32x2_t tempV2;
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Initializations of error,  difference, Coefficient update */
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   e = 0.0f;
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   d = 0.0f;
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   w = 0.0f;
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   energy = S->energy;
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   x0 = S->x0;
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Loop over blockSize number of values */
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   blkCnt = blockSize;
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (blkCnt > 0U)
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Copy the new input sample into the state buffer */
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pSrc;
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize pState pointer */
ARM GAS  /tmp/cclMTuax.s 			page 5


 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     px = pState;
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize coeff pointer */
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pb = (pCoeffs);
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Read the sample from input buffer */
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     in = *pSrc++;
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Update the energy calculation */
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     energy -= x0 * x0;
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     energy += in * in;
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Set the accumulator to zero */
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     sum = 0.0f;
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     sumV = vdupq_n_f32(0.0);
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Process 4 taps at a time. */
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps >> 2;
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       xV = vld1q_f32(px);
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       bV = vld1q_f32(pb);
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       sumV = vmlaq_f32(sumV, xV, bV);
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       px += 4; 
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb += 4;
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement the loop counter */
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tempV2 = vpadd_f32(vget_low_f32(sumV),vget_high_f32(sumV));
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     sum = tempV2[0] + tempV2[1];
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps % 0x4U;
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       sum += (*px++) * (*pb++);
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement the loop counter */
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* The result in the accumulator, store in the destination buffer. */
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pOut++ = sum;
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Compute and store error */
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     d = (float32_t) (*pRef++);
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     e = d - sum;
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pErr++ = e;
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Calculation of Weighting factor for updating filter coefficients */
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* epsilon value 0.000000119209289f */
ARM GAS  /tmp/cclMTuax.s 			page 6


 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     w = (e * mu) / (energy + 0.000000119209289f);
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize pState pointer */
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     px = pState;
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize coeff pointer */
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pb = (pCoeffs);
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Process 4 taps at a time. */
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps >> 2;
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Update filter coefficients */
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       xV = vld1q_f32(px);
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       bV = vld1q_f32(pb);
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       px += 4;
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       bV = vmlaq_n_f32(bV,xV,w);
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       vst1q_f32(pb,bV); 
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb += 4;
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement the loop counter */
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps % 0x4U;
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement the loop counter */
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     x0 = *pState;
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Advance state pointer by 1 for the next sample */
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pState = pState + 1;
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement the loop counter */
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     blkCnt--;
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   S->energy = energy;
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   S->x0 = x0;
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      satrt of the state buffer. This prepares the state buffer for the
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      next function call. */
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
ARM GAS  /tmp/cclMTuax.s 			page 7


 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Points to the start of the pState buffer */
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   pStateCurnt = S->pState;
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Process 4 taps at a time for (numTaps - 1U)/4 samples copy */
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   tapCnt = (numTaps - 1U) >> 2U;
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* copy data */
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (tapCnt > 0U)
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tempV = vld1q_f32(pState);
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     vst1q_f32(pStateCurnt,tempV); 
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pState += 4;
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pStateCurnt += 4;
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement the loop counter */
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt--;
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Calculate remaining number of copies */
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Copy the remaining q31_t data */
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (tapCnt > 0U)
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement the loop counter */
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt--;
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** }
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #else
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** void arm_lms_norm_f32(
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         arm_lms_norm_instance_f32 * S,
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   const float32_t * pSrc,
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t * pRef,
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t * pOut,
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t * pErr,
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         uint32_t blockSize)
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** {
  28              		.loc 1 356 1
  29              		.cfi_startproc
  30              		@ args = 8, pretend = 0, frame = 80
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 95B0     		sub	sp, sp, #84
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 88
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/cclMTuax.s 			page 8


  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t *pState = S->pState;                 /* State pointer */
  47              		.loc 1 357 20
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 5B68     		ldr	r3, [r3, #4]
  50 0012 FB64     		str	r3, [r7, #76]
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  51              		.loc 1 358 20
  52 0014 FB68     		ldr	r3, [r7, #12]
  53 0016 9B68     		ldr	r3, [r3, #8]
  54 0018 BB62     		str	r3, [r7, #40]
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t *pStateCurnt;                        /* Points to the current sample of the state
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t *px, *pb;                            /* Temporary pointers for state and coeffici
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t mu = S->mu;                          /* Adaptive factor */
  55              		.loc 1 361 19
  56 001a FB68     		ldr	r3, [r7, #12]
  57 001c DB68     		ldr	r3, [r3, #12]	@ float
  58 001e 7B62     		str	r3, [r7, #36]	@ float
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t acc, e;                              /* Accumulator, error */
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t w;                                   /* Weight factor */
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  59              		.loc 1 364 29
  60 0020 FB68     		ldr	r3, [r7, #12]
  61 0022 1B88     		ldrh	r3, [r3]
  62              		.loc 1 364 18
  63 0024 3B62     		str	r3, [r7, #32]
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t energy;                              /* Energy of the input */
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****         float32_t x0, in;                              /* Temporary variable to hold input sample a
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Initializations of error,  difference, Coefficient update */
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   e = 0.0f;
  64              		.loc 1 370 5
  65 0026 4FF00003 		mov	r3, #0
  66 002a FB61     		str	r3, [r7, #28]	@ float
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   w = 0.0f;
  67              		.loc 1 371 5
  68 002c 4FF00003 		mov	r3, #0
  69 0030 BB61     		str	r3, [r7, #24]	@ float
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   energy = S->energy;
  70              		.loc 1 373 10
  71 0032 FB68     		ldr	r3, [r7, #12]
  72 0034 1B69     		ldr	r3, [r3, #16]	@ float
  73 0036 3B63     		str	r3, [r7, #48]	@ float
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   x0 = S->x0;
  74              		.loc 1 374 6
  75 0038 FB68     		ldr	r3, [r7, #12]
  76 003a 5B69     		ldr	r3, [r3, #20]	@ float
  77 003c FB62     		str	r3, [r7, #44]	@ float
 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  78              		.loc 1 378 20
  79 003e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cclMTuax.s 			page 9


  80 0040 5A68     		ldr	r2, [r3, #4]
  81              		.loc 1 378 28
  82 0042 396A     		ldr	r1, [r7, #32]
  83 0044 6FF04043 		mvn	r3, #-1073741824
  84 0048 0B44     		add	r3, r3, r1
  85 004a 9B00     		lsls	r3, r3, #2
  86              		.loc 1 378 15
  87 004c 1344     		add	r3, r3, r2
  88 004e BB64     		str	r3, [r7, #72]
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* initialise loop count */
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   blkCnt = blockSize;
  89              		.loc 1 381 10
  90 0050 FB6D     		ldr	r3, [r7, #92]
  91 0052 7B63     		str	r3, [r7, #52]
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (blkCnt > 0U)
  92              		.loc 1 383 9
  93 0054 8FE0     		b	.L2
  94              	.L7:
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Copy the new input sample into the state buffer */
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pSrc;
  95              		.loc 1 386 17
  96 0056 BB6C     		ldr	r3, [r7, #72]
  97 0058 1A1D     		adds	r2, r3, #4
  98 005a BA64     		str	r2, [r7, #72]
  99              		.loc 1 386 22
 100 005c BA68     		ldr	r2, [r7, #8]
 101 005e 1268     		ldr	r2, [r2]	@ float
 102              		.loc 1 386 20
 103 0060 1A60     		str	r2, [r3]	@ float
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize pState pointer */
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     px = pState;
 104              		.loc 1 389 8
 105 0062 FB6C     		ldr	r3, [r7, #76]
 106 0064 7B64     		str	r3, [r7, #68]
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize coefficient pointer */
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pb = pCoeffs;
 107              		.loc 1 392 8
 108 0066 BB6A     		ldr	r3, [r7, #40]
 109 0068 3B64     		str	r3, [r7, #64]
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Read the sample from input buffer */
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     in = *pSrc++;
 110              		.loc 1 395 15
 111 006a BB68     		ldr	r3, [r7, #8]
 112 006c 1A1D     		adds	r2, r3, #4
 113 006e BA60     		str	r2, [r7, #8]
 114              		.loc 1 395 8
 115 0070 1B68     		ldr	r3, [r3]	@ float
 116 0072 7B61     		str	r3, [r7, #20]	@ float
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Update the energy calculation */
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     energy -= x0 * x0;
ARM GAS  /tmp/cclMTuax.s 			page 10


 117              		.loc 1 398 18
 118 0074 D7ED0B7A 		vldr.32	s15, [r7, #44]
 119 0078 67EEA77A 		vmul.f32	s15, s15, s15
 120              		.loc 1 398 12
 121 007c 97ED0C7A 		vldr.32	s14, [r7, #48]
 122 0080 77EE677A 		vsub.f32	s15, s14, s15
 123 0084 C7ED0C7A 		vstr.32	s15, [r7, #48]
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     energy += in * in;
 124              		.loc 1 399 18
 125 0088 D7ED057A 		vldr.32	s15, [r7, #20]
 126 008c 67EEA77A 		vmul.f32	s15, s15, s15
 127              		.loc 1 399 12
 128 0090 97ED0C7A 		vldr.32	s14, [r7, #48]
 129 0094 77EE277A 		vadd.f32	s15, s14, s15
 130 0098 C7ED0C7A 		vstr.32	s15, [r7, #48]
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Set the accumulator to zero */
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     acc = 0.0f;
 131              		.loc 1 402 9
 132 009c 4FF00003 		mov	r3, #0
 133 00a0 FB63     		str	r3, [r7, #60]	@ float
 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps >> 2U;
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       acc += (*px++) * (*pb++);
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       acc += (*px++) * (*pb++);
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       acc += (*px++) * (*pb++);
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       acc += (*px++) * (*pb++);
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement loop counter */
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Loop unrolling: Compute remaining taps */
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps % 0x4U;
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #else
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize tapCnt with number of samples */
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps;
 134              		.loc 1 430 12
 135 00a2 3B6A     		ldr	r3, [r7, #32]
 136 00a4 BB63     		str	r3, [r7, #56]
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 137              		.loc 1 434 11
ARM GAS  /tmp/cclMTuax.s 			page 11


 138 00a6 14E0     		b	.L3
 139              	.L4:
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       acc += (*px++) * (*pb++);
 140              		.loc 1 437 18
 141 00a8 7B6C     		ldr	r3, [r7, #68]
 142 00aa 1A1D     		adds	r2, r3, #4
 143 00ac 7A64     		str	r2, [r7, #68]
 144              		.loc 1 437 15
 145 00ae 93ED007A 		vldr.32	s14, [r3]
 146              		.loc 1 437 28
 147 00b2 3B6C     		ldr	r3, [r7, #64]
 148 00b4 1A1D     		adds	r2, r3, #4
 149 00b6 3A64     		str	r2, [r7, #64]
 150              		.loc 1 437 25
 151 00b8 D3ED007A 		vldr.32	s15, [r3]
 152              		.loc 1 437 22
 153 00bc 67EE277A 		vmul.f32	s15, s14, s15
 154              		.loc 1 437 11
 155 00c0 97ED0F7A 		vldr.32	s14, [r7, #60]
 156 00c4 77EE277A 		vadd.f32	s15, s14, s15
 157 00c8 C7ED0F7A 		vstr.32	s15, [r7, #60]
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement the loop counter */
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 158              		.loc 1 440 13
 159 00cc BB6B     		ldr	r3, [r7, #56]
 160 00ce 013B     		subs	r3, r3, #1
 161 00d0 BB63     		str	r3, [r7, #56]
 162              	.L3:
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 163              		.loc 1 434 11
 164 00d2 BB6B     		ldr	r3, [r7, #56]
 165 00d4 002B     		cmp	r3, #0
 166 00d6 E7D1     		bne	.L4
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Store the result from accumulator into the destination buffer. */
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pOut++ = acc;
 167              		.loc 1 444 10
 168 00d8 3B68     		ldr	r3, [r7]
 169 00da 1A1D     		adds	r2, r3, #4
 170 00dc 3A60     		str	r2, [r7]
 171              		.loc 1 444 13
 172 00de FA6B     		ldr	r2, [r7, #60]	@ float
 173 00e0 1A60     		str	r2, [r3]	@ float
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Compute and store error */
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     e = (float32_t) *pRef++ - acc;
 174              		.loc 1 447 26
 175 00e2 7B68     		ldr	r3, [r7, #4]
 176 00e4 1A1D     		adds	r2, r3, #4
 177 00e6 7A60     		str	r2, [r7, #4]
 178              		.loc 1 447 9
 179 00e8 93ED007A 		vldr.32	s14, [r3]
 180              		.loc 1 447 7
ARM GAS  /tmp/cclMTuax.s 			page 12


 181 00ec D7ED0F7A 		vldr.32	s15, [r7, #60]
 182 00f0 77EE677A 		vsub.f32	s15, s14, s15
 183 00f4 C7ED077A 		vstr.32	s15, [r7, #28]
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pErr++ = e;
 184              		.loc 1 448 10
 185 00f8 BB6D     		ldr	r3, [r7, #88]
 186 00fa 1A1D     		adds	r2, r3, #4
 187 00fc BA65     		str	r2, [r7, #88]
 188              		.loc 1 448 13
 189 00fe FA69     		ldr	r2, [r7, #28]	@ float
 190 0100 1A60     		str	r2, [r3]	@ float
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Calculation of Weighting factor for updating filter coefficients */
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* epsilon value 0.000000119209289f */
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     w = (e * mu) / (energy + 0.000000119209289f);
 191              		.loc 1 452 12
 192 0102 97ED077A 		vldr.32	s14, [r7, #28]
 193 0106 D7ED097A 		vldr.32	s15, [r7, #36]
 194 010a 67EE276A 		vmul.f32	s13, s14, s15
 195              		.loc 1 452 28
 196 010e D7ED0C7A 		vldr.32	s15, [r7, #48]
 197 0112 9FED2C7A 		vldr.32	s14, .L10
 198 0116 37EE877A 		vadd.f32	s14, s15, s14
 199              		.loc 1 452 7
 200 011a C6EE877A 		vdiv.f32	s15, s13, s14
 201 011e C7ED067A 		vstr.32	s15, [r7, #24]
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize pState pointer */
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     px = pState;
 202              		.loc 1 455 8
 203 0122 FB6C     		ldr	r3, [r7, #76]
 204 0124 7B64     		str	r3, [r7, #68]
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize coefficient pointer */
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pb = pCoeffs;
 205              		.loc 1 458 8
 206 0126 BB6A     		ldr	r3, [r7, #40]
 207 0128 3B64     		str	r3, [r7, #64]
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps >> 2U;
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Update filter coefficients */
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
ARM GAS  /tmp/cclMTuax.s 			page 13


 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement loop counter */
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Loop unrolling: Compute remaining taps */
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps % 0x4U;
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #else
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Initialize tapCnt with number of samples */
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt = numTaps;
 208              		.loc 1 491 12
 209 012a 3B6A     		ldr	r3, [r7, #32]
 210 012c BB63     		str	r3, [r7, #56]
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     while (tapCnt > 0U)
 211              		.loc 1 495 11
 212 012e 16E0     		b	.L5
 213              	.L6:
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Perform the multiply-accumulate */
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       *pb += w * (*px++);
 214              		.loc 1 498 22
 215 0130 7B6C     		ldr	r3, [r7, #68]
 216 0132 1A1D     		adds	r2, r3, #4
 217 0134 7A64     		str	r2, [r7, #68]
 218              		.loc 1 498 19
 219 0136 93ED007A 		vldr.32	s14, [r3]
 220              		.loc 1 498 16
 221 013a D7ED067A 		vldr.32	s15, [r7, #24]
 222 013e 27EE277A 		vmul.f32	s14, s14, s15
 223              		.loc 1 498 11
 224 0142 3B6C     		ldr	r3, [r7, #64]
 225 0144 D3ED007A 		vldr.32	s15, [r3]
 226 0148 77EE277A 		vadd.f32	s15, s14, s15
 227 014c 3B6C     		ldr	r3, [r7, #64]
 228 014e C3ED007A 		vstr.32	s15, [r3]
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       pb++;
 229              		.loc 1 499 9
 230 0152 3B6C     		ldr	r3, [r7, #64]
 231 0154 0433     		adds	r3, r3, #4
 232 0156 3B64     		str	r3, [r7, #64]
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       /* Decrement loop counter */
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****       tapCnt--;
 233              		.loc 1 502 13
 234 0158 BB6B     		ldr	r3, [r7, #56]
 235 015a 013B     		subs	r3, r3, #1
 236 015c BB63     		str	r3, [r7, #56]
 237              	.L5:
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     {
 238              		.loc 1 495 11
ARM GAS  /tmp/cclMTuax.s 			page 14


 239 015e BB6B     		ldr	r3, [r7, #56]
 240 0160 002B     		cmp	r3, #0
 241 0162 E5D1     		bne	.L6
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     }
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     x0 = *pState;
 242              		.loc 1 505 8
 243 0164 FB6C     		ldr	r3, [r7, #76]
 244 0166 1B68     		ldr	r3, [r3]	@ float
 245 0168 FB62     		str	r3, [r7, #44]	@ float
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Advance state pointer by 1 for the next sample */
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     pState = pState + 1;
 246              		.loc 1 508 12
 247 016a FB6C     		ldr	r3, [r7, #76]
 248 016c 0433     		adds	r3, r3, #4
 249 016e FB64     		str	r3, [r7, #76]
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement loop counter */
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     blkCnt--;
 250              		.loc 1 511 11
 251 0170 7B6B     		ldr	r3, [r7, #52]
 252 0172 013B     		subs	r3, r3, #1
 253 0174 7B63     		str	r3, [r7, #52]
 254              	.L2:
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 255              		.loc 1 383 9
 256 0176 7B6B     		ldr	r3, [r7, #52]
 257 0178 002B     		cmp	r3, #0
 258 017a 7FF46CAF 		bne	.L7
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Save energy and x0 values for the next frame */
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   S->energy = energy;
 259              		.loc 1 515 13
 260 017e FB68     		ldr	r3, [r7, #12]
 261 0180 3A6B     		ldr	r2, [r7, #48]	@ float
 262 0182 1A61     		str	r2, [r3, #16]	@ float
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   S->x0 = x0;
 263              		.loc 1 516 9
 264 0184 FB68     		ldr	r3, [r7, #12]
 265 0186 FA6A     		ldr	r2, [r7, #44]	@ float
 266 0188 5A61     		str	r2, [r3, #20]	@ float
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Processing is complete.
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****      This prepares the state buffer for the next function call. */
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Points to the start of the pState buffer */
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   pStateCurnt = S->pState;
 267              		.loc 1 523 15
 268 018a FB68     		ldr	r3, [r7, #12]
 269 018c 5B68     		ldr	r3, [r3, #4]
 270 018e BB64     		str	r3, [r7, #72]
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* copy data */
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
ARM GAS  /tmp/cclMTuax.s 			page 15


 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Loop unrolling: Compute 4 taps at a time. */
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   tapCnt = (numTaps - 1U) >> 2U;
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (tapCnt > 0U)
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement loop counter */
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt--;
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Loop unrolling: Compute remaining taps */
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #else
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   /* Initialize tapCnt with number of samples */
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   tapCnt = (numTaps - 1U);
 271              		.loc 1 548 10
 272 0190 3B6A     		ldr	r3, [r7, #32]
 273 0192 013B     		subs	r3, r3, #1
 274 0194 BB63     		str	r3, [r7, #56]
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   while (tapCnt > 0U)
 275              		.loc 1 552 9
 276 0196 0AE0     		b	.L8
 277              	.L9:
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     *pStateCurnt++ = *pState++;
 278              		.loc 1 554 29
 279 0198 FA6C     		ldr	r2, [r7, #76]
 280 019a 131D     		adds	r3, r2, #4
 281 019c FB64     		str	r3, [r7, #76]
 282              		.loc 1 554 17
 283 019e BB6C     		ldr	r3, [r7, #72]
 284 01a0 191D     		adds	r1, r3, #4
 285 01a2 B964     		str	r1, [r7, #72]
 286              		.loc 1 554 22
 287 01a4 1268     		ldr	r2, [r2]	@ float
 288              		.loc 1 554 20
 289 01a6 1A60     		str	r2, [r3]	@ float
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     /* Decrement loop counter */
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****     tapCnt--;
 290              		.loc 1 557 11
 291 01a8 BB6B     		ldr	r3, [r7, #56]
 292 01aa 013B     		subs	r3, r3, #1
 293 01ac BB63     		str	r3, [r7, #56]
 294              	.L8:
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   {
 295              		.loc 1 552 9
ARM GAS  /tmp/cclMTuax.s 			page 16


 296 01ae BB6B     		ldr	r3, [r7, #56]
 297 01b0 002B     		cmp	r3, #0
 298 01b2 F1D1     		bne	.L9
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c ****   }
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** 
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_f32.c **** }
 299              		.loc 1 560 1
 300 01b4 00BF     		nop
 301 01b6 00BF     		nop
 302 01b8 5437     		adds	r7, r7, #84
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 4
 305 01ba BD46     		mov	sp, r7
 306              	.LCFI4:
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 01bc 5DF8047B 		ldr	r7, [sp], #4
 310              	.LCFI5:
 311              		.cfi_restore 7
 312              		.cfi_def_cfa_offset 0
 313 01c0 7047     		bx	lr
 314              	.L11:
 315 01c2 00BF     		.align	2
 316              	.L10:
 317 01c4 00000034 		.word	872415232
 318              		.cfi_endproc
 319              	.LFE145:
 321              		.text
 322              	.Letext0:
 323              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 324              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 325              		.file 4 "/usr/include/newlib/sys/_types.h"
 326              		.file 5 "/usr/include/newlib/sys/reent.h"
 327              		.file 6 "/usr/include/newlib/sys/lock.h"
 328              		.file 7 "/usr/include/newlib/math.h"
 329              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cclMTuax.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_lms_norm_f32.c
     /tmp/cclMTuax.s:17     .text.arm_lms_norm_f32:0000000000000000 $t
     /tmp/cclMTuax.s:25     .text.arm_lms_norm_f32:0000000000000000 arm_lms_norm_f32
     /tmp/cclMTuax.s:317    .text.arm_lms_norm_f32:00000000000001c4 $d

NO UNDEFINED SYMBOLS
