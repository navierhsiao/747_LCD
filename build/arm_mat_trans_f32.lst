ARM GAS  /tmp/ccEgy00z.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_trans_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_trans_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_mat_trans_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_mat_trans_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c"
   1:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Title:        arm_mat_trans_f32.c
   4:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Description:  Floating-point matrix transpose
   5:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /**
ARM GAS  /tmp/ccEgy00z.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @ingroup groupMatrix
  33:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @defgroup MatrixTrans Matrix Transpose
  37:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   Tranposes a matrix.
  39:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  40:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   Transposing an <code>M x N</code> matrix flips it around the center diagonal and results in an <c
  41:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   \image html MatrixTranspose.gif "Transpose of a 3 x 3 matrix"
  42:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  */
  43:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  44:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /**
  45:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @addtogroup MatrixTrans
  46:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @{
  47:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  */
  48:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  49:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** /**
  50:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @brief         Floating-point matrix transpose.
  51:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @param[in]     pSrc      points to input matrix
  52:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @param[out]    pDst      points to output matrix
  53:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   @return        execution status
  54:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  55:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  56:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****  */
  57:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  58:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #if defined(ARM_MATH_NEON)
  59:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  60:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** arm_status arm_mat_trans_f32(
  61:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   const arm_matrix_instance_f32 * pSrc,
  62:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   arm_matrix_instance_f32 * pDst)
  63:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** {
  64:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  65:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  66:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
  67:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nRows = pSrc->numRows;                /* number of rows */
  68:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nColumns = pSrc->numCols;             /* number of columns */
  69:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  70:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t blkCnt, rowCnt, i = 0U, row = nRows;          /* loop counters */
  71:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   arm_status status;                             /* status of matrix transpose  */
  72:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  73:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
  74:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   /* Check for matrix mismatch condition */
  76:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   if ((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
  77:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   {
  78:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  79:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
  80:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   }
  81:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   else
  82:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  83:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  84:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   {
  85:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Matrix transpose by exchanging the rows with columns */
  86:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Row loop */
  87:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     rowCnt = row >> 2;
  88:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     while (rowCnt > 0U)
ARM GAS  /tmp/ccEgy00z.s 			page 3


  89:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     {
  90:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       float32x4_t row0V,row1V,row2V,row3V;
  91:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       float32x4x2_t ra0,ra1,rb0,rb1;
  92:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       blkCnt = nColumns >> 2;
  94:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  95:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* The pointer px is set to starting address of the column being processed */
  96:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       px = pOut + i;
  97:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
  98:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Compute 4 outputs at a time.
  99:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 100:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       while (blkCnt > 0U)        /* Column loop */
 101:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 102:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         row0V = vld1q_f32(pIn);
 103:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         row1V = vld1q_f32(pIn + 1 * nColumns);
 104:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         row2V = vld1q_f32(pIn + 2 * nColumns);
 105:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         row3V = vld1q_f32(pIn + 3 * nColumns);
 106:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         pIn += 4;
 107:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 108:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         ra0 = vzipq_f32(row0V,row2V);
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         ra1 = vzipq_f32(row1V,row3V);
 110:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         rb0 = vzipq_f32(ra0.val[0],ra1.val[0]);
 112:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         rb1 = vzipq_f32(ra0.val[1],ra1.val[1]);
 113:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 114:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         vst1q_f32(px,rb0.val[0]);
 115:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 116:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         vst1q_f32(px,rb0.val[1]);
 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 119:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 120:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         vst1q_f32(px,rb1.val[0]);
 121:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 122:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 123:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         vst1q_f32(px,rb1.val[1]);
 124:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 125:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 126:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 127:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         blkCnt--;
 128:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       }
 129:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 130:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Perform matrix transpose for last 3 samples here. */
 131:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       blkCnt = nColumns % 0x4U;
 132:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 133:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       while (blkCnt > 0U)
 134:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 135:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 136:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px++ = *pIn;
 137:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px++ = *(pIn + 1 * nColumns);
 138:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px++ = *(pIn + 2 * nColumns);
 139:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px++ = *(pIn + 3 * nColumns);
 140:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         
 141:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += (nRows - 4);
 142:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         pIn++;
 143:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 144:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 145:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         blkCnt--;
ARM GAS  /tmp/ccEgy00z.s 			page 4


 146:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       }
 147:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 148:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       i += 4;
 149:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       pIn += 3 * nColumns;
 150:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 151:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Decrement the row loop counter */
 152:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       rowCnt--;
 153:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 154:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     }         /* Row loop end  */
 155:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 156:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     rowCnt = row & 3;
 157:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     while (rowCnt > 0U)
 158:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     {
 159:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       blkCnt = nColumns ;
 160:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* The pointer px is set to starting address of the column being processed */
 161:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       px = pOut + i;
 162:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 163:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       while (blkCnt > 0U)
 164:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 165:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 166:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 167:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 168:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 169:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 170:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 171:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 172:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         blkCnt--;
 173:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       }
 174:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       i++;
 175:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       rowCnt -- ;
 176:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     }
 177:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 178:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 179:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SUCCESS;
 180:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   }
 181:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 182:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   /* Return to application */
 183:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   return (status);
 184:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** }
 185:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #else
 186:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** arm_status arm_mat_trans_f32(
 187:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   const arm_matrix_instance_f32 * pSrc,
 188:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         arm_matrix_instance_f32 * pDst)
 189:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** {
  28              		.loc 1 189 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccEgy00z.s 			page 5


  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7]
 190:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  45              		.loc 1 190 14
  46 000a 7B68     		ldr	r3, [r7, #4]
  47 000c 5B68     		ldr	r3, [r3, #4]
  48 000e 7B62     		str	r3, [r7, #36]
 191:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  49              		.loc 1 191 14
  50 0010 3B68     		ldr	r3, [r7]
  51 0012 5B68     		ldr	r3, [r3, #4]
  52 0014 3B61     		str	r3, [r7, #16]
 192:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
 193:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nRows = pSrc->numRows;                /* number of rows */
  53              		.loc 1 193 12
  54 0016 7B68     		ldr	r3, [r7, #4]
  55 0018 1B88     		ldrh	r3, [r3]	@ movhi
  56 001a FB81     		strh	r3, [r7, #14]	@ movhi
 194:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nCols = pSrc->numCols;                /* number of columns */
  57              		.loc 1 194 12
  58 001c 7B68     		ldr	r3, [r7, #4]
  59 001e 5B88     		ldrh	r3, [r3, #2]	@ movhi
  60 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 195:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   uint32_t col, row = nRows, i = 0U;             /* Loop counters */
  61              		.loc 1 195 17
  62 0022 FB89     		ldrh	r3, [r7, #14]
  63 0024 BB61     		str	r3, [r7, #24]
  64              		.loc 1 195 30
  65 0026 0023     		movs	r3, #0
  66 0028 7B61     		str	r3, [r7, #20]
  67              	.L4:
 196:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   arm_status status;                             /* status of matrix transpose */
 197:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 198:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 199:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 200:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   /* Check for matrix mismatch condition */
 201:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   if ((pSrc->numRows != pDst->numCols) ||
 202:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       (pSrc->numCols != pDst->numRows)   )
 203:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   {
 204:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 205:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 206:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   }
 207:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   else
 208:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 209:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 210:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 211:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   {
 212:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Matrix transpose by exchanging the rows with columns */
 213:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* row loop */
 214:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     do
 215:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     {
 216:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Pointer px is set to starting address of column being processed */
 217:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       px = pOut + i;
  68              		.loc 1 217 17
  69 002a 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccEgy00z.s 			page 6


  70 002c 9B00     		lsls	r3, r3, #2
  71              		.loc 1 217 10
  72 002e 3A69     		ldr	r2, [r7, #16]
  73 0030 1344     		add	r3, r3, r2
  74 0032 3B62     		str	r3, [r7, #32]
 218:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 219:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 220:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 221:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 222:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       col = nCols >> 2U;
 223:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 224:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       while (col > 0U)        /* column loop */
 225:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 226:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store input element in destination */
 227:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 228:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update pointer px to point to next row of transposed matrix */
 229:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 230:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 231:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 232:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 233:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 234:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 235:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 236:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 237:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 238:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 239:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 240:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement column loop counter */
 241:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         col--;
 242:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       }
 243:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 244:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 245:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       col = nCols % 0x4U;
 246:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 247:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #else
 248:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 249:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Initialize col with number of samples */
 250:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       col = nCols;
  75              		.loc 1 250 11
  76 0034 BB89     		ldrh	r3, [r7, #12]
  77 0036 FB61     		str	r3, [r7, #28]
 251:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 252:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 253:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 254:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       while (col > 0U)
  78              		.loc 1 254 13
  79 0038 0DE0     		b	.L2
  80              	.L3:
 255:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 256:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store input element in destination */
 257:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
  81              		.loc 1 257 19
  82 003a 7B6A     		ldr	r3, [r7, #36]
  83 003c 1A1D     		adds	r2, r3, #4
  84 003e 7A62     		str	r2, [r7, #36]
  85              		.loc 1 257 15
  86 0040 1A68     		ldr	r2, [r3]	@ float
ARM GAS  /tmp/ccEgy00z.s 			page 7


  87              		.loc 1 257 13
  88 0042 3B6A     		ldr	r3, [r7, #32]
  89 0044 1A60     		str	r2, [r3]	@ float
 258:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 259:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update pointer px to point to next row of transposed matrix */
 260:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
  90              		.loc 1 260 12
  91 0046 FB89     		ldrh	r3, [r7, #14]
  92 0048 9B00     		lsls	r3, r3, #2
  93 004a 3A6A     		ldr	r2, [r7, #32]
  94 004c 1344     		add	r3, r3, r2
  95 004e 3B62     		str	r3, [r7, #32]
 261:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 262:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement column loop counter */
 263:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****         col--;
  96              		.loc 1 263 12
  97 0050 FB69     		ldr	r3, [r7, #28]
  98 0052 013B     		subs	r3, r3, #1
  99 0054 FB61     		str	r3, [r7, #28]
 100              	.L2:
 254:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       {
 101              		.loc 1 254 13
 102 0056 FB69     		ldr	r3, [r7, #28]
 103 0058 002B     		cmp	r3, #0
 104 005a EED1     		bne	.L3
 264:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       }
 265:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 266:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       i++;
 105              		.loc 1 266 8
 106 005c 7B69     		ldr	r3, [r7, #20]
 107 005e 0133     		adds	r3, r3, #1
 108 0060 7B61     		str	r3, [r7, #20]
 267:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 268:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       /* Decrement row loop counter */
 269:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****       row--;
 109              		.loc 1 269 10
 110 0062 BB69     		ldr	r3, [r7, #24]
 111 0064 013B     		subs	r3, r3, #1
 112 0066 BB61     		str	r3, [r7, #24]
 270:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 271:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     } while (row > 0U);          /* row loop end */
 113              		.loc 1 271 5
 114 0068 BB69     		ldr	r3, [r7, #24]
 115 006a 002B     		cmp	r3, #0
 116 006c DDD1     		bne	.L4
 272:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 273:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 274:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SUCCESS;
 117              		.loc 1 274 12
 118 006e 0023     		movs	r3, #0
 119 0070 FB72     		strb	r3, [r7, #11]
 275:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   }
 276:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** 
 277:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   /* Return to application */
 278:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c ****   return (status);
 120              		.loc 1 278 10
 121 0072 97F90B30 		ldrsb	r3, [r7, #11]
ARM GAS  /tmp/ccEgy00z.s 			page 8


 279:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_trans_f32.c **** }
 122              		.loc 1 279 1
 123 0076 1846     		mov	r0, r3
 124 0078 2C37     		adds	r7, r7, #44
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 4
 127 007a BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 007c 5DF8047B 		ldr	r7, [sp], #4
 132              	.LCFI5:
 133              		.cfi_restore 7
 134              		.cfi_def_cfa_offset 0
 135 0080 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE145:
 139              		.text
 140              	.Letext0:
 141              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 142              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 143              		.file 4 "/usr/include/newlib/sys/_types.h"
 144              		.file 5 "/usr/include/newlib/sys/reent.h"
 145              		.file 6 "/usr/include/newlib/sys/lock.h"
 146              		.file 7 "/usr/include/newlib/math.h"
 147              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccEgy00z.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_trans_f32.c
     /tmp/ccEgy00z.s:17     .text.arm_mat_trans_f32:0000000000000000 $t
     /tmp/ccEgy00z.s:25     .text.arm_mat_trans_f32:0000000000000000 arm_mat_trans_f32

NO UNDEFINED SYMBOLS
