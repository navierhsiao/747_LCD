ARM GAS  /tmp/ccCe83bA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_partial_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_partial_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_conv_partial_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_conv_partial_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Title:        arm_conv_partial_f32.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Description:  Partial convolution of floating-point sequences
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /**
ARM GAS  /tmp/ccCe83bA.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @defgroup PartialConv Partial Convolution
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   Partial Convolution is equivalent to Convolution except that a subset of the output samples is ge
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   Each function has two additional arguments.
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   <code>firstIndex</code> specifies the starting index of the subset of output samples.
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   <code>numPoints</code> is the number of output samples to compute.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   The function computes the output in the range
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   <code>[firstIndex, ..., firstIndex+numPoints-1]</code>.
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   The output array <code>pDst</code> contains <code>numPoints</code> values.
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   The allowable range of output indices is [0 srcALen+srcBLen-2].
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   If the requested subset does not fall in this range then the functions return ARM_MATH_ARGUMENT_E
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   Otherwise the functions return ARM_MATH_SUCCESS.
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   \note Refer to \ref arm_conv_f32() for details on fixed point behavior.
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @par           Fast Versions
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    Fast versions are supported for Q31 and Q15 of partial convolution.
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    Cycles for Fast versions are less compared to Q31 and Q15 of partial conv and th
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    the input signals should be scaled down to avoid intermediate overflows.
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @par           Opt Versions
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    Opt versions are supported for Q15 and Q7. Design uses internal scratch buffer f
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    These versions are optimised in cycles and consumes more memory (Scratch memory)
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  */
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /**
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @addtogroup PartialConv
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @{
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  */
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /**
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @brief         Partial convolution of floating-point sequences.
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     pSrcA       points to the first input sequence
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     srcALen     length of the first input sequence
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     pSrcB       points to the second input sequence
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     srcBLen     length of the second input sequence
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[out]    pDst        points to the location where the output result is written
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     firstIndex  is the first output sample to start with
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @param[in]     numPoints   is the number of output points to be computed
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   @return        execution status
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    - \ref ARM_MATH_SUCCESS        : Operation successful
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : requested subset is not in the range [0 srcALen
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****  */
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** arm_status arm_conv_partial_f32(
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t * pSrcA,
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t srcALen,
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t * pSrcB,
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t srcBLen,
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t * pDst,
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t firstIndex,
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t numPoints)
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** {
ARM GAS  /tmp/ccCe83bA.s 			page 3


  28              		.loc 1 88 1
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 88
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 97B0     		sub	sp, sp, #92
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 96
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if (1)
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** //#if !defined(ARM_MATH_CM0_FAMILY)
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *pIn1 = pSrcA;                       /* InputA pointer */
  47              		.loc 1 93 20
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 7B65     		str	r3, [r7, #84]
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *pIn2 = pSrcB;                       /* InputB pointer */
  50              		.loc 1 94 20
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 3B65     		str	r3, [r7, #80]
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t *pOut = pDst;                        /* Output pointer */
  53              		.loc 1 95 20
  54 0016 3B6E     		ldr	r3, [r7, #96]
  55 0018 FB64     		str	r3, [r7, #76]
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *px;                                 /* Intermediate inputA pointer */
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *py;                                 /* Intermediate inputB pointer */
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *pSrc1, *pSrc2;                      /* Intermediate pointers */
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t sum;                                 /* Accumulator */
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t j, k, count, blkCnt, check;
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         int32_t blockSize1, blockSize2, blockSize3;    /* Loop counters */
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         arm_status status;                             /* Status of Partial convolution */
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t acc0, acc1, acc2, acc3;              /* Accumulator */
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t x0, x1, x2, x3, c0;                  /* Temporary variables */
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   /* Check for range of output samples to be calculated */
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
  56              		.loc 1 110 19
  57 001a 7A6E     		ldr	r2, [r7, #100]
  58 001c BB6E     		ldr	r3, [r7, #104]
  59 001e 1A44     		add	r2, r2, r3
  60              		.loc 1 110 44
  61 0020 3968     		ldr	r1, [r7]
  62 0022 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccCe83bA.s 			page 4


  63 0024 0B44     		add	r3, r3, r1
  64 0026 013B     		subs	r3, r3, #1
  65              		.loc 1 110 6
  66 0028 9A42     		cmp	r2, r3
  67 002a 03D9     		bls	.L2
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   {
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  68              		.loc 1 113 12
  69 002c FF23     		movs	r3, #255
  70 002e 87F82730 		strb	r3, [r7, #39]
  71 0032 6CE1     		b	.L3
  72              	.L2:
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   }
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   else
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   {
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* srcB is always made to slide across srcA. */
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     if (srcALen >= srcBLen)
  73              		.loc 1 120 8
  74 0034 BA68     		ldr	r2, [r7, #8]
  75 0036 3B68     		ldr	r3, [r7]
  76 0038 9A42     		cmp	r2, r3
  77 003a 04D3     		bcc	.L4
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialization of inputA pointer */
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pIn1 = pSrcA;
  78              		.loc 1 123 12
  79 003c FB68     		ldr	r3, [r7, #12]
  80 003e 7B65     		str	r3, [r7, #84]
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialization of inputB pointer */
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pIn2 = pSrcB;
  81              		.loc 1 126 12
  82 0040 7B68     		ldr	r3, [r7, #4]
  83 0042 3B65     		str	r3, [r7, #80]
  84 0044 09E0     		b	.L5
  85              	.L4:
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     else
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialization of inputA pointer */
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pIn1 = pSrcB;
  86              		.loc 1 131 12
  87 0046 7B68     		ldr	r3, [r7, #4]
  88 0048 7B65     		str	r3, [r7, #84]
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialization of inputB pointer */
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pIn2 = pSrcA;
  89              		.loc 1 134 12
  90 004a FB68     		ldr	r3, [r7, #12]
  91 004c 3B65     		str	r3, [r7, #80]
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       j = srcBLen;
  92              		.loc 1 137 9
ARM GAS  /tmp/ccCe83bA.s 			page 5


  93 004e 3B68     		ldr	r3, [r7]
  94 0050 3B62     		str	r3, [r7, #32]
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       srcBLen = srcALen;
  95              		.loc 1 138 15
  96 0052 BB68     		ldr	r3, [r7, #8]
  97 0054 3B60     		str	r3, [r7]
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       srcALen = j;
  98              		.loc 1 139 15
  99 0056 3B6A     		ldr	r3, [r7, #32]
 100 0058 BB60     		str	r3, [r7, #8]
 101              	.L5:
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Conditions to check which loopCounter holds
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * the first and last indices of the output samples to be calculated. */
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     check = firstIndex + numPoints;
 102              		.loc 1 144 11
 103 005a 7A6E     		ldr	r2, [r7, #100]
 104 005c BB6E     		ldr	r3, [r7, #104]
 105 005e 1344     		add	r3, r3, r2
 106 0060 FB61     		str	r3, [r7, #28]
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 107              		.loc 1 145 19
 108 0062 FA69     		ldr	r2, [r7, #28]
 109              		.loc 1 145 36
 110 0064 BB68     		ldr	r3, [r7, #8]
 111              		.loc 1 145 90
 112 0066 9A42     		cmp	r2, r3
 113 0068 03DD     		ble	.L6
 114              		.loc 1 145 56 discriminator 1
 115 006a FA69     		ldr	r2, [r7, #28]
 116              		.loc 1 145 73 discriminator 1
 117 006c BB68     		ldr	r3, [r7, #8]
 118              		.loc 1 145 90 discriminator 1
 119 006e D31A     		subs	r3, r2, r3
 120 0070 00E0     		b	.L7
 121              	.L6:
 122              		.loc 1 145 90 is_stmt 0 discriminator 2
 123 0072 0023     		movs	r3, #0
 124              	.L7:
 125              		.loc 1 145 16 is_stmt 1 discriminator 4
 126 0074 BB62     		str	r3, [r7, #40]
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 127              		.loc 1 146 41 discriminator 4
 128 0076 BA68     		ldr	r2, [r7, #8]
 129              		.loc 1 146 19 discriminator 4
 130 0078 7B6E     		ldr	r3, [r7, #100]
 131              		.loc 1 146 117 discriminator 4
 132 007a 9A42     		cmp	r2, r3
 133 007c 05DC     		bgt	.L8
 134              		.loc 1 146 78 discriminator 1
 135 007e 7B6E     		ldr	r3, [r7, #100]
 136              		.loc 1 146 76 discriminator 1
 137 0080 BA6A     		ldr	r2, [r7, #40]
 138 0082 D21A     		subs	r2, r2, r3
 139              		.loc 1 146 100 discriminator 1
 140 0084 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccCe83bA.s 			page 6


 141              		.loc 1 146 117 discriminator 1
 142 0086 1344     		add	r3, r3, r2
 143 0088 00E0     		b	.L9
 144              	.L8:
 145              		.loc 1 146 117 is_stmt 0 discriminator 2
 146 008a BB6A     		ldr	r3, [r7, #40]
 147              	.L9:
 148              		.loc 1 146 16 is_stmt 1 discriminator 4
 149 008c BB62     		str	r3, [r7, #40]
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 150              		.loc 1 147 42 discriminator 4
 151 008e 3A68     		ldr	r2, [r7]
 152 0090 7B6E     		ldr	r3, [r7, #100]
 153 0092 D31A     		subs	r3, r2, r3
 154 0094 013B     		subs	r3, r3, #1
 155              		.loc 1 147 16 discriminator 4
 156 0096 FB62     		str	r3, [r7, #44]
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1U)) ? blockSize1 : (int32_t) numPoints) :
 157              		.loc 1 148 99 discriminator 4
 158 0098 FB6A     		ldr	r3, [r7, #44]
 159 009a 002B     		cmp	r3, #0
 160 009c 08DD     		ble	.L10
 161              		.loc 1 148 56 discriminator 1
 162 009e 3B68     		ldr	r3, [r7]
 163 00a0 013B     		subs	r3, r3, #1
 164              		.loc 1 148 76 discriminator 1
 165 00a2 FA69     		ldr	r2, [r7, #28]
 166 00a4 9A42     		cmp	r2, r3
 167 00a6 01D9     		bls	.L11
 168              		.loc 1 148 76 is_stmt 0 discriminator 3
 169 00a8 FB6A     		ldr	r3, [r7, #44]
 170 00aa 02E0     		b	.L13
 171              	.L11:
 172              		.loc 1 148 76 discriminator 4
 173 00ac BB6E     		ldr	r3, [r7, #104]
 174 00ae 00E0     		b	.L13
 175              	.L10:
 176              		.loc 1 148 99 is_stmt 1 discriminator 2
 177 00b0 0023     		movs	r3, #0
 178              	.L13:
 179              		.loc 1 148 16 discriminator 8
 180 00b2 FB62     		str	r3, [r7, #44]
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize2 = ((int32_t) check - blockSize3) - (blockSize1 + (int32_t) firstIndex);
 181              		.loc 1 149 19 discriminator 8
 182 00b4 FA69     		ldr	r2, [r7, #28]
 183              		.loc 1 149 35 discriminator 8
 184 00b6 BB6A     		ldr	r3, [r7, #40]
 185 00b8 D21A     		subs	r2, r2, r3
 186              		.loc 1 149 65 discriminator 8
 187 00ba 796E     		ldr	r1, [r7, #100]
 188              		.loc 1 149 63 discriminator 8
 189 00bc FB6A     		ldr	r3, [r7, #44]
 190 00be 0B44     		add	r3, r3, r1
 191              		.loc 1 149 16 discriminator 8
 192 00c0 D31A     		subs	r3, r2, r3
 193 00c2 BB61     		str	r3, [r7, #24]
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
ARM GAS  /tmp/ccCe83bA.s 			page 7


 194              		.loc 1 150 16 discriminator 8
 195 00c4 BB69     		ldr	r3, [r7, #24]
 196 00c6 23EAE373 		bic	r3, r3, r3, asr #31
 197 00ca BB61     		str	r3, [r7, #24]
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* The function is internally
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * divided into three stages according to the number of multiplications that has to be
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * algorithm, the multiplications increase by one for every iteration.
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * for every iteration. */
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Set the output pointer to point to the firstIndex
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * of the output sample to be calculated. */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     pOut = pDst + firstIndex;
 198              		.loc 1 163 17 discriminator 8
 199 00cc 7B6E     		ldr	r3, [r7, #100]
 200 00ce 9B00     		lsls	r3, r3, #2
 201              		.loc 1 163 10 discriminator 8
 202 00d0 3A6E     		ldr	r2, [r7, #96]
 203 00d2 1344     		add	r3, r3, r2
 204 00d4 FB64     		str	r3, [r7, #76]
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* --------------------------
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Initializations of stage1
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * -------------------------*/
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* sum = x[0] * y[0]
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ....
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      */
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****        The count variable holds the number of MAC operations performed.
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****        Since the partial convolution starts from firstIndex
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****        Number of Macs to be performed is firstIndex + 1 */
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     count = 1U + firstIndex;
 205              		.loc 1 179 11 discriminator 8
 206 00d6 7B6E     		ldr	r3, [r7, #100]
 207 00d8 0133     		adds	r3, r3, #1
 208 00da 7B63     		str	r3, [r7, #52]
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputA */
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     px = pIn1;
 209              		.loc 1 182 8 discriminator 8
 210 00dc 7B6D     		ldr	r3, [r7, #84]
 211 00de BB64     		str	r3, [r7, #72]
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputB */
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     pSrc1 = pIn2 + firstIndex;
 212              		.loc 1 185 18 discriminator 8
 213 00e0 7B6E     		ldr	r3, [r7, #100]
 214 00e2 9B00     		lsls	r3, r3, #2
 215              		.loc 1 185 11 discriminator 8
ARM GAS  /tmp/ccCe83bA.s 			page 8


 216 00e4 3A6D     		ldr	r2, [r7, #80]
 217 00e6 1344     		add	r3, r3, r2
 218 00e8 3B64     		str	r3, [r7, #64]
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     py = pSrc1;
 219              		.loc 1 186 8 discriminator 8
 220 00ea 3B6C     		ldr	r3, [r7, #64]
 221 00ec 7B64     		str	r3, [r7, #68]
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* ------------------------
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Stage1 process
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ----------------------*/
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* The first stage starts here */
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     while (blockSize1 > 0U)
 222              		.loc 1 193 11 discriminator 8
 223 00ee 2FE0     		b	.L14
 224              	.L17:
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Accumulator is made zero for every iteration */
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       sum = 0.0f;
 225              		.loc 1 196 11
 226 00f0 4FF00003 		mov	r3, #0
 227 00f4 FB63     		str	r3, [r7, #60]	@ float
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count >> 2U;
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (k > 0U)
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* x[0] * y[srcBLen - 1] */
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* x[1] * y[srcBLen - 2] */
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* x[2] * y[srcBLen - 3] */
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* x[3] * y[srcBLen - 4] */
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k--;
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count % 0x4U;
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #else
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialize k with number of samples */
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count;
 228              		.loc 1 227 9
 229 00f6 7B6B     		ldr	r3, [r7, #52]
 230 00f8 BB63     		str	r3, [r7, #56]
ARM GAS  /tmp/ccCe83bA.s 			page 9


 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (k > 0U)
 231              		.loc 1 231 13
 232 00fa 14E0     		b	.L15
 233              	.L16:
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Perform the multiply-accumulate */
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 234              		.loc 1 234 19
 235 00fc BB6C     		ldr	r3, [r7, #72]
 236 00fe 1A1D     		adds	r2, r3, #4
 237 0100 BA64     		str	r2, [r7, #72]
 238              		.loc 1 234 16
 239 0102 93ED007A 		vldr.32	s14, [r3]
 240              		.loc 1 234 27
 241 0106 7B6C     		ldr	r3, [r7, #68]
 242 0108 1A1F     		subs	r2, r3, #4
 243 010a 7A64     		str	r2, [r7, #68]
 244              		.loc 1 234 24
 245 010c D3ED007A 		vldr.32	s15, [r3]
 246              		.loc 1 234 22
 247 0110 67EE277A 		vmul.f32	s15, s14, s15
 248              		.loc 1 234 13
 249 0114 97ED0F7A 		vldr.32	s14, [r7, #60]
 250 0118 77EE277A 		vadd.f32	s15, s14, s15
 251 011c C7ED0F7A 		vstr.32	s15, [r7, #60]
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k--;
 252              		.loc 1 237 10
 253 0120 BB6B     		ldr	r3, [r7, #56]
 254 0122 013B     		subs	r3, r3, #1
 255 0124 BB63     		str	r3, [r7, #56]
 256              	.L15:
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 257              		.loc 1 231 13
 258 0126 BB6B     		ldr	r3, [r7, #56]
 259 0128 002B     		cmp	r3, #0
 260 012a E7D1     		bne	.L16
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       *pOut++ = sum;
 261              		.loc 1 241 12
 262 012c FB6C     		ldr	r3, [r7, #76]
 263 012e 1A1D     		adds	r2, r3, #4
 264 0130 FA64     		str	r2, [r7, #76]
 265              		.loc 1 241 15
 266 0132 FA6B     		ldr	r2, [r7, #60]	@ float
 267 0134 1A60     		str	r2, [r3]	@ float
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       py = ++pSrc1;
 268              		.loc 1 244 10
 269 0136 3B6C     		ldr	r3, [r7, #64]
ARM GAS  /tmp/ccCe83bA.s 			page 10


 270 0138 0433     		adds	r3, r3, #4
 271 013a 3B64     		str	r3, [r7, #64]
 272 013c 3B6C     		ldr	r3, [r7, #64]
 273 013e 7B64     		str	r3, [r7, #68]
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       px = pIn1;
 274              		.loc 1 245 10
 275 0140 7B6D     		ldr	r3, [r7, #84]
 276 0142 BB64     		str	r3, [r7, #72]
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Increment MAC count */
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       count++;
 277              		.loc 1 248 12
 278 0144 7B6B     		ldr	r3, [r7, #52]
 279 0146 0133     		adds	r3, r3, #1
 280 0148 7B63     		str	r3, [r7, #52]
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Decrement loop counter */
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blockSize1--;
 281              		.loc 1 251 17
 282 014a FB6A     		ldr	r3, [r7, #44]
 283 014c 013B     		subs	r3, r3, #1
 284 014e FB62     		str	r3, [r7, #44]
 285              	.L14:
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 286              		.loc 1 193 11
 287 0150 FB6A     		ldr	r3, [r7, #44]
 288 0152 002B     		cmp	r3, #0
 289 0154 CCD1     		bne	.L17
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* --------------------------
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Initializations of stage2
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ------------------------*/
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ....
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      */
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputA */
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 290              		.loc 1 265 9
 291 0156 7A6E     		ldr	r2, [r7, #100]
 292              		.loc 1 265 31
 293 0158 3B68     		ldr	r3, [r7]
 294              		.loc 1 265 29
 295 015a D31A     		subs	r3, r2, r3
 296              		.loc 1 265 8
 297 015c 002B     		cmp	r3, #0
 298 015e 08DB     		blt	.L18
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pSrc1 = pIn1 + firstIndex - srcBLen + 1;
 299              		.loc 1 267 33
 300 0160 7A6E     		ldr	r2, [r7, #100]
 301 0162 3B68     		ldr	r3, [r7]
 302 0164 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccCe83bA.s 			page 11


 303              		.loc 1 267 43
 304 0166 0133     		adds	r3, r3, #1
 305 0168 9B00     		lsls	r3, r3, #2
 306              		.loc 1 267 13
 307 016a 7A6D     		ldr	r2, [r7, #84]
 308 016c 1344     		add	r3, r3, r2
 309 016e 3B64     		str	r3, [r7, #64]
 310 0170 01E0     		b	.L19
 311              	.L18:
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     else
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pSrc1 = pIn1;
 312              		.loc 1 271 13
 313 0172 7B6D     		ldr	r3, [r7, #84]
 314 0174 3B64     		str	r3, [r7, #64]
 315              	.L19:
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     px = pSrc1;
 316              		.loc 1 273 8
 317 0176 3B6C     		ldr	r3, [r7, #64]
 318 0178 BB64     		str	r3, [r7, #72]
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputB */
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 319              		.loc 1 276 18
 320 017a 3A68     		ldr	r2, [r7]
 321 017c 6FF04043 		mvn	r3, #-1073741824
 322 0180 1344     		add	r3, r3, r2
 323 0182 9B00     		lsls	r3, r3, #2
 324              		.loc 1 276 11
 325 0184 3A6D     		ldr	r2, [r7, #80]
 326 0186 1344     		add	r3, r3, r2
 327 0188 7B61     		str	r3, [r7, #20]
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     py = pSrc2;
 328              		.loc 1 277 8
 329 018a 7B69     		ldr	r3, [r7, #20]
 330 018c 7B64     		str	r3, [r7, #68]
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* count is index by which the pointer pIn1 to be incremented */
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     count = 0U;
 331              		.loc 1 280 11
 332 018e 0023     		movs	r3, #0
 333 0190 7B63     		str	r3, [r7, #52]
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* -------------------
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Stage2 process
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ------------------*/
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * So, to loop unroll over blockSize2,
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * srcBLen should be greater than or equal to 4 */
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     if (srcBLen >= 4U)
 334              		.loc 1 289 8
 335 0192 3B68     		ldr	r3, [r7]
 336 0194 032B     		cmp	r3, #3
 337 0196 36D9     		bls	.L20
ARM GAS  /tmp/ccCe83bA.s 			page 12


 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blkCnt = ((uint32_t) blockSize2 >> 2U);
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (blkCnt > 0U)
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Set all accumulators to zero */
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         acc0 = 0.0f;
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         acc1 = 0.0f;
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         acc2 = 0.0f;
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         acc3 = 0.0f;
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* read x[0], x[1], x[2] samples */
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         x0 = *px++;
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         x1 = *px++;
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         x2 = *px++;
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen >> 2U;
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         do
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read y[srcBLen - 1] sample */
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           c0 = *py--;
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read x[3] sample */
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x3 = *px++;
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] */
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc0 += x0 * c0;
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] */
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc1 += x1 * c0;
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] */
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc2 += x2 * c0;
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc3 +=  x[3] * y[srcBLen - 1] */
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc3 += x3 * c0;
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read y[srcBLen - 2] sample */
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           c0 = *py--;
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read x[4] sample */
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x0 = *px++;
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc0 +=  x[1] * y[srcBLen - 2] */
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc0 += x1 * c0;
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc1 +=  x[2] * y[srcBLen - 2] */
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc1 += x2 * c0;
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc2 +=  x[3] * y[srcBLen - 2] */
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc2 += x3 * c0;
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc3 +=  x[4] * y[srcBLen - 2] */
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc3 += x0 * c0;
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read y[srcBLen - 3] sample */
ARM GAS  /tmp/ccCe83bA.s 			page 13


 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           c0 = *py--;
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read x[5] sample */
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x1 = *px++;
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] */
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc0 += x2 * c0;
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc1 +=  x[3] * y[srcBLen - 2] */
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc1 += x3 * c0;
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc2 +=  x[4] * y[srcBLen - 2] */
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc2 += x0 * c0;
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc3 +=  x[5] * y[srcBLen - 2] */
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc3 += x1 * c0;
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read y[srcBLen - 4] sample */
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           c0 = *py--;
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read x[6] sample */
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x2 = *px++;
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc0 +=  x[3] * y[srcBLen - 4] */
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc0 += x3 * c0;
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc1 +=  x[4] * y[srcBLen - 4] */
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc1 += x0 * c0;
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc2 +=  x[5] * y[srcBLen - 4] */
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc2 += x1 * c0;
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc3 +=  x[6] * y[srcBLen - 4] */
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc3 += x2 * c0;
 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         } while (--k);
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****          ** No loop unrolling is used. */
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen % 0x4U;
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         while (k > 0U)
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read y[srcBLen - 5] sample */
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           c0 = *py--;
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Read x[7] sample */
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x3 = *px++;
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulates */
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc0 +=  x[4] * y[srcBLen - 5] */
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc0 += x0 * c0;
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc1 +=  x[5] * y[srcBLen - 5] */
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc1 += x1 * c0;
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc2 +=  x[6] * y[srcBLen - 5] */
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc2 += x2 * c0;
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* acc3 +=  x[7] * y[srcBLen - 5] */
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           acc3 += x3 * c0;
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Reuse the present samples for the next MAC */
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x0 = x1;
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x1 = x2;
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           x2 = x3;
 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
ARM GAS  /tmp/ccCe83bA.s 			page 14


 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Decrement the loop counter */
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           k--;
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         }
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Store the result in the accumulator in the destination buffer. */
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = acc0;
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = acc1;
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = acc2;
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = acc3;
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Increment the pointer pIn1 index, count by 4 */
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         count += 4U;
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         px = pSrc1 + count;
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         py = pSrc2;
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         blkCnt--;
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blkCnt = (uint32_t) blockSize2 % 0x4U;
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #else
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialize blkCnt with number of samples */
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blkCnt = blockSize2;
 338              		.loc 1 431 14
 339 0198 BB69     		ldr	r3, [r7, #24]
 340 019a 3B63     		str	r3, [r7, #48]
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (blkCnt > 0U)
 341              		.loc 1 435 13
 342 019c 2FE0     		b	.L21
 343              	.L24:
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Accumulator is made zero for every iteration */
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum = 0.0f;
 344              		.loc 1 438 13
 345 019e 4FF00003 		mov	r3, #0
 346 01a2 FB63     		str	r3, [r7, #60]	@ float
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Loop unrolling: Compute 4 outputs at a time */
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen >> 2U;
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         while (k > 0U)
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulates */
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
ARM GAS  /tmp/ccCe83bA.s 			page 15


 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Decrement loop counter */
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           k--;
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         }
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Loop unrolling: Compute remaining outputs */
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen % 0x4U;
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #else
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Initialize blkCnt with number of samples */
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen;
 347              		.loc 1 463 11
 348 01a4 3B68     		ldr	r3, [r7]
 349 01a6 BB63     		str	r3, [r7, #56]
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         while (k > 0U)
 350              		.loc 1 467 15
 351 01a8 14E0     		b	.L22
 352              	.L23:
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
 353              		.loc 1 470 21
 354 01aa BB6C     		ldr	r3, [r7, #72]
 355 01ac 1A1D     		adds	r2, r3, #4
 356 01ae BA64     		str	r2, [r7, #72]
 357              		.loc 1 470 18
 358 01b0 93ED007A 		vldr.32	s14, [r3]
 359              		.loc 1 470 29
 360 01b4 7B6C     		ldr	r3, [r7, #68]
 361 01b6 1A1F     		subs	r2, r3, #4
 362 01b8 7A64     		str	r2, [r7, #68]
 363              		.loc 1 470 26
 364 01ba D3ED007A 		vldr.32	s15, [r3]
 365              		.loc 1 470 24
 366 01be 67EE277A 		vmul.f32	s15, s14, s15
 367              		.loc 1 470 15
 368 01c2 97ED0F7A 		vldr.32	s14, [r7, #60]
 369 01c6 77EE277A 		vadd.f32	s15, s14, s15
 370 01ca C7ED0F7A 		vstr.32	s15, [r7, #60]
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Decrement loop counter */
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           k--;
 371              		.loc 1 473 12
 372 01ce BB6B     		ldr	r3, [r7, #56]
 373 01d0 013B     		subs	r3, r3, #1
 374 01d2 BB63     		str	r3, [r7, #56]
 375              	.L22:
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 376              		.loc 1 467 15
 377 01d4 BB6B     		ldr	r3, [r7, #56]
 378 01d6 002B     		cmp	r3, #0
 379 01d8 E7D1     		bne	.L23
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         }
ARM GAS  /tmp/ccCe83bA.s 			page 16


 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Store the result in the accumulator in the destination buffer. */
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = sum;
 380              		.loc 1 477 14
 381 01da FB6C     		ldr	r3, [r7, #76]
 382 01dc 1A1D     		adds	r2, r3, #4
 383 01de FA64     		str	r2, [r7, #76]
 384              		.loc 1 477 17
 385 01e0 FA6B     		ldr	r2, [r7, #60]	@ float
 386 01e2 1A60     		str	r2, [r3]	@ float
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Increment MAC count */
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         count++;
 387              		.loc 1 480 14
 388 01e4 7B6B     		ldr	r3, [r7, #52]
 389 01e6 0133     		adds	r3, r3, #1
 390 01e8 7B63     		str	r3, [r7, #52]
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         px = pSrc1 + count;
 391              		.loc 1 483 20
 392 01ea 7B6B     		ldr	r3, [r7, #52]
 393 01ec 9B00     		lsls	r3, r3, #2
 394              		.loc 1 483 12
 395 01ee 3A6C     		ldr	r2, [r7, #64]
 396 01f0 1344     		add	r3, r3, r2
 397 01f2 BB64     		str	r3, [r7, #72]
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         py = pSrc2;
 398              		.loc 1 484 12
 399 01f4 7B69     		ldr	r3, [r7, #20]
 400 01f6 7B64     		str	r3, [r7, #68]
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         blkCnt--;
 401              		.loc 1 487 15
 402 01f8 3B6B     		ldr	r3, [r7, #48]
 403 01fa 013B     		subs	r3, r3, #1
 404 01fc 3B63     		str	r3, [r7, #48]
 405              	.L21:
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 406              		.loc 1 435 13
 407 01fe 3B6B     		ldr	r3, [r7, #48]
 408 0200 002B     		cmp	r3, #0
 409 0202 CCD1     		bne	.L24
 410 0204 35E0     		b	.L25
 411              	.L20:
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     else
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* If the srcBLen is not a multiple of 4,
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blkCnt = (uint32_t) blockSize2;
 412              		.loc 1 494 14
 413 0206 BB69     		ldr	r3, [r7, #24]
 414 0208 3B63     		str	r3, [r7, #48]
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
ARM GAS  /tmp/ccCe83bA.s 			page 17


 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (blkCnt > 0U)
 415              		.loc 1 496 13
 416 020a 2FE0     		b	.L26
 417              	.L29:
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Accumulator is made zero for every iteration */
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum = 0.0f;
 418              		.loc 1 499 13
 419 020c 4FF00003 		mov	r3, #0
 420 0210 FB63     		str	r3, [r7, #60]	@ float
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* srcBLen number of MACS should be performed */
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k = srcBLen;
 421              		.loc 1 502 11
 422 0212 3B68     		ldr	r3, [r7]
 423 0214 BB63     		str	r3, [r7, #56]
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         while (k > 0U)
 424              		.loc 1 504 15
 425 0216 14E0     		b	.L27
 426              	.L28:
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Perform the multiply-accumulate */
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += *px++ * *py--;
 427              		.loc 1 507 21
 428 0218 BB6C     		ldr	r3, [r7, #72]
 429 021a 1A1D     		adds	r2, r3, #4
 430 021c BA64     		str	r2, [r7, #72]
 431              		.loc 1 507 18
 432 021e 93ED007A 		vldr.32	s14, [r3]
 433              		.loc 1 507 29
 434 0222 7B6C     		ldr	r3, [r7, #68]
 435 0224 1A1F     		subs	r2, r3, #4
 436 0226 7A64     		str	r2, [r7, #68]
 437              		.loc 1 507 26
 438 0228 D3ED007A 		vldr.32	s15, [r3]
 439              		.loc 1 507 24
 440 022c 67EE277A 		vmul.f32	s15, s14, s15
 441              		.loc 1 507 15
 442 0230 97ED0F7A 		vldr.32	s14, [r7, #60]
 443 0234 77EE277A 		vadd.f32	s15, s14, s15
 444 0238 C7ED0F7A 		vstr.32	s15, [r7, #60]
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* Decrement loop counter */
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           k--;
 445              		.loc 1 510 12
 446 023c BB6B     		ldr	r3, [r7, #56]
 447 023e 013B     		subs	r3, r3, #1
 448 0240 BB63     		str	r3, [r7, #56]
 449              	.L27:
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 450              		.loc 1 504 15
 451 0242 BB6B     		ldr	r3, [r7, #56]
 452 0244 002B     		cmp	r3, #0
 453 0246 E7D1     		bne	.L28
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         }
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
ARM GAS  /tmp/ccCe83bA.s 			page 18


 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Store the result in the accumulator in the destination buffer. */
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         *pOut++ = sum;
 454              		.loc 1 514 14
 455 0248 FB6C     		ldr	r3, [r7, #76]
 456 024a 1A1D     		adds	r2, r3, #4
 457 024c FA64     		str	r2, [r7, #76]
 458              		.loc 1 514 17
 459 024e FA6B     		ldr	r2, [r7, #60]	@ float
 460 0250 1A60     		str	r2, [r3]	@ float
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Increment the MAC count */
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         count++;
 461              		.loc 1 517 14
 462 0252 7B6B     		ldr	r3, [r7, #52]
 463 0254 0133     		adds	r3, r3, #1
 464 0256 7B63     		str	r3, [r7, #52]
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         px = pSrc1 + count;
 465              		.loc 1 520 20
 466 0258 7B6B     		ldr	r3, [r7, #52]
 467 025a 9B00     		lsls	r3, r3, #2
 468              		.loc 1 520 12
 469 025c 3A6C     		ldr	r2, [r7, #64]
 470 025e 1344     		add	r3, r3, r2
 471 0260 BB64     		str	r3, [r7, #72]
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         py = pSrc2;
 472              		.loc 1 521 12
 473 0262 7B69     		ldr	r3, [r7, #20]
 474 0264 7B64     		str	r3, [r7, #68]
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement the loop counter */
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         blkCnt--;
 475              		.loc 1 524 15
 476 0266 3B6B     		ldr	r3, [r7, #48]
 477 0268 013B     		subs	r3, r3, #1
 478 026a 3B63     		str	r3, [r7, #48]
 479              	.L26:
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 480              		.loc 1 496 13
 481 026c 3B6B     		ldr	r3, [r7, #48]
 482 026e 002B     		cmp	r3, #0
 483 0270 CCD1     		bne	.L29
 484              	.L25:
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* --------------------------
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Initializations of stage3
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * -------------------------*/
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ....
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
ARM GAS  /tmp/ccCe83bA.s 			page 19


 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      */
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****        The blockSize3 variable holds the number of MAC operations performed */
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     count = srcBLen - 1U;
 485              		.loc 1 542 11
 486 0272 3B68     		ldr	r3, [r7]
 487 0274 013B     		subs	r3, r3, #1
 488 0276 7B63     		str	r3, [r7, #52]
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputA */
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 489              		.loc 1 545 30
 490 0278 BA68     		ldr	r2, [r7, #8]
 491 027a 3B68     		ldr	r3, [r7]
 492 027c D31A     		subs	r3, r2, r3
 493 027e 0133     		adds	r3, r3, #1
 494 0280 9B00     		lsls	r3, r3, #2
 495              		.loc 1 545 11
 496 0282 7A6D     		ldr	r2, [r7, #84]
 497 0284 1344     		add	r3, r3, r2
 498 0286 3B64     		str	r3, [r7, #64]
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     px = pSrc1;
 499              		.loc 1 546 8
 500 0288 3B6C     		ldr	r3, [r7, #64]
 501 028a BB64     		str	r3, [r7, #72]
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Working pointer of inputB */
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 502              		.loc 1 549 18
 503 028c 3A68     		ldr	r2, [r7]
 504 028e 6FF04043 		mvn	r3, #-1073741824
 505 0292 1344     		add	r3, r3, r2
 506 0294 9B00     		lsls	r3, r3, #2
 507              		.loc 1 549 11
 508 0296 3A6D     		ldr	r2, [r7, #80]
 509 0298 1344     		add	r3, r3, r2
 510 029a 7B61     		str	r3, [r7, #20]
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     py = pSrc2;
 511              		.loc 1 550 8
 512 029c 7B69     		ldr	r3, [r7, #20]
 513 029e 7B64     		str	r3, [r7, #68]
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* -------------------
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * Stage3 process
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****      * ------------------*/
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     while (blockSize3 > 0U)
 514              		.loc 1 556 11
 515 02a0 2FE0     		b	.L30
 516              	.L33:
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Accumulator is made zero for every iteration */
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       sum = 0.0f;
 517              		.loc 1 559 11
 518 02a2 4FF00003 		mov	r3, #0
 519 02a6 FB63     		str	r3, [r7, #60]	@ float
ARM GAS  /tmp/ccCe83bA.s 			page 20


 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count >> 2U;
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (k > 0U)
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k--;
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count % 0x4U;
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #else
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialize blkCnt with number of samples */
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       k = count;
 520              		.loc 1 590 9
 521 02a8 7B6B     		ldr	r3, [r7, #52]
 522 02aa BB63     		str	r3, [r7, #56]
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       while (k > 0U)
 523              		.loc 1 594 13
 524 02ac 14E0     		b	.L31
 525              	.L32:
 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Perform the multiply-accumulate */
 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         sum += *px++ * *py--;
 526              		.loc 1 598 19
 527 02ae BB6C     		ldr	r3, [r7, #72]
 528 02b0 1A1D     		adds	r2, r3, #4
 529 02b2 BA64     		str	r2, [r7, #72]
 530              		.loc 1 598 16
 531 02b4 93ED007A 		vldr.32	s14, [r3]
 532              		.loc 1 598 27
 533 02b8 7B6C     		ldr	r3, [r7, #68]
 534 02ba 1A1F     		subs	r2, r3, #4
 535 02bc 7A64     		str	r2, [r7, #68]
 536              		.loc 1 598 24
 537 02be D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /tmp/ccCe83bA.s 			page 21


 538              		.loc 1 598 22
 539 02c2 67EE277A 		vmul.f32	s15, s14, s15
 540              		.loc 1 598 13
 541 02c6 97ED0F7A 		vldr.32	s14, [r7, #60]
 542 02ca 77EE277A 		vadd.f32	s15, s14, s15
 543 02ce C7ED0F7A 		vstr.32	s15, [r7, #60]
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Decrement loop counter */
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         k--;
 544              		.loc 1 601 10
 545 02d2 BB6B     		ldr	r3, [r7, #56]
 546 02d4 013B     		subs	r3, r3, #1
 547 02d6 BB63     		str	r3, [r7, #56]
 548              	.L31:
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 549              		.loc 1 594 13
 550 02d8 BB6B     		ldr	r3, [r7, #56]
 551 02da 002B     		cmp	r3, #0
 552 02dc E7D1     		bne	.L32
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       *pOut++ = sum;
 553              		.loc 1 605 12
 554 02de FB6C     		ldr	r3, [r7, #76]
 555 02e0 1A1D     		adds	r2, r3, #4
 556 02e2 FA64     		str	r2, [r7, #76]
 557              		.loc 1 605 15
 558 02e4 FA6B     		ldr	r2, [r7, #60]	@ float
 559 02e6 1A60     		str	r2, [r3]	@ float
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       px = ++pSrc1;
 560              		.loc 1 608 10
 561 02e8 3B6C     		ldr	r3, [r7, #64]
 562 02ea 0433     		adds	r3, r3, #4
 563 02ec 3B64     		str	r3, [r7, #64]
 564 02ee 3B6C     		ldr	r3, [r7, #64]
 565 02f0 BB64     		str	r3, [r7, #72]
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       py = pSrc2;
 566              		.loc 1 609 10
 567 02f2 7B69     		ldr	r3, [r7, #20]
 568 02f4 7B64     		str	r3, [r7, #68]
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Decrement MAC count */
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       count--;
 569              		.loc 1 612 12
 570 02f6 7B6B     		ldr	r3, [r7, #52]
 571 02f8 013B     		subs	r3, r3, #1
 572 02fa 7B63     		str	r3, [r7, #52]
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Decrement the loop counter */
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       blockSize3--;
 573              		.loc 1 615 17
 574 02fc BB6A     		ldr	r3, [r7, #40]
 575 02fe 013B     		subs	r3, r3, #1
 576 0300 BB62     		str	r3, [r7, #40]
ARM GAS  /tmp/ccCe83bA.s 			page 22


 577              	.L30:
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 578              		.loc 1 556 11
 579 0302 BB6A     		ldr	r3, [r7, #40]
 580 0304 002B     		cmp	r3, #0
 581 0306 CCD1     		bne	.L33
 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     status = ARM_MATH_SUCCESS;
 582              		.loc 1 619 12
 583 0308 0023     		movs	r3, #0
 584 030a 87F82730 		strb	r3, [r7, #39]
 585              	.L3:
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   }
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   /* Return to application */
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   return (status);
 586              		.loc 1 623 10
 587 030e 97F92730 		ldrsb	r3, [r7, #39]
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #else
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** /* alternate version for CM0_FAMILY */
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *pIn1 = pSrcA;                       /* InputA pointer */
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   const float32_t *pIn2 = pSrcB;                       /* InputB pointer */
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         float32_t sum;                                 /* Accumulator */
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         uint32_t i, j;                                 /* Loop counters */
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         arm_status status;                             /* Status of Partial convolution */
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   /* Check for range of output samples to be calculated */
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   {
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   }
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   else
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   {
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Loop to calculate convolution for output length number of values */
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     for (i = firstIndex; i <= (firstIndex + numPoints - 1); i++)
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     {
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Initialize sum with zero to carry on MAC operations */
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       sum = 0.0f;
 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Loop to perform MAC operations according to convolution equation */
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       for (j = 0U; j <= i; j++)
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       {
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         /* Check the array limitations */
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         if (((i - j) < srcBLen) && (j < srcALen))
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         {
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           /* z[i] += x[i-j] * y[j] */
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****           sum += ( pIn1[j] * pIn2[i - j]);
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****         }
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       }
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       /* Store the output in the destination buffer */
 660:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****       pDst[i] = sum;
ARM GAS  /tmp/ccCe83bA.s 			page 23


 661:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     }
 662:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     /* Set status as ARM_SUCCESS */
 664:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****     status = ARM_MATH_SUCCESS;
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   }
 666:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 667:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   /* Return to application */
 668:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c ****   return (status);
 669:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 670:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** 
 672:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_f32.c **** }
 588              		.loc 1 672 1
 589 0312 1846     		mov	r0, r3
 590 0314 5C37     		adds	r7, r7, #92
 591              	.LCFI3:
 592              		.cfi_def_cfa_offset 4
 593 0316 BD46     		mov	sp, r7
 594              	.LCFI4:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 0318 5DF8047B 		ldr	r7, [sp], #4
 598              	.LCFI5:
 599              		.cfi_restore 7
 600              		.cfi_def_cfa_offset 0
 601 031c 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE145:
 605              		.text
 606              	.Letext0:
 607              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 608              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 609              		.file 4 "/usr/include/newlib/sys/_types.h"
 610              		.file 5 "/usr/include/newlib/sys/reent.h"
 611              		.file 6 "/usr/include/newlib/sys/lock.h"
 612              		.file 7 "/usr/include/newlib/math.h"
 613              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccCe83bA.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_partial_f32.c
     /tmp/ccCe83bA.s:17     .text.arm_conv_partial_f32:0000000000000000 $t
     /tmp/ccCe83bA.s:25     .text.arm_conv_partial_f32:0000000000000000 arm_conv_partial_f32

NO UNDEFINED SYMBOLS
