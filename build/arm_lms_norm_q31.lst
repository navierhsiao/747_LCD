ARM GAS  /tmp/cc6tLV45.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_lms_norm_q31.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_lms_norm_q31,"ax",%progbits
  17              		.align	1
  18              		.global	arm_lms_norm_q31
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_lms_norm_q31:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Title:        arm_lms_norm_q31.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Description:  Processing function for the Q31 NLMS filter
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** /**
ARM GAS  /tmp/cc6tLV45.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @addtogroup LMS_NORM
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @brief         Processing function for Q31 normalized LMS filter.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[in]     S         points to an instance of the Q31 normalized LMS filter structure
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[in]     pSrc      points to the block of input data
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[in]     pRef      points to the block of reference data
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[out]    pOut      points to the block of output data
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[out]    pErr      points to the block of error data
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @param[in]     blockSize number of samples to process
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @return        none
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   @par           Scaling and Overflow Behavior
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    multiplication results but provides only a single guard bit.
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    Thus, if the accumulator result overflows it wraps around rather than clip.
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    In order to avoid overflows completely the input signal must be scaled down by
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    log2(numTaps) bits. The reference signal should not be scaled down.
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    After all multiply-accumulates are performed, the 2.62 accumulator is shifted
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    and saturated to 1.31 format to yield the final result.
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    The output signal and error signal are in 1.31 format.
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  @par
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   	               In this filter, filter coefficients are updated for each sample and the
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****                    updation of filter cofficients are saturted.
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****  */
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** void arm_lms_norm_q31(
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         arm_lms_norm_instance_q31 * S,
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   const q31_t * pSrc,
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t * pRef,
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t * pOut,
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t * pErr,
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         uint32_t blockSize)
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** {
  28              		.loc 1 72 1
  29              		.cfi_startproc
  30              		@ args = 8, pretend = 0, frame = 232
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, r10, fp}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 11, -4
ARM GAS  /tmp/cc6tLV45.s 			page 3


  44 0004 BAB0     		sub	sp, sp, #232
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 264
  47 0006 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  50 0008 F863     		str	r0, [r7, #60]
  51 000a B963     		str	r1, [r7, #56]
  52 000c 7A63     		str	r2, [r7, #52]
  53 000e 3B63     		str	r3, [r7, #48]
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t *pState = S->pState;                     /* State pointer */
  54              		.loc 1 73 16
  55 0010 FB6B     		ldr	r3, [r7, #60]
  56 0012 5B68     		ldr	r3, [r3, #4]
  57 0014 C7F8E430 		str	r3, [r7, #228]
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  58              		.loc 1 74 16
  59 0018 FB6B     		ldr	r3, [r7, #60]
  60 001a 9B68     		ldr	r3, [r3, #8]
  61 001c C7F8B830 		str	r3, [r7, #184]
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t *pStateCurnt;                            /* Points to the current sample of the state
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t *px, *pb;                                /* Temporary pointers for state and coeffici
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t mu = S->mu;                              /* Adaptive factor */
  62              		.loc 1 77 15
  63 0020 FB6B     		ldr	r3, [r7, #60]
  64 0022 DB68     		ldr	r3, [r3, #12]
  65 0024 C7F8B430 		str	r3, [r7, #180]
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  66              		.loc 1 78 29
  67 0028 FB6B     		ldr	r3, [r7, #60]
  68 002a 1B88     		ldrh	r3, [r3]
  69              		.loc 1 78 18
  70 002c C7F8B030 		str	r3, [r7, #176]
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q63_t acc;                                     /* Accumulator */
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q63_t energy;                                  /* Energy of the input */
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t e = 0;                                   /* Error data sample */
  71              		.loc 1 82 15
  72 0030 0023     		movs	r3, #0
  73 0032 C7F8AC30 		str	r3, [r7, #172]
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t w = 0, in;                               /* Weight factor and state */
  74              		.loc 1 83 15
  75 0036 0023     		movs	r3, #0
  76 0038 C7F8A830 		str	r3, [r7, #168]
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t x0;                                      /* Temporary variable to hold input sample *
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t errorXmu, oneByEnergy;                   /* Temporary variables to store error and mu
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t postShift;                               /* Post shift to be applied to weight after 
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t coef;                                    /* Temporary variable for coef */
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         q31_t acc_l, acc_h;                            /* Temporary input */
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         uint32_t uShift = ((uint32_t) S->postShift + 1U);
  77              		.loc 1 89 40
  78 003c FB6B     		ldr	r3, [r7, #60]
  79 003e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  80              		.loc 1 89 18
  81 0040 0133     		adds	r3, r3, #1
  82 0042 C7F8A430 		str	r3, [r7, #164]
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****         uint32_t lShift = 32U - uShift;                /*  Shift to be applied to the output */
ARM GAS  /tmp/cc6tLV45.s 			page 4


  83              		.loc 1 90 18
  84 0046 D7F8A430 		ldr	r3, [r7, #164]
  85 004a C3F12003 		rsb	r3, r3, #32
  86 004e C7F8A030 		str	r3, [r7, #160]
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   energy = S->energy;
  87              		.loc 1 92 13
  88 0052 FB6B     		ldr	r3, [r7, #60]
  89 0054 9B69     		ldr	r3, [r3, #24]
  90              		.loc 1 92 10
  91 0056 1A46     		mov	r2, r3
  92 0058 4FEAE273 		asr	r3, r2, #31
  93 005c C7E93023 		strd	r2, [r7, #192]
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   x0 = S->x0;
  94              		.loc 1 93 6
  95 0060 FB6B     		ldr	r3, [r7, #60]
  96 0062 DB69     		ldr	r3, [r3, #28]
  97 0064 C7F8BC30 		str	r3, [r7, #188]
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  98              		.loc 1 97 20
  99 0068 FB6B     		ldr	r3, [r7, #60]
 100 006a 5968     		ldr	r1, [r3, #4]
 101              		.loc 1 97 28
 102 006c D7F8B020 		ldr	r2, [r7, #176]
 103 0070 6FF04043 		mvn	r3, #-1073741824
 104 0074 1344     		add	r3, r3, r2
 105 0076 9B00     		lsls	r3, r3, #2
 106              		.loc 1 97 15
 107 0078 0B44     		add	r3, r3, r1
 108 007a C7F8E030 		str	r3, [r7, #224]
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* initialise loop count */
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   blkCnt = blockSize;
 109              		.loc 1 100 10
 110 007e D7F80C31 		ldr	r3, [r7, #268]
 111 0082 C7F8D030 		str	r3, [r7, #208]
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   while (blkCnt > 0U)
 112              		.loc 1 102 9
 113 0086 7BE2     		b	.L2
 114              	.L26:
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   {
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Copy the new input sample into the state buffer */
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pSrc;
 115              		.loc 1 105 17
 116 0088 D7F8E020 		ldr	r2, [r7, #224]
 117 008c 131D     		adds	r3, r2, #4
 118 008e C7F8E030 		str	r3, [r7, #224]
 119              		.loc 1 105 22
 120 0092 BB6B     		ldr	r3, [r7, #56]
 121 0094 1B68     		ldr	r3, [r3]
 122              		.loc 1 105 20
 123 0096 1360     		str	r3, [r2]
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
ARM GAS  /tmp/cc6tLV45.s 			page 5


 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 124              		.loc 1 108 8
 125 0098 D7F8E430 		ldr	r3, [r7, #228]
 126 009c C7F8DC30 		str	r3, [r7, #220]
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize coefficient pointer */
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     pb = pCoeffs;
 127              		.loc 1 111 8
 128 00a0 D7F8B830 		ldr	r3, [r7, #184]
 129 00a4 C7F8D830 		str	r3, [r7, #216]
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from input buffer */
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     in = *pSrc++;
 130              		.loc 1 114 15
 131 00a8 BA6B     		ldr	r2, [r7, #56]
 132 00aa 131D     		adds	r3, r2, #4
 133 00ac BB63     		str	r3, [r7, #56]
 134              		.loc 1 114 8
 135 00ae 1368     		ldr	r3, [r2]
 136 00b0 C7F89C30 		str	r3, [r7, #156]
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Update the energy calculation */
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     energy = (q31_t) ((((q63_t) energy << 32) - (((q63_t) x0 * x0) << 1)) >> 32);
 137              		.loc 1 117 40
 138 00b4 D7E93023 		ldrd	r2, [r7, #192]
 139 00b8 4FF00008 		mov	r8, #0
 140 00bc 4FF00009 		mov	r9, #0
 141 00c0 9146     		mov	r9, r2
 142 00c2 4FF00008 		mov	r8, #0
 143              		.loc 1 117 51
 144 00c6 D7F8BC30 		ldr	r3, [r7, #188]
 145 00ca 1846     		mov	r0, r3
 146 00cc 4FEAE071 		asr	r1, r0, #31
 147              		.loc 1 117 62
 148 00d0 D7F8BC30 		ldr	r3, [r7, #188]
 149 00d4 1A46     		mov	r2, r3
 150 00d6 4FEAE273 		asr	r3, r2, #31
 151 00da 02FB01F5 		mul	r5, r2, r1
 152 00de 00FB03F4 		mul	r4, r0, r3
 153 00e2 2C44     		add	r4, r4, r5
 154 00e4 A0FB0223 		umull	r2, r3, r0, r2
 155 00e8 E118     		adds	r1, r4, r3
 156 00ea 0B46     		mov	r3, r1
 157              		.loc 1 117 68
 158 00ec 9118     		adds	r1, r2, r2
 159 00ee 3961     		str	r1, [r7, #16]
 160 00f0 5B41     		adcs	r3, r3, r3
 161 00f2 7B61     		str	r3, [r7, #20]
 162 00f4 D7E90423 		ldrd	r2, [r7, #16]
 163              		.loc 1 117 47
 164 00f8 B8EB0201 		subs	r1, r8, r2
 165 00fc B962     		str	r1, [r7, #40]
 166 00fe 69EB0303 		sbc	r3, r9, r3
 167 0102 FB62     		str	r3, [r7, #44]
 168              		.loc 1 117 75
 169 0104 4FF00002 		mov	r2, #0
ARM GAS  /tmp/cc6tLV45.s 			page 6


 170 0108 4FF00003 		mov	r3, #0
 171 010c D7E90A45 		ldrd	r4, [r7, #40]
 172 0110 2946     		mov	r1, r5
 173 0112 0A00     		movs	r2, r1
 174 0114 2946     		mov	r1, r5
 175 0116 CB17     		asrs	r3, r1, #31
 176              		.loc 1 117 14
 177 0118 1346     		mov	r3, r2
 178              		.loc 1 117 12
 179 011a 1A46     		mov	r2, r3
 180 011c 4FEAE273 		asr	r3, r2, #31
 181 0120 C7E93023 		strd	r2, [r7, #192]
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     energy = (q31_t) (((((q63_t) in * in) << 1) + (energy << 32)) >> 32);
 182              		.loc 1 118 26
 183 0124 D7F89C30 		ldr	r3, [r7, #156]
 184 0128 1846     		mov	r0, r3
 185 012a 4FEAE071 		asr	r1, r0, #31
 186              		.loc 1 118 37
 187 012e D7F89C30 		ldr	r3, [r7, #156]
 188 0132 1A46     		mov	r2, r3
 189 0134 4FEAE273 		asr	r3, r2, #31
 190 0138 02FB01F5 		mul	r5, r2, r1
 191 013c 00FB03F4 		mul	r4, r0, r3
 192 0140 2C44     		add	r4, r4, r5
 193 0142 A0FB0223 		umull	r2, r3, r0, r2
 194 0146 E118     		adds	r1, r4, r3
 195 0148 0B46     		mov	r3, r1
 196              		.loc 1 118 43
 197 014a 9118     		adds	r1, r2, r2
 198 014c B960     		str	r1, [r7, #8]
 199 014e 5B41     		adcs	r3, r3, r3
 200 0150 FB60     		str	r3, [r7, #12]
 201 0152 D7E90245 		ldrd	r4, [r7, #8]
 202              		.loc 1 118 59
 203 0156 D7E93023 		ldrd	r2, [r7, #192]
 204 015a 4FF00000 		mov	r0, #0
 205 015e 4FF00001 		mov	r1, #0
 206 0162 1100     		movs	r1, r2
 207 0164 0020     		movs	r0, #0
 208              		.loc 1 118 49
 209 0166 2318     		adds	r3, r4, r0
 210 0168 3B62     		str	r3, [r7, #32]
 211 016a 45EB0103 		adc	r3, r5, r1
 212 016e 7B62     		str	r3, [r7, #36]
 213              		.loc 1 118 67
 214 0170 4FF00002 		mov	r2, #0
 215 0174 4FF00003 		mov	r3, #0
 216 0178 D7E90845 		ldrd	r4, [r7, #32]
 217 017c 2946     		mov	r1, r5
 218 017e 0A00     		movs	r2, r1
 219 0180 2946     		mov	r1, r5
 220 0182 CB17     		asrs	r3, r1, #31
 221              		.loc 1 118 14
 222 0184 1346     		mov	r3, r2
 223              		.loc 1 118 12
 224 0186 1A46     		mov	r2, r3
 225 0188 4FEAE273 		asr	r3, r2, #31
ARM GAS  /tmp/cc6tLV45.s 			page 7


 226 018c C7E93023 		strd	r2, [r7, #192]
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Set the accumulator to zero */
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     acc = 0;
 227              		.loc 1 121 9
 228 0190 4FF00002 		mov	r2, #0
 229 0194 4FF00003 		mov	r3, #0
 230 0198 C7E93223 		strd	r2, [r7, #200]
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps >> 2U;
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0U)
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* acc +=  b[N] * x[n-N] */
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* acc +=  b[N-1] * x[n-N-1] */
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* acc +=  b[N-2] * x[n-N-2] */
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* acc +=  b[N-3] * x[n-N-3] */
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement loop counter */
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     }
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling: Compute remaining taps */
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps % 0x4U;
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #else
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize tapCnt with number of samples */
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps;
 231              		.loc 1 153 12
 232 019c D7F8B030 		ldr	r3, [r7, #176]
 233 01a0 C7F8D430 		str	r3, [r7, #212]
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0U)
 234              		.loc 1 157 11
 235 01a4 29E0     		b	.L3
 236              	.L4:
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 237              		.loc 1 160 27
 238 01a6 D7F8DC20 		ldr	r2, [r7, #220]
 239 01aa 131D     		adds	r3, r2, #4
 240 01ac C7F8DC30 		str	r3, [r7, #220]
ARM GAS  /tmp/cc6tLV45.s 			page 8


 241              		.loc 1 160 24
 242 01b0 1368     		ldr	r3, [r2]
 243              		.loc 1 160 15
 244 01b2 1C46     		mov	r4, r3
 245 01b4 4FEAE475 		asr	r5, r4, #31
 246              		.loc 1 160 38
 247 01b8 D7F8D820 		ldr	r2, [r7, #216]
 248 01bc 131D     		adds	r3, r2, #4
 249 01be C7F8D830 		str	r3, [r7, #216]
 250              		.loc 1 160 35
 251 01c2 1368     		ldr	r3, [r2]
 252 01c4 1A46     		mov	r2, r3
 253 01c6 4FEAE273 		asr	r3, r2, #31
 254              		.loc 1 160 32
 255 01ca 02FB05F0 		mul	r0, r2, r5
 256 01ce 04FB03F1 		mul	r1, r4, r3
 257 01d2 4618     		adds	r6, r0, r1
 258 01d4 A4FB0201 		umull	r0, r1, r4, r2
 259 01d8 7318     		adds	r3, r6, r1
 260 01da 1946     		mov	r1, r3
 261              		.loc 1 160 11
 262 01dc D7E93223 		ldrd	r2, [r7, #200]
 263 01e0 1418     		adds	r4, r2, r0
 264 01e2 3C60     		str	r4, [r7]
 265 01e4 4B41     		adcs	r3, r3, r1
 266 01e6 7B60     		str	r3, [r7, #4]
 267 01e8 D7E90034 		ldrd	r3, [r7]
 268 01ec C7E93234 		strd	r3, [r7, #200]
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement the loop counter */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 269              		.loc 1 163 13
 270 01f0 D7F8D430 		ldr	r3, [r7, #212]
 271 01f4 013B     		subs	r3, r3, #1
 272 01f6 C7F8D430 		str	r3, [r7, #212]
 273              	.L3:
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 274              		.loc 1 157 11
 275 01fa D7F8D430 		ldr	r3, [r7, #212]
 276 01fe 002B     		cmp	r3, #0
 277 0200 D1D1     		bne	.L4
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     }
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Converting the result to 1.31 format */
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc lower part of acc */
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     acc_l = acc & 0xffffffff;
 278              		.loc 1 168 11
 279 0202 D7F8C830 		ldr	r3, [r7, #200]
 280 0206 C7F89830 		str	r3, [r7, #152]
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calc upper part of acc */
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 281              		.loc 1 171 25
 282 020a D7E93223 		ldrd	r2, [r7, #200]
 283 020e 4FF00000 		mov	r0, #0
 284 0212 4FF00001 		mov	r1, #0
 285 0216 1800     		movs	r0, r3
ARM GAS  /tmp/cc6tLV45.s 			page 9


 286 0218 0021     		movs	r1, #0
 287              		.loc 1 171 11
 288 021a 0346     		mov	r3, r0
 289 021c C7F89430 		str	r3, [r7, #148]
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 290              		.loc 1 173 11
 291 0220 D7F89820 		ldr	r2, [r7, #152]
 292              		.loc 1 173 28
 293 0224 D7F8A030 		ldr	r3, [r7, #160]
 294 0228 22FA03F1 		lsr	r1, r2, r3
 295              		.loc 1 173 46
 296 022c D7F89420 		ldr	r2, [r7, #148]
 297 0230 D7F8A430 		ldr	r3, [r7, #164]
 298 0234 02FA03F3 		lsl	r3, r2, r3
 299              		.loc 1 173 38
 300 0238 0B43     		orrs	r3, r3, r1
 301              		.loc 1 173 9
 302 023a 1A46     		mov	r2, r3
 303 023c 4FF00003 		mov	r3, #0
 304 0240 C7E93223 		strd	r2, [r7, #200]
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pOut++ = (q31_t) acc;
 305              		.loc 1 176 10
 306 0244 3A6B     		ldr	r2, [r7, #48]
 307 0246 131D     		adds	r3, r2, #4
 308 0248 3B63     		str	r3, [r7, #48]
 309              		.loc 1 176 15
 310 024a D7F8C830 		ldr	r3, [r7, #200]
 311              		.loc 1 176 13
 312 024e 1360     		str	r3, [r2]
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Compute and store error */
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     e = *pRef++ - (q31_t) acc;
 313              		.loc 1 179 14
 314 0250 7A6B     		ldr	r2, [r7, #52]
 315 0252 131D     		adds	r3, r2, #4
 316 0254 7B63     		str	r3, [r7, #52]
 317              		.loc 1 179 9
 318 0256 1268     		ldr	r2, [r2]
 319              		.loc 1 179 19
 320 0258 D7F8C830 		ldr	r3, [r7, #200]
 321              		.loc 1 179 7
 322 025c D31A     		subs	r3, r2, r3
 323 025e C7F8AC30 		str	r3, [r7, #172]
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pErr++ = e;
 324              		.loc 1 180 10
 325 0262 D7F80821 		ldr	r2, [r7, #264]
 326 0266 131D     		adds	r3, r2, #4
 327 0268 C7F80831 		str	r3, [r7, #264]
 328              		.loc 1 180 13
 329 026c D7F8AC30 		ldr	r3, [r7, #172]
 330 0270 1360     		str	r3, [r2]
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculates the reciprocal of energy */
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     postShift = arm_recip_q31(energy + DELTA_Q31, &oneByEnergy, &S->recipTable[0]);
ARM GAS  /tmp/cc6tLV45.s 			page 10


 331              		.loc 1 183 38
 332 0272 D7F8C030 		ldr	r3, [r7, #192]
 333 0276 03F58073 		add	r3, r3, #256
 334              		.loc 1 183 17
 335 027a 1946     		mov	r1, r3
 336 027c FB6B     		ldr	r3, [r7, #60]
 337 027e 5A69     		ldr	r2, [r3, #20]
 338 0280 F967     		str	r1, [r7, #124]
 339 0282 07F14403 		add	r3, r7, #68
 340 0286 BB67     		str	r3, [r7, #120]
 341 0288 7A67     		str	r2, [r7, #116]
 342              	.LBB20:
 343              	.LBB21:
 344              		.file 2 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
ARM GAS  /tmp/cc6tLV45.s 			page 11


  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/cc6tLV45.s 			page 12


 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
ARM GAS  /tmp/cc6tLV45.s 			page 13


 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
ARM GAS  /tmp/cc6tLV45.s 			page 14


 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
ARM GAS  /tmp/cc6tLV45.s 			page 15


 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
ARM GAS  /tmp/cc6tLV45.s 			page 16


 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/cc6tLV45.s 			page 17


 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
ARM GAS  /tmp/cc6tLV45.s 			page 18


 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
ARM GAS  /tmp/cc6tLV45.s 			page 19


 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 511:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 512:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 513:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 517:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 518:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 522:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 524:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 526:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 527:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 528:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 529:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 533:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 536:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 538:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 541:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 543:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 544:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 545:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 549:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 552:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 554:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  /tmp/cc6tLV45.s 			page 20


 557:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 559:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 560:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 561:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 566:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 570:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 572:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 574:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 575:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 576:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
 577:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 578:./Libraries/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:./Libraries/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 581:./Libraries/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:./Libraries/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:./Libraries/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 585:./Libraries/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:./Libraries/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 588:./Libraries/CMSIS/DSP/Include/arm_math.h **** */
 589:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:./Libraries/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 592:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 594:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:./Libraries/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 597:./Libraries/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 599:./Libraries/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:./Libraries/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 602:./Libraries/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 604:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 605:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 607:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 609:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 613:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
ARM GAS  /tmp/cc6tLV45.s 			page 21


 614:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 615:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 617:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 619:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 620:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 622:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 623:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 625:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 627:./Libraries/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:./Libraries/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 630:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return max;
 631:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 632:./Libraries/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:./Libraries/CMSIS/DSP/Include/arm_math.h ****       {
 634:./Libraries/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:./Libraries/CMSIS/DSP/Include/arm_math.h ****       }
 636:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 637:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 639:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 640:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 641:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 643:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 645:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 650:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 651:./Libraries/CMSIS/DSP/Include/arm_math.h ****    /**
 652:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 654:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 660:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:./Libraries/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 665:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 666:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 667:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 668:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 670:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
ARM GAS  /tmp/cc6tLV45.s 			page 22


 671:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 675:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 676:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 677:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 678:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 679:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 680:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
 681:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 682:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 683:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 684:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 685:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 686:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 687:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 688:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 689:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 690:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
 691:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 692:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 693:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 694:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 695:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 696:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 697:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 698:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 699:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 700:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
 701:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 702:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 703:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 704:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 705:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 706:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 707:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 708:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 709:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 710:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
 711:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q63_t x,
 712:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t y)
 713:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 714:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 715:./Libraries/CMSIS/DSP/Include/arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 716:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 717:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 718:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 719:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 720:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 721:./Libraries/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q31(
 722:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t in,
 723:./Libraries/CMSIS/DSP/Include/arm_math.h ****         q31_t * dst,
 724:./Libraries/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pRecipTable)
 725:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 726:./Libraries/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
 727:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal;
ARM GAS  /tmp/cc6tLV45.s 			page 23


 728:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t index, i;
 729:./Libraries/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits;
 730:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 731:./Libraries/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 345              		.loc 2 731 8
 346 028a FB6F     		ldr	r3, [r7, #124]
 347 028c 002B     		cmp	r3, #0
 348 028e 0DDD     		ble	.L5
 732:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 733:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 349              		.loc 2 733 31
 350 0290 FB6F     		ldr	r3, [r7, #124]
 351 0292 3B67     		str	r3, [r7, #112]
 352              	.LBB22:
 353              	.LBB23:
 354              		.file 3 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/cc6tLV45.s 			page 24


  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/cc6tLV45.s 			page 25


  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cc6tLV45.s 			page 26


 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6tLV45.s 			page 27


 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
ARM GAS  /tmp/cc6tLV45.s 			page 28


 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
ARM GAS  /tmp/cc6tLV45.s 			page 29


 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
ARM GAS  /tmp/cc6tLV45.s 			page 30


 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc6tLV45.s 			page 31


 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6tLV45.s 			page 32


 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /tmp/cc6tLV45.s 			page 33


 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc6tLV45.s 			page 34


 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/cc6tLV45.s 			page 35


 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
ARM GAS  /tmp/cc6tLV45.s 			page 36


 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc6tLV45.s 			page 37


 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  /tmp/cc6tLV45.s 			page 38


 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /tmp/cc6tLV45.s 			page 39


 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  /tmp/cc6tLV45.s 			page 40


 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc6tLV45.s 			page 41


1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc6tLV45.s 			page 42


1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 355              		.loc 3 1089 6
 356 0294 3B6F     		ldr	r3, [r7, #112]
 357 0296 002B     		cmp	r3, #0
 358 0298 01D1     		bne	.L6
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
 359              		.loc 3 1091 12
 360 029a 2023     		movs	r3, #32
 361 029c 03E0     		b	.L7
 362              	.L6:
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 363              		.loc 3 1093 10
 364 029e 3B6F     		ldr	r3, [r7, #112]
 365 02a0 B3FA83F3 		clz	r3, r3
 366 02a4 DBB2     		uxtb	r3, r3
 367              	.L7:
 368              	.LBE23:
 369              	.LBE22:
 370              		.loc 2 733 42
 371 02a6 013B     		subs	r3, r3, #1
 372              		.loc 2 733 16
 373 02a8 FB66     		str	r3, [r7, #108]
 374 02aa 0DE0     		b	.L8
 375              	.L5:
 734:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 735:./Libraries/CMSIS/DSP/Include/arm_math.h ****     else
 736:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 737:./Libraries/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 376              		.loc 2 737 37
 377 02ac FB6F     		ldr	r3, [r7, #124]
 378 02ae 5B42     		rsbs	r3, r3, #0
 379 02b0 BB66     		str	r3, [r7, #104]
 380              	.LBB24:
 381              	.LBB25:
ARM GAS  /tmp/cc6tLV45.s 			page 43


1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
 382              		.loc 3 1089 6
 383 02b2 BB6E     		ldr	r3, [r7, #104]
 384 02b4 002B     		cmp	r3, #0
 385 02b6 01D1     		bne	.L9
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 386              		.loc 3 1091 12
 387 02b8 2023     		movs	r3, #32
 388 02ba 03E0     		b	.L10
 389              	.L9:
 390              		.loc 3 1093 10
 391 02bc BB6E     		ldr	r3, [r7, #104]
 392 02be B3FA83F3 		clz	r3, r3
 393 02c2 DBB2     		uxtb	r3, r3
 394              	.L10:
 395              	.LBE25:
 396              	.LBE24:
 397              		.loc 2 737 42
 398 02c4 013B     		subs	r3, r3, #1
 399              		.loc 2 737 16
 400 02c6 FB66     		str	r3, [r7, #108]
 401              	.L8:
 738:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 739:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 740:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 741:./Libraries/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 402              		.loc 2 741 8
 403 02c8 FA6F     		ldr	r2, [r7, #124]
 404 02ca FB6E     		ldr	r3, [r7, #108]
 405 02cc 02FA03F3 		lsl	r3, r2, r3
 406 02d0 FB67     		str	r3, [r7, #124]
 742:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 743:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 744:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 407              		.loc 2 744 27
 408 02d2 FB6F     		ldr	r3, [r7, #124]
 409 02d4 1B16     		asrs	r3, r3, #24
 410              		.loc 2 744 11
 411 02d6 7B66     		str	r3, [r7, #100]
 745:./Libraries/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 412              		.loc 2 745 11
 413 02d8 7B6E     		ldr	r3, [r7, #100]
 414 02da 03F03F03 		and	r3, r3, #63
 415 02de 7B66     		str	r3, [r7, #100]
 746:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 747:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* 1.31 with exp 1 */
 748:./Libraries/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 416              		.loc 2 748 22
 417 02e0 7B6E     		ldr	r3, [r7, #100]
 418 02e2 9A00     		lsls	r2, r3, #2
 419 02e4 7B6F     		ldr	r3, [r7, #116]
 420 02e6 1344     		add	r3, r3, r2
 421              		.loc 2 748 9
 422 02e8 1B68     		ldr	r3, [r3]
 423 02ea 3B66     		str	r3, [r7, #96]
 749:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 750:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
ARM GAS  /tmp/cc6tLV45.s 			page 44


 751:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 752:./Libraries/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 424              		.loc 2 752 12
 425 02ec 0023     		movs	r3, #0
 426 02ee FB65     		str	r3, [r7, #92]
 427              		.loc 2 752 5
 428 02f0 59E0     		b	.L11
 429              	.L15:
 753:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 754:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 430              		.loc 2 754 30
 431 02f2 FB6F     		ldr	r3, [r7, #124]
 432 02f4 1846     		mov	r0, r3
 433 02f6 4FEAE071 		asr	r1, r0, #31
 434              		.loc 2 754 41
 435 02fa 3B6E     		ldr	r3, [r7, #96]
 436 02fc 1A46     		mov	r2, r3
 437 02fe 4FEAE273 		asr	r3, r2, #31
 438 0302 02FB01F5 		mul	r5, r2, r1
 439 0306 00FB03F4 		mul	r4, r0, r3
 440 030a 2C44     		add	r4, r4, r5
 441 030c A0FB0223 		umull	r2, r3, r0, r2
 442 0310 E118     		adds	r1, r4, r3
 443 0312 0B46     		mov	r3, r1
 444              		.loc 2 754 48
 445 0314 4FF00000 		mov	r0, #0
 446 0318 4FF00001 		mov	r1, #0
 447 031c D00F     		lsrs	r0, r2, #31
 448 031e 40EA4300 		orr	r0, r0, r3, lsl #1
 449 0322 D917     		asrs	r1, r3, #31
 450              		.loc 2 754 15
 451 0324 0346     		mov	r3, r0
 452 0326 BB65     		str	r3, [r7, #88]
 755:./Libraries/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 453              		.loc 2 755 15
 454 0328 BA6D     		ldr	r2, [r7, #88]
 455 032a 6FF00043 		mvn	r3, #-2147483648
 456 032e 9B1A     		subs	r3, r3, r2
 457 0330 BB65     		str	r3, [r7, #88]
 756:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /*      1.31 with exp 1 */
 757:./Libraries/CMSIS/DSP/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 758:./Libraries/CMSIS/DSP/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 458              		.loc 2 758 30
 459 0332 3B6E     		ldr	r3, [r7, #96]
 460 0334 1846     		mov	r0, r3
 461 0336 4FEAE071 		asr	r1, r0, #31
 462              		.loc 2 758 42
 463 033a BB6D     		ldr	r3, [r7, #88]
 464 033c 1A46     		mov	r2, r3
 465 033e 4FF00003 		mov	r3, #0
 466 0342 02FB01F5 		mul	r5, r2, r1
 467 0346 00FB03F4 		mul	r4, r0, r3
 468 034a 2C44     		add	r4, r4, r5
 469 034c A0FB0201 		umull	r0, r1, r0, r2
 470 0350 6318     		adds	r3, r4, r1
 471 0352 1946     		mov	r1, r3
 472              		.loc 2 758 13
ARM GAS  /tmp/cc6tLV45.s 			page 45


 473 0354 4FF00002 		mov	r2, #0
 474 0358 4FF00003 		mov	r3, #0
 475 035c 820F     		lsrs	r2, r0, #30
 476 035e 42EA8102 		orr	r2, r2, r1, lsl #2
 477 0362 8B17     		asrs	r3, r1, #30
 478 0364 C7E91423 		strd	r2, [r7, #80]
 479              	.LBB26:
 480              	.LBB27:
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 481              		.loc 2 673 24
 482 0368 D7E91423 		ldrd	r2, [r7, #80]
 483 036c 4FF00000 		mov	r0, #0
 484 0370 4FF00001 		mov	r1, #0
 485 0374 1800     		movs	r0, r3
 486 0376 D917     		asrs	r1, r3, #31
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 487              		.loc 2 673 13
 488 0378 0246     		mov	r2, r0
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 489              		.loc 2 673 35
 490 037a 3B6D     		ldr	r3, [r7, #80]
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 491              		.loc 2 673 45
 492 037c DB17     		asrs	r3, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 493              		.loc 2 674 44
 494 037e 9A42     		cmp	r2, r3
 495 0380 0CD0     		beq	.L12
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 496              		.loc 2 674 34
 497 0382 D7E91423 		ldrd	r2, [r7, #80]
 498 0386 4FF00000 		mov	r0, #0
 499 038a 4FF00001 		mov	r1, #0
 500 038e D817     		asrs	r0, r3, #31
 501 0390 D917     		asrs	r1, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 502              		.loc 2 674 23
 503 0392 0246     		mov	r2, r0
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 504              		.loc 2 674 44
 505 0394 6FF00043 		mvn	r3, #-2147483648
 506 0398 5340     		eors	r3, r3, r2
 507 039a 00E0     		b	.L29
 508              	.L12:
 509 039c 3B6D     		ldr	r3, [r7, #80]
 510              	.L29:
 511              	.LBE27:
 512              	.LBE26:
 513              		.loc 2 758 13
 514 039e 3B66     		str	r3, [r7, #96]
 752:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
 515              		.loc 2 752 27
 516 03a0 FB6D     		ldr	r3, [r7, #92]
 517 03a2 0133     		adds	r3, r3, #1
 518 03a4 FB65     		str	r3, [r7, #92]
 519              	.L11:
 752:./Libraries/CMSIS/DSP/Include/arm_math.h ****     {
ARM GAS  /tmp/cc6tLV45.s 			page 46


 520              		.loc 2 752 5
 521 03a6 FB6D     		ldr	r3, [r7, #92]
 522 03a8 012B     		cmp	r3, #1
 523 03aa A2D9     		bls	.L15
 759:./Libraries/CMSIS/DSP/Include/arm_math.h ****     }
 760:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 761:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 762:./Libraries/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 524              		.loc 2 762 10
 525 03ac BA6F     		ldr	r2, [r7, #120]
 526 03ae 3B6E     		ldr	r3, [r7, #96]
 527 03b0 1360     		str	r3, [r2]
 763:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 764:./Libraries/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 765:./Libraries/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1U);
 528              		.loc 2 765 22
 529 03b2 FB6E     		ldr	r3, [r7, #108]
 530 03b4 0133     		adds	r3, r3, #1
 531              	.LBE21:
 532              	.LBE20:
 533              		.loc 1 183 15
 534 03b6 C7F89030 		str	r3, [r7, #144]
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Calculation of product of (e * mu) */
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     errorXmu = (q31_t) (((q63_t) e * mu) >> 31);
 535              		.loc 1 186 26
 536 03ba D7F8AC30 		ldr	r3, [r7, #172]
 537 03be 1846     		mov	r0, r3
 538 03c0 4FEAE071 		asr	r1, r0, #31
 539              		.loc 1 186 36
 540 03c4 D7F8B430 		ldr	r3, [r7, #180]
 541 03c8 1A46     		mov	r2, r3
 542 03ca 4FEAE273 		asr	r3, r2, #31
 543 03ce 02FB01F5 		mul	r5, r2, r1
 544 03d2 00FB03F4 		mul	r4, r0, r3
 545 03d6 2C44     		add	r4, r4, r5
 546 03d8 A0FB0223 		umull	r2, r3, r0, r2
 547 03dc E118     		adds	r1, r4, r3
 548 03de 0B46     		mov	r3, r1
 549              		.loc 1 186 42
 550 03e0 4FF00000 		mov	r0, #0
 551 03e4 4FF00001 		mov	r1, #0
 552 03e8 D00F     		lsrs	r0, r2, #31
 553 03ea 40EA4300 		orr	r0, r0, r3, lsl #1
 554 03ee D917     		asrs	r1, r3, #31
 555              		.loc 1 186 14
 556 03f0 0346     		mov	r3, r0
 557 03f2 C7F88C30 		str	r3, [r7, #140]
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Weighting factor for the normalized version */
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     w = clip_q63_to_q31(((q63_t) errorXmu * oneByEnergy) >> (31 - postShift));
 558              		.loc 1 189 26
 559 03f6 D7F88C30 		ldr	r3, [r7, #140]
 560 03fa 1846     		mov	r0, r3
 561 03fc 4FEAE071 		asr	r1, r0, #31
 562              		.loc 1 189 43
 563 0400 7B6C     		ldr	r3, [r7, #68]
ARM GAS  /tmp/cc6tLV45.s 			page 47


 564 0402 1A46     		mov	r2, r3
 565 0404 4FEAE273 		asr	r3, r2, #31
 566 0408 02FB01F5 		mul	r5, r2, r1
 567 040c 00FB03F4 		mul	r4, r0, r3
 568 0410 2C44     		add	r4, r4, r5
 569 0412 A0FB0201 		umull	r0, r1, r0, r2
 570 0416 6318     		adds	r3, r4, r1
 571 0418 1946     		mov	r1, r3
 572              		.loc 1 189 65
 573 041a D7F89030 		ldr	r3, [r7, #144]
 574 041e C3F11F04 		rsb	r4, r3, #31
 575              		.loc 1 189 9
 576 0422 C4F12003 		rsb	r3, r4, #32
 577 0426 B4F12002 		subs	r2, r4, #32
 578 042a 20FA04FA 		lsr	r10, r0, r4
 579 042e 01FA03F3 		lsl	r3, r1, r3
 580 0432 4AEA030A 		orr	r10, r10, r3
 581 0436 03D4     		bmi	.L17
 582 0438 41FA02F2 		asr	r2, r1, r2
 583 043c 4AEA020A 		orr	r10, r10, r2
 584              	.L17:
 585 0440 41FA04FB 		asr	fp, r1, r4
 586 0444 C7E920AB 		strd	r10, [r7, #128]
 587              	.LBB28:
 588              	.LBB29:
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 589              		.loc 2 673 24
 590 0448 D7E92023 		ldrd	r2, [r7, #128]
 591 044c 4FF00000 		mov	r0, #0
 592 0450 4FF00001 		mov	r1, #0
 593 0454 1800     		movs	r0, r3
 594 0456 D917     		asrs	r1, r3, #31
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 595              		.loc 2 673 13
 596 0458 0246     		mov	r2, r0
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 597              		.loc 2 673 35
 598 045a D7F88030 		ldr	r3, [r7, #128]
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 599              		.loc 2 673 45
 600 045e DB17     		asrs	r3, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 601              		.loc 2 674 44
 602 0460 9A42     		cmp	r2, r3
 603 0462 0CD0     		beq	.L18
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 604              		.loc 2 674 34
 605 0464 D7E92023 		ldrd	r2, [r7, #128]
 606 0468 4FF00000 		mov	r0, #0
 607 046c 4FF00001 		mov	r1, #0
 608 0470 D817     		asrs	r0, r3, #31
 609 0472 D917     		asrs	r1, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 610              		.loc 2 674 23
 611 0474 0246     		mov	r2, r0
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 612              		.loc 2 674 44
ARM GAS  /tmp/cc6tLV45.s 			page 48


 613 0476 6FF00043 		mvn	r3, #-2147483648
 614 047a 5340     		eors	r3, r3, r2
 615 047c 01E0     		b	.L30
 616              	.L18:
 617 047e D7F88030 		ldr	r3, [r7, #128]
 618              	.L30:
 619              	.LBE29:
 620              	.LBE28:
 621              		.loc 1 189 9
 622 0482 C7F8A830 		str	r3, [r7, #168]
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize pState pointer */
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     px = pState;
 623              		.loc 1 192 8
 624 0486 D7F8E430 		ldr	r3, [r7, #228]
 625 048a C7F8DC30 		str	r3, [r7, #220]
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize coefficient pointer */
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     pb = pCoeffs;
 626              		.loc 1 195 8
 627 048e D7F8B830 		ldr	r3, [r7, #184]
 628 0492 C7F8D830 		str	r3, [r7, #216]
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps >> 2U;
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Update filter coefficients */
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0U)
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* coef is in 2.30 format */
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* get coef in 1.31 format by left shifting */
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1U));
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* update coefficient buffer to next coefficient */
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1U));
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1U));
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1U));
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement loop counter */
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     }
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Loop unrolling: Compute remaining taps */
ARM GAS  /tmp/cc6tLV45.s 			page 49


 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps % 0x4U;
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #else
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Initialize tapCnt with number of samples */
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt = numTaps;
 629              		.loc 1 236 12
 630 0496 D7F8B030 		ldr	r3, [r7, #176]
 631 049a C7F8D430 		str	r3, [r7, #212]
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     while (tapCnt > 0U)
 632              		.loc 1 240 11
 633 049e 5CE0     		b	.L21
 634              	.L25:
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Perform the multiply-accumulate */
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       coef = (q31_t) (((q63_t) w * (*px++)) >> (32));
 635              		.loc 1 243 24
 636 04a0 D7F8A830 		ldr	r3, [r7, #168]
 637 04a4 1C46     		mov	r4, r3
 638 04a6 4FEAE475 		asr	r5, r4, #31
 639              		.loc 1 243 40
 640 04aa D7F8DC20 		ldr	r2, [r7, #220]
 641 04ae 131D     		adds	r3, r2, #4
 642 04b0 C7F8DC30 		str	r3, [r7, #220]
 643              		.loc 1 243 37
 644 04b4 1368     		ldr	r3, [r2]
 645 04b6 1A46     		mov	r2, r3
 646 04b8 4FEAE273 		asr	r3, r2, #31
 647              		.loc 1 243 34
 648 04bc 02FB05F0 		mul	r0, r2, r5
 649 04c0 04FB03F1 		mul	r1, r4, r3
 650 04c4 0144     		add	r1, r1, r0
 651 04c6 A4FB0223 		umull	r2, r3, r4, r2
 652 04ca 1944     		add	r1, r1, r3
 653 04cc 0B46     		mov	r3, r1
 654              		.loc 1 243 45
 655 04ce 4FF00000 		mov	r0, #0
 656 04d2 4FF00001 		mov	r1, #0
 657 04d6 1800     		movs	r0, r3
 658 04d8 D917     		asrs	r1, r3, #31
 659              		.loc 1 243 12
 660 04da 0346     		mov	r3, r0
 661 04dc C7F88830 		str	r3, [r7, #136]
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1U));
 662              		.loc 1 244 37
 663 04e0 D7F8D830 		ldr	r3, [r7, #216]
 664 04e4 1B68     		ldr	r3, [r3]
 665              		.loc 1 244 29
 666 04e6 1846     		mov	r0, r3
 667 04e8 4FEAE071 		asr	r1, r0, #31
 668              		.loc 1 244 50
 669 04ec D7F88830 		ldr	r3, [r7, #136]
 670 04f0 5B00     		lsls	r3, r3, #1
 671 04f2 1A46     		mov	r2, r3
ARM GAS  /tmp/cc6tLV45.s 			page 50


 672 04f4 4FEAE273 		asr	r3, r2, #31
 673              		.loc 1 244 13
 674 04f8 8418     		adds	r4, r0, r2
 675 04fa BC61     		str	r4, [r7, #24]
 676 04fc 41EB0303 		adc	r3, r1, r3
 677 0500 FB61     		str	r3, [r7, #28]
 678 0502 D7E90634 		ldrd	r3, [r7, #24]
 679 0506 C7E91234 		strd	r3, [r7, #72]
 680              	.LBB30:
 681              	.LBB31:
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 682              		.loc 2 673 24
 683 050a D7E91223 		ldrd	r2, [r7, #72]
 684 050e 4FF00000 		mov	r0, #0
 685 0512 4FF00001 		mov	r1, #0
 686 0516 1800     		movs	r0, r3
 687 0518 D917     		asrs	r1, r3, #31
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 688              		.loc 2 673 13
 689 051a 0246     		mov	r2, r0
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 690              		.loc 2 673 35
 691 051c BB6C     		ldr	r3, [r7, #72]
 673:./Libraries/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 692              		.loc 2 673 45
 693 051e DB17     		asrs	r3, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 694              		.loc 2 674 44
 695 0520 9A42     		cmp	r2, r3
 696 0522 0CD0     		beq	.L22
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 697              		.loc 2 674 34
 698 0524 D7E91223 		ldrd	r2, [r7, #72]
 699 0528 4FF00000 		mov	r0, #0
 700 052c 4FF00001 		mov	r1, #0
 701 0530 D817     		asrs	r0, r3, #31
 702 0532 D917     		asrs	r1, r3, #31
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 703              		.loc 2 674 23
 704 0534 0346     		mov	r3, r0
 674:./Libraries/CMSIS/DSP/Include/arm_math.h ****   }
 705              		.loc 2 674 44
 706 0536 6FF00042 		mvn	r2, #-2147483648
 707 053a 5A40     		eors	r2, r2, r3
 708 053c 00E0     		b	.L31
 709              	.L22:
 710 053e BA6C     		ldr	r2, [r7, #72]
 711              	.L31:
 712              	.LBE31:
 713              	.LBE30:
 714              		.loc 1 244 11
 715 0540 D7F8D830 		ldr	r3, [r7, #216]
 716 0544 1A60     		str	r2, [r3]
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       pb++;
 717              		.loc 1 245 9
 718 0546 D7F8D830 		ldr	r3, [r7, #216]
 719 054a 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cc6tLV45.s 			page 51


 720 054c C7F8D830 		str	r3, [r7, #216]
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       /* Decrement loop counter */
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****       tapCnt--;
 721              		.loc 1 248 13
 722 0550 D7F8D430 		ldr	r3, [r7, #212]
 723 0554 013B     		subs	r3, r3, #1
 724 0556 C7F8D430 		str	r3, [r7, #212]
 725              	.L21:
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     {
 726              		.loc 1 240 11
 727 055a D7F8D430 		ldr	r3, [r7, #212]
 728 055e 002B     		cmp	r3, #0
 729 0560 9ED1     		bne	.L25
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     }
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Read the sample from state buffer */
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     x0 = *pState;
 730              		.loc 1 252 8
 731 0562 D7F8E430 		ldr	r3, [r7, #228]
 732 0566 1B68     		ldr	r3, [r3]
 733 0568 C7F8BC30 		str	r3, [r7, #188]
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Advance state pointer by 1 for the next sample */
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     pState = pState + 1;
 734              		.loc 1 255 12
 735 056c D7F8E430 		ldr	r3, [r7, #228]
 736 0570 0433     		adds	r3, r3, #4
 737 0572 C7F8E430 		str	r3, [r7, #228]
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement loop counter */
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     blkCnt--;
 738              		.loc 1 258 11
 739 0576 D7F8D030 		ldr	r3, [r7, #208]
 740 057a 013B     		subs	r3, r3, #1
 741 057c C7F8D030 		str	r3, [r7, #208]
 742              	.L2:
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   {
 743              		.loc 1 102 9
 744 0580 D7F8D030 		ldr	r3, [r7, #208]
 745 0584 002B     		cmp	r3, #0
 746 0586 7FF47FAD 		bne	.L26
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   }
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Save energy and x0 values for the next frame */
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   S->energy = (q31_t) energy;
 747              		.loc 1 262 15
 748 058a D7F8C020 		ldr	r2, [r7, #192]
 749              		.loc 1 262 13
 750 058e FB6B     		ldr	r3, [r7, #60]
 751 0590 9A61     		str	r2, [r3, #24]
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   S->x0 = x0;
 752              		.loc 1 263 9
 753 0592 FB6B     		ldr	r3, [r7, #60]
 754 0594 D7F8BC20 		ldr	r2, [r7, #188]
 755 0598 DA61     		str	r2, [r3, #28]
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
ARM GAS  /tmp/cc6tLV45.s 			page 52


 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Processing is complete.
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****      This prepares the state buffer for the next function call. */
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Points to the start of the pState buffer */
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   pStateCurnt = S->pState;
 756              		.loc 1 270 15
 757 059a FB6B     		ldr	r3, [r7, #60]
 758 059c 5B68     		ldr	r3, [r3, #4]
 759 059e C7F8E030 		str	r3, [r7, #224]
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* copy data */
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Loop unrolling: Compute 4 taps at a time. */
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1U) >> 2U;
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   while (tapCnt > 0U)
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   {
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement loop counter */
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt--;
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   }
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Loop unrolling: Compute remaining taps */
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #else
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   /* Initialize tapCnt with number of samples */
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   tapCnt = (numTaps - 1U);
 760              		.loc 1 295 10
 761 05a2 D7F8B030 		ldr	r3, [r7, #176]
 762 05a6 013B     		subs	r3, r3, #1
 763 05a8 C7F8D430 		str	r3, [r7, #212]
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   while (tapCnt > 0U)
 764              		.loc 1 299 9
 765 05ac 10E0     		b	.L27
 766              	.L28:
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   {
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     *pStateCurnt++ = *pState++;
 767              		.loc 1 301 29
 768 05ae D7F8E420 		ldr	r2, [r7, #228]
 769 05b2 131D     		adds	r3, r2, #4
 770 05b4 C7F8E430 		str	r3, [r7, #228]
 771              		.loc 1 301 17
 772 05b8 D7F8E030 		ldr	r3, [r7, #224]
 773 05bc 191D     		adds	r1, r3, #4
 774 05be C7F8E010 		str	r1, [r7, #224]
 775              		.loc 1 301 22
ARM GAS  /tmp/cc6tLV45.s 			page 53


 776 05c2 1268     		ldr	r2, [r2]
 777              		.loc 1 301 20
 778 05c4 1A60     		str	r2, [r3]
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     /* Decrement loop counter */
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****     tapCnt--;
 779              		.loc 1 304 11
 780 05c6 D7F8D430 		ldr	r3, [r7, #212]
 781 05ca 013B     		subs	r3, r3, #1
 782 05cc C7F8D430 		str	r3, [r7, #212]
 783              	.L27:
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   {
 784              		.loc 1 299 9
 785 05d0 D7F8D430 		ldr	r3, [r7, #212]
 786 05d4 002B     		cmp	r3, #0
 787 05d6 EAD1     		bne	.L28
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c ****   }
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** 
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_lms_norm_q31.c **** }
 788              		.loc 1 307 1
 789 05d8 00BF     		nop
 790 05da 00BF     		nop
 791 05dc E837     		adds	r7, r7, #232
 792              	.LCFI3:
 793              		.cfi_def_cfa_offset 32
 794 05de BD46     		mov	sp, r7
 795              	.LCFI4:
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 05e0 BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp}
 799              	.LCFI5:
 800              		.cfi_restore 11
 801              		.cfi_restore 10
 802              		.cfi_restore 9
 803              		.cfi_restore 8
 804              		.cfi_restore 7
 805              		.cfi_restore 6
 806              		.cfi_restore 5
 807              		.cfi_restore 4
 808              		.cfi_def_cfa_offset 0
 809 05e4 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE145:
 813              		.text
 814              	.Letext0:
 815              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 816              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 817              		.file 6 "/usr/include/newlib/sys/_types.h"
 818              		.file 7 "/usr/include/newlib/sys/reent.h"
 819              		.file 8 "/usr/include/newlib/sys/lock.h"
 820              		.file 9 "/usr/include/newlib/math.h"
ARM GAS  /tmp/cc6tLV45.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_lms_norm_q31.c
     /tmp/cc6tLV45.s:17     .text.arm_lms_norm_q31:0000000000000000 $t
     /tmp/cc6tLV45.s:25     .text.arm_lms_norm_q31:0000000000000000 arm_lms_norm_q31

NO UNDEFINED SYMBOLS
