ARM GAS  /tmp/ccQFFAC0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_dot_prod_q7.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_dot_prod_q7,"ax",%progbits
  17              		.align	1
  18              		.global	arm_dot_prod_q7
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_dot_prod_q7:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c"
   1:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Title:        arm_dot_prod_q7.c
   4:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Description:  Q7 dot product
   5:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
   6:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
   9:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** /*
  12:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
  14:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
  16:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
  20:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  *
  22:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  */
  28:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  29:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  31:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** /**
ARM GAS  /tmp/ccQFFAC0.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @ingroup groupMath
  33:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  */
  34:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  35:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** /**
  36:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @addtogroup BasicDotProd
  37:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  */
  39:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  40:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** /**
  41:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @brief         Dot product of Q7 vectors.
  42:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @param[in]     pSrcA      points to the first input vector
  43:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @param[in]     pSrcB      points to the second input vector
  44:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @param[in]     blockSize  number of samples in each vector
  45:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @param[out]    result     output result returned here
  46:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @return        none
  47:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  48:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   @par           Scaling and Overflow Behavior
  49:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****                    The intermediate multiplications are in 1.7 x 1.7 = 2.14 format and these
  50:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****                    results are added to an accumulator in 18.14 format.
  51:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****                    Nonsaturating additions are used and there is no danger of wrap around as long a
  52:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****                    the vectors are less than 2^18 elements long.
  53:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****                    The return result is in 18.14 format.
  54:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****  */
  55:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  56:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** void arm_dot_prod_q7(
  57:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   const q7_t * pSrcA,
  58:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   const q7_t * pSrcB,
  59:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****         uint32_t blockSize,
  60:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****         q31_t * result)
  61:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** {
  28              		.loc 1 61 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
  62:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****         uint32_t blkCnt;                               /* Loop counter */
  63:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****         q31_t sum = 0;                                 /* Temporary return variable */
  47              		.loc 1 63 15
  48 000e 0023     		movs	r3, #0
  49 0010 3B61     		str	r3, [r7, #16]
  64:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  65:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
  66:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
ARM GAS  /tmp/ccQFFAC0.s 			page 3


  67:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #if defined (ARM_MATH_DSP)
  68:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   q31_t input1, input2;                          /* Temporary variables */
  69:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   q31_t inA1, inA2, inB1, inB2;                  /* Temporary variables */
  70:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #endif
  71:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  72:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   /* Loop unrolling: Compute 4 outputs at a time */
  73:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   blkCnt = blockSize >> 2U;
  74:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  75:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   while (blkCnt > 0U)
  76:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   {
  77:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
  78:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  79:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #if defined (ARM_MATH_DSP)
  80:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* read 4 samples at a time from sourceA */
  81:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     input1 = read_q7x4_ia ((q7_t **) &pSrcA);
  82:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* read 4 samples at a time from sourceB */
  83:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     input2 = read_q7x4_ia ((q7_t **) &pSrcB);
  84:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  85:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* extract two q7_t samples to q15_t samples */
  86:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     inA1 = __SXTB16(__ROR(input1, 8));
  87:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* extract reminaing two samples */
  88:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     inA2 = __SXTB16(input1);
  89:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* extract two q7_t samples to q15_t samples */
  90:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     inB1 = __SXTB16(__ROR(input2, 8));
  91:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* extract reminaing two samples */
  92:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     inB2 = __SXTB16(input2);
  93:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
  94:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* multiply and accumulate two samples at a time */
  95:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum = __SMLAD(inA1, inB1, sum);
  96:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum = __SMLAD(inA2, inB2, sum);
  97:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #else
  98:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum += (q31_t) ((q15_t) *pSrcA++ * *pSrcB++);
  99:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum += (q31_t) ((q15_t) *pSrcA++ * *pSrcB++);
 100:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum += (q31_t) ((q15_t) *pSrcA++ * *pSrcB++);
 101:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum += (q31_t) ((q15_t) *pSrcA++ * *pSrcB++);
 102:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #endif
 103:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 104:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* Decrement loop counter */
 105:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     blkCnt--;
 106:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   }
 107:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 108:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   /* Loop unrolling: Compute remaining outputs */
 109:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   blkCnt = blockSize % 0x4U;
 110:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 111:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #else
 112:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 113:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   /* Initialize blkCnt with number of samples */
 114:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   blkCnt = blockSize;
  50              		.loc 1 114 10
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 7B61     		str	r3, [r7, #20]
 115:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 116:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 117:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   while (blkCnt > 0U)
  53              		.loc 1 118 9
  54 0016 12E0     		b	.L2
ARM GAS  /tmp/ccQFFAC0.s 			page 4


  55              	.L3:
 119:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   {
 120:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* C = A[0]* B[0] + A[1]* B[1] + A[2]* B[2] + .....+ A[blockSize-1]* B[blockSize-1] */
 121:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 122:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* Calculate dot product and store result in a temporary buffer. */
 123:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** //#if defined (ARM_MATH_DSP)
 124:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** //    sum  = __SMLAD(*pSrcA++, *pSrcB++, sum);
 125:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** //#else
 126:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     sum += (q31_t) ((q15_t) *pSrcA++ * *pSrcB++);
  56              		.loc 1 126 35
  57 0018 FB68     		ldr	r3, [r7, #12]
  58 001a 5A1C     		adds	r2, r3, #1
  59 001c FA60     		str	r2, [r7, #12]
  60              		.loc 1 126 29
  61 001e 93F90030 		ldrsb	r3, [r3]
  62              		.loc 1 126 21
  63 0022 1946     		mov	r1, r3
  64              		.loc 1 126 46
  65 0024 BB68     		ldr	r3, [r7, #8]
  66 0026 5A1C     		adds	r2, r3, #1
  67 0028 BA60     		str	r2, [r7, #8]
  68              		.loc 1 126 40
  69 002a 93F90030 		ldrsb	r3, [r3]
  70              		.loc 1 126 38
  71 002e 03FB01F3 		mul	r3, r3, r1
  72              		.loc 1 126 9
  73 0032 3A69     		ldr	r2, [r7, #16]
  74 0034 1344     		add	r3, r3, r2
  75 0036 3B61     		str	r3, [r7, #16]
 127:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** //#endif
 128:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 129:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     /* Decrement loop counter */
 130:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****     blkCnt--;
  76              		.loc 1 130 11
  77 0038 7B69     		ldr	r3, [r7, #20]
  78 003a 013B     		subs	r3, r3, #1
  79 003c 7B61     		str	r3, [r7, #20]
  80              	.L2:
 118:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   {
  81              		.loc 1 118 9
  82 003e 7B69     		ldr	r3, [r7, #20]
  83 0040 002B     		cmp	r3, #0
  84 0042 E9D1     		bne	.L3
 131:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   }
 132:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** 
 133:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   /* Store result in destination buffer in 18.14 format */
 134:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c ****   *result = sum;
  85              		.loc 1 134 11
  86 0044 3B68     		ldr	r3, [r7]
  87 0046 3A69     		ldr	r2, [r7, #16]
  88 0048 1A60     		str	r2, [r3]
 135:./Libraries/CMSIS/DSP/Source/BasicMathFunctions/arm_dot_prod_q7.c **** }
  89              		.loc 1 135 1
  90 004a 00BF     		nop
  91 004c 1C37     		adds	r7, r7, #28
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccQFFAC0.s 			page 5


  94 004e BD46     		mov	sp, r7
  95              	.LCFI4:
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
  98 0050 5DF8047B 		ldr	r7, [sp], #4
  99              	.LCFI5:
 100              		.cfi_restore 7
 101              		.cfi_def_cfa_offset 0
 102 0054 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE145:
 106              		.text
 107              	.Letext0:
 108              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 109              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 110              		.file 4 "/usr/include/newlib/sys/_types.h"
 111              		.file 5 "/usr/include/newlib/sys/reent.h"
 112              		.file 6 "/usr/include/newlib/sys/lock.h"
 113              		.file 7 "/usr/include/newlib/math.h"
 114              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccQFFAC0.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_dot_prod_q7.c
     /tmp/ccQFFAC0.s:17     .text.arm_dot_prod_q7:0000000000000000 $t
     /tmp/ccQFFAC0.s:25     .text.arm_dot_prod_q7:0000000000000000 arm_dot_prod_q7

NO UNDEFINED SYMBOLS
