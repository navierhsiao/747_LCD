ARM GAS  /tmp/ccv85FnG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cos_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cos_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_cos_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_cos_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c"
   1:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Title:        arm_cos_f32.c
   4:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Description:  Fast cosine calculation for floating-point values
   5:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** #include "arm_common_tables.h"
  31:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
ARM GAS  /tmp/ccv85FnG.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /**
  33:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @ingroup groupFastMath
  34:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  */
  35:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  36:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /**
  37:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @defgroup cos Cosine
  38:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  39:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   Computes the trigonometric cosine function using a combination of table lookup
  40:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   and linear interpolation.  There are separate functions for
  41:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   Q15, Q31, and floating-point data types.
  42:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   The input to the floating-point version is in radians while the
  43:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   fixed-point Q15 and Q31 have a scaled input with the range
  44:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   [0 +0.9999] mapping to [0 2*pi).  The fixed-point range is chosen so that a
  45:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   value of 2*pi wraps around to 0.
  46:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  47:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   The implementation is based on table lookup using 256 values together with linear interpolation.
  48:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   The steps used are:
  49:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****    -# Calculation of the nearest integer table index
  50:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****    -# Compute the fractional portion (fract) of the table index.
  51:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****    -# The final result equals <code>(1.0f-fract)*a + fract*b;</code>
  52:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  53:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   where
  54:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   <pre>
  55:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****      b = Table[index];
  56:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****      c = Table[index+1];
  57:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   </pre>
  58:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  */
  59:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  60:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /**
  61:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @addtogroup cos
  62:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @{
  63:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  */
  64:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  65:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** /**
  66:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @brief         Fast approximation to the trigonometric cosine function for floating-point data.
  67:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @param[in]     x  input value in radians
  68:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   @return        cos(x)
  69:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****  */
  70:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  71:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** float32_t arm_cos_f32(
  72:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   float32_t x)
  73:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** {
  28              		.loc 1 73 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccv85FnG.s 			page 3


  43 0006 87ED010A 		vstr.32	s0, [r7, #4]
  74:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   float32_t cosVal, fract, in;                   /* Temporary input, output variables */
  75:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   uint16_t index;                                /* Index variable */
  76:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   float32_t a, b;                                /* Two nearest output values */
  77:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   int32_t n;
  78:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   float32_t findex;
  79:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  80:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* input x is in radians */
  81:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Scale input to [0 1] range from [0 2*PI] , divide input by 2*pi, add 0.25 (pi/2) to read sine 
  82:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   in = x * 0.159154943092f + 0.25f;
  44              		.loc 1 82 10
  45 000a D7ED017A 		vldr.32	s15, [r7, #4]
  46 000e 9FED3C7A 		vldr.32	s14, .L7
  47 0012 67EE877A 		vmul.f32	s15, s15, s14
  48              		.loc 1 82 6
  49 0016 B5EE007A 		vmov.f32	s14, #2.5e-1
  50 001a 77EE877A 		vadd.f32	s15, s15, s14
  51 001e C7ED067A 		vstr.32	s15, [r7, #24]
  83:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  84:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of floor value of input */
  85:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   n = (int32_t) in;
  52              		.loc 1 85 5
  53 0022 D7ED067A 		vldr.32	s15, [r7, #24]
  54 0026 FDEEE77A 		vcvt.s32.f32	s15, s15
  55 002a 17EE903A 		vmov	r3, s15	@ int
  56 002e 3B62     		str	r3, [r7, #32]
  86:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  87:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Make negative values towards -infinity */
  88:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   if (in < 0.0f)
  57              		.loc 1 88 6
  58 0030 D7ED067A 		vldr.32	s15, [r7, #24]
  59 0034 F5EEC07A 		vcmpe.f32	s15, #0
  60 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  61 003c 02D5     		bpl	.L2
  89:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   {
  90:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****     n--;
  62              		.loc 1 90 6
  63 003e 3B6A     		ldr	r3, [r7, #32]
  64 0040 013B     		subs	r3, r3, #1
  65 0042 3B62     		str	r3, [r7, #32]
  66              	.L2:
  91:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   }
  92:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Map input value to [0 1] */
  94:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   in = in - (float32_t) n;
  67              		.loc 1 94 13
  68 0044 3B6A     		ldr	r3, [r7, #32]
  69 0046 07EE903A 		vmov	s15, r3	@ int
  70 004a F8EEE77A 		vcvt.f32.s32	s15, s15
  71              		.loc 1 94 6
  72 004e 97ED067A 		vldr.32	s14, [r7, #24]
  73 0052 77EE677A 		vsub.f32	s15, s14, s15
  74 0056 C7ED067A 		vstr.32	s15, [r7, #24]
  95:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
  96:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of index of the table */
  97:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   findex = (float32_t)FAST_MATH_TABLE_SIZE * in;
  75              		.loc 1 97 10
ARM GAS  /tmp/ccv85FnG.s 			page 4


  76 005a D7ED067A 		vldr.32	s15, [r7, #24]
  77 005e 9FED297A 		vldr.32	s14, .L7+4
  78 0062 67EE877A 		vmul.f32	s15, s15, s14
  79 0066 C7ED077A 		vstr.32	s15, [r7, #28]
  98:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   index = (uint16_t)findex;
  80              		.loc 1 98 9
  81 006a D7ED077A 		vldr.32	s15, [r7, #28]
  82 006e FCEEE77A 		vcvt.u32.f32	s15, s15
  83 0072 17EE903A 		vmov	r3, s15	@ int
  84 0076 FB84     		strh	r3, [r7, #38]	@ movhi
  99:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
 100:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* when "in" is exactly 1, we need to rotate the index down to 0 */
 101:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   if (index >= FAST_MATH_TABLE_SIZE) {
  85              		.loc 1 101 6
  86 0078 FB8C     		ldrh	r3, [r7, #38]
  87 007a B3F5007F 		cmp	r3, #512
  88 007e 09D3     		bcc	.L4
 102:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****     index = 0;
  89              		.loc 1 102 11
  90 0080 0023     		movs	r3, #0
  91 0082 FB84     		strh	r3, [r7, #38]	@ movhi
 103:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****     findex -= (float32_t)FAST_MATH_TABLE_SIZE;
  92              		.loc 1 103 12
  93 0084 D7ED077A 		vldr.32	s15, [r7, #28]
  94 0088 9FED1E7A 		vldr.32	s14, .L7+4
  95 008c 77EEC77A 		vsub.f32	s15, s15, s14
  96 0090 C7ED077A 		vstr.32	s15, [r7, #28]
  97              	.L4:
 104:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   }
 105:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
 106:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* fractional value calculation */
 107:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   fract = findex - (float32_t) index;
  98              		.loc 1 107 20
  99 0094 FB8C     		ldrh	r3, [r7, #38]
 100 0096 07EE903A 		vmov	s15, r3	@ int
 101 009a F8EE677A 		vcvt.f32.u32	s15, s15
 102              		.loc 1 107 9
 103 009e 97ED077A 		vldr.32	s14, [r7, #28]
 104 00a2 77EE677A 		vsub.f32	s15, s14, s15
 105 00a6 C7ED057A 		vstr.32	s15, [r7, #20]
 108:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
 109:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Read two nearest values of input value from the cos table */
 110:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   a = sinTable_f32[index];
 106              		.loc 1 110 19
 107 00aa FB8C     		ldrh	r3, [r7, #38]
 108              		.loc 1 110 5
 109 00ac 164A     		ldr	r2, .L7+8
 110 00ae 9B00     		lsls	r3, r3, #2
 111 00b0 1344     		add	r3, r3, r2
 112 00b2 1B68     		ldr	r3, [r3]	@ float
 113 00b4 3B61     		str	r3, [r7, #16]	@ float
 111:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   b = sinTable_f32[index+1];
 114              		.loc 1 111 25
 115 00b6 FB8C     		ldrh	r3, [r7, #38]
 116 00b8 0133     		adds	r3, r3, #1
 117              		.loc 1 111 5
 118 00ba 134A     		ldr	r2, .L7+8
ARM GAS  /tmp/ccv85FnG.s 			page 5


 119 00bc 9B00     		lsls	r3, r3, #2
 120 00be 1344     		add	r3, r3, r2
 121 00c0 1B68     		ldr	r3, [r3]	@ float
 122 00c2 FB60     		str	r3, [r7, #12]	@ float
 112:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
 113:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Linear interpolation process */
 114:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   cosVal = (1.0f - fract) * a + fract * b;
 123              		.loc 1 114 18
 124 00c4 B7EE007A 		vmov.f32	s14, #1.0e+0
 125 00c8 D7ED057A 		vldr.32	s15, [r7, #20]
 126 00cc 37EE677A 		vsub.f32	s14, s14, s15
 127              		.loc 1 114 27
 128 00d0 D7ED047A 		vldr.32	s15, [r7, #16]
 129 00d4 27EE277A 		vmul.f32	s14, s14, s15
 130              		.loc 1 114 39
 131 00d8 D7ED056A 		vldr.32	s13, [r7, #20]
 132 00dc D7ED037A 		vldr.32	s15, [r7, #12]
 133 00e0 66EEA77A 		vmul.f32	s15, s13, s15
 134              		.loc 1 114 10
 135 00e4 77EE277A 		vadd.f32	s15, s14, s15
 136 00e8 C7ED027A 		vstr.32	s15, [r7, #8]
 115:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** 
 116:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   /* Return output value */
 117:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c ****   return (cosVal);
 137              		.loc 1 117 10
 138 00ec BB68     		ldr	r3, [r7, #8]	@ float
 139 00ee 07EE903A 		vmov	s15, r3
 118:./Libraries/CMSIS/DSP/Source/FastMathFunctions/arm_cos_f32.c **** }
 140              		.loc 1 118 1
 141 00f2 B0EE670A 		vmov.f32	s0, s15
 142 00f6 2C37     		adds	r7, r7, #44
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 4
 145 00f8 BD46     		mov	sp, r7
 146              	.LCFI4:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 00fa 5DF8047B 		ldr	r7, [sp], #4
 150              	.LCFI5:
 151              		.cfi_restore 7
 152              		.cfi_def_cfa_offset 0
 153 00fe 7047     		bx	lr
 154              	.L8:
 155              		.align	2
 156              	.L7:
 157 0100 83F9223E 		.word	1042479491
 158 0104 00000044 		.word	1140850688
 159 0108 00000000 		.word	sinTable_f32
 160              		.cfi_endproc
 161              	.LFE145:
 163              		.text
 164              	.Letext0:
 165              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 166              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 167              		.file 4 "/usr/include/newlib/sys/_types.h"
 168              		.file 5 "/usr/include/newlib/sys/reent.h"
 169              		.file 6 "/usr/include/newlib/sys/lock.h"
ARM GAS  /tmp/ccv85FnG.s 			page 6


 170              		.file 7 "/usr/include/newlib/math.h"
 171              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 172              		.file 9 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
ARM GAS  /tmp/ccv85FnG.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cos_f32.c
     /tmp/ccv85FnG.s:17     .text.arm_cos_f32:0000000000000000 $t
     /tmp/ccv85FnG.s:25     .text.arm_cos_f32:0000000000000000 arm_cos_f32
     /tmp/ccv85FnG.s:157    .text.arm_cos_f32:0000000000000100 $d

UNDEFINED SYMBOLS
sinTable_f32
