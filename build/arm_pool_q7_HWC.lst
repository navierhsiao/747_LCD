ARM GAS  /tmp/cc7TZ71Q.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_pool_q7_HWC.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.buffer_scale_back_q15_to_q7,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	buffer_scale_back_q15_to_q7:
  25              	.LFB149:
  26              		.file 1 "./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c"
   1:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** /*
   2:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
   4:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
   6:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  10:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  12:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  */
  18:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  19:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Title:        arm_pool_q7_HWC.c
  22:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Description:  Pooling function implementations
  23:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  24:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * $Date:        17. January 2018
  25:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  27:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  29:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * -------------------------------------------------------------------- */
  30:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  31:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #include "arm_math.h"
  32:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #include "arm_nnfunctions.h"
ARM GAS  /tmp/cc7TZ71Q.s 			page 2


  33:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  34:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #if defined (ARM_MATH_DSP)
  35:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  36:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** /**
  37:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * @brief A few utility functions used by pooling functions
  38:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *
  39:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * 
  40:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  */
  41:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  42:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** static void buffer_scale_back_q15_to_q7(q15_t * buffer, q7_t * target, uint16_t length, uint16_t sc
  43:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** {
  27              		.loc 1 43 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 1146     		mov	r1, r2
  45 000c 1A46     		mov	r2, r3
  46 000e 0B46     		mov	r3, r1	@ movhi
  47 0010 FB80     		strh	r3, [r7, #6]	@ movhi
  48 0012 1346     		mov	r3, r2	@ movhi
  49 0014 BB80     		strh	r3, [r7, #4]	@ movhi
  44:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int       i;
  45:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  46:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i = 0; i < length; i++)
  50              		.loc 1 46 12
  51 0016 0023     		movs	r3, #0
  52 0018 7B61     		str	r3, [r7, #20]
  53              		.loc 1 46 5
  54 001a 11E0     		b	.L2
  55              	.L3:
  47:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  48:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         target[i] = (q7_t) (buffer[i] / scale);
  56              		.loc 1 48 35 discriminator 3
  57 001c 7B69     		ldr	r3, [r7, #20]
  58 001e 5B00     		lsls	r3, r3, #1
  59 0020 FA68     		ldr	r2, [r7, #12]
  60 0022 1344     		add	r3, r3, r2
  61 0024 B3F90030 		ldrsh	r3, [r3]
  62 0028 1A46     		mov	r2, r3
  63              		.loc 1 48 39 discriminator 3
  64 002a BB88     		ldrh	r3, [r7, #4]
  65 002c 92FBF3F1 		sdiv	r1, r2, r3
  66              		.loc 1 48 15 discriminator 3
  67 0030 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cc7TZ71Q.s 			page 3


  68 0032 BA68     		ldr	r2, [r7, #8]
  69 0034 1344     		add	r3, r3, r2
  70              		.loc 1 48 21 discriminator 3
  71 0036 4AB2     		sxtb	r2, r1
  72              		.loc 1 48 19 discriminator 3
  73 0038 1A70     		strb	r2, [r3]
  46:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  74              		.loc 1 46 30 discriminator 3
  75 003a 7B69     		ldr	r3, [r7, #20]
  76 003c 0133     		adds	r3, r3, #1
  77 003e 7B61     		str	r3, [r7, #20]
  78              	.L2:
  46:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  79              		.loc 1 46 19 discriminator 1
  80 0040 FB88     		ldrh	r3, [r7, #6]
  46:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  81              		.loc 1 46 5 discriminator 1
  82 0042 7A69     		ldr	r2, [r7, #20]
  83 0044 9A42     		cmp	r2, r3
  84 0046 E9DB     		blt	.L3
  49:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
  50:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** }
  85              		.loc 1 50 1
  86 0048 00BF     		nop
  87 004a 00BF     		nop
  88 004c 1C37     		adds	r7, r7, #28
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 4
  91 004e BD46     		mov	sp, r7
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 13
  94              		@ sp needed
  95 0050 5DF8047B 		ldr	r7, [sp], #4
  96              	.LCFI5:
  97              		.cfi_restore 7
  98              		.cfi_def_cfa_offset 0
  99 0054 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE149:
 103              		.section	.text.compare_and_replace_if_larger_q7,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv5-d16
 110              	compare_and_replace_if_larger_q7:
 111              	.LFB150:
  51:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  52:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** static void compare_and_replace_if_larger_q7(q7_t * base,   // base data
  53:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                                              const q7_t * target,   // compare target
  54:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                                              const uint16_t length  // data length
  55:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     )
  56:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** {
 112              		.loc 1 56 1
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 40
 115              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc7TZ71Q.s 			page 4


 116              		@ link register save eliminated.
 117 0000 80B4     		push	{r7}
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 8BB0     		sub	sp, sp, #44
 122              	.LCFI7:
 123              		.cfi_def_cfa_offset 48
 124 0004 00AF     		add	r7, sp, #0
 125              	.LCFI8:
 126              		.cfi_def_cfa_register 7
 127 0006 F860     		str	r0, [r7, #12]
 128 0008 B960     		str	r1, [r7, #8]
 129 000a 1346     		mov	r3, r2
 130 000c FB80     		strh	r3, [r7, #6]	@ movhi
  57:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q7_t     *pIn = base;
 131              		.loc 1 57 15
 132 000e FB68     		ldr	r3, [r7, #12]
 133 0010 3B62     		str	r3, [r7, #32]
  58:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     const q7_t     *pCom = target;
 134              		.loc 1 58 21
 135 0012 BB68     		ldr	r3, [r7, #8]
 136 0014 FB61     		str	r3, [r7, #28]
  59:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     union arm_nnword in;
  60:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     union arm_nnword com;
  61:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     uint16_t  cnt = length >> 2;
 137              		.loc 1 61 15
 138 0016 FB88     		ldrh	r3, [r7, #6]
 139 0018 9B08     		lsrs	r3, r3, #2
 140 001a FB84     		strh	r3, [r7, #38]	@ movhi
  62:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  63:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     while (cnt > 0u)
 141              		.loc 1 63 11
 142 001c 39E0     		b	.L5
 143              	.L10:
  64:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  65:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         in.word = *__SIMD32(pIn);
 144              		.loc 1 65 20
 145 001e 07F12003 		add	r3, r7, #32
 146 0022 1B68     		ldr	r3, [r3]
 147              		.loc 1 65 19
 148 0024 1B68     		ldr	r3, [r3]
 149              		.loc 1 65 17
 150 0026 BB61     		str	r3, [r7, #24]
  66:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         com.word = *__SIMD32(pCom)++;
 151              		.loc 1 66 21
 152 0028 07F11C02 		add	r2, r7, #28
 153 002c 1368     		ldr	r3, [r2]
 154              		.loc 1 66 35
 155 002e 191D     		adds	r1, r3, #4
 156 0030 1160     		str	r1, [r2]
 157              		.loc 1 66 20
 158 0032 1B68     		ldr	r3, [r3]
 159              		.loc 1 66 18
 160 0034 7B61     		str	r3, [r7, #20]
  67:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  68:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         // if version
ARM GAS  /tmp/cc7TZ71Q.s 			page 5


  69:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (com.bytes[0] > in.bytes[0])
 161              		.loc 1 69 22
 162 0036 97F91420 		ldrsb	r2, [r7, #20]
 163              		.loc 1 69 36
 164 003a 97F91830 		ldrsb	r3, [r7, #24]
 165              		.loc 1 69 12
 166 003e 9A42     		cmp	r2, r3
 167 0040 02DD     		ble	.L6
  70:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             in.bytes[0] = com.bytes[0];
 168              		.loc 1 70 36
 169 0042 97F91430 		ldrsb	r3, [r7, #20]
 170              		.loc 1 70 25
 171 0046 3B76     		strb	r3, [r7, #24]
 172              	.L6:
  71:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (com.bytes[1] > in.bytes[1])
 173              		.loc 1 71 22
 174 0048 97F91520 		ldrsb	r2, [r7, #21]
 175              		.loc 1 71 36
 176 004c 97F91930 		ldrsb	r3, [r7, #25]
 177              		.loc 1 71 12
 178 0050 9A42     		cmp	r2, r3
 179 0052 02DD     		ble	.L7
  72:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             in.bytes[1] = com.bytes[1];
 180              		.loc 1 72 36
 181 0054 97F91530 		ldrsb	r3, [r7, #21]
 182              		.loc 1 72 25
 183 0058 7B76     		strb	r3, [r7, #25]
 184              	.L7:
  73:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (com.bytes[2] > in.bytes[2])
 185              		.loc 1 73 22
 186 005a 97F91620 		ldrsb	r2, [r7, #22]
 187              		.loc 1 73 36
 188 005e 97F91A30 		ldrsb	r3, [r7, #26]
 189              		.loc 1 73 12
 190 0062 9A42     		cmp	r2, r3
 191 0064 02DD     		ble	.L8
  74:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             in.bytes[2] = com.bytes[2];
 192              		.loc 1 74 36
 193 0066 97F91630 		ldrsb	r3, [r7, #22]
 194              		.loc 1 74 25
 195 006a BB76     		strb	r3, [r7, #26]
 196              	.L8:
  75:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (com.bytes[3] > in.bytes[3])
 197              		.loc 1 75 22
 198 006c 97F91720 		ldrsb	r2, [r7, #23]
 199              		.loc 1 75 36
 200 0070 97F91B30 		ldrsb	r3, [r7, #27]
 201              		.loc 1 75 12
 202 0074 9A42     		cmp	r2, r3
 203 0076 02DD     		ble	.L9
  76:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             in.bytes[3] = com.bytes[3];
 204              		.loc 1 76 36
 205 0078 97F91730 		ldrsb	r3, [r7, #23]
 206              		.loc 1 76 25
 207 007c FB76     		strb	r3, [r7, #27]
 208              	.L9:
  77:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 6


  78:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         *__SIMD32(pIn)++ = in.word;
 209              		.loc 1 78 10
 210 007e 07F12002 		add	r2, r7, #32
 211 0082 1368     		ldr	r3, [r2]
 212              		.loc 1 78 23
 213 0084 191D     		adds	r1, r3, #4
 214 0086 1160     		str	r1, [r2]
 215              		.loc 1 78 30
 216 0088 BA69     		ldr	r2, [r7, #24]
 217              		.loc 1 78 26
 218 008a 1A60     		str	r2, [r3]
  79:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  80:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         cnt--;
 219              		.loc 1 80 12
 220 008c FB8C     		ldrh	r3, [r7, #38]
 221 008e 013B     		subs	r3, r3, #1
 222 0090 FB84     		strh	r3, [r7, #38]	@ movhi
 223              	.L5:
  63:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 224              		.loc 1 63 11
 225 0092 FB8C     		ldrh	r3, [r7, #38]
 226 0094 002B     		cmp	r3, #0
 227 0096 C2D1     		bne	.L10
  81:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
  82:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  83:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     cnt = length & 0x3;
 228              		.loc 1 83 9
 229 0098 FB88     		ldrh	r3, [r7, #6]	@ movhi
 230 009a 03F00303 		and	r3, r3, #3
 231 009e FB84     		strh	r3, [r7, #38]	@ movhi
  84:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     while (cnt > 0u)
 232              		.loc 1 84 11
 233 00a0 15E0     		b	.L11
 234              	.L13:
  85:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
  86:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       if (*pCom > *pIn)
 235              		.loc 1 86 11
 236 00a2 FB69     		ldr	r3, [r7, #28]
 237 00a4 93F90020 		ldrsb	r2, [r3]
 238              		.loc 1 86 17
 239 00a8 3B6A     		ldr	r3, [r7, #32]
 240 00aa 93F90030 		ldrsb	r3, [r3]
 241              		.loc 1 86 10
 242 00ae 9A42     		cmp	r2, r3
 243 00b0 04DD     		ble	.L12
  87:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       {
  88:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         *pIn = *pCom;
 244              		.loc 1 88 16
 245 00b2 FA69     		ldr	r2, [r7, #28]
 246              		.loc 1 88 9
 247 00b4 3B6A     		ldr	r3, [r7, #32]
 248              		.loc 1 88 16
 249 00b6 92F90020 		ldrsb	r2, [r2]
 250              		.loc 1 88 14
 251 00ba 1A70     		strb	r2, [r3]
 252              	.L12:
  89:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       }
ARM GAS  /tmp/cc7TZ71Q.s 			page 7


  90:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       pIn++;
 253              		.loc 1 90 10
 254 00bc 3B6A     		ldr	r3, [r7, #32]
 255 00be 0133     		adds	r3, r3, #1
 256 00c0 3B62     		str	r3, [r7, #32]
  91:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       pCom++;
 257              		.loc 1 91 11
 258 00c2 FB69     		ldr	r3, [r7, #28]
 259 00c4 0133     		adds	r3, r3, #1
 260 00c6 FB61     		str	r3, [r7, #28]
  92:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****       cnt--;
 261              		.loc 1 92 10
 262 00c8 FB8C     		ldrh	r3, [r7, #38]
 263 00ca 013B     		subs	r3, r3, #1
 264 00cc FB84     		strh	r3, [r7, #38]	@ movhi
 265              	.L11:
  84:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 266              		.loc 1 84 11
 267 00ce FB8C     		ldrh	r3, [r7, #38]
 268 00d0 002B     		cmp	r3, #0
 269 00d2 E6D1     		bne	.L13
  93:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
  94:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** }
 270              		.loc 1 94 1
 271 00d4 00BF     		nop
 272 00d6 00BF     		nop
 273 00d8 2C37     		adds	r7, r7, #44
 274              	.LCFI9:
 275              		.cfi_def_cfa_offset 4
 276 00da BD46     		mov	sp, r7
 277              	.LCFI10:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 00dc 5DF8047B 		ldr	r7, [sp], #4
 281              	.LCFI11:
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
 284 00e0 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE150:
 288              		.section	.text.accumulate_q7_to_q15,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	accumulate_q7_to_q15:
 296              	.LFB151:
  95:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
  96:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** static void accumulate_q7_to_q15(q15_t * base, q7_t * target, const uint16_t length)
  97:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** {
 297              		.loc 1 97 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 104
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc7TZ71Q.s 			page 8


 303              	.LCFI12:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 9BB0     		sub	sp, sp, #108
 307              	.LCFI13:
 308              		.cfi_def_cfa_offset 112
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI14:
 311              		.cfi_def_cfa_register 7
 312 0006 F860     		str	r0, [r7, #12]
 313 0008 B960     		str	r1, [r7, #8]
 314 000a 1346     		mov	r3, r2
 315 000c FB80     		strh	r3, [r7, #6]	@ movhi
  98:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q15_t    *pCnt = base;
 316              		.loc 1 98 15
 317 000e FB68     		ldr	r3, [r7, #12]
 318 0010 BB61     		str	r3, [r7, #24]
  99:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q7_t     *pV = target;
 319              		.loc 1 99 15
 320 0012 BB68     		ldr	r3, [r7, #8]
 321 0014 7B61     		str	r3, [r7, #20]
 100:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q31_t     v1, v2, vo1, vo2;
 101:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     uint16_t  cnt = length >> 2;
 322              		.loc 1 101 15
 323 0016 FB88     		ldrh	r3, [r7, #6]
 324 0018 9B08     		lsrs	r3, r3, #2
 325 001a A7F86630 		strh	r3, [r7, #102]	@ movhi
 102:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q31_t     in;
 103:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 104:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     while (cnt > 0u)
 326              		.loc 1 104 11
 327 001e 64E0     		b	.L15
 328              	.L22:
 329              	.LBB13:
 105:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 106:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q31_t     value = *__SIMD32(pV)++;
 330              		.loc 1 106 28
 331 0020 07F11402 		add	r2, r7, #20
 332 0024 1368     		ldr	r3, [r2]
 333              		.loc 1 106 40
 334 0026 191D     		adds	r1, r3, #4
 335 0028 1160     		str	r1, [r2]
 336              		.loc 1 106 19
 337 002a 1B68     		ldr	r3, [r3]
 338 002c 3B66     		str	r3, [r7, #96]
 107:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         v1 = __SXTB16(__ROR(value, 8));
 339              		.loc 1 107 14
 340 002e 3B6E     		ldr	r3, [r7, #96]
 341 0030 3B62     		str	r3, [r7, #32]
 342 0032 0823     		movs	r3, #8
 343 0034 FB61     		str	r3, [r7, #28]
 344              	.LBB14:
 345              	.LBB15:
 346              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/cc7TZ71Q.s 			page 9


   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc7TZ71Q.s 			page 10


  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
ARM GAS  /tmp/cc7TZ71Q.s 			page 11


 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
ARM GAS  /tmp/cc7TZ71Q.s 			page 12


 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
ARM GAS  /tmp/cc7TZ71Q.s 			page 13


 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc7TZ71Q.s 			page 14


 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc7TZ71Q.s 			page 15


 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 16


 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc7TZ71Q.s 			page 17


 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc7TZ71Q.s 			page 18


 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc7TZ71Q.s 			page 19


 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/cc7TZ71Q.s 			page 20


 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc7TZ71Q.s 			page 21


 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
ARM GAS  /tmp/cc7TZ71Q.s 			page 22


 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc7TZ71Q.s 			page 23


 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc7TZ71Q.s 			page 24


 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  /tmp/cc7TZ71Q.s 			page 25


 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc7TZ71Q.s 			page 26


 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 347              		.loc 2 1023 7
 348 0036 FB69     		ldr	r3, [r7, #28]
 349 0038 03F01F03 		and	r3, r3, #31
 350 003c FB61     		str	r3, [r7, #28]
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 351              		.loc 2 1024 6
ARM GAS  /tmp/cc7TZ71Q.s 			page 27


 352 003e FB69     		ldr	r3, [r7, #28]
 353 0040 002B     		cmp	r3, #0
 354 0042 01D1     		bne	.L16
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
 355              		.loc 2 1026 12
 356 0044 3B6A     		ldr	r3, [r7, #32]
 357 0046 03E0     		b	.L17
 358              	.L16:
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 359              		.loc 2 1028 23
 360 0048 3A6A     		ldr	r2, [r7, #32]
 361 004a FB69     		ldr	r3, [r7, #28]
 362 004c 62FA03F3 		ror	r3, r2, r3
 363              	.L17:
 364 0050 BB62     		str	r3, [r7, #40]
 365              	.LBE15:
 366              	.LBE14:
 367              	.LBB16:
 368              	.LBB17:
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
ARM GAS  /tmp/cc7TZ71Q.s 			page 28


1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 29


1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
ARM GAS  /tmp/cc7TZ71Q.s 			page 30


1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc7TZ71Q.s 			page 31


1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
ARM GAS  /tmp/cc7TZ71Q.s 			page 32


1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
ARM GAS  /tmp/cc7TZ71Q.s 			page 33


1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc7TZ71Q.s 			page 34


1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
ARM GAS  /tmp/cc7TZ71Q.s 			page 35


1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/cc7TZ71Q.s 			page 36


1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/cc7TZ71Q.s 			page 37


1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc7TZ71Q.s 			page 38


1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc7TZ71Q.s 			page 39


1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc7TZ71Q.s 			page 40


1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc7TZ71Q.s 			page 41


1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 42


1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
ARM GAS  /tmp/cc7TZ71Q.s 			page 43


1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
 369              		.loc 2 1961 3
 370 0052 BB6A     		ldr	r3, [r7, #40]
 371              		.syntax unified
 372              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 373 0054 2FFA83F3 		sxtb16 r3, r3
 374              	@ 0 "" 2
 375              		.thumb
 376              		.syntax unified
 377 0058 7B62     		str	r3, [r7, #36]
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 378              		.loc 2 1962 9
 379 005a 7B6A     		ldr	r3, [r7, #36]
 380              	.LBE17:
 381              	.LBE16:
 382              		.loc 1 107 12
ARM GAS  /tmp/cc7TZ71Q.s 			page 44


 383 005c FB65     		str	r3, [r7, #92]
 108:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         v2 = __SXTB16(value);
 384              		.loc 1 108 14
 385 005e 3B6E     		ldr	r3, [r7, #96]
 386 0060 3B63     		str	r3, [r7, #48]
 387              	.LBB18:
 388              	.LBB19:
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389              		.loc 2 1961 3
 390 0062 3B6B     		ldr	r3, [r7, #48]
 391              		.syntax unified
 392              	@ 1961 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 393 0064 2FFA83F3 		sxtb16 r3, r3
 394              	@ 0 "" 2
 395              		.thumb
 396              		.syntax unified
 397 0068 FB62     		str	r3, [r7, #44]
 398              		.loc 2 1962 9
 399 006a FB6A     		ldr	r3, [r7, #44]
 400              	.LBE19:
 401              	.LBE18:
 402              		.loc 1 108 12
 403 006c BB65     		str	r3, [r7, #88]
 109:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #ifndef ARM_MATH_BIG_ENDIAN
 110:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 111:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         vo2 = __PKHTB(v1, v2, 16);
 404              		.loc 1 111 15
 405 006e FA6D     		ldr	r2, [r7, #92]
 406 0070 334B     		ldr	r3, .L25
 407 0072 1340     		ands	r3, r3, r2
 408 0074 BA6D     		ldr	r2, [r7, #88]
 409 0076 120C     		lsrs	r2, r2, #16
 410 0078 1343     		orrs	r3, r3, r2
 411              		.loc 1 111 13
 412 007a 7B65     		str	r3, [r7, #84]
 112:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         vo1 = __PKHBT(v2, v1, 16);
 413              		.loc 1 112 15
 414 007c BB6D     		ldr	r3, [r7, #88]
 415 007e 9AB2     		uxth	r2, r3
 416 0080 FB6D     		ldr	r3, [r7, #92]
 417 0082 1B04     		lsls	r3, r3, #16
 418 0084 1343     		orrs	r3, r3, r2
 419              		.loc 1 112 13
 420 0086 3B65     		str	r3, [r7, #80]
 113:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 114:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #else
 115:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 116:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         vo1 = __PKHTB(v1, v2, 16);
 117:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         vo2 = __PKHBT(v2, v1, 16);
 118:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 119:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #endif
 120:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 121:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         in = *__SIMD32(pCnt);
 421              		.loc 1 121 15
 422 0088 07F11803 		add	r3, r7, #24
 423 008c 1B68     		ldr	r3, [r3]
 424              		.loc 1 121 12
ARM GAS  /tmp/cc7TZ71Q.s 			page 45


 425 008e 1B68     		ldr	r3, [r3]
 426 0090 FB64     		str	r3, [r7, #76]
 122:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         *__SIMD32(pCnt)++ = __QADD16(vo1, in);
 427              		.loc 1 122 29
 428 0092 3A6D     		ldr	r2, [r7, #80]
 429 0094 FB6C     		ldr	r3, [r7, #76]
 430 0096 FA63     		str	r2, [r7, #60]
 431 0098 BB63     		str	r3, [r7, #56]
 432              	.LBB20:
 433              	.LBB21:
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 434              		.loc 2 1731 3
 435 009a FB6B     		ldr	r3, [r7, #60]
 436 009c BA6B     		ldr	r2, [r7, #56]
 437              		.syntax unified
 438              	@ 1731 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 439 009e 93FA12F3 		qadd16 r3, r3, r2
 440              	@ 0 "" 2
 441              		.thumb
 442              		.syntax unified
 443 00a2 7B63     		str	r3, [r7, #52]
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 444              		.loc 2 1732 9
 445 00a4 786B     		ldr	r0, [r7, #52]
 446              	.LBE21:
 447              	.LBE20:
 448              		.loc 1 122 10
 449 00a6 07F11802 		add	r2, r7, #24
 450 00aa 1368     		ldr	r3, [r2]
 451              		.loc 1 122 24
 452 00ac 191D     		adds	r1, r3, #4
 453 00ae 1160     		str	r1, [r2]
 454              		.loc 1 122 29
 455 00b0 0246     		mov	r2, r0
 456              		.loc 1 122 27
 457 00b2 1A60     		str	r2, [r3]
 123:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 124:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         in = *__SIMD32(pCnt);
 458              		.loc 1 124 15
 459 00b4 07F11803 		add	r3, r7, #24
 460 00b8 1B68     		ldr	r3, [r3]
 461              		.loc 1 124 12
 462 00ba 1B68     		ldr	r3, [r3]
 463 00bc FB64     		str	r3, [r7, #76]
 125:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         *__SIMD32(pCnt)++ = __QADD16(vo2, in);
 464              		.loc 1 125 29
 465 00be 7A6D     		ldr	r2, [r7, #84]
 466 00c0 FB6C     		ldr	r3, [r7, #76]
 467 00c2 BA64     		str	r2, [r7, #72]
 468 00c4 7B64     		str	r3, [r7, #68]
 469              	.LBB22:
 470              	.LBB23:
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 471              		.loc 2 1731 3
 472 00c6 BB6C     		ldr	r3, [r7, #72]
 473 00c8 7A6C     		ldr	r2, [r7, #68]
 474              		.syntax unified
ARM GAS  /tmp/cc7TZ71Q.s 			page 46


 475              	@ 1731 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 476 00ca 93FA12F3 		qadd16 r3, r3, r2
 477              	@ 0 "" 2
 478              		.thumb
 479              		.syntax unified
 480 00ce 3B64     		str	r3, [r7, #64]
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 481              		.loc 2 1732 9
 482 00d0 386C     		ldr	r0, [r7, #64]
 483              	.LBE23:
 484              	.LBE22:
 485              		.loc 1 125 10
 486 00d2 07F11802 		add	r2, r7, #24
 487 00d6 1368     		ldr	r3, [r2]
 488              		.loc 1 125 24
 489 00d8 191D     		adds	r1, r3, #4
 490 00da 1160     		str	r1, [r2]
 491              		.loc 1 125 29
 492 00dc 0246     		mov	r2, r0
 493              		.loc 1 125 27
 494 00de 1A60     		str	r2, [r3]
 126:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 127:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         cnt--;
 495              		.loc 1 127 12
 496 00e0 B7F86630 		ldrh	r3, [r7, #102]
 497 00e4 013B     		subs	r3, r3, #1
 498 00e6 A7F86630 		strh	r3, [r7, #102]	@ movhi
 499              	.L15:
 500              	.LBE13:
 104:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 501              		.loc 1 104 11
 502 00ea B7F86630 		ldrh	r3, [r7, #102]
 503 00ee 002B     		cmp	r3, #0
 504 00f0 96D1     		bne	.L22
 128:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 129:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     cnt = length & 0x3;
 505              		.loc 1 129 9
 506 00f2 FB88     		ldrh	r3, [r7, #6]	@ movhi
 507 00f4 03F00303 		and	r3, r3, #3
 508 00f8 A7F86630 		strh	r3, [r7, #102]	@ movhi
 130:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     while (cnt > 0u)
 509              		.loc 1 130 11
 510 00fc 14E0     		b	.L23
 511              	.L24:
 131:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 132:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         *pCnt++ += *pV++;
 512              		.loc 1 132 23
 513 00fe 7B69     		ldr	r3, [r7, #20]
 514 0100 5A1C     		adds	r2, r3, #1
 515 0102 7A61     		str	r2, [r7, #20]
 516              		.loc 1 132 20
 517 0104 93F90000 		ldrsb	r0, [r3]
 518              		.loc 1 132 14
 519 0108 BB69     		ldr	r3, [r7, #24]
 520 010a 9A1C     		adds	r2, r3, #2
 521 010c BA61     		str	r2, [r7, #24]
 522              		.loc 1 132 17
ARM GAS  /tmp/cc7TZ71Q.s 			page 47


 523 010e B3F90020 		ldrsh	r2, [r3]
 524 0112 91B2     		uxth	r1, r2
 525              		.loc 1 132 20
 526 0114 82B2     		uxth	r2, r0
 527              		.loc 1 132 17
 528 0116 0A44     		add	r2, r2, r1
 529 0118 92B2     		uxth	r2, r2
 530 011a 12B2     		sxth	r2, r2
 531 011c 1A80     		strh	r2, [r3]	@ movhi
 133:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         cnt--;
 532              		.loc 1 133 12
 533 011e B7F86630 		ldrh	r3, [r7, #102]
 534 0122 013B     		subs	r3, r3, #1
 535 0124 A7F86630 		strh	r3, [r7, #102]	@ movhi
 536              	.L23:
 130:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     while (cnt > 0u)
 537              		.loc 1 130 11
 538 0128 B7F86630 		ldrh	r3, [r7, #102]
 539 012c 002B     		cmp	r3, #0
 540 012e E6D1     		bne	.L24
 134:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 135:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** }
 541              		.loc 1 135 1
 542 0130 00BF     		nop
 543 0132 00BF     		nop
 544 0134 6C37     		adds	r7, r7, #108
 545              	.LCFI15:
 546              		.cfi_def_cfa_offset 4
 547 0136 BD46     		mov	sp, r7
 548              	.LCFI16:
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 0138 5DF8047B 		ldr	r7, [sp], #4
 552              	.LCFI17:
 553              		.cfi_restore 7
 554              		.cfi_def_cfa_offset 0
 555 013c 7047     		bx	lr
 556              	.L26:
 557 013e 00BF     		.align	2
 558              	.L25:
 559 0140 0000FFFF 		.word	-65536
 560              		.cfi_endproc
 561              	.LFE151:
 563              		.section	.text.arm_maxpool_q7_HWC,"ax",%progbits
 564              		.align	1
 565              		.global	arm_maxpool_q7_HWC
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv5-d16
 571              	arm_maxpool_q7_HWC:
 572              	.LFB152:
 136:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 137:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #endif                          // ARM_MATH_DSP
 138:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 139:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** /**
 140:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  *  @ingroup groupNN
ARM GAS  /tmp/cc7TZ71Q.s 			page 48


 141:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  */
 142:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 143:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** /**
 144:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * @addtogroup Pooling
 145:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  * @{
 146:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****  */
 147:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 148:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****   /**
 149:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @brief Q7 max pooling function
 150:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in, out]  Im_in       pointer to input tensor
 151:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_im_in   input tensor dimention
 152:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       ch_im_in    number of input tensor channels
 153:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_kernel  filter kernel size
 154:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       padding     padding sizes
 155:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       stride      convolution stride
 156:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_im_out  output tensor dimension
 157:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in,out]   bufferA     pointer to buffer space for input
 158:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in,out]   Im_out      pointer to output tensor
 159:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @return none.
 160:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 161:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @details
 162:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 163:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * <b>Buffer size:</b>
 164:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 165:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * bufferA size:  0
 166:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 167:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * The pooling function is implemented as split x-pooling then
 168:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * y-pooling.
 169:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 170:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * This pooling function is input-destructive. Input data is undefined
 171:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * after calling this function.
 172:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 173:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    */
 174:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 175:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** void
 176:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** arm_maxpool_q7_HWC(q7_t * Im_in,
 177:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t dim_im_in,
 178:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t ch_im_in,
 179:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t dim_kernel,
 180:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t padding,
 181:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t stride, const uint16_t dim_im_out, q7_t * bufferA, q7_t * Im_out)
 182:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** {
 573              		.loc 1 182 1
 574              		.cfi_startproc
 575              		@ args = 20, pretend = 0, frame = 48
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI18:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 8CB0     		sub	sp, sp, #48
 583              	.LCFI19:
 584              		.cfi_def_cfa_offset 56
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI20:
 587              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc7TZ71Q.s 			page 49


 588 0006 F860     		str	r0, [r7, #12]
 589 0008 0846     		mov	r0, r1
 590 000a 1146     		mov	r1, r2
 591 000c 1A46     		mov	r2, r3
 592 000e 0346     		mov	r3, r0	@ movhi
 593 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 594 0012 0B46     		mov	r3, r1	@ movhi
 595 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 596 0016 1346     		mov	r3, r2	@ movhi
 597 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 183:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 184:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #if defined (ARM_MATH_DSP)
 185:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* Run the following code for Cortex-M4 and Cortex-M7 */
 186:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 187:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   i_x, i_y;
 188:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 189:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* first does the pooling along x axis */
 190:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_y = 0; i_y < dim_im_in; i_y++)
 598              		.loc 1 190 14
 599 001a 0023     		movs	r3, #0
 600 001c BB85     		strh	r3, [r7, #44]	@ movhi
 601              		.loc 1 190 5
 602 001e 8EE0     		b	.L28
 603              	.L37:
 191:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 192:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 193:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (i_x = 0; i_x < dim_im_out; i_x++)
 604              		.loc 1 193 18
 605 0020 0023     		movs	r3, #0
 606 0022 FB85     		strh	r3, [r7, #46]	@ movhi
 607              		.loc 1 193 9
 608 0024 7EE0     		b	.L29
 609              	.L36:
 610              	.LBB24:
 194:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 195:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* for each output pixel */
 196:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *target = Im_in + (i_y * dim_im_in + i_x) * ch_im_in;
 611              		.loc 1 196 45
 612 0026 B7F92C30 		ldrsh	r3, [r7, #44]
 613 002a 7A89     		ldrh	r2, [r7, #10]
 614 002c 02FB03F2 		mul	r2, r2, r3
 615              		.loc 1 196 57
 616 0030 B7F92E30 		ldrsh	r3, [r7, #46]
 617 0034 1344     		add	r3, r3, r2
 618              		.loc 1 196 64
 619 0036 3A89     		ldrh	r2, [r7, #8]
 620 0038 02FB03F3 		mul	r3, r2, r3
 621 003c 1A46     		mov	r2, r3
 622              		.loc 1 196 23
 623 003e FB68     		ldr	r3, [r7, #12]
 624 0040 1344     		add	r3, r3, r2
 625 0042 7B61     		str	r3, [r7, #20]
 197:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *win_start;
 198:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *win_stop;
 199:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             if (i_x * stride - padding < 0)
 626              		.loc 1 199 21
 627 0044 B7F92E30 		ldrsh	r3, [r7, #46]
ARM GAS  /tmp/cc7TZ71Q.s 			page 50


 628 0048 BA8F     		ldrh	r2, [r7, #60]
 629 004a 02FB03F2 		mul	r2, r2, r3
 630              		.loc 1 199 30
 631 004e 3B8F     		ldrh	r3, [r7, #56]
 632 0050 D31A     		subs	r3, r2, r3
 633              		.loc 1 199 16
 634 0052 002B     		cmp	r3, #0
 635 0054 02DA     		bge	.L30
 200:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 201:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_start = target;
 636              		.loc 1 201 27
 637 0056 7B69     		ldr	r3, [r7, #20]
 638 0058 BB62     		str	r3, [r7, #40]
 639 005a 13E0     		b	.L31
 640              	.L30:
 202:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             } else
 203:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 204:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_start = Im_in + (i_y * dim_im_in + i_x * stride - padding) * ch_im_in;
 641              		.loc 1 204 42
 642 005c B7F92C30 		ldrsh	r3, [r7, #44]
 643 0060 7A89     		ldrh	r2, [r7, #10]
 644 0062 02FB03F2 		mul	r2, r2, r3
 645              		.loc 1 204 60
 646 0066 B7F92E30 		ldrsh	r3, [r7, #46]
 647 006a B98F     		ldrh	r1, [r7, #60]
 648 006c 01FB03F3 		mul	r3, r1, r3
 649              		.loc 1 204 54
 650 0070 1A44     		add	r2, r2, r3
 651              		.loc 1 204 69
 652 0072 3B8F     		ldrh	r3, [r7, #56]
 653 0074 D31A     		subs	r3, r2, r3
 654              		.loc 1 204 80
 655 0076 3A89     		ldrh	r2, [r7, #8]
 656 0078 02FB03F3 		mul	r3, r2, r3
 657 007c 1A46     		mov	r2, r3
 658              		.loc 1 204 27
 659 007e FB68     		ldr	r3, [r7, #12]
 660 0080 1344     		add	r3, r3, r2
 661 0082 BB62     		str	r3, [r7, #40]
 662              	.L31:
 205:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 206:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 207:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             if (i_x * stride - padding + dim_kernel >= dim_im_in)
 663              		.loc 1 207 21
 664 0084 B7F92E30 		ldrsh	r3, [r7, #46]
 665 0088 BA8F     		ldrh	r2, [r7, #60]
 666 008a 02FB03F2 		mul	r2, r2, r3
 667              		.loc 1 207 30
 668 008e 3B8F     		ldrh	r3, [r7, #56]
 669 0090 D21A     		subs	r2, r2, r3
 670              		.loc 1 207 40
 671 0092 FB88     		ldrh	r3, [r7, #6]
 672 0094 1A44     		add	r2, r2, r3
 673              		.loc 1 207 53
 674 0096 7B89     		ldrh	r3, [r7, #10]
 675              		.loc 1 207 16
 676 0098 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc7TZ71Q.s 			page 51


 677 009a 0EDB     		blt	.L32
 208:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 209:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_stop = Im_in + (i_y * dim_im_in + dim_im_in) * ch_im_in;
 678              		.loc 1 209 41
 679 009c B7F92C30 		ldrsh	r3, [r7, #44]
 680 00a0 7A89     		ldrh	r2, [r7, #10]
 681 00a2 02FB03F2 		mul	r2, r2, r3
 682              		.loc 1 209 53
 683 00a6 7B89     		ldrh	r3, [r7, #10]
 684 00a8 1344     		add	r3, r3, r2
 685              		.loc 1 209 66
 686 00aa 3A89     		ldrh	r2, [r7, #8]
 687 00ac 02FB03F3 		mul	r3, r2, r3
 688 00b0 1A46     		mov	r2, r3
 689              		.loc 1 209 26
 690 00b2 FB68     		ldr	r3, [r7, #12]
 691 00b4 1344     		add	r3, r3, r2
 692 00b6 7B62     		str	r3, [r7, #36]
 693 00b8 15E0     		b	.L33
 694              	.L32:
 210:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             } else
 211:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 212:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_stop = Im_in + (i_y * dim_im_in + i_x * stride - padding + dim_kernel) * ch_im_
 695              		.loc 1 212 41
 696 00ba B7F92C30 		ldrsh	r3, [r7, #44]
 697 00be 7A89     		ldrh	r2, [r7, #10]
 698 00c0 02FB03F2 		mul	r2, r2, r3
 699              		.loc 1 212 59
 700 00c4 B7F92E30 		ldrsh	r3, [r7, #46]
 701 00c8 B98F     		ldrh	r1, [r7, #60]
 702 00ca 01FB03F3 		mul	r3, r1, r3
 703              		.loc 1 212 53
 704 00ce 1A44     		add	r2, r2, r3
 705              		.loc 1 212 68
 706 00d0 3B8F     		ldrh	r3, [r7, #56]
 707 00d2 D21A     		subs	r2, r2, r3
 708              		.loc 1 212 78
 709 00d4 FB88     		ldrh	r3, [r7, #6]
 710 00d6 1344     		add	r3, r3, r2
 711              		.loc 1 212 92
 712 00d8 3A89     		ldrh	r2, [r7, #8]
 713 00da 02FB03F3 		mul	r3, r2, r3
 714 00de 1A46     		mov	r2, r3
 715              		.loc 1 212 26
 716 00e0 FB68     		ldr	r3, [r7, #12]
 717 00e2 1344     		add	r3, r3, r2
 718 00e4 7B62     		str	r3, [r7, #36]
 719              	.L33:
 213:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 214:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 215:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* first step is to copy over initial data */
 216:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* arm_copy_q7(win_start, target, ch_im_in); */
 217:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             memmove(target, win_start, ch_im_in);
 720              		.loc 1 217 13
 721 00e6 3B89     		ldrh	r3, [r7, #8]
 722 00e8 1A46     		mov	r2, r3
 723 00ea B96A     		ldr	r1, [r7, #40]
ARM GAS  /tmp/cc7TZ71Q.s 			page 52


 724 00ec 7869     		ldr	r0, [r7, #20]
 725 00ee FFF7FEFF 		bl	memmove
 218:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 219:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* start the max operation from the second part */
 220:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             win_start += ch_im_in;
 726              		.loc 1 220 23
 727 00f2 3B89     		ldrh	r3, [r7, #8]
 728 00f4 BA6A     		ldr	r2, [r7, #40]
 729 00f6 1344     		add	r3, r3, r2
 730 00f8 BB62     		str	r3, [r7, #40]
 221:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 731              		.loc 1 221 13
 732 00fa 09E0     		b	.L34
 733              	.L35:
 222:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 223:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 compare_and_replace_if_larger_q7(target, win_start, ch_im_in);
 734              		.loc 1 223 17 discriminator 2
 735 00fc 3B89     		ldrh	r3, [r7, #8]
 736 00fe 1A46     		mov	r2, r3
 737 0100 B96A     		ldr	r1, [r7, #40]
 738 0102 7869     		ldr	r0, [r7, #20]
 739 0104 FFF7FEFF 		bl	compare_and_replace_if_larger_q7
 221:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 740              		.loc 1 221 52 discriminator 2
 741 0108 3B89     		ldrh	r3, [r7, #8]
 742 010a BA6A     		ldr	r2, [r7, #40]
 743 010c 1344     		add	r3, r3, r2
 744 010e BB62     		str	r3, [r7, #40]
 745              	.L34:
 221:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 746              		.loc 1 221 13 discriminator 1
 747 0110 BA6A     		ldr	r2, [r7, #40]
 748 0112 7B6A     		ldr	r3, [r7, #36]
 749 0114 9A42     		cmp	r2, r3
 750 0116 F1D3     		bcc	.L35
 751              	.LBE24:
 193:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 752              		.loc 1 193 44 discriminator 2
 753 0118 B7F92E30 		ldrsh	r3, [r7, #46]
 754 011c 9BB2     		uxth	r3, r3
 755 011e 0133     		adds	r3, r3, #1
 756 0120 9BB2     		uxth	r3, r3
 757 0122 FB85     		strh	r3, [r7, #46]	@ movhi
 758              	.L29:
 193:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 759              		.loc 1 193 27 discriminator 1
 760 0124 B7F92E20 		ldrsh	r2, [r7, #46]
 761 0128 B7F84030 		ldrh	r3, [r7, #64]
 193:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 762              		.loc 1 193 9 discriminator 1
 763 012c 9A42     		cmp	r2, r3
 764 012e FFF67AAF 		blt	.L36
 190:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 765              		.loc 1 190 39 discriminator 2
 766 0132 B7F92C30 		ldrsh	r3, [r7, #44]
 767 0136 9BB2     		uxth	r3, r3
 768 0138 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc7TZ71Q.s 			page 53


 769 013a 9BB2     		uxth	r3, r3
 770 013c BB85     		strh	r3, [r7, #44]	@ movhi
 771              	.L28:
 190:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 772              		.loc 1 190 23 discriminator 1
 773 013e B7F92C20 		ldrsh	r2, [r7, #44]
 774 0142 7B89     		ldrh	r3, [r7, #10]
 190:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 775              		.loc 1 190 5 discriminator 1
 776 0144 9A42     		cmp	r2, r3
 777 0146 FFF66BAF 		blt	.L37
 224:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 225:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 226:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 227:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 228:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* then does the pooling along y axis */
 229:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_y = 0; i_y < dim_im_out; i_y++)
 778              		.loc 1 229 14
 779 014a 0023     		movs	r3, #0
 780 014c BB85     		strh	r3, [r7, #44]	@ movhi
 781              		.loc 1 229 5
 782 014e 84E0     		b	.L38
 783              	.L45:
 784              	.LBB25:
 230:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 231:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 232:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* for each output row */
 233:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *target = Im_out + i_y * dim_im_out * ch_im_in;
 785              		.loc 1 233 41
 786 0150 B7F92C30 		ldrsh	r3, [r7, #44]
 787 0154 B7F84020 		ldrh	r2, [r7, #64]
 788 0158 02FB03F3 		mul	r3, r2, r3
 789              		.loc 1 233 54
 790 015c 3A89     		ldrh	r2, [r7, #8]
 791 015e 02FB03F3 		mul	r3, r2, r3
 792 0162 1A46     		mov	r2, r3
 793              		.loc 1 233 19
 794 0164 BB6C     		ldr	r3, [r7, #72]
 795 0166 1344     		add	r3, r3, r2
 796 0168 BB61     		str	r3, [r7, #24]
 234:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *row_start;
 235:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *row_end;
 236:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* setting the starting row */
 237:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (i_y * stride - padding < 0)
 797              		.loc 1 237 17
 798 016a B7F92C30 		ldrsh	r3, [r7, #44]
 799 016e BA8F     		ldrh	r2, [r7, #60]
 800 0170 02FB03F2 		mul	r2, r2, r3
 801              		.loc 1 237 26
 802 0174 3B8F     		ldrh	r3, [r7, #56]
 803 0176 D31A     		subs	r3, r2, r3
 804              		.loc 1 237 12
 805 0178 002B     		cmp	r3, #0
 806 017a 02DA     		bge	.L39
 238:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 239:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_start = Im_in;
 807              		.loc 1 239 23
ARM GAS  /tmp/cc7TZ71Q.s 			page 54


 808 017c FB68     		ldr	r3, [r7, #12]
 809 017e 3B62     		str	r3, [r7, #32]
 810 0180 10E0     		b	.L40
 811              	.L39:
 240:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         } else
 241:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 242:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_start = Im_in + (i_y * stride - padding) * dim_im_in * ch_im_in;
 812              		.loc 1 242 38
 813 0182 B7F92C30 		ldrsh	r3, [r7, #44]
 814 0186 BA8F     		ldrh	r2, [r7, #60]
 815 0188 02FB03F2 		mul	r2, r2, r3
 816              		.loc 1 242 47
 817 018c 3B8F     		ldrh	r3, [r7, #56]
 818 018e D31A     		subs	r3, r2, r3
 819              		.loc 1 242 58
 820 0190 7A89     		ldrh	r2, [r7, #10]
 821 0192 02FB03F3 		mul	r3, r2, r3
 822              		.loc 1 242 70
 823 0196 3A89     		ldrh	r2, [r7, #8]
 824 0198 02FB03F3 		mul	r3, r2, r3
 825 019c 1A46     		mov	r2, r3
 826              		.loc 1 242 23
 827 019e FB68     		ldr	r3, [r7, #12]
 828 01a0 1344     		add	r3, r3, r2
 829 01a2 3B62     		str	r3, [r7, #32]
 830              	.L40:
 243:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 244:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* setting the stopping row */
 245:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (i_y * stride - padding + dim_kernel >= dim_im_in)
 831              		.loc 1 245 17
 832 01a4 B7F92C30 		ldrsh	r3, [r7, #44]
 833 01a8 BA8F     		ldrh	r2, [r7, #60]
 834 01aa 02FB03F2 		mul	r2, r2, r3
 835              		.loc 1 245 26
 836 01ae 3B8F     		ldrh	r3, [r7, #56]
 837 01b0 D21A     		subs	r2, r2, r3
 838              		.loc 1 245 36
 839 01b2 FB88     		ldrh	r3, [r7, #6]
 840 01b4 1A44     		add	r2, r2, r3
 841              		.loc 1 245 49
 842 01b6 7B89     		ldrh	r3, [r7, #10]
 843              		.loc 1 245 12
 844 01b8 9A42     		cmp	r2, r3
 845 01ba 0BDB     		blt	.L41
 246:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 247:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_end = Im_in + dim_im_in * dim_im_in * ch_im_in;
 846              		.loc 1 247 41
 847 01bc 7B89     		ldrh	r3, [r7, #10]
 848 01be 7A89     		ldrh	r2, [r7, #10]
 849 01c0 02FB03F3 		mul	r3, r2, r3
 850              		.loc 1 247 53
 851 01c4 3A89     		ldrh	r2, [r7, #8]
 852 01c6 02FB03F3 		mul	r3, r2, r3
 853 01ca 1A46     		mov	r2, r3
 854              		.loc 1 247 21
 855 01cc FB68     		ldr	r3, [r7, #12]
 856 01ce 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc7TZ71Q.s 			page 55


 857 01d0 FB61     		str	r3, [r7, #28]
 858 01d2 12E0     		b	.L42
 859              	.L41:
 248:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         } else
 249:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 250:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_end = Im_in + (i_y * stride - padding + dim_kernel) * dim_im_in * ch_im_in;
 860              		.loc 1 250 36
 861 01d4 B7F92C30 		ldrsh	r3, [r7, #44]
 862 01d8 BA8F     		ldrh	r2, [r7, #60]
 863 01da 02FB03F2 		mul	r2, r2, r3
 864              		.loc 1 250 45
 865 01de 3B8F     		ldrh	r3, [r7, #56]
 866 01e0 D21A     		subs	r2, r2, r3
 867              		.loc 1 250 55
 868 01e2 FB88     		ldrh	r3, [r7, #6]
 869 01e4 1344     		add	r3, r3, r2
 870              		.loc 1 250 69
 871 01e6 7A89     		ldrh	r2, [r7, #10]
 872 01e8 02FB03F3 		mul	r3, r2, r3
 873              		.loc 1 250 81
 874 01ec 3A89     		ldrh	r2, [r7, #8]
 875 01ee 02FB03F3 		mul	r3, r2, r3
 876 01f2 1A46     		mov	r2, r3
 877              		.loc 1 250 21
 878 01f4 FB68     		ldr	r3, [r7, #12]
 879 01f6 1344     		add	r3, r3, r2
 880 01f8 FB61     		str	r3, [r7, #28]
 881              	.L42:
 251:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 252:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 253:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* copy over the first row */
 254:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* arm_copy_q7(row_start, target, dim_im_out * ch_im_in); */
 255:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         memmove(target, row_start, dim_im_out * ch_im_in);
 882              		.loc 1 255 47
 883 01fa B7F84030 		ldrh	r3, [r7, #64]
 884 01fe 3A89     		ldrh	r2, [r7, #8]
 885 0200 02FB03F3 		mul	r3, r2, r3
 886              		.loc 1 255 9
 887 0204 1A46     		mov	r2, r3
 888 0206 396A     		ldr	r1, [r7, #32]
 889 0208 B869     		ldr	r0, [r7, #24]
 890 020a FFF7FEFF 		bl	memmove
 256:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 257:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* move over to next row */
 258:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         row_start += ch_im_in * dim_im_in;
 891              		.loc 1 258 31
 892 020e 3B89     		ldrh	r3, [r7, #8]
 893 0210 7A89     		ldrh	r2, [r7, #10]
 894 0212 02FB03F3 		mul	r3, r2, r3
 895 0216 1A46     		mov	r2, r3
 896              		.loc 1 258 19
 897 0218 3B6A     		ldr	r3, [r7, #32]
 898 021a 1344     		add	r3, r3, r2
 899 021c 3B62     		str	r3, [r7, #32]
 259:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 260:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (; row_start < row_end; row_start += dim_im_in * ch_im_in)
 900              		.loc 1 260 9
ARM GAS  /tmp/cc7TZ71Q.s 			page 56


 901 021e 12E0     		b	.L43
 902              	.L44:
 261:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 262:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             compare_and_replace_if_larger_q7(target, row_start, dim_im_out * ch_im_in);
 903              		.loc 1 262 13 discriminator 2
 904 0220 B7F84020 		ldrh	r2, [r7, #64]	@ movhi
 905 0224 3B89     		ldrh	r3, [r7, #8]	@ movhi
 906 0226 12FB03F3 		smulbb	r3, r2, r3
 907 022a 9BB2     		uxth	r3, r3
 908 022c 1A46     		mov	r2, r3
 909 022e 396A     		ldr	r1, [r7, #32]
 910 0230 B869     		ldr	r0, [r7, #24]
 911 0232 FFF7FEFF 		bl	compare_and_replace_if_larger_q7
 260:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 912              		.loc 1 260 60 discriminator 2
 913 0236 7B89     		ldrh	r3, [r7, #10]
 914 0238 3A89     		ldrh	r2, [r7, #8]
 915 023a 02FB03F3 		mul	r3, r2, r3
 916 023e 1A46     		mov	r2, r3
 260:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 917              		.loc 1 260 47 discriminator 2
 918 0240 3B6A     		ldr	r3, [r7, #32]
 919 0242 1344     		add	r3, r3, r2
 920 0244 3B62     		str	r3, [r7, #32]
 921              	.L43:
 260:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 922              		.loc 1 260 9 discriminator 1
 923 0246 3A6A     		ldr	r2, [r7, #32]
 924 0248 FB69     		ldr	r3, [r7, #28]
 925 024a 9A42     		cmp	r2, r3
 926 024c E8D3     		bcc	.L44
 927              	.LBE25:
 229:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 928              		.loc 1 229 40 discriminator 2
 929 024e B7F92C30 		ldrsh	r3, [r7, #44]
 930 0252 9BB2     		uxth	r3, r3
 931 0254 0133     		adds	r3, r3, #1
 932 0256 9BB2     		uxth	r3, r3
 933 0258 BB85     		strh	r3, [r7, #44]	@ movhi
 934              	.L38:
 229:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 935              		.loc 1 229 23 discriminator 1
 936 025a B7F92C20 		ldrsh	r2, [r7, #44]
 937 025e B7F84030 		ldrh	r3, [r7, #64]
 229:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 938              		.loc 1 229 5 discriminator 1
 939 0262 9A42     		cmp	r2, r3
 940 0264 FFF674AF 		blt	.L45
 263:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 264:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 265:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 266:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #else
 267:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* Run the following code as reference implementation for Cortex-M0 and Cortex-M3 */
 268:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 269:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   i_ch_in, i_x, i_y;
 270:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   k_x, k_y;
 271:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 57


 272:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_ch_in = 0; i_ch_in < ch_im_in; i_ch_in++)
 273:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 274:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (i_y = 0; i_y < dim_im_out; i_y++)
 275:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 276:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (i_x = 0; i_x < dim_im_out; i_x++)
 277:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 278:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 int       max = -129;
 279:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 for (k_y = i_y * stride - padding; k_y < i_y * stride - padding + dim_kernel; k_y++
 280:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 {
 281:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     for (k_x = i_x * stride - padding; k_x < i_x * stride - padding + dim_kernel; k
 282:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     {
 283:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         if (k_y >= 0 && k_x >= 0 && k_y < dim_im_in && k_x < dim_im_in)
 284:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         {
 285:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                             if (Im_in[i_ch_in + ch_im_in * (k_x + k_y * dim_im_in)] > max)
 286:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                             {
 287:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                                 max = Im_in[i_ch_in + ch_im_in * (k_x + k_y * dim_im_in)];
 288:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                             }
 289:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         }
 290:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     }
 291:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 }
 292:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 Im_out[i_ch_in + ch_im_in * (i_x + i_y * dim_im_out)] = max;
 293:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 294:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 295:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 296:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 297:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #endif                          /* ARM_MATH_DSP */
 298:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 299:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** }
 941              		.loc 1 299 1
 942 0268 00BF     		nop
 943 026a 00BF     		nop
 944 026c 3037     		adds	r7, r7, #48
 945              	.LCFI21:
 946              		.cfi_def_cfa_offset 8
 947 026e BD46     		mov	sp, r7
 948              	.LCFI22:
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0270 80BD     		pop	{r7, pc}
 952              		.cfi_endproc
 953              	.LFE152:
 955              		.section	.text.arm_avepool_q7_HWC,"ax",%progbits
 956              		.align	1
 957              		.global	arm_avepool_q7_HWC
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv5-d16
 963              	arm_avepool_q7_HWC:
 964              	.LFB153:
 300:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 301:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****   /**
 302:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @brief Q7 average pooling function
 303:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in,out]   Im_in       pointer to input tensor
 304:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_im_in   input tensor dimention
 305:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       ch_im_in    number of input tensor channels
 306:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_kernel  filter kernel size
ARM GAS  /tmp/cc7TZ71Q.s 			page 58


 307:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       padding     padding sizes
 308:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       stride      convolution stride
 309:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in]       dim_im_out  output tensor dimension
 310:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in,out]   bufferA     pointer to buffer space for input
 311:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @param[in,out]   Im_out      pointer to output tensor
 312:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @return none.
 313:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 314:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * @details
 315:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 316:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * <b>Buffer size:</b>
 317:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 318:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * bufferA size:  2*dim_im_out*ch_im_in
 319:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 320:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * The pooling function is implemented as split x-pooling then
 321:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * y-pooling.
 322:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 323:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * This pooling function is input-destructive. Input data is undefined
 324:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    * after calling this function.
 325:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    *
 326:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****    */
 327:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 328:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** void
 329:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** arm_avepool_q7_HWC(q7_t * Im_in,
 330:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t dim_im_in,
 331:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t ch_im_in,
 332:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t dim_kernel,
 333:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t padding,
 334:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                    const uint16_t stride, const uint16_t dim_im_out, q7_t * bufferA, q7_t * Im_out)
 335:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** {
 965              		.loc 1 335 1
 966              		.cfi_startproc
 967              		@ args = 20, pretend = 0, frame = 56
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              	.LCFI23:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 8EB0     		sub	sp, sp, #56
 975              	.LCFI24:
 976              		.cfi_def_cfa_offset 64
 977 0004 00AF     		add	r7, sp, #0
 978              	.LCFI25:
 979              		.cfi_def_cfa_register 7
 980 0006 F860     		str	r0, [r7, #12]
 981 0008 0846     		mov	r0, r1
 982 000a 1146     		mov	r1, r2
 983 000c 1A46     		mov	r2, r3
 984 000e 0346     		mov	r3, r0	@ movhi
 985 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 986 0012 0B46     		mov	r3, r1	@ movhi
 987 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 988 0016 1346     		mov	r3, r2	@ movhi
 989 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 336:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 337:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #if defined (ARM_MATH_DSP)
 338:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* Run the following code for Cortex-M4 and Cortex-M7 */
ARM GAS  /tmp/cc7TZ71Q.s 			page 59


 339:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 340:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     q15_t    *buffer = (q15_t *) bufferA;
 990              		.loc 1 340 15
 991 001a FB6C     		ldr	r3, [r7, #76]
 992 001c FB61     		str	r3, [r7, #28]
 341:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   i_x, i_y;
 342:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   count = 0;
 993              		.loc 1 342 15
 994 001e 0023     		movs	r3, #0
 995 0020 7B86     		strh	r3, [r7, #50]	@ movhi
 343:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 344:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* first does the pooling along x axis */
 345:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_y = 0; i_y < dim_im_in; i_y++)
 996              		.loc 1 345 14
 997 0022 0023     		movs	r3, #0
 998 0024 BB86     		strh	r3, [r7, #52]	@ movhi
 999              		.loc 1 345 5
 1000 0026 A4E0     		b	.L47
 1001              	.L56:
 346:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 347:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 348:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (i_x = 0; i_x < dim_im_out; i_x++)
 1002              		.loc 1 348 18
 1003 0028 0023     		movs	r3, #0
 1004 002a FB86     		strh	r3, [r7, #54]	@ movhi
 1005              		.loc 1 348 9
 1006 002c 94E0     		b	.L48
 1007              	.L55:
 1008              	.LBB26:
 349:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 350:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* for each output pixel */
 351:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *target = Im_in + (i_y * dim_im_in + i_x) * ch_im_in;
 1009              		.loc 1 351 45
 1010 002e B7F93430 		ldrsh	r3, [r7, #52]
 1011 0032 7A89     		ldrh	r2, [r7, #10]
 1012 0034 02FB03F2 		mul	r2, r2, r3
 1013              		.loc 1 351 57
 1014 0038 B7F93630 		ldrsh	r3, [r7, #54]
 1015 003c 1344     		add	r3, r3, r2
 1016              		.loc 1 351 64
 1017 003e 3A89     		ldrh	r2, [r7, #8]
 1018 0040 02FB03F3 		mul	r3, r2, r3
 1019 0044 1A46     		mov	r2, r3
 1020              		.loc 1 351 23
 1021 0046 FB68     		ldr	r3, [r7, #12]
 1022 0048 1344     		add	r3, r3, r2
 1023 004a 7B61     		str	r3, [r7, #20]
 352:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *win_start;
 353:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             q7_t     *win_stop;
 354:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             if (i_x * stride - padding < 0)
 1024              		.loc 1 354 21
 1025 004c B7F93630 		ldrsh	r3, [r7, #54]
 1026 0050 B7F84420 		ldrh	r2, [r7, #68]
 1027 0054 02FB03F2 		mul	r2, r2, r3
 1028              		.loc 1 354 30
 1029 0058 B7F84030 		ldrh	r3, [r7, #64]
 1030 005c D31A     		subs	r3, r2, r3
ARM GAS  /tmp/cc7TZ71Q.s 			page 60


 1031              		.loc 1 354 16
 1032 005e 002B     		cmp	r3, #0
 1033 0060 02DA     		bge	.L49
 355:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 356:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_start = target;
 1034              		.loc 1 356 27
 1035 0062 7B69     		ldr	r3, [r7, #20]
 1036 0064 FB62     		str	r3, [r7, #44]
 1037 0066 15E0     		b	.L50
 1038              	.L49:
 357:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             } else
 358:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 359:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_start = Im_in + (i_y * dim_im_in + i_x * stride - padding) * ch_im_in;
 1039              		.loc 1 359 42
 1040 0068 B7F93430 		ldrsh	r3, [r7, #52]
 1041 006c 7A89     		ldrh	r2, [r7, #10]
 1042 006e 02FB03F2 		mul	r2, r2, r3
 1043              		.loc 1 359 60
 1044 0072 B7F93630 		ldrsh	r3, [r7, #54]
 1045 0076 B7F84410 		ldrh	r1, [r7, #68]
 1046 007a 01FB03F3 		mul	r3, r1, r3
 1047              		.loc 1 359 54
 1048 007e 1A44     		add	r2, r2, r3
 1049              		.loc 1 359 69
 1050 0080 B7F84030 		ldrh	r3, [r7, #64]
 1051 0084 D31A     		subs	r3, r2, r3
 1052              		.loc 1 359 80
 1053 0086 3A89     		ldrh	r2, [r7, #8]
 1054 0088 02FB03F3 		mul	r3, r2, r3
 1055 008c 1A46     		mov	r2, r3
 1056              		.loc 1 359 27
 1057 008e FB68     		ldr	r3, [r7, #12]
 1058 0090 1344     		add	r3, r3, r2
 1059 0092 FB62     		str	r3, [r7, #44]
 1060              	.L50:
 360:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 361:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 362:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             if (i_x * stride - padding + dim_kernel >= dim_im_in)
 1061              		.loc 1 362 21
 1062 0094 B7F93630 		ldrsh	r3, [r7, #54]
 1063 0098 B7F84420 		ldrh	r2, [r7, #68]
 1064 009c 02FB03F2 		mul	r2, r2, r3
 1065              		.loc 1 362 30
 1066 00a0 B7F84030 		ldrh	r3, [r7, #64]
 1067 00a4 D21A     		subs	r2, r2, r3
 1068              		.loc 1 362 40
 1069 00a6 FB88     		ldrh	r3, [r7, #6]
 1070 00a8 1A44     		add	r2, r2, r3
 1071              		.loc 1 362 53
 1072 00aa 7B89     		ldrh	r3, [r7, #10]
 1073              		.loc 1 362 16
 1074 00ac 9A42     		cmp	r2, r3
 1075 00ae 0EDB     		blt	.L51
 363:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 364:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_stop = Im_in + (i_y * dim_im_in + dim_im_in) * ch_im_in;
 1076              		.loc 1 364 41
 1077 00b0 B7F93430 		ldrsh	r3, [r7, #52]
ARM GAS  /tmp/cc7TZ71Q.s 			page 61


 1078 00b4 7A89     		ldrh	r2, [r7, #10]
 1079 00b6 02FB03F2 		mul	r2, r2, r3
 1080              		.loc 1 364 53
 1081 00ba 7B89     		ldrh	r3, [r7, #10]
 1082 00bc 1344     		add	r3, r3, r2
 1083              		.loc 1 364 66
 1084 00be 3A89     		ldrh	r2, [r7, #8]
 1085 00c0 02FB03F3 		mul	r3, r2, r3
 1086 00c4 1A46     		mov	r2, r3
 1087              		.loc 1 364 26
 1088 00c6 FB68     		ldr	r3, [r7, #12]
 1089 00c8 1344     		add	r3, r3, r2
 1090 00ca BB62     		str	r3, [r7, #40]
 1091 00cc 17E0     		b	.L52
 1092              	.L51:
 365:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             } else
 366:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 367:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 win_stop = Im_in + (i_y * dim_im_in + i_x * stride - padding + dim_kernel) * ch_im_
 1093              		.loc 1 367 41
 1094 00ce B7F93430 		ldrsh	r3, [r7, #52]
 1095 00d2 7A89     		ldrh	r2, [r7, #10]
 1096 00d4 02FB03F2 		mul	r2, r2, r3
 1097              		.loc 1 367 59
 1098 00d8 B7F93630 		ldrsh	r3, [r7, #54]
 1099 00dc B7F84410 		ldrh	r1, [r7, #68]
 1100 00e0 01FB03F3 		mul	r3, r1, r3
 1101              		.loc 1 367 53
 1102 00e4 1A44     		add	r2, r2, r3
 1103              		.loc 1 367 68
 1104 00e6 B7F84030 		ldrh	r3, [r7, #64]
 1105 00ea D21A     		subs	r2, r2, r3
 1106              		.loc 1 367 78
 1107 00ec FB88     		ldrh	r3, [r7, #6]
 1108 00ee 1344     		add	r3, r3, r2
 1109              		.loc 1 367 92
 1110 00f0 3A89     		ldrh	r2, [r7, #8]
 1111 00f2 02FB03F3 		mul	r3, r2, r3
 1112 00f6 1A46     		mov	r2, r3
 1113              		.loc 1 367 26
 1114 00f8 FB68     		ldr	r3, [r7, #12]
 1115 00fa 1344     		add	r3, r3, r2
 1116 00fc BB62     		str	r3, [r7, #40]
 1117              	.L52:
 368:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 369:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 370:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* first step is to copy over initial data */
 371:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             arm_q7_to_q15_no_shift(win_start, buffer, ch_im_in);
 1118              		.loc 1 371 13
 1119 00fe 3B89     		ldrh	r3, [r7, #8]
 1120 0100 1A46     		mov	r2, r3
 1121 0102 F969     		ldr	r1, [r7, #28]
 1122 0104 F86A     		ldr	r0, [r7, #44]
 1123 0106 FFF7FEFF 		bl	arm_q7_to_q15_no_shift
 372:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             count = 1;
 1124              		.loc 1 372 19
 1125 010a 0123     		movs	r3, #1
 1126 010c 7B86     		strh	r3, [r7, #50]	@ movhi
ARM GAS  /tmp/cc7TZ71Q.s 			page 62


 373:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 374:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             /* start the max operation from the second part */
 375:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             win_start += ch_im_in;
 1127              		.loc 1 375 23
 1128 010e 3B89     		ldrh	r3, [r7, #8]
 1129 0110 FA6A     		ldr	r2, [r7, #44]
 1130 0112 1344     		add	r3, r3, r2
 1131 0114 FB62     		str	r3, [r7, #44]
 376:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 1132              		.loc 1 376 13
 1133 0116 0FE0     		b	.L53
 1134              	.L54:
 377:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 378:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 accumulate_q7_to_q15(buffer, win_start, ch_im_in);
 1135              		.loc 1 378 17 discriminator 2
 1136 0118 3B89     		ldrh	r3, [r7, #8]
 1137 011a 1A46     		mov	r2, r3
 1138 011c F96A     		ldr	r1, [r7, #44]
 1139 011e F869     		ldr	r0, [r7, #28]
 1140 0120 FFF7FEFF 		bl	accumulate_q7_to_q15
 379:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 count++;
 1141              		.loc 1 379 22 discriminator 2
 1142 0124 B7F93230 		ldrsh	r3, [r7, #50]
 1143 0128 9BB2     		uxth	r3, r3
 1144 012a 0133     		adds	r3, r3, #1
 1145 012c 9BB2     		uxth	r3, r3
 1146 012e 7B86     		strh	r3, [r7, #50]	@ movhi
 376:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 1147              		.loc 1 376 52 discriminator 2
 1148 0130 3B89     		ldrh	r3, [r7, #8]
 1149 0132 FA6A     		ldr	r2, [r7, #44]
 1150 0134 1344     		add	r3, r3, r2
 1151 0136 FB62     		str	r3, [r7, #44]
 1152              	.L53:
 376:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (; win_start < win_stop; win_start += ch_im_in)
 1153              		.loc 1 376 13 discriminator 1
 1154 0138 FA6A     		ldr	r2, [r7, #44]
 1155 013a BB6A     		ldr	r3, [r7, #40]
 1156 013c 9A42     		cmp	r2, r3
 1157 013e EBD3     		bcc	.L54
 380:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 381:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             buffer_scale_back_q15_to_q7(buffer, target, ch_im_in, count);
 1158              		.loc 1 381 13 discriminator 2
 1159 0140 7B8E     		ldrh	r3, [r7, #50]
 1160 0142 3A89     		ldrh	r2, [r7, #8]
 1161 0144 7969     		ldr	r1, [r7, #20]
 1162 0146 F869     		ldr	r0, [r7, #28]
 1163 0148 FFF7FEFF 		bl	buffer_scale_back_q15_to_q7
 1164              	.LBE26:
 348:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1165              		.loc 1 348 44 discriminator 2
 1166 014c B7F93630 		ldrsh	r3, [r7, #54]
 1167 0150 9BB2     		uxth	r3, r3
 1168 0152 0133     		adds	r3, r3, #1
 1169 0154 9BB2     		uxth	r3, r3
 1170 0156 FB86     		strh	r3, [r7, #54]	@ movhi
 1171              	.L48:
ARM GAS  /tmp/cc7TZ71Q.s 			page 63


 348:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1172              		.loc 1 348 27 discriminator 1
 1173 0158 B7F93620 		ldrsh	r2, [r7, #54]
 1174 015c B7F84830 		ldrh	r3, [r7, #72]
 348:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1175              		.loc 1 348 9 discriminator 1
 1176 0160 9A42     		cmp	r2, r3
 1177 0162 FFF664AF 		blt	.L55
 345:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1178              		.loc 1 345 39 discriminator 2
 1179 0166 B7F93430 		ldrsh	r3, [r7, #52]
 1180 016a 9BB2     		uxth	r3, r3
 1181 016c 0133     		adds	r3, r3, #1
 1182 016e 9BB2     		uxth	r3, r3
 1183 0170 BB86     		strh	r3, [r7, #52]	@ movhi
 1184              	.L47:
 345:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1185              		.loc 1 345 23 discriminator 1
 1186 0172 B7F93420 		ldrsh	r2, [r7, #52]
 1187 0176 7B89     		ldrh	r3, [r7, #10]
 345:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1188              		.loc 1 345 5 discriminator 1
 1189 0178 9A42     		cmp	r2, r3
 1190 017a FFF655AF 		blt	.L56
 382:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 383:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 384:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 385:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* then does the pooling along y axis */
 386:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_y = 0; i_y < dim_im_out; i_y++)
 1191              		.loc 1 386 14
 1192 017e 0023     		movs	r3, #0
 1193 0180 BB86     		strh	r3, [r7, #52]	@ movhi
 1194              		.loc 1 386 5
 1195 0182 9FE0     		b	.L57
 1196              	.L64:
 1197              	.LBB27:
 387:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 388:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* for each output row */
 389:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *target = Im_out + i_y * dim_im_out * ch_im_in;
 1198              		.loc 1 389 41
 1199 0184 B7F93430 		ldrsh	r3, [r7, #52]
 1200 0188 B7F84820 		ldrh	r2, [r7, #72]
 1201 018c 02FB03F3 		mul	r3, r2, r3
 1202              		.loc 1 389 54
 1203 0190 3A89     		ldrh	r2, [r7, #8]
 1204 0192 02FB03F3 		mul	r3, r2, r3
 1205 0196 1A46     		mov	r2, r3
 1206              		.loc 1 389 19
 1207 0198 3B6D     		ldr	r3, [r7, #80]
 1208 019a 1344     		add	r3, r3, r2
 1209 019c BB61     		str	r3, [r7, #24]
 390:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *row_start;
 391:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         q7_t     *row_end;
 392:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* setting the starting row */
 393:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (i_y * stride - padding < 0)
 1210              		.loc 1 393 17
 1211 019e B7F93430 		ldrsh	r3, [r7, #52]
ARM GAS  /tmp/cc7TZ71Q.s 			page 64


 1212 01a2 B7F84420 		ldrh	r2, [r7, #68]
 1213 01a6 02FB03F2 		mul	r2, r2, r3
 1214              		.loc 1 393 26
 1215 01aa B7F84030 		ldrh	r3, [r7, #64]
 1216 01ae D31A     		subs	r3, r2, r3
 1217              		.loc 1 393 12
 1218 01b0 002B     		cmp	r3, #0
 1219 01b2 02DA     		bge	.L58
 394:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 395:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_start = Im_in;
 1220              		.loc 1 395 23
 1221 01b4 FB68     		ldr	r3, [r7, #12]
 1222 01b6 7B62     		str	r3, [r7, #36]
 1223 01b8 12E0     		b	.L59
 1224              	.L58:
 396:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         } else
 397:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 398:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_start = Im_in + (i_y * stride - padding) * dim_im_in * ch_im_in;
 1225              		.loc 1 398 38
 1226 01ba B7F93430 		ldrsh	r3, [r7, #52]
 1227 01be B7F84420 		ldrh	r2, [r7, #68]
 1228 01c2 02FB03F2 		mul	r2, r2, r3
 1229              		.loc 1 398 47
 1230 01c6 B7F84030 		ldrh	r3, [r7, #64]
 1231 01ca D31A     		subs	r3, r2, r3
 1232              		.loc 1 398 58
 1233 01cc 7A89     		ldrh	r2, [r7, #10]
 1234 01ce 02FB03F3 		mul	r3, r2, r3
 1235              		.loc 1 398 70
 1236 01d2 3A89     		ldrh	r2, [r7, #8]
 1237 01d4 02FB03F3 		mul	r3, r2, r3
 1238 01d8 1A46     		mov	r2, r3
 1239              		.loc 1 398 23
 1240 01da FB68     		ldr	r3, [r7, #12]
 1241 01dc 1344     		add	r3, r3, r2
 1242 01de 7B62     		str	r3, [r7, #36]
 1243              	.L59:
 399:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 400:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* setting the stopping row */
 401:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         if (i_y * stride - padding + dim_kernel >= dim_im_in)
 1244              		.loc 1 401 17
 1245 01e0 B7F93430 		ldrsh	r3, [r7, #52]
 1246 01e4 B7F84420 		ldrh	r2, [r7, #68]
 1247 01e8 02FB03F2 		mul	r2, r2, r3
 1248              		.loc 1 401 26
 1249 01ec B7F84030 		ldrh	r3, [r7, #64]
 1250 01f0 D21A     		subs	r2, r2, r3
 1251              		.loc 1 401 36
 1252 01f2 FB88     		ldrh	r3, [r7, #6]
 1253 01f4 1A44     		add	r2, r2, r3
 1254              		.loc 1 401 49
 1255 01f6 7B89     		ldrh	r3, [r7, #10]
 1256              		.loc 1 401 12
 1257 01f8 9A42     		cmp	r2, r3
 1258 01fa 0BDB     		blt	.L60
 402:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 403:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_end = Im_in + dim_im_in * dim_im_in * ch_im_in;
ARM GAS  /tmp/cc7TZ71Q.s 			page 65


 1259              		.loc 1 403 41
 1260 01fc 7B89     		ldrh	r3, [r7, #10]
 1261 01fe 7A89     		ldrh	r2, [r7, #10]
 1262 0200 02FB03F3 		mul	r3, r2, r3
 1263              		.loc 1 403 53
 1264 0204 3A89     		ldrh	r2, [r7, #8]
 1265 0206 02FB03F3 		mul	r3, r2, r3
 1266 020a 1A46     		mov	r2, r3
 1267              		.loc 1 403 21
 1268 020c FB68     		ldr	r3, [r7, #12]
 1269 020e 1344     		add	r3, r3, r2
 1270 0210 3B62     		str	r3, [r7, #32]
 1271 0212 14E0     		b	.L61
 1272              	.L60:
 404:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         } else
 405:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 406:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             row_end = Im_in + (i_y * stride - padding + dim_kernel) * dim_im_in * ch_im_in;
 1273              		.loc 1 406 36
 1274 0214 B7F93430 		ldrsh	r3, [r7, #52]
 1275 0218 B7F84420 		ldrh	r2, [r7, #68]
 1276 021c 02FB03F2 		mul	r2, r2, r3
 1277              		.loc 1 406 45
 1278 0220 B7F84030 		ldrh	r3, [r7, #64]
 1279 0224 D21A     		subs	r2, r2, r3
 1280              		.loc 1 406 55
 1281 0226 FB88     		ldrh	r3, [r7, #6]
 1282 0228 1344     		add	r3, r3, r2
 1283              		.loc 1 406 69
 1284 022a 7A89     		ldrh	r2, [r7, #10]
 1285 022c 02FB03F3 		mul	r3, r2, r3
 1286              		.loc 1 406 81
 1287 0230 3A89     		ldrh	r2, [r7, #8]
 1288 0232 02FB03F3 		mul	r3, r2, r3
 1289 0236 1A46     		mov	r2, r3
 1290              		.loc 1 406 21
 1291 0238 FB68     		ldr	r3, [r7, #12]
 1292 023a 1344     		add	r3, r3, r2
 1293 023c 3B62     		str	r3, [r7, #32]
 1294              	.L61:
 407:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 408:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 409:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* copy over the first row */
 410:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         arm_q7_to_q15_no_shift(row_start, buffer, dim_im_out * ch_im_in);
 1295              		.loc 1 410 62
 1296 023e B7F84830 		ldrh	r3, [r7, #72]
 1297 0242 3A89     		ldrh	r2, [r7, #8]
 1298 0244 02FB03F3 		mul	r3, r2, r3
 1299              		.loc 1 410 9
 1300 0248 1A46     		mov	r2, r3
 1301 024a F969     		ldr	r1, [r7, #28]
 1302 024c 786A     		ldr	r0, [r7, #36]
 1303 024e FFF7FEFF 		bl	arm_q7_to_q15_no_shift
 411:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         count = 1;
 1304              		.loc 1 411 15
 1305 0252 0123     		movs	r3, #1
 1306 0254 7B86     		strh	r3, [r7, #50]	@ movhi
 412:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 66


 413:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         /* move over to next row */
 414:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         row_start += ch_im_in * dim_im_in;
 1307              		.loc 1 414 31
 1308 0256 3B89     		ldrh	r3, [r7, #8]
 1309 0258 7A89     		ldrh	r2, [r7, #10]
 1310 025a 02FB03F3 		mul	r3, r2, r3
 1311 025e 1A46     		mov	r2, r3
 1312              		.loc 1 414 19
 1313 0260 7B6A     		ldr	r3, [r7, #36]
 1314 0262 1344     		add	r3, r3, r2
 1315 0264 7B62     		str	r3, [r7, #36]
 415:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 416:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (; row_start < row_end; row_start += dim_im_in * ch_im_in)
 1316              		.loc 1 416 9
 1317 0266 18E0     		b	.L62
 1318              	.L63:
 417:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 418:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             accumulate_q7_to_q15(buffer, row_start, dim_im_out * ch_im_in);
 1319              		.loc 1 418 13 discriminator 2
 1320 0268 B7F84820 		ldrh	r2, [r7, #72]	@ movhi
 1321 026c 3B89     		ldrh	r3, [r7, #8]	@ movhi
 1322 026e 12FB03F3 		smulbb	r3, r2, r3
 1323 0272 9BB2     		uxth	r3, r3
 1324 0274 1A46     		mov	r2, r3
 1325 0276 796A     		ldr	r1, [r7, #36]
 1326 0278 F869     		ldr	r0, [r7, #28]
 1327 027a FFF7FEFF 		bl	accumulate_q7_to_q15
 419:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             count++;
 1328              		.loc 1 419 18 discriminator 2
 1329 027e B7F93230 		ldrsh	r3, [r7, #50]
 1330 0282 9BB2     		uxth	r3, r3
 1331 0284 0133     		adds	r3, r3, #1
 1332 0286 9BB2     		uxth	r3, r3
 1333 0288 7B86     		strh	r3, [r7, #50]	@ movhi
 416:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1334              		.loc 1 416 60 discriminator 2
 1335 028a 7B89     		ldrh	r3, [r7, #10]
 1336 028c 3A89     		ldrh	r2, [r7, #8]
 1337 028e 02FB03F3 		mul	r3, r2, r3
 1338 0292 1A46     		mov	r2, r3
 416:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1339              		.loc 1 416 47 discriminator 2
 1340 0294 7B6A     		ldr	r3, [r7, #36]
 1341 0296 1344     		add	r3, r3, r2
 1342 0298 7B62     		str	r3, [r7, #36]
 1343              	.L62:
 416:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 1344              		.loc 1 416 9 discriminator 1
 1345 029a 7A6A     		ldr	r2, [r7, #36]
 1346 029c 3B6A     		ldr	r3, [r7, #32]
 1347 029e 9A42     		cmp	r2, r3
 1348 02a0 E2D3     		bcc	.L63
 420:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 421:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         buffer_scale_back_q15_to_q7(buffer, target, dim_im_out * ch_im_in, count);
 1349              		.loc 1 421 9 discriminator 2
 1350 02a2 B7F84820 		ldrh	r2, [r7, #72]	@ movhi
 1351 02a6 3B89     		ldrh	r3, [r7, #8]	@ movhi
ARM GAS  /tmp/cc7TZ71Q.s 			page 67


 1352 02a8 12FB03F3 		smulbb	r3, r2, r3
 1353 02ac 9AB2     		uxth	r2, r3
 1354 02ae 7B8E     		ldrh	r3, [r7, #50]
 1355 02b0 B969     		ldr	r1, [r7, #24]
 1356 02b2 F869     		ldr	r0, [r7, #28]
 1357 02b4 FFF7FEFF 		bl	buffer_scale_back_q15_to_q7
 1358              	.LBE27:
 386:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1359              		.loc 1 386 40 discriminator 2
 1360 02b8 B7F93430 		ldrsh	r3, [r7, #52]
 1361 02bc 9BB2     		uxth	r3, r3
 1362 02be 0133     		adds	r3, r3, #1
 1363 02c0 9BB2     		uxth	r3, r3
 1364 02c2 BB86     		strh	r3, [r7, #52]	@ movhi
 1365              	.L57:
 386:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1366              		.loc 1 386 23 discriminator 1
 1367 02c4 B7F93420 		ldrsh	r2, [r7, #52]
 1368 02c8 B7F84830 		ldrh	r3, [r7, #72]
 386:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 1369              		.loc 1 386 5 discriminator 1
 1370 02cc 9A42     		cmp	r2, r3
 1371 02ce FFF659AF 		blt	.L64
 422:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 423:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 424:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #else
 425:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     /* Run the following code as reference implementation for Cortex-M0 and Cortex-M3 */
 426:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 427:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   i_ch_in, i_x, i_y;
 428:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     int16_t   k_x, k_y;
 429:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 430:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     for (i_ch_in = 0; i_ch_in < ch_im_in; i_ch_in++)
 431:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     {
 432:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         for (i_y = 0; i_y < dim_im_out; i_y++)
 433:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         {
 434:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             for (i_x = 0; i_x < dim_im_out; i_x++)
 435:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             {
 436:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 int       sum = 0;
 437:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 int       count = 0;
 438:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 for (k_y = i_y * stride - padding; k_y < i_y * stride - padding + dim_kernel; k_y++
 439:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 {
 440:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     for (k_x = i_x * stride - padding; k_x < i_x * stride - padding + dim_kernel; k
 441:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     {
 442:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         if (k_y >= 0 && k_x >= 0 && k_y < dim_im_in && k_x < dim_im_in)
 443:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         {
 444:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                             sum += Im_in[i_ch_in + ch_im_in * (k_x + k_y * dim_im_in)];
 445:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                             count++;
 446:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                         }
 447:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                     }
 448:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 }
 449:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****                 Im_out[i_ch_in + ch_im_in * (i_x + i_y * dim_im_out)] = sum / count;
 450:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****             }
 451:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****         }
 452:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c ****     }
 453:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
 454:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** #endif                          /* ARM_MATH_DSP */
 455:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** 
ARM GAS  /tmp/cc7TZ71Q.s 			page 68


 456:./Libraries/CMSIS/NN/Source/PoolingFunctions/arm_pool_q7_HWC.c **** }
 1372              		.loc 1 456 1
 1373 02d2 00BF     		nop
 1374 02d4 00BF     		nop
 1375 02d6 3837     		adds	r7, r7, #56
 1376              	.LCFI26:
 1377              		.cfi_def_cfa_offset 8
 1378 02d8 BD46     		mov	sp, r7
 1379              	.LCFI27:
 1380              		.cfi_def_cfa_register 13
 1381              		@ sp needed
 1382 02da 80BD     		pop	{r7, pc}
 1383              		.cfi_endproc
 1384              	.LFE153:
 1386              		.text
 1387              	.Letext0:
 1388              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1389              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1390              		.file 5 "/usr/include/newlib/sys/_types.h"
 1391              		.file 6 "/usr/include/newlib/sys/reent.h"
 1392              		.file 7 "/usr/include/newlib/sys/lock.h"
 1393              		.file 8 "/usr/include/newlib/math.h"
 1394              		.file 9 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 1395              		.file 10 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 1396              		.file 11 "./Libraries/CMSIS/NN/Include/arm_nnsupportfunctions.h"
 1397              		.file 12 "./Libraries/CMSIS/NN/Include/arm_nn_tables.h"
ARM GAS  /tmp/cc7TZ71Q.s 			page 69


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_pool_q7_HWC.c
     /tmp/cc7TZ71Q.s:17     .text.buffer_scale_back_q15_to_q7:0000000000000000 $t
     /tmp/cc7TZ71Q.s:24     .text.buffer_scale_back_q15_to_q7:0000000000000000 buffer_scale_back_q15_to_q7
     /tmp/cc7TZ71Q.s:104    .text.compare_and_replace_if_larger_q7:0000000000000000 $t
     /tmp/cc7TZ71Q.s:110    .text.compare_and_replace_if_larger_q7:0000000000000000 compare_and_replace_if_larger_q7
     /tmp/cc7TZ71Q.s:289    .text.accumulate_q7_to_q15:0000000000000000 $t
     /tmp/cc7TZ71Q.s:295    .text.accumulate_q7_to_q15:0000000000000000 accumulate_q7_to_q15
     /tmp/cc7TZ71Q.s:559    .text.accumulate_q7_to_q15:0000000000000140 $d
     /tmp/cc7TZ71Q.s:564    .text.arm_maxpool_q7_HWC:0000000000000000 $t
     /tmp/cc7TZ71Q.s:571    .text.arm_maxpool_q7_HWC:0000000000000000 arm_maxpool_q7_HWC
     /tmp/cc7TZ71Q.s:956    .text.arm_avepool_q7_HWC:0000000000000000 $t
     /tmp/cc7TZ71Q.s:963    .text.arm_avepool_q7_HWC:0000000000000000 arm_avepool_q7_HWC

UNDEFINED SYMBOLS
memmove
arm_q7_to_q15_no_shift
