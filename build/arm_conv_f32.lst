ARM GAS  /tmp/cczVI56J.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_conv_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_conv_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Title:        arm_conv_f32.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Description:  Convolution of floating-point sequences
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /**
ARM GAS  /tmp/cczVI56J.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @defgroup Conv Convolution
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   Convolution is a mathematical operation that operates on two finite length vectors to generate a 
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   Convolution is similar to correlation and is frequently used in filtering and data analysis.
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   The CMSIS DSP library contains functions for convolving Q7, Q15, Q31, and floating-point data typ
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   The library also provides fast versions of the Q15 and Q31 functions.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  @par            Algorithm
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Let <code>a[n]</code> and <code>b[n]</code> be sequences of length <code>srcALen
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    <code>srcBLen</code> samples respectively. Then the convolution
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   <pre>
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      c[n] = a[n] * b[n]
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   </pre>
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    is defined as
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    \image html ConvolutionEquation.gif
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Note that <code>c[n]</code> is of length <code>srcALen + srcBLen - 1</code> and 
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    <code>pSrcA</code> points to the first input vector of length <code>srcALen</cod
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    <code>pSrcB</code> points to the second input vector of length <code>srcBLen</co
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    The output result is written to <code>pDst</code> and the calling function must 
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Conceptually, when two signals <code>a[n]</code> and <code>b[n]</code> are convo
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    the signal <code>b[n]</code> slides over <code>a[n]</code>.
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    For each offset \c n, the overlapping portions of a[n] and b[n] are multiplied a
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Note that convolution is a commutative operation:
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   <pre>
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      a[n] * b[n] = b[n] * a[n].
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   </pre>
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    This means that switching the A and B arguments to the convolution functions has
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par           Fixed-Point Behavior
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Convolution requires summing up a large number of intermediate products.
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    As such, the Q7, Q15, and Q31 functions run a risk of overflow and saturation.
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Refer to the function specific documentation below for further details of the pa
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par           Fast Versions
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Fast versions are supported for Q31 and Q15. Cycles for Fast versions are less c
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    the input signals should be scaled down to avoid intermediate overflows.
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @par           Opt Versions
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    Opt versions are supported for Q15 and Q7. Design uses internal scratch buffer f
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****                    These versions are optimised in cycles and consumes more memory (Scratch memory)
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  */
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /**
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @addtogroup Conv
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @{
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /**
ARM GAS  /tmp/cczVI56J.s 			page 3


  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @brief         Convolution of floating-point sequences.
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @param[in]     pSrcA      points to the first input sequence
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @param[in]     srcALen    length of the first input sequence
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @param[in]     pSrcB      points to the second input sequence
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @param[in]     srcBLen    length of the second input sequence
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @param[out]    pDst       points to the location where the output result is written.  Length srcA
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   @return        none
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****  */
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** void arm_conv_f32(
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t * pSrcA,
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         uint32_t srcALen,
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t * pSrcB,
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         uint32_t srcBLen,
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t * pDst)
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** {
  28              		.loc 1 104 1
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 80
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 95B0     		sub	sp, sp, #84
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 88
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if (1)
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** //#if !defined(ARM_MATH_CM0_FAMILY)
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *pIn1;                               /* InputA pointer */
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *pIn2;                               /* InputB pointer */
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t *pOut = pDst;                        /* Output pointer */
  47              		.loc 1 111 20
  48 000e BB6D     		ldr	r3, [r7, #88]
  49 0010 7B64     		str	r3, [r7, #68]
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *px;                                 /* Intermediate inputA pointer */
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *py;                                 /* Intermediate inputB pointer */
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *pSrc1, *pSrc2;                      /* Intermediate pointers */
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t sum;                                 /* Accumulators */
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         uint32_t blockSize1, blockSize2, blockSize3;   /* Loop counters */
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         uint32_t j, k, count, blkCnt;                  /* Loop counters */
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t acc0, acc1, acc2, acc3;              /* Accumulators */
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t x0, x1, x2, x3, c0;                  /* Temporary variables to hold state and coe
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
ARM GAS  /tmp/cczVI56J.s 			page 4


 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* srcB is always made to slide across srcA. */
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   if (srcALen >= srcBLen)
  50              		.loc 1 127 6
  51 0012 BA68     		ldr	r2, [r7, #8]
  52 0014 3B68     		ldr	r3, [r7]
  53 0016 9A42     		cmp	r2, r3
  54 0018 04D3     		bcc	.L2
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputA pointer */
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     pIn1 = pSrcA;
  55              		.loc 1 130 10
  56 001a FB68     		ldr	r3, [r7, #12]
  57 001c FB64     		str	r3, [r7, #76]
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputB pointer */
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     pIn2 = pSrcB;
  58              		.loc 1 133 10
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 BB64     		str	r3, [r7, #72]
  61 0022 09E0     		b	.L3
  62              	.L2:
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   else
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputA pointer */
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     pIn1 = pSrcB;
  63              		.loc 1 138 10
  64 0024 7B68     		ldr	r3, [r7, #4]
  65 0026 FB64     		str	r3, [r7, #76]
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputB pointer */
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     pIn2 = pSrcA;
  66              		.loc 1 141 10
  67 0028 FB68     		ldr	r3, [r7, #12]
  68 002a BB64     		str	r3, [r7, #72]
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     j = srcBLen;
  69              		.loc 1 144 7
  70 002c 3B68     		ldr	r3, [r7]
  71 002e FB61     		str	r3, [r7, #28]
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     srcBLen = srcALen;
  72              		.loc 1 145 13
  73 0030 BB68     		ldr	r3, [r7, #8]
  74 0032 3B60     		str	r3, [r7]
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     srcALen = j;
  75              		.loc 1 146 13
  76 0034 FB69     		ldr	r3, [r7, #28]
  77 0036 BB60     		str	r3, [r7, #8]
  78              	.L3:
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* The function is internally
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * divided into three stages according to the number of multiplications that has to be
ARM GAS  /tmp/cczVI56J.s 			page 5


 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * algorithm, the multiplications increase by one for every iteration.
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * for every iteration. */
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* The algorithm is implemented in three stages.
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      The loop counters of each stage is initiated here. */
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   blockSize1 = srcBLen - 1U;
  79              		.loc 1 160 14
  80 0038 3B68     		ldr	r3, [r7]
  81 003a 013B     		subs	r3, r3, #1
  82 003c 3B63     		str	r3, [r7, #48]
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   blockSize2 = srcALen - (srcBLen - 1U);
  83              		.loc 1 161 24
  84 003e BA68     		ldr	r2, [r7, #8]
  85 0040 3B68     		ldr	r3, [r7]
  86 0042 D31A     		subs	r3, r2, r3
  87              		.loc 1 161 14
  88 0044 0133     		adds	r3, r3, #1
  89 0046 BB61     		str	r3, [r7, #24]
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   blockSize3 = blockSize1;
  90              		.loc 1 162 14
  91 0048 3B6B     		ldr	r3, [r7, #48]
  92 004a FB62     		str	r3, [r7, #44]
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Initializations of stage1
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * -------------------------*/
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* sum = x[0] * y[0]
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ....
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    */
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      The count variable holds the number of MAC operations performed */
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   count = 1U;
  93              		.loc 1 176 9
  94 004c 0123     		movs	r3, #1
  95 004e 7B62     		str	r3, [r7, #36]
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   px = pIn1;
  96              		.loc 1 179 6
  97 0050 FB6C     		ldr	r3, [r7, #76]
  98 0052 3B64     		str	r3, [r7, #64]
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   py = pIn2;
  99              		.loc 1 182 6
 100 0054 BB6C     		ldr	r3, [r7, #72]
 101 0056 FB63     		str	r3, [r7, #60]
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* ------------------------
ARM GAS  /tmp/cczVI56J.s 			page 6


 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Stage1 process
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ----------------------*/
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON)
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t vec1;
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t vec2;
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t res = vdupq_n_f32(0) ;
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x2_t accum = vdup_n_f32(0);
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* The first stage starts here */
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   while (blockSize1 > 0U)
 102              		.loc 1 196 9
 103 0058 2FE0     		b	.L4
 104              	.L7:
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Accumulator is made zero for every iteration */
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
 105              		.loc 1 199 9
 106 005a 4FF00003 		mov	r3, #0
 107 005e 7B63     		str	r3, [r7, #52]	@ float
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = count >> 2U;
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON)
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     res = vdupq_n_f32(0) ;
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     accum = vdup_n_f32(0);
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Compute 4 MACs simultaneously. */
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = count >> 2U;
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* First part of the processing.  Compute 4 MACs at a time.
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       vec1 = vld1q_f32(px);
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       vec2 = vld1q_f32(py-3);
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       vec2 = vrev64q_f32(vec2);
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       vec2 = vcombine_f32(vget_high_f32(vec2), vget_low_f32(vec2));
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       res = vmlaq_f32(res,vec1, vec2);
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Increment pointers */
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px += 4;
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       py -= 4; 
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     sum += accum[0] + accum[1];
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      ** No loop unrolling is used. */
ARM GAS  /tmp/cczVI56J.s 			page 7


 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = count & 3;
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* x[0] * y[srcBLen - 1] */
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* x[1] * y[srcBLen - 2] */
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* x[2] * y[srcBLen - 3] */
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* x[3] * y[srcBLen - 4] */
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement loop counter */
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = count % 0x4U;
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialize k with number of samples */
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = count;
 108              		.loc 1 264 7
 109 0060 7B6A     		ldr	r3, [r7, #36]
 110 0062 BB62     		str	r3, [r7, #40]
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON) */
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 111              		.loc 1 268 11
 112 0064 14E0     		b	.L5
 113              	.L6:
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Perform the multiply-accumulate */
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 114              		.loc 1 271 17
 115 0066 3B6C     		ldr	r3, [r7, #64]
 116 0068 1A1D     		adds	r2, r3, #4
 117 006a 3A64     		str	r2, [r7, #64]
 118              		.loc 1 271 14
 119 006c 93ED007A 		vldr.32	s14, [r3]
 120              		.loc 1 271 25
 121 0070 FB6B     		ldr	r3, [r7, #60]
 122 0072 1A1F     		subs	r2, r3, #4
 123 0074 FA63     		str	r2, [r7, #60]
 124              		.loc 1 271 22
 125 0076 D3ED007A 		vldr.32	s15, [r3]
 126              		.loc 1 271 20
 127 007a 67EE277A 		vmul.f32	s15, s14, s15
 128              		.loc 1 271 11
 129 007e 97ED0D7A 		vldr.32	s14, [r7, #52]
ARM GAS  /tmp/cczVI56J.s 			page 8


 130 0082 77EE277A 		vadd.f32	s15, s14, s15
 131 0086 C7ED0D7A 		vstr.32	s15, [r7, #52]
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement loop counter */
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 132              		.loc 1 274 8
 133 008a BB6A     		ldr	r3, [r7, #40]
 134 008c 013B     		subs	r3, r3, #1
 135 008e BB62     		str	r3, [r7, #40]
 136              	.L5:
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 137              		.loc 1 268 11
 138 0090 BB6A     		ldr	r3, [r7, #40]
 139 0092 002B     		cmp	r3, #0
 140 0094 E7D1     		bne	.L6
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     *pOut++ = sum;
 141              		.loc 1 278 10
 142 0096 7B6C     		ldr	r3, [r7, #68]
 143 0098 1A1D     		adds	r2, r3, #4
 144 009a 7A64     		str	r2, [r7, #68]
 145              		.loc 1 278 13
 146 009c 7A6B     		ldr	r2, [r7, #52]	@ float
 147 009e 1A60     		str	r2, [r3]	@ float
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     py = pIn2 + count;
 148              		.loc 1 281 15
 149 00a0 7B6A     		ldr	r3, [r7, #36]
 150 00a2 9B00     		lsls	r3, r3, #2
 151              		.loc 1 281 8
 152 00a4 BA6C     		ldr	r2, [r7, #72]
 153 00a6 1344     		add	r3, r3, r2
 154 00a8 FB63     		str	r3, [r7, #60]
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     px = pIn1;
 155              		.loc 1 282 8
 156 00aa FB6C     		ldr	r3, [r7, #76]
 157 00ac 3B64     		str	r3, [r7, #64]
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Increment MAC count */
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     count++;
 158              		.loc 1 285 10
 159 00ae 7B6A     		ldr	r3, [r7, #36]
 160 00b0 0133     		adds	r3, r3, #1
 161 00b2 7B62     		str	r3, [r7, #36]
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Decrement loop counter */
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blockSize1--;
 162              		.loc 1 288 15
 163 00b4 3B6B     		ldr	r3, [r7, #48]
 164 00b6 013B     		subs	r3, r3, #1
 165 00b8 3B63     		str	r3, [r7, #48]
 166              	.L4:
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 167              		.loc 1 196 9
ARM GAS  /tmp/cczVI56J.s 			page 9


 168 00ba 3B6B     		ldr	r3, [r7, #48]
 169 00bc 002B     		cmp	r3, #0
 170 00be CCD1     		bne	.L7
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Initializations of stage2
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ------------------------*/
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen]   * y[0]
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ....
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    */
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   px = pIn1;
 171              		.loc 1 302 6
 172 00c0 FB6C     		ldr	r3, [r7, #76]
 173 00c2 3B64     		str	r3, [r7, #64]
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   pSrc2 = pIn2 + (srcBLen - 1U);
 174              		.loc 1 305 16
 175 00c4 3A68     		ldr	r2, [r7]
 176 00c6 6FF04043 		mvn	r3, #-1073741824
 177 00ca 1344     		add	r3, r3, r2
 178 00cc 9B00     		lsls	r3, r3, #2
 179              		.loc 1 305 9
 180 00ce BA6C     		ldr	r2, [r7, #72]
 181 00d0 1344     		add	r3, r3, r2
 182 00d2 7B61     		str	r3, [r7, #20]
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 183              		.loc 1 306 6
 184 00d4 7B69     		ldr	r3, [r7, #20]
 185 00d6 FB63     		str	r3, [r7, #60]
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* count is index by which the pointer pIn1 to be incremented */
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   count = 0U;
 186              		.loc 1 309 9
 187 00d8 0023     		movs	r3, #0
 188 00da 7B62     		str	r3, [r7, #36]
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* -------------------
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Stage2 process
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ------------------*/
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * So, to loop unroll over blockSize2,
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * srcBLen should be greater than or equal to 4 */
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   if (srcBLen >= 4U)
 189              		.loc 1 318 6
 190 00dc 3B68     		ldr	r3, [r7]
 191 00de 032B     		cmp	r3, #3
 192 00e0 36D9     		bls	.L8
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    
ARM GAS  /tmp/cczVI56J.s 			page 10


 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON)
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t c;
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t x1v;
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t x2v;
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       uint32x4_t x1v_u;
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       uint32x4_t x2v_u;
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       uint32x4_t x_u;
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t x;
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t res = vdupq_n_f32(0) ;
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2 >> 2U;
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0U)
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Set all accumulators to zero */
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc0 = 0.0f;
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc1 = 0.0f;
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc2 = 0.0f;
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc3 = 0.0f;
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        /* Apply loop unrolling and compute 4 MACs simultaneously. */
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen >> 2U;
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON)
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       res = vdupq_n_f32(0) ;
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x1v = vld1q_f32(px);
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x2v = vld1q_f32(px+4);
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       do
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c = vld1q_f32(py-3);
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         px += 4;
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x = x1v;
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         res = vmlaq_n_f32(res,x,c[3]);
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 	x = vextq_f32(x1v,x2v,1);
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         res = vmlaq_n_f32(res,x,c[2]);
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x = vextq_f32(x1v,x2v,2);
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 	res = vmlaq_n_f32(res,x,c[1]);
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 	x = vextq_f32(x1v,x2v,3);
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 	res = vmlaq_n_f32(res,x,c[0]);
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         py -= 4; 
 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1v = x2v ;
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x2v = vld1q_f32(px+4);
ARM GAS  /tmp/cczVI56J.s 			page 11


 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       } while (--k);
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        ** No loop unrolling is used. */
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen & 0x3;
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x1v = vld1q_f32(px);
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px += 4;
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 5] sample */
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         res = vmlaq_n_f32(res,x1v,c0);
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Reuse the present samples for the next MAC */
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1v[0] = x1v[1];
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1v[1] = x1v[2];
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1v[2] = x1v[3];
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1v[3] = *(px++);
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc0 = res[0];
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc1 = res[1];
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc2 = res[2];
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       acc3 = res[3];
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* read x[0], x[1], x[2] samples */
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x0 = *px++;
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x1 = *px++;
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x2 = *px++;
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       do
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 1] sample */
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *py--;
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read x[3] sample */
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x3 = *(px);
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] */
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc0 += x0 * c0;
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] */
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc1 += x1 * c0;
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] */
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc2 += x2 * c0;
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] */
ARM GAS  /tmp/cczVI56J.s 			page 12


 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc3 += x3 * c0;
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 2] sample */
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *py--;
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read x[4] sample */
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x0 = *(px + 1U);
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[1] * y[srcBLen - 2] */
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc0 += x1 * c0;
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[2] * y[srcBLen - 2] */
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc1 += x2 * c0;
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[3] * y[srcBLen - 2] */
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc2 += x3 * c0;
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[4] * y[srcBLen - 2] */
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc3 += x0 * c0;
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 3] sample */
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *py--;
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read x[5] sample */
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1 = *(px + 2U);
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] */
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc0 += x2 * c0;
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[3] * y[srcBLen - 2] */
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc1 += x3 * c0;
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[4] * y[srcBLen - 2] */
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc2 += x0 * c0;
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[5] * y[srcBLen - 2] */
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc3 += x1 * c0;
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 4] sample */
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *py--;
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read x[6] sample */
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x2 = *(px + 3U);
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         px += 4U;
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[3] * y[srcBLen - 4] */
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc0 += x3 * c0;
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[4] * y[srcBLen - 4] */
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc1 += x0 * c0;
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[5] * y[srcBLen - 4] */
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc2 += x1 * c0;
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[6] * y[srcBLen - 4] */
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc3 += x2 * c0;
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       } while (--k);
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        ** No loop unrolling is used. */
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen % 0x4U;
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 5] sample */
ARM GAS  /tmp/cczVI56J.s 			page 13


 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         c0 = *py--;
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Read x[7] sample */
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x3 = *px++;
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[4] * y[srcBLen - 5] */
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc0 += x0 * c0;
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[5] * y[srcBLen - 5] */
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc1 += x1 * c0;
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[6] * y[srcBLen - 5] */
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc2 += x2 * c0;
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[7] * y[srcBLen - 5] */
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         acc3 += x3 * c0;
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Reuse the present samples for the next MAC */
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x0 = x1;
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x1 = x2;
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x2 = x3;
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc0;
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc1;
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc2;
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc3;
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Increment the pointer pIn1 index, count by 4 */
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       count += 4U;
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      ** No loop unrolling is used. */
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2 % 0x4U;
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialize blkCnt with number of samples */
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2;
 193              		.loc 1 540 12
 194 00e2 BB69     		ldr	r3, [r7, #24]
 195 00e4 3B62     		str	r3, [r7, #32]
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined (ARM_MATH_NEON)*/
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0U)
 196              		.loc 1 544 11
ARM GAS  /tmp/cczVI56J.s 			page 14


 197 00e6 2FE0     		b	.L9
 198              	.L12:
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Accumulator is made zero for every iteration */
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum = 0.0f;
 199              		.loc 1 547 11
 200 00e8 4FF00003 		mov	r3, #0
 201 00ec 7B63     		str	r3, [r7, #52]	@ float
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON) || defined (ARM_MATH_LOOPUNROLL)
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen >> 2U;
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_NEON)
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t res = vdupq_n_f32(0) ;
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t x = vdupq_n_f32(0) ;
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x4_t y = vdupq_n_f32(0) ;
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       float32x2_t accum = vdup_n_f32(0) ;
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* First part of the processing.  Compute 4 MACs at a time.
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         x = vld1q_f32(px);
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         y = vld1q_f32(py-3);
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         y = vrev64q_f32(y);
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         y = vcombine_f32(vget_high_f32(y), vget_low_f32(y));
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         res = vmlaq_f32(res,x,y);
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         px += 4 ;
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         py -= 4 ;
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += accum[0] + accum[1]; 
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****        ** No loop unrolling is used. */
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen & 0x3U;
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement loop counter */
 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
ARM GAS  /tmp/cczVI56J.s 			page 15


 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen % 0x4U;
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* if defined (ARM_MATH_NEON) */
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Initialize blkCnt with number of samples */
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen;
 202              		.loc 1 604 9
 203 00ee 3B68     		ldr	r3, [r7]
 204 00f0 BB62     		str	r3, [r7, #40]
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined(ARM_MATH_NEON) || defined (ARM_MATH_LOOPUNROLL) */
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 205              		.loc 1 608 13
 206 00f2 14E0     		b	.L10
 207              	.L11:
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 208              		.loc 1 611 19
 209 00f4 3B6C     		ldr	r3, [r7, #64]
 210 00f6 1A1D     		adds	r2, r3, #4
 211 00f8 3A64     		str	r2, [r7, #64]
 212              		.loc 1 611 16
 213 00fa 93ED007A 		vldr.32	s14, [r3]
 214              		.loc 1 611 27
 215 00fe FB6B     		ldr	r3, [r7, #60]
 216 0100 1A1F     		subs	r2, r3, #4
 217 0102 FA63     		str	r2, [r7, #60]
 218              		.loc 1 611 24
 219 0104 D3ED007A 		vldr.32	s15, [r3]
 220              		.loc 1 611 22
 221 0108 67EE277A 		vmul.f32	s15, s14, s15
 222              		.loc 1 611 13
 223 010c 97ED0D7A 		vldr.32	s14, [r7, #52]
 224 0110 77EE277A 		vadd.f32	s15, s14, s15
 225 0114 C7ED0D7A 		vstr.32	s15, [r7, #52]
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 226              		.loc 1 614 10
 227 0118 BB6A     		ldr	r3, [r7, #40]
 228 011a 013B     		subs	r3, r3, #1
 229 011c BB62     		str	r3, [r7, #40]
 230              	.L10:
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 231              		.loc 1 608 13
 232 011e BB6A     		ldr	r3, [r7, #40]
 233 0120 002B     		cmp	r3, #0
 234 0122 E7D1     		bne	.L11
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = sum;
 235              		.loc 1 618 12
ARM GAS  /tmp/cczVI56J.s 			page 16


 236 0124 7B6C     		ldr	r3, [r7, #68]
 237 0126 1A1D     		adds	r2, r3, #4
 238 0128 7A64     		str	r2, [r7, #68]
 239              		.loc 1 618 15
 240 012a 7A6B     		ldr	r2, [r7, #52]	@ float
 241 012c 1A60     		str	r2, [r3]	@ float
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Increment the MAC count */
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       count++;
 242              		.loc 1 621 12
 243 012e 7B6A     		ldr	r3, [r7, #36]
 244 0130 0133     		adds	r3, r3, #1
 245 0132 7B62     		str	r3, [r7, #36]
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 246              		.loc 1 624 17
 247 0134 7B6A     		ldr	r3, [r7, #36]
 248 0136 9B00     		lsls	r3, r3, #2
 249              		.loc 1 624 10
 250 0138 FA6C     		ldr	r2, [r7, #76]
 251 013a 1344     		add	r3, r3, r2
 252 013c 3B64     		str	r3, [r7, #64]
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 253              		.loc 1 625 10
 254 013e 7B69     		ldr	r3, [r7, #20]
 255 0140 FB63     		str	r3, [r7, #60]
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 256              		.loc 1 628 13
 257 0142 3B6A     		ldr	r3, [r7, #32]
 258 0144 013B     		subs	r3, r3, #1
 259 0146 3B62     		str	r3, [r7, #32]
 260              	.L9:
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 261              		.loc 1 544 11
 262 0148 3B6A     		ldr	r3, [r7, #32]
 263 014a 002B     		cmp	r3, #0
 264 014c CCD1     		bne	.L12
 265 014e 35E0     		b	.L13
 266              	.L8:
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   else
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* If the srcBLen is not a multiple of 4,
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2;
 267              		.loc 1 635 12
 268 0150 BB69     		ldr	r3, [r7, #24]
 269 0152 3B62     		str	r3, [r7, #32]
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0U)
 270              		.loc 1 637 11
 271 0154 2FE0     		b	.L14
 272              	.L17:
ARM GAS  /tmp/cczVI56J.s 			page 17


 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Accumulator is made zero for every iteration */
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum = 0.0f;
 273              		.loc 1 640 11
 274 0156 4FF00003 		mov	r3, #0
 275 015a 7B63     		str	r3, [r7, #52]	@ float
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* srcBLen number of MACS should be performed */
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen;
 276              		.loc 1 643 9
 277 015c 3B68     		ldr	r3, [r7]
 278 015e BB62     		str	r3, [r7, #40]
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       while (k > 0U)
 279              		.loc 1 645 13
 280 0160 14E0     		b	.L15
 281              	.L16:
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 282              		.loc 1 648 19
 283 0162 3B6C     		ldr	r3, [r7, #64]
 284 0164 1A1D     		adds	r2, r3, #4
 285 0166 3A64     		str	r2, [r7, #64]
 286              		.loc 1 648 16
 287 0168 93ED007A 		vldr.32	s14, [r3]
 288              		.loc 1 648 27
 289 016c FB6B     		ldr	r3, [r7, #60]
 290 016e 1A1F     		subs	r2, r3, #4
 291 0170 FA63     		str	r2, [r7, #60]
 292              		.loc 1 648 24
 293 0172 D3ED007A 		vldr.32	s15, [r3]
 294              		.loc 1 648 22
 295 0176 67EE277A 		vmul.f32	s15, s14, s15
 296              		.loc 1 648 13
 297 017a 97ED0D7A 		vldr.32	s14, [r7, #52]
 298 017e 77EE277A 		vadd.f32	s15, s14, s15
 299 0182 C7ED0D7A 		vstr.32	s15, [r7, #52]
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         k--;
 300              		.loc 1 651 10
 301 0186 BB6A     		ldr	r3, [r7, #40]
 302 0188 013B     		subs	r3, r3, #1
 303 018a BB62     		str	r3, [r7, #40]
 304              	.L15:
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 305              		.loc 1 645 13
 306 018c BB6A     		ldr	r3, [r7, #40]
 307 018e 002B     		cmp	r3, #0
 308 0190 E7D1     		bne	.L16
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = sum;
 309              		.loc 1 655 12
 310 0192 7B6C     		ldr	r3, [r7, #68]
ARM GAS  /tmp/cczVI56J.s 			page 18


 311 0194 1A1D     		adds	r2, r3, #4
 312 0196 7A64     		str	r2, [r7, #68]
 313              		.loc 1 655 15
 314 0198 7A6B     		ldr	r2, [r7, #52]	@ float
 315 019a 1A60     		str	r2, [r3]	@ float
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Increment the MAC count */
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       count++;
 316              		.loc 1 658 12
 317 019c 7B6A     		ldr	r3, [r7, #36]
 318 019e 0133     		adds	r3, r3, #1
 319 01a0 7B62     		str	r3, [r7, #36]
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 660:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 661:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 320              		.loc 1 661 17
 321 01a2 7B6A     		ldr	r3, [r7, #36]
 322 01a4 9B00     		lsls	r3, r3, #2
 323              		.loc 1 661 10
 324 01a6 FA6C     		ldr	r2, [r7, #76]
 325 01a8 1344     		add	r3, r3, r2
 326 01aa 3B64     		str	r3, [r7, #64]
 662:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 327              		.loc 1 662 10
 328 01ac 7B69     		ldr	r3, [r7, #20]
 329 01ae FB63     		str	r3, [r7, #60]
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 664:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 330              		.loc 1 665 13
 331 01b0 3B6A     		ldr	r3, [r7, #32]
 332 01b2 013B     		subs	r3, r3, #1
 333 01b4 3B62     		str	r3, [r7, #32]
 334              	.L14:
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 335              		.loc 1 637 11
 336 01b6 3B6A     		ldr	r3, [r7, #32]
 337 01b8 002B     		cmp	r3, #0
 338 01ba CCD1     		bne	.L17
 339              	.L13:
 666:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 667:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 668:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 669:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 670:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Initializations of stage3
 672:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * -------------------------*/
 673:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 674:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 675:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 676:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ....
 677:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 678:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 679:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    */
 680:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 681:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 682:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****      The blockSize3 variable holds the number of MAC operations performed */
ARM GAS  /tmp/cczVI56J.s 			page 19


 683:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 684:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 685:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   pSrc1 = pIn1 + (srcALen - (srcBLen - 1U));
 340              		.loc 1 685 27
 341 01bc BA68     		ldr	r2, [r7, #8]
 342 01be 3B68     		ldr	r3, [r7]
 343 01c0 D31A     		subs	r3, r2, r3
 344 01c2 0133     		adds	r3, r3, #1
 345              		.loc 1 685 16
 346 01c4 9B00     		lsls	r3, r3, #2
 347              		.loc 1 685 9
 348 01c6 FA6C     		ldr	r2, [r7, #76]
 349 01c8 1344     		add	r3, r3, r2
 350 01ca BB63     		str	r3, [r7, #56]
 686:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   px = pSrc1;
 351              		.loc 1 686 6
 352 01cc BB6B     		ldr	r3, [r7, #56]
 353 01ce 3B64     		str	r3, [r7, #64]
 687:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 688:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 689:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   pSrc2 = pIn2 + (srcBLen - 1U);
 354              		.loc 1 689 16
 355 01d0 3A68     		ldr	r2, [r7]
 356 01d2 6FF04043 		mvn	r3, #-1073741824
 357 01d6 1344     		add	r3, r3, r2
 358 01d8 9B00     		lsls	r3, r3, #2
 359              		.loc 1 689 9
 360 01da BA6C     		ldr	r2, [r7, #72]
 361 01dc 1344     		add	r3, r3, r2
 362 01de 7B61     		str	r3, [r7, #20]
 690:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 363              		.loc 1 690 6
 364 01e0 7B69     		ldr	r3, [r7, #20]
 365 01e2 FB63     		str	r3, [r7, #60]
 691:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 692:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* -------------------
 693:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * Stage3 process
 694:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****    * ------------------*/
 695:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   while (blockSize3 > 0U)
 366              		.loc 1 695 9
 367 01e4 2CE0     		b	.L18
 368              	.L21:
 696:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 697:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Accumulator is made zero for every iteration */
 698:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
 369              		.loc 1 698 9
 370 01e6 4FF00003 		mov	r3, #0
 371 01ea 7B63     		str	r3, [r7, #52]	@ float
 699:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 700:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 701:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 702:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = blockSize3 >> 2U;
 703:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 704:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #if defined(ARM_MATH_NEON)
 705:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t res = vdupq_n_f32(0) ;
 706:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t x = vdupq_n_f32(0) ;
 707:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x4_t y = vdupq_n_f32(0) ;
ARM GAS  /tmp/cczVI56J.s 			page 20


 708:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     float32x2_t accum = vdup_n_f32(0) ;
 709:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 710:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 711:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 712:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       x = vld1q_f32(px);
 713:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       y = vld1q_f32(py-3);
 714:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 715:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       y = vrev64q_f32(y);
 716:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       y = vcombine_f32(vget_high_f32(y), vget_low_f32(y));
 717:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 718:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       res = vmlaq_f32(res,x,y);
 719:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 720:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       px += 4 ;
 721:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       py -= 4 ;
 722:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 723:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 724:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 725:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 726:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 727:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 728:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     sum += accum[0] + accum[1]; 
 729:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 730:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 731:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 732:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 733:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Perform the multiply-accumulate */
 734:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 735:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 736:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 737:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 738:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 739:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 740:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 741:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 742:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 743:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 744:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 745:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 746:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement loop counter */
 747:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 748:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 749:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined (ARM_MATH_NEON) */
 750:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 751:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 752:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = blockSize3 % 0x4U;
 753:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 754:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 755:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialize blkCnt with number of samples */
 756:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     k = blockSize3;
 372              		.loc 1 756 7
 373 01ec FB6A     		ldr	r3, [r7, #44]
 374 01ee BB62     		str	r3, [r7, #40]
 757:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 758:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if defined (ARM_MATH_NEON) || defined (ARM_MATH_LOOPUNROLL)*/
 759:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 760:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     while (k > 0U)
 375              		.loc 1 760 11
ARM GAS  /tmp/cczVI56J.s 			page 21


 376 01f0 14E0     		b	.L19
 377              	.L20:
 761:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 762:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Perform the multiply-accumulate */
 763:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 764:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 378              		.loc 1 764 17
 379 01f2 3B6C     		ldr	r3, [r7, #64]
 380 01f4 1A1D     		adds	r2, r3, #4
 381 01f6 3A64     		str	r2, [r7, #64]
 382              		.loc 1 764 14
 383 01f8 93ED007A 		vldr.32	s14, [r3]
 384              		.loc 1 764 25
 385 01fc FB6B     		ldr	r3, [r7, #60]
 386 01fe 1A1F     		subs	r2, r3, #4
 387 0200 FA63     		str	r2, [r7, #60]
 388              		.loc 1 764 22
 389 0202 D3ED007A 		vldr.32	s15, [r3]
 390              		.loc 1 764 20
 391 0206 67EE277A 		vmul.f32	s15, s14, s15
 392              		.loc 1 764 11
 393 020a 97ED0D7A 		vldr.32	s14, [r7, #52]
 394 020e 77EE277A 		vadd.f32	s15, s14, s15
 395 0212 C7ED0D7A 		vstr.32	s15, [r7, #52]
 765:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 766:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Decrement loop counter */
 767:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       k--;
 396              		.loc 1 767 8
 397 0216 BB6A     		ldr	r3, [r7, #40]
 398 0218 013B     		subs	r3, r3, #1
 399 021a BB62     		str	r3, [r7, #40]
 400              	.L19:
 760:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 401              		.loc 1 760 11
 402 021c BB6A     		ldr	r3, [r7, #40]
 403 021e 002B     		cmp	r3, #0
 404 0220 E7D1     		bne	.L20
 768:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 769:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 770:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 771:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     *pOut++ = sum;
 405              		.loc 1 771 10
 406 0222 7B6C     		ldr	r3, [r7, #68]
 407 0224 1A1D     		adds	r2, r3, #4
 408 0226 7A64     		str	r2, [r7, #68]
 409              		.loc 1 771 13
 410 0228 7A6B     		ldr	r2, [r7, #52]	@ float
 411 022a 1A60     		str	r2, [r3]	@ float
 772:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 773:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 774:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     px = ++pSrc1;
 412              		.loc 1 774 8
 413 022c BB6B     		ldr	r3, [r7, #56]
 414 022e 0433     		adds	r3, r3, #4
 415 0230 BB63     		str	r3, [r7, #56]
 416 0232 BB6B     		ldr	r3, [r7, #56]
 417 0234 3B64     		str	r3, [r7, #64]
ARM GAS  /tmp/cczVI56J.s 			page 22


 775:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     py = pSrc2;
 418              		.loc 1 775 8
 419 0236 7B69     		ldr	r3, [r7, #20]
 420 0238 FB63     		str	r3, [r7, #60]
 776:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 777:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Decrement the loop counter */
 778:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     blockSize3--;
 421              		.loc 1 778 15
 422 023a FB6A     		ldr	r3, [r7, #44]
 423 023c 013B     		subs	r3, r3, #1
 424 023e FB62     		str	r3, [r7, #44]
 425              	.L18:
 695:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 426              		.loc 1 695 9
 427 0240 FB6A     		ldr	r3, [r7, #44]
 428 0242 002B     		cmp	r3, #0
 429 0244 CFD1     		bne	.L21
 779:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 780:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 781:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #else
 782:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** /* alternate version for CM0_FAMILY */
 783:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 784:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *pIn1 = pSrcA;                       /* InputA pointer */
 785:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   const float32_t *pIn2 = pSrcB;                       /* InputB pointer */
 786:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         float32_t sum;                                 /* Accumulator */
 787:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         uint32_t i, j;                                 /* Loop counters */
 788:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 789:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   /* Loop to calculate convolution for output length number of times */
 790:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   for (i = 0U; i < (srcALen + srcBLen - 1U); i++)
 791:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   {
 792:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Initialize sum with zero to carry out MAC operations */
 793:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
 794:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 795:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Loop to perform MAC operations according to convolution equation */
 796:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     for (j = 0U; j <= i; j++)
 797:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     {
 798:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       /* Check the array limitations */
 799:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       if (((i - j) < srcBLen) && (j < srcALen))
 800:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       {
 801:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         /* z[i] += x[i-j] * y[j] */
 802:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****         sum += ( pIn1[j] * pIn2[i - j]);
 803:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****       }
 804:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     }
 805:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 806:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     /* Store the output in the destination buffer */
 807:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****     pDst[i] = sum;
 808:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c ****   }
 809:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 810:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
 811:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** 
 812:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_f32.c **** }
 430              		.loc 1 812 1
 431 0246 00BF     		nop
 432 0248 00BF     		nop
 433 024a 5437     		adds	r7, r7, #84
 434              	.LCFI3:
 435              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cczVI56J.s 			page 23


 436 024c BD46     		mov	sp, r7
 437              	.LCFI4:
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 024e 5DF8047B 		ldr	r7, [sp], #4
 441              	.LCFI5:
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
 444 0252 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE145:
 448              		.text
 449              	.Letext0:
 450              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 451              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 452              		.file 4 "/usr/include/newlib/sys/_types.h"
 453              		.file 5 "/usr/include/newlib/sys/reent.h"
 454              		.file 6 "/usr/include/newlib/sys/lock.h"
 455              		.file 7 "/usr/include/newlib/math.h"
 456              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cczVI56J.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_f32.c
     /tmp/cczVI56J.s:17     .text.arm_conv_f32:0000000000000000 $t
     /tmp/cczVI56J.s:25     .text.arm_conv_f32:0000000000000000 arm_conv_f32

NO UNDEFINED SYMBOLS
