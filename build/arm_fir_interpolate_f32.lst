ARM GAS  /tmp/ccMOHu7L.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_fir_interpolate_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_fir_interpolate_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_fir_interpolate_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_fir_interpolate_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Title:        arm_fir_interpolate_f32.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Description:  Floating-point FIR interpolation sequences
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
ARM GAS  /tmp/ccMOHu7L.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @defgroup FIR_Interpolate Finite Impulse Response (FIR) Interpolator
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   These functions combine an upsampler (zero stuffer) and an FIR filter.
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   They are used in multirate systems for increasing the sample rate of a signal without introducing
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   Conceptually, the functions are equivalent to the block diagram below:
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   \image html FIRInterpolator.gif "Components included in the FIR Interpolator functions"
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   After upsampling by a factor of <code>L</code>, the signal should be filtered by a lowpass filter
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   cutoff frequency of <code>1/L</code> in order to eliminate high frequency copies of the spectrum.
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The user of the function is responsible for providing the filter coefficients.
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The FIR interpolator functions provided in the CMSIS DSP Library combine the upsampler and FIR fi
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The upsampler inserts <code>L-1</code> zeros between each sample.
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   Instead of multiplying by these zero values, the FIR filter is designed to skip them.
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   This leads to an efficient implementation without any wasted effort.
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The functions operate on blocks of input and output data.
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <code>pSrc</code> points to an array of <code>blockSize</code> input values and
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <code>pDst</code> points to an array of <code>blockSize*L</code> output values.
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The library provides separate functions for Q15, Q31, and floating-point data types.
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Algorithm
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The functions use a polyphase filter structure:
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n] = b[0] * x[n] + b[L]   * x[n-1] + ... + b[L*(phaseLength-1)] * x[n-phaseLength+1]
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n+1] = b[1] * x[n] + b[L+1] * x[n-1] + ... + b[L*(phaseLength-1)+1] * x[n-phaseLength+1]
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ...
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n+(L-1)] = b[L-1] * x[n] + b[2*L-1] * x[n-1] + ....+ b[L*(phaseLength-1)+(L-1)] * x[n-phase
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    This approach is more efficient than straightforward upsample-then-filter algori
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    With this method the computation is reduced by a factor of <code>1/L</code> when
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pCoeffs</code> points to a coefficient array of size <code>numTaps</code>.
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>numTaps</code> must be a multiple of the interpolation factor <code>L</cod
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    initialization functions.
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Internally, the function divides the FIR filter's impulse response into shorter 
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>phaseLength=numTaps/L</code>.
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Coefficients are stored in time reversed order.
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pState</code> points to a state array of size <code>blockSize + phaseLengt
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Samples in the state buffer are stored in the order:
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      {x[n-phaseLength+1], x[n-phaseLength], x[n-phaseLength-1], x[n-phaseLength-2]....x[0], x[1], .
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The state variables are updated after each block of data is processed, the coeff
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Instance Structure
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The coefficients and state variables for a filter are stored together in an inst
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    A separate instance structure must be defined for each filter.
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Coefficient arrays may be shared among several instances while state variable ar
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    There are separate instance structure declarations for each of the 3 supported d
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Initialization Functions
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    There is also an associated initialization function for each data type.
ARM GAS  /tmp/ccMOHu7L.s 			page 3


  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The initialization function performs the following operations:
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Sets the values of the internal structure fields.
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Zeros out the values in the state buffer.
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Checks to make sure that the length of the filter is a multiple of the interpo
  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    To do this manually without calling the init function, assign the follow subfiel
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    L (interpolation factor), pCoeffs, phaseLength (numTaps / L), pState. Also set a
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Use of the initialization function is optional.
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    However, if the initialization function is used, then the instance structure can
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    To place an instance structure into a const data section, the instance structure
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The code below statically initializes each of the 3 different data type filter i
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_f32 S = {L, phaseLength, pCoeffs, pState};
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_q31 S = {L, phaseLength, pCoeffs, pState};
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_q15 S = {L, phaseLength, pCoeffs, pState};
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    where <code>L</code> is the interpolation factor; <code>phaseLength=numTaps/L</c
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    length of each of the shorter FIR filters used internally,
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pCoeffs</code> is the address of the coefficient buffer;
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pState</code> is the address of the state buffer.
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Be sure to set the values in the state buffer to zeros when doing static initial
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Fixed-Point Behavior
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Care must be taken when using the fixed-point versions of the FIR interpolate fi
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    In particular, the overflow and saturation behavior of the accumulator used in e
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Refer to the function specific documentation below for usage guidelines.
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @addtogroup FIR_Interpolate
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @{
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @brief         Processing function for floating-point FIR interpolator.
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     S          points to an instance of the floating-point FIR interpolator structure
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     pSrc       points to the block of input data
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[out]    pDst       points to the block of output data
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     blockSize  number of samples to process
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @return        none
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined(ARM_MATH_NEON)
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pState = S->pState;                 /* State pointer */
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;         /* Coefficient pointer */
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *ptr1;                               /* Temporary pointers for state buffer */
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                         /* Temporary pointers for coefficient buffer */
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t sum0;                                /* Accumulators */
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x0, c0;                              /* Temporary variables to hold state and coefficie
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t i, blkCnt, j;                         /* Loop counters */
ARM GAS  /tmp/ccMOHu7L.s 			page 4


 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint16_t phaseLen = S->phaseLength, tapCnt;    /* Length of each polyphase filter component */
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t acc0, acc1, acc2, acc3;
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x1, x2, x3;
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blkCntN4;
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t c1, c2, c3;
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t sum0v;
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t accV,accV0,accV1;
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t x0v,x1v,x2v,xa,xb;
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32x4_t x0v_u,x1v_u,x2v_u,xa_u,xb_u;
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x2_t tempV;
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState + (phaseLen - 1U);
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialise  blkCnt */
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize >> 3;
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCntN4 = blockSize & 7;
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling */
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input samples into the state buffer */
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pSrc);
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pSrc += 4;
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pSrc);
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pSrc += 4;
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       accV0 = vdupq_n_f32(0.0);
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       accV1 = vdupq_n_f32(0.0);
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0v = vld1q_f32(ptr1);
ARM GAS  /tmp/ccMOHu7L.s 			page 5


 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1v = vld1q_f32(ptr1 + 4);
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input samples */
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2v = vld1q_f32(ptr1 + 8);
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients */
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,x0v,c0);
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,x1v,c0);
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,1);
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,1);
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,xa,c1);
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c1);
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,2);
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,2);
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	accV0 = vmlaq_n_f32(accV0,xa,c2);
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c2);
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,3);
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,3);
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	accV0 = vmlaq_n_f32(accV0,xa,c3);
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c3);
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr1 += 4;
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0v = x1v;
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = x2v;
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2v = vld1q_f32(ptr1 + 8);
ARM GAS  /tmp/ccMOHu7L.s 			page 6


 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       switch (tapCnt)
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 3:
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,1);
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,1);
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,xa,c0);
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,2);
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,2);
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	     accV0 = vmlaq_n_f32(accV0,xa,c0);
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 2:
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,1);
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,1);
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              
 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 	     accV0 = vmlaq_n_f32(accV0,xa,c0);
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 1:
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         default:
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
ARM GAS  /tmp/ccMOHu7L.s 			page 7


 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst = accV0[0];
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + S->L) = accV0[1];
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = accV0[2];
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = accV0[3];
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 4 * S->L) = accV1[0];
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 5 * S->L) = accV1[1];
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 6 * S->L) = accV1[2];
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 7 * S->L) = accV1[3];
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 8;
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 7;
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** No loop unrolling is used. */
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCntN4 > 0U)
 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0v = vdupq_n_f32(0.0);
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
ARM GAS  /tmp/ccMOHu7L.s 			page 8


 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v[0] = *(ptr2);
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0v = vld1q_f32(ptr1);
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr1 += 4;
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v[1] = *(ptr2);
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v[2] = *(ptr2);
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v[3] = *(ptr2);
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0v = vmlaq_f32(sum0v,x0v,x1v);
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tempV = vpadd_f32(vget_low_f32(sum0v),vget_high_f32(sum0v));
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = tempV[0] + tempV[1];
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *(ptr1++) * (*ptr2);
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
ARM GAS  /tmp/ccMOHu7L.s 			page 9


 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCntN4--;
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the satrt of the state buffer.
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState;
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) >> 2U;
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pState);
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState += 4;
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) % 0x04U;
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
ARM GAS  /tmp/ccMOHu7L.s 			page 10


 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t * pDst,
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t blockSize)
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
  28              		.loc 1 492 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 91B0     		sub	sp, sp, #68
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 72
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if (1)
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** //#if !defined(ARM_MATH_CM0_FAMILY)
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pState = S->pState;                 /* State pointer */
  47              		.loc 1 496 20
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 9B68     		ldr	r3, [r3, #8]
  50 0012 FB63     		str	r3, [r7, #60]
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  51              		.loc 1 497 20
  52 0014 FB68     		ldr	r3, [r7, #12]
  53 0016 5B68     		ldr	r3, [r3, #4]
  54 0018 BB61     		str	r3, [r7, #24]
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pStateCur;                          /* Points to the current sample of the state
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *ptr1;                               /* Temporary pointer for state buffer */
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                               /* Temporary pointer for coefficient buffer 
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t sum0;                                /* Accumulators */
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t i, blkCnt, tapCnt;                    /* Loop counters */
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t phaseLen = S->phaseLength;            /* Length of each polyphase filter component
  55              		.loc 1 503 30
  56 001a FB68     		ldr	r3, [r7, #12]
  57 001c 5B88     		ldrh	r3, [r3, #2]
  58              		.loc 1 503 18
  59 001e 7B61     		str	r3, [r7, #20]
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t j;
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t acc0, acc1, acc2, acc3;
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t x0, x1, x2, x3;
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t c0, c1, c2, c3;
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
ARM GAS  /tmp/ccMOHu7L.s 			page 11


 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCur points to the location where the new input data should be written */
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState + (phaseLen - 1U);
  60              		.loc 1 514 16
  61 0020 FB68     		ldr	r3, [r7, #12]
  62 0022 9A68     		ldr	r2, [r3, #8]
  63              		.loc 1 514 25
  64 0024 7969     		ldr	r1, [r7, #20]
  65 0026 6FF04043 		mvn	r3, #-1073741824
  66 002a 0B44     		add	r3, r3, r1
  67 002c 9B00     		lsls	r3, r3, #2
  68              		.loc 1 514 13
  69 002e 1344     		add	r3, r3, r2
  70 0030 BB63     		str	r3, [r7, #56]
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize >> 2U;
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc0 = 0.0f;
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc1 = 0.0f;
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc2 = 0.0f;
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc3 = 0.0f;
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          Repeat until we've computed numTaps-(4*S->L) coefficients. */
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0 = *(ptr1++);
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1 = *(ptr1++);
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2 = *(ptr1++);
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
ARM GAS  /tmp/ccMOHu7L.s 			page 12


 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x1 * c1;
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x2 * c1;
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x3 * c1;
 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x0 * c1;
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = *(ptr1++);
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x2 * c2;
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x3 * c2;
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x0 * c2;
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x1 * c2;
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = *(ptr1++);
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x3 * c3;
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x0 * c3;
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x1 * c3;
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x2 * c3;
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
ARM GAS  /tmp/ccMOHu7L.s 			page 13


 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* update states for next sample processing */
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = x1;
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = x2;
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = x3;
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst           ) = acc0;
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst +     S->L) = acc1;
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = acc2;
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = acc3;
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement loop counter */
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 660:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 661:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 662:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 4;
 664:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 3;
 666:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 667:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
 668:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 669:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 670:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 672:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize % 0x4U;
ARM GAS  /tmp/ccMOHu7L.s 			page 14


 673:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 674:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 675:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 676:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialize blkCnt with number of samples */
 677:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize;
  71              		.loc 1 677 10
  72 0032 3B68     		ldr	r3, [r7]
  73 0034 7B62     		str	r3, [r7, #36]
 678:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 679:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 680:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 681:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
  74              		.loc 1 681 9
  75 0036 4EE0     		b	.L2
  76              	.L7:
 682:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 683:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 684:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
  77              		.loc 1 684 25
  78 0038 BA68     		ldr	r2, [r7, #8]
  79 003a 131D     		adds	r3, r2, #4
  80 003c BB60     		str	r3, [r7, #8]
  81              		.loc 1 684 15
  82 003e BB6B     		ldr	r3, [r7, #56]
  83 0040 191D     		adds	r1, r3, #4
  84 0042 B963     		str	r1, [r7, #56]
  85              		.loc 1 684 20
  86 0044 1268     		ldr	r2, [r2]	@ float
  87              		.loc 1 684 18
  88 0046 1A60     		str	r2, [r3]	@ float
 685:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 686:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 687:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
  89              		.loc 1 687 7
  90 0048 0123     		movs	r3, #1
  91 004a FB61     		str	r3, [r7, #28]
 688:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 689:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 690:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
  92              		.loc 1 690 10
  93 004c FB68     		ldr	r3, [r7, #12]
  94 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95              		.loc 1 690 7
  96 0050 BB62     		str	r3, [r7, #40]
 691:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 692:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
  97              		.loc 1 692 11
  98 0052 37E0     		b	.L3
  99              	.L6:
 693:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 694:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 695:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
 100              		.loc 1 695 12
 101 0054 4FF00003 		mov	r3, #0
 102 0058 FB62     		str	r3, [r7, #44]	@ float
 696:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 697:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
ARM GAS  /tmp/ccMOHu7L.s 			page 15


 698:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 103              		.loc 1 698 12
 104 005a FB6B     		ldr	r3, [r7, #60]
 105 005c 7B63     		str	r3, [r7, #52]
 699:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 700:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 701:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 106              		.loc 1 701 26
 107 005e FB68     		ldr	r3, [r7, #12]
 108 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 109 0062 1A46     		mov	r2, r3
 110              		.loc 1 701 30
 111 0064 FB69     		ldr	r3, [r7, #28]
 112 0066 D31A     		subs	r3, r2, r3
 113              		.loc 1 701 22
 114 0068 9B00     		lsls	r3, r3, #2
 115              		.loc 1 701 12
 116 006a BA69     		ldr	r2, [r7, #24]
 117 006c 1344     		add	r3, r3, r2
 118 006e 3B63     		str	r3, [r7, #48]
 702:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 703:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length.
 704:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          Repeat until we've computed numTaps-(4*S->L) coefficients. */
 705:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 706:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 707:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 708:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      /* Loop unrolling: Compute 4 outputs at a time */
 709:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 710:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 711:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 712:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 713:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 714:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 715:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 716:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 717:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 718:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 719:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 720:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 721:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 722:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 723:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 724:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 725:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 726:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 727:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 728:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 729:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 730:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 731:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 732:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 733:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 734:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop unrolling: Compute remaining outputs */
 735:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 736:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 737:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 738:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
ARM GAS  /tmp/ccMOHu7L.s 			page 16


 739:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize tapCnt with number of samples */
 740:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen;
 119              		.loc 1 740 14
 120 0070 7B69     		ldr	r3, [r7, #20]
 121 0072 3B62     		str	r3, [r7, #32]
 741:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 742:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 743:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 744:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 122              		.loc 1 744 13
 123 0074 18E0     		b	.L4
 124              	.L5:
 745:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 746:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 747:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 125              		.loc 1 747 22
 126 0076 7B6B     		ldr	r3, [r7, #52]
 127 0078 1A1D     		adds	r2, r3, #4
 128 007a 7A63     		str	r2, [r7, #52]
 129              		.loc 1 747 17
 130 007c 93ED007A 		vldr.32	s14, [r3]
 131              		.loc 1 747 27
 132 0080 3B6B     		ldr	r3, [r7, #48]
 133 0082 D3ED007A 		vldr.32	s15, [r3]
 134              		.loc 1 747 25
 135 0086 67EE277A 		vmul.f32	s15, s14, s15
 136              		.loc 1 747 14
 137 008a 97ED0B7A 		vldr.32	s14, [r7, #44]
 138 008e 77EE277A 		vadd.f32	s15, s14, s15
 139 0092 C7ED0B7A 		vstr.32	s15, [r7, #44]
 748:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 749:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 750:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 751:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 752:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 140              		.loc 1 752 18
 141 0096 FB68     		ldr	r3, [r7, #12]
 142 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 143              		.loc 1 752 14
 144 009a 9B00     		lsls	r3, r3, #2
 145 009c 3A6B     		ldr	r2, [r7, #48]
 146 009e 1344     		add	r3, r3, r2
 147 00a0 3B63     		str	r3, [r7, #48]
 753:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 754:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 755:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 148              		.loc 1 755 15
 149 00a2 3B6A     		ldr	r3, [r7, #32]
 150 00a4 013B     		subs	r3, r3, #1
 151 00a6 3B62     		str	r3, [r7, #32]
 152              	.L4:
 744:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 153              		.loc 1 744 13
 154 00a8 3B6A     		ldr	r3, [r7, #32]
 155 00aa 002B     		cmp	r3, #0
 156 00ac E3D1     		bne	.L5
 756:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
ARM GAS  /tmp/ccMOHu7L.s 			page 17


 757:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 758:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 759:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 157              		.loc 1 759 12
 158 00ae 7B68     		ldr	r3, [r7, #4]
 159 00b0 1A1D     		adds	r2, r3, #4
 160 00b2 7A60     		str	r2, [r7, #4]
 161              		.loc 1 759 15
 162 00b4 FA6A     		ldr	r2, [r7, #44]	@ float
 163 00b6 1A60     		str	r2, [r3]	@ float
 760:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 761:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 762:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 164              		.loc 1 762 8
 165 00b8 FB69     		ldr	r3, [r7, #28]
 166 00ba 0133     		adds	r3, r3, #1
 167 00bc FB61     		str	r3, [r7, #28]
 763:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 764:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 765:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 168              		.loc 1 765 8
 169 00be BB6A     		ldr	r3, [r7, #40]
 170 00c0 013B     		subs	r3, r3, #1
 171 00c2 BB62     		str	r3, [r7, #40]
 172              	.L3:
 692:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 173              		.loc 1 692 11
 174 00c4 BB6A     		ldr	r3, [r7, #40]
 175 00c6 002B     		cmp	r3, #0
 176 00c8 C4D1     		bne	.L6
 766:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 767:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 768:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 769:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 770:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 177              		.loc 1 770 12
 178 00ca FB6B     		ldr	r3, [r7, #60]
 179 00cc 0433     		adds	r3, r3, #4
 180 00ce FB63     		str	r3, [r7, #60]
 771:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 772:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 773:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 181              		.loc 1 773 11
 182 00d0 7B6A     		ldr	r3, [r7, #36]
 183 00d2 013B     		subs	r3, r3, #1
 184 00d4 7B62     		str	r3, [r7, #36]
 185              	.L2:
 681:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 186              		.loc 1 681 9
 187 00d6 7B6A     		ldr	r3, [r7, #36]
 188 00d8 002B     		cmp	r3, #0
 189 00da ADD1     		bne	.L7
 774:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 775:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 776:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
 777:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      Now copy the last phaseLen - 1 samples to the satrt of the state buffer.
 778:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      This prepares the state buffer for the next function call. */
ARM GAS  /tmp/ccMOHu7L.s 			page 18


 779:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 780:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 781:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState;
 190              		.loc 1 781 13
 191 00dc FB68     		ldr	r3, [r7, #12]
 192 00de 9B68     		ldr	r3, [r3, #8]
 193 00e0 BB63     		str	r3, [r7, #56]
 782:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 783:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 784:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 785:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 786:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) >> 2U;
 787:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 788:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 789:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 790:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 791:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 792:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 793:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 794:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 795:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 796:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
 797:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 798:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 799:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 800:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 801:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) % 0x04U;
 802:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 803:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 804:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 805:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Initialize tapCnt with number of samples */
 806:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt = (phaseLen - 1U);
 194              		.loc 1 806 12
 195 00e2 7B69     		ldr	r3, [r7, #20]
 196 00e4 013B     		subs	r3, r3, #1
 197 00e6 3B62     		str	r3, [r7, #32]
 807:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 808:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 809:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 810:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
 811:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 198              		.loc 1 811 9
 199 00e8 0AE0     		b	.L8
 200              	.L9:
 812:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 813:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 201              		.loc 1 813 27
 202 00ea FA6B     		ldr	r2, [r7, #60]
 203 00ec 131D     		adds	r3, r2, #4
 204 00ee FB63     		str	r3, [r7, #60]
 205              		.loc 1 813 15
 206 00f0 BB6B     		ldr	r3, [r7, #56]
 207 00f2 191D     		adds	r1, r3, #4
 208 00f4 B963     		str	r1, [r7, #56]
 209              		.loc 1 813 20
 210 00f6 1268     		ldr	r2, [r2]	@ float
 211              		.loc 1 813 18
ARM GAS  /tmp/ccMOHu7L.s 			page 19


 212 00f8 1A60     		str	r2, [r3]	@ float
 814:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 815:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
 816:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 213              		.loc 1 816 11
 214 00fa 3B6A     		ldr	r3, [r7, #32]
 215 00fc 013B     		subs	r3, r3, #1
 216 00fe 3B62     		str	r3, [r7, #32]
 217              	.L8:
 811:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 218              		.loc 1 811 9
 219 0100 3B6A     		ldr	r3, [r7, #32]
 220 0102 002B     		cmp	r3, #0
 221 0104 F1D1     		bne	.L9
 817:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 818:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 819:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 820:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /* alternate version for CM0_FAMILY */
 821:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 822:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pState = S->pState;                 /* State pointer */
 823:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
 824:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pStateCur;                        /* Points to the current sample of the state *
 825:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *ptr1;                               /* Temporary pointer for state buffer */
 826:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                               /* Temporary pointer for coefficient buffer 
 827:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t sum0;                                /* Accumulators */
 828:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t i, blkCnt, tapCnt;                    /* Loop counters */
 829:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t phaseLen = S->phaseLength;            /* Length of each polyphase filter component
 830:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 831:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 832:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCur points to the location where the new input data should be written */
 833:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState + (phaseLen - 1U);
 834:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 835:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Total number of intput samples */
 836:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize;
 837:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 838:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop over the blockSize. */
 839:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
 840:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 841:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 842:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 843:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 844:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 845:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
 846:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 847:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 848:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 849:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 850:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
 851:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 852:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 853:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 854:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 855:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 856:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (i - 1U);
 857:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 858:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length */
 859:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen;
ARM GAS  /tmp/ccMOHu7L.s 			page 20


 860:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 861:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 862:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 863:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 864:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 865:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 866:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 867:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 868:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 869:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 870:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 871:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 872:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 873:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 874:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 875:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 876:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement loop counter */
 877:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 878:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 879:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 880:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 881:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 882:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 883:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 884:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
 885:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 886:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 887:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 888:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
 889:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the start of the state buffer.
 890:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
 891:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 892:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 893:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState;
 894:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 895:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = phaseLen - 1U;
 896:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 897:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
 898:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 899:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 900:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 901:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 902:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
 903:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 904:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 905:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 906:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
 907:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 908:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 222              		.loc 1 908 1
 223 0106 00BF     		nop
 224 0108 00BF     		nop
 225 010a 4437     		adds	r7, r7, #68
 226              	.LCFI3:
 227              		.cfi_def_cfa_offset 4
 228 010c BD46     		mov	sp, r7
 229              	.LCFI4:
ARM GAS  /tmp/ccMOHu7L.s 			page 21


 230              		.cfi_def_cfa_register 13
 231              		@ sp needed
 232 010e 5DF8047B 		ldr	r7, [sp], #4
 233              	.LCFI5:
 234              		.cfi_restore 7
 235              		.cfi_def_cfa_offset 0
 236 0112 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE145:
 240              		.text
 241              	.Letext0:
 242              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 243              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 244              		.file 4 "/usr/include/newlib/sys/_types.h"
 245              		.file 5 "/usr/include/newlib/sys/reent.h"
 246              		.file 6 "/usr/include/newlib/sys/lock.h"
 247              		.file 7 "/usr/include/newlib/math.h"
 248              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccMOHu7L.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_fir_interpolate_f32.c
     /tmp/ccMOHu7L.s:17     .text.arm_fir_interpolate_f32:0000000000000000 $t
     /tmp/ccMOHu7L.s:25     .text.arm_fir_interpolate_f32:0000000000000000 arm_fir_interpolate_f32

NO UNDEFINED SYMBOLS
