ARM GAS  /tmp/cclxMZVw.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cmplx_dot_prod_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cmplx_dot_prod_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_cmplx_dot_prod_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_cmplx_dot_prod_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c"
   1:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Title:        arm_cmplx_dot_prod_f32.c
   4:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Description:  Floating-point complex dot product
   5:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
ARM GAS  /tmp/cclxMZVw.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @ingroup groupCmplxMath
  33:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @defgroup cmplx_dot_prod Complex Dot Product
  37:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Computes the dot product of two complex vectors.
  39:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The vectors are multiplied element-by-element and then summed.
  40:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  41:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The <code>pSrcA</code> points to the first complex input vector and
  42:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>pSrcB</code> points to the second complex input vector.
  43:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  44:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   and the data in each array is stored in an interleaved fashion
  45:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   (real, imag, real, imag, ...).
  46:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Each array has a total of <code>2*numSamples</code> values.
  47:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The underlying algorithm is used:
  49:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  50:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <pre>
  51:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   realResult = 0;
  52:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   imagResult = 0;
  53:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   for (n = 0; n < numSamples; n++) {
  54:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       realResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+0] - pSrcA[(2*n)+1] * pSrcB[(2*n)+1];
  55:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imagResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+1] + pSrcA[(2*n)+1] * pSrcB[(2*n)+0];
  56:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
  57:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   </pre>
  58:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  59:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  60:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  61:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  62:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  63:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @addtogroup cmplx_dot_prod
  64:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @{
  65:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  66:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  67:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  68:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @brief         Floating-point complex dot product.
  69:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcA       points to the first input vector
  70:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcB       points to the second input vector
  71:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     numSamples  number of samples in each vector
  72:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    realResult  real part of the result returned here
  73:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    imagResult  imaginary part of the result returned here
  74:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @return        none
  75:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  76:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  77:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
  78:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcA,
  79:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcB,
  80:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t numSamples,
  81:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * realResult,
  82:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * imagResult)
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
  28              		.loc 1 83 1
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 48
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  /tmp/cclxMZVw.s 			page 3


  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 8DB0     		sub	sp, sp, #52
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 3B60     		str	r3, [r7]
  84:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t real_sum = 0.0f, imag_sum = 0.0f;    /* Temporary result variables */
  47              		.loc 1 85 19
  48 000e 4FF00003 		mov	r3, #0
  49 0012 BB62     		str	r3, [r7, #40]	@ float
  50              		.loc 1 85 36
  51 0014 4FF00003 		mov	r3, #0
  52 0018 7B62     		str	r3, [r7, #36]	@ float
  86:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  87:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  88:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined(ARM_MATH_NEON)
  89:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4x2_t vec1,vec2,vec3,vec4;
  90:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4_t accR,accI;
  91:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x2_t accum = vdup_n_f32(0);
  92:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  93:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accR = vdupq_n_f32(0.0);
  94:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accI = vdupq_n_f32(0.0);
  95:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  96:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Loop unrolling: Compute 8 outputs at a time */
  97:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples >> 3U;
  98:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  99:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     while (blkCnt > 0U)
 100:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     {
 101:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* C = (A[0]+jA[1])*(B[0]+jB[1]) + ...  */
 102:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Calculate dot product and then store the result in a temporary buffer. */
 103:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 104:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	vec1 = vld2q_f32(pSrcA);
 105:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec2 = vld2q_f32(pSrcB);
 106:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 107:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 108:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 109:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 110:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 111:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 112:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec1.val[0],vec2.val[0]);
 113:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec1.val[1],vec2.val[1]);
 114:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 116:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[1],vec2.val[0]);
 117:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[0],vec2.val[1]);
 118:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 119:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec3 = vld2q_f32(pSrcA);
 120:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec4 = vld2q_f32(pSrcB);
ARM GAS  /tmp/cclxMZVw.s 			page 4


 121:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	
 122:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 123:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 124:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 125:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 126:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 127:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec3.val[0],vec4.val[0]);
 128:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec3.val[1],vec4.val[1]);
 129:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 130:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 131:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[1],vec4.val[0]);
 132:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[0],vec4.val[1]);
 133:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 134:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Decrement the loop counter */
 135:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt--;
 136:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     }
 137:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 138:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accR), vget_high_f32(accR));
 139:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += accum[0] + accum[1];
 140:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 141:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accI), vget_high_f32(accI));
 142:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += accum[0] + accum[1];
 143:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 144:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Tail */
 145:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples & 0x7;
 146:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 147:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 148:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 149:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 150:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 151:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples >> 2U;
 152:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 153:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
 154:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 155:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 156:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 157:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 158:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 159:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 160:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 161:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 162:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 163:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 164:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 165:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 166:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 167:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 168:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 169:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 170:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 171:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 172:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 173:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 174:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 176:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 177:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
ARM GAS  /tmp/cclxMZVw.s 			page 5


 178:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 179:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 180:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 181:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 182:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 183:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 184:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 185:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 186:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 187:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 188:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 189:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 190:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 191:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 192:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 193:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 194:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 195:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 196:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 197:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 198:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 199:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 200:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples % 0x4U;
 201:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 202:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 203:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 204:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Initialize blkCnt with number of samples */
 205:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples;
  53              		.loc 1 205 10
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c FB62     		str	r3, [r7, #44]
 206:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 207:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 208:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 209:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 210:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
  56              		.loc 1 210 9
  57 001e 46E0     		b	.L2
  58              	.L3:
 211:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 212:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
  59              		.loc 1 212 16
  60 0020 FB68     		ldr	r3, [r7, #12]
  61 0022 1A1D     		adds	r2, r3, #4
  62 0024 FA60     		str	r2, [r7, #12]
  63              		.loc 1 212 8
  64 0026 1B68     		ldr	r3, [r3]	@ float
  65 0028 3B62     		str	r3, [r7, #32]	@ float
 213:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
  66              		.loc 1 213 16
  67 002a FB68     		ldr	r3, [r7, #12]
  68 002c 1A1D     		adds	r2, r3, #4
  69 002e FA60     		str	r2, [r7, #12]
  70              		.loc 1 213 8
  71 0030 1B68     		ldr	r3, [r3]	@ float
  72 0032 FB61     		str	r3, [r7, #28]	@ float
 214:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
ARM GAS  /tmp/cclxMZVw.s 			page 6


  73              		.loc 1 214 16
  74 0034 BB68     		ldr	r3, [r7, #8]
  75 0036 1A1D     		adds	r2, r3, #4
  76 0038 BA60     		str	r2, [r7, #8]
  77              		.loc 1 214 8
  78 003a 1B68     		ldr	r3, [r3]	@ float
  79 003c BB61     		str	r3, [r7, #24]	@ float
 215:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
  80              		.loc 1 215 16
  81 003e BB68     		ldr	r3, [r7, #8]
  82 0040 1A1D     		adds	r2, r3, #4
  83 0042 BA60     		str	r2, [r7, #8]
  84              		.loc 1 215 8
  85 0044 1B68     		ldr	r3, [r3]	@ float
  86 0046 7B61     		str	r3, [r7, #20]	@ float
 216:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 217:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
  87              		.loc 1 217 20
  88 0048 97ED087A 		vldr.32	s14, [r7, #32]
  89 004c D7ED067A 		vldr.32	s15, [r7, #24]
  90 0050 67EE277A 		vmul.f32	s15, s14, s15
  91              		.loc 1 217 14
  92 0054 97ED0A7A 		vldr.32	s14, [r7, #40]
  93 0058 77EE277A 		vadd.f32	s15, s14, s15
  94 005c C7ED0A7A 		vstr.32	s15, [r7, #40]
 218:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
  95              		.loc 1 218 20
  96 0060 97ED087A 		vldr.32	s14, [r7, #32]
  97 0064 D7ED057A 		vldr.32	s15, [r7, #20]
  98 0068 67EE277A 		vmul.f32	s15, s14, s15
  99              		.loc 1 218 14
 100 006c 97ED097A 		vldr.32	s14, [r7, #36]
 101 0070 77EE277A 		vadd.f32	s15, s14, s15
 102 0074 C7ED097A 		vstr.32	s15, [r7, #36]
 219:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 103              		.loc 1 219 20
 104 0078 97ED077A 		vldr.32	s14, [r7, #28]
 105 007c D7ED057A 		vldr.32	s15, [r7, #20]
 106 0080 67EE277A 		vmul.f32	s15, s14, s15
 107              		.loc 1 219 14
 108 0084 97ED0A7A 		vldr.32	s14, [r7, #40]
 109 0088 77EE677A 		vsub.f32	s15, s14, s15
 110 008c C7ED0A7A 		vstr.32	s15, [r7, #40]
 220:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 111              		.loc 1 220 20
 112 0090 97ED077A 		vldr.32	s14, [r7, #28]
 113 0094 D7ED067A 		vldr.32	s15, [r7, #24]
 114 0098 67EE277A 		vmul.f32	s15, s14, s15
 115              		.loc 1 220 14
 116 009c 97ED097A 		vldr.32	s14, [r7, #36]
 117 00a0 77EE277A 		vadd.f32	s15, s14, s15
 118 00a4 C7ED097A 		vstr.32	s15, [r7, #36]
 221:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 222:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 223:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 119              		.loc 1 223 11
 120 00a8 FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/cclxMZVw.s 			page 7


 121 00aa 013B     		subs	r3, r3, #1
 122 00ac FB62     		str	r3, [r7, #44]
 123              	.L2:
 210:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 124              		.loc 1 210 9
 125 00ae FB6A     		ldr	r3, [r7, #44]
 126 00b0 002B     		cmp	r3, #0
 127 00b2 B5D1     		bne	.L3
 224:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 225:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 226:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Store real and imaginary result in destination buffer. */
 227:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *realResult = real_sum;
 128              		.loc 1 227 15
 129 00b4 3B68     		ldr	r3, [r7]
 130 00b6 BA6A     		ldr	r2, [r7, #40]	@ float
 131 00b8 1A60     		str	r2, [r3]	@ float
 228:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 132              		.loc 1 228 15
 133 00ba BB6B     		ldr	r3, [r7, #56]
 134 00bc 7A6A     		ldr	r2, [r7, #36]	@ float
 135 00be 1A60     		str	r2, [r3]	@ float
 229:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 136              		.loc 1 229 1
 137 00c0 00BF     		nop
 138 00c2 3437     		adds	r7, r7, #52
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 4
 141 00c4 BD46     		mov	sp, r7
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 00c6 5DF8047B 		ldr	r7, [sp], #4
 146              	.LCFI5:
 147              		.cfi_restore 7
 148              		.cfi_def_cfa_offset 0
 149 00ca 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE145:
 153              		.text
 154              	.Letext0:
 155              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 156              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 157              		.file 4 "/usr/include/newlib/sys/_types.h"
 158              		.file 5 "/usr/include/newlib/sys/reent.h"
 159              		.file 6 "/usr/include/newlib/sys/lock.h"
 160              		.file 7 "/usr/include/newlib/math.h"
 161              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cclxMZVw.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cmplx_dot_prod_f32.c
     /tmp/cclxMZVw.s:17     .text.arm_cmplx_dot_prod_f32:0000000000000000 $t
     /tmp/cclxMZVw.s:25     .text.arm_cmplx_dot_prod_f32:0000000000000000 arm_cmplx_dot_prod_f32

NO UNDEFINED SYMBOLS
