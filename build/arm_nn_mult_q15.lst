ARM GAS  /tmp/ccZcmgTv.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_nn_mult_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_nn_mult_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_nn_mult_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_nn_mult_q15:
  26              	.LFB149:
  27              		.file 1 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c"
   1:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /*
   2:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Copyright (C) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   3:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
   4:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * SPDX-License-Identifier: Apache-2.0
   5:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
   6:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * not use this file except in compliance with the License.
   8:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * You may obtain a copy of the License at
   9:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  10:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  11:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  12:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  13:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * See the License for the specific language governing permissions and
  16:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * limitations under the License.
  17:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  */
  18:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  19:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /* ----------------------------------------------------------------------
  20:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Project:      CMSIS NN Library
  21:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Title:        arm_nn_mult_q15.c
  22:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Description:  Q15 vector multiplication with variable output shifts
  23:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  24:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * $Date:        13. July 2018
  25:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * $Revision:    V.1.0.0
  26:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  27:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Target Processor:  Cortex-M cores
  28:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  29:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * -------------------------------------------------------------------- */
  30:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  31:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #include "arm_nnfunctions.h"
ARM GAS  /tmp/ccZcmgTv.s 			page 2


  32:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  33:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /**    
  34:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @ingroup groupSupport    
  35:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  */
  36:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  37:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /**
  38:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @addtogroup NNBasicMath
  39:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @{
  40:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  */
  41:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  42:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  43:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /**
  44:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @brief           Q7 vector multiplication with variable output shifts
  45:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @param[in]       *pSrcA        pointer to the first input vector
  46:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @param[in]       *pSrcB        pointer to the second input vector
  47:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @param[out]      *pDst         pointer to the output vector
  48:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @param[in]       out_shift     amount of right-shift for output
  49:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @param[in]       blockSize     number of samples in each vector
  50:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * @return none.
  51:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  *
  52:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  53:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * \par
  54:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * The function uses saturating arithmetic.
  55:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  * Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.
  56:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****  */
  57:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  58:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** void arm_nn_mult_q15(
  59:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q15_t * pSrcA,
  60:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q15_t * pSrcB,
  61:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q15_t * pDst,
  62:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   const uint16_t out_shift,
  63:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   uint32_t blockSize)
  64:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** {
  28              		.loc 1 64 1
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 112
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 9DB0     		sub	sp, sp, #116
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 120
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  46 000c 7B80     		strh	r3, [r7, #2]	@ movhi
  65:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  66:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  67:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #if defined (ARM_MATH_DSP)
  68:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  69:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
ARM GAS  /tmp/ccZcmgTv.s 			page 3


  70:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q31_t inA1, inA2, inB1, inB2;                  /* temporary input variables */
  71:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q15_t out1, out2, out3, out4;                  /* temporary output variables */
  72:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   q31_t mul1, mul2, mul3, mul4;                  /* temporary variables */
  73:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  74:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   /* loop Unrolling */
  75:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   blkCnt = blockSize >> 2U;
  47              		.loc 1 75 10
  48 000e BB6F     		ldr	r3, [r7, #120]
  49 0010 9B08     		lsrs	r3, r3, #2
  50 0012 FB66     		str	r3, [r7, #108]
  76:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  77:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  78:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  79:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   while (blkCnt > 0U)
  51              		.loc 1 79 9
  52 0014 A0E0     		b	.L2
  53              	.L3:
  80:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   {
  81:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* read two samples at a time from sourceA */
  82:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     inA1 = *__SIMD32(pSrcA)++;
  54              		.loc 1 82 13
  55 0016 07F10C02 		add	r2, r7, #12
  56 001a 1368     		ldr	r3, [r2]
  57              		.loc 1 82 28
  58 001c 191D     		adds	r1, r3, #4
  59 001e 1160     		str	r1, [r2]
  60              		.loc 1 82 10
  61 0020 1B68     		ldr	r3, [r3]
  62 0022 3B66     		str	r3, [r7, #96]
  83:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* read two samples at a time from sourceB */
  84:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     inB1 = *__SIMD32(pSrcB)++;
  63              		.loc 1 84 13
  64 0024 07F10802 		add	r2, r7, #8
  65 0028 1368     		ldr	r3, [r2]
  66              		.loc 1 84 28
  67 002a 191D     		adds	r1, r3, #4
  68 002c 1160     		str	r1, [r2]
  69              		.loc 1 84 10
  70 002e 1B68     		ldr	r3, [r3]
  71 0030 FB65     		str	r3, [r7, #92]
  85:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* read two samples at a time from sourceA */
  86:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     inA2 = *__SIMD32(pSrcA)++;
  72              		.loc 1 86 13
  73 0032 07F10C02 		add	r2, r7, #12
  74 0036 1368     		ldr	r3, [r2]
  75              		.loc 1 86 28
  76 0038 191D     		adds	r1, r3, #4
  77 003a 1160     		str	r1, [r2]
  78              		.loc 1 86 10
  79 003c 1B68     		ldr	r3, [r3]
  80 003e BB65     		str	r3, [r7, #88]
  87:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* read two samples at a time from sourceB */
  88:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     inB2 = *__SIMD32(pSrcB)++;
  81              		.loc 1 88 13
  82 0040 07F10802 		add	r2, r7, #8
  83 0044 1368     		ldr	r3, [r2]
  84              		.loc 1 88 28
ARM GAS  /tmp/ccZcmgTv.s 			page 4


  85 0046 191D     		adds	r1, r3, #4
  86 0048 1160     		str	r1, [r2]
  87              		.loc 1 88 10
  88 004a 1B68     		ldr	r3, [r3]
  89 004c 7B65     		str	r3, [r7, #84]
  89:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  90:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* multiply mul = sourceA * sourceB */
  91:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
  90              		.loc 1 91 35
  91 004e 3B6E     		ldr	r3, [r7, #96]
  92 0050 1B14     		asrs	r3, r3, #16
  93              		.loc 1 91 21
  94 0052 1BB2     		sxth	r3, r3
  95 0054 1A46     		mov	r2, r3
  96              		.loc 1 91 58
  97 0056 FB6D     		ldr	r3, [r7, #92]
  98 0058 1B14     		asrs	r3, r3, #16
  99              		.loc 1 91 44
 100 005a 1BB2     		sxth	r3, r3
 101              		.loc 1 91 10
 102 005c 03FB02F3 		mul	r3, r3, r2
 103 0060 3B65     		str	r3, [r7, #80]
  92:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     mul2 = (q31_t) ((q15_t) inA1 * (q15_t) inB1);
 104              		.loc 1 92 21
 105 0062 3B6E     		ldr	r3, [r7, #96]
 106 0064 1BB2     		sxth	r3, r3
 107              		.loc 1 92 36
 108 0066 FA6D     		ldr	r2, [r7, #92]
 109 0068 12B2     		sxth	r2, r2
 110              		.loc 1 92 10
 111 006a 02FB03F3 		mul	r3, r2, r3
 112 006e FB64     		str	r3, [r7, #76]
  93:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB2 >> 16));
 113              		.loc 1 93 35
 114 0070 BB6D     		ldr	r3, [r7, #88]
 115 0072 1B14     		asrs	r3, r3, #16
 116              		.loc 1 93 21
 117 0074 1BB2     		sxth	r3, r3
 118 0076 1A46     		mov	r2, r3
 119              		.loc 1 93 58
 120 0078 7B6D     		ldr	r3, [r7, #84]
 121 007a 1B14     		asrs	r3, r3, #16
 122              		.loc 1 93 44
 123 007c 1BB2     		sxth	r3, r3
 124              		.loc 1 93 10
 125 007e 03FB02F3 		mul	r3, r3, r2
 126 0082 BB64     		str	r3, [r7, #72]
  94:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     mul4 = (q31_t) ((q15_t) inA2 * (q15_t) inB2);
 127              		.loc 1 94 21
 128 0084 BB6D     		ldr	r3, [r7, #88]
 129 0086 1BB2     		sxth	r3, r3
 130              		.loc 1 94 36
 131 0088 7A6D     		ldr	r2, [r7, #84]
 132 008a 12B2     		sxth	r2, r2
 133              		.loc 1 94 10
 134 008c 02FB03F3 		mul	r3, r2, r3
 135 0090 7B64     		str	r3, [r7, #68]
ARM GAS  /tmp/ccZcmgTv.s 			page 5


 136              	.LBB2:
  95:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
  96:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* saturate result to 16 bit */
  97:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     out1 = (q15_t) __SSAT((mul1 + NN_ROUND(out_shift)) >> out_shift, 16);
 137              		.loc 1 97 20
 138 0092 7B88     		ldrh	r3, [r7, #2]
 139 0094 0122     		movs	r2, #1
 140 0096 02FA03F3 		lsl	r3, r2, r3
 141 009a 5A08     		lsrs	r2, r3, #1
 142 009c 3B6D     		ldr	r3, [r7, #80]
 143 009e 1A44     		add	r2, r2, r3
 144 00a0 7B88     		ldrh	r3, [r7, #2]
 145 00a2 22FA03F3 		lsr	r3, r2, r3
 146 00a6 3B64     		str	r3, [r7, #64]
 147 00a8 3B6C     		ldr	r3, [r7, #64]
 148              		.syntax unified
 149              	@ 97 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c" 1
 150 00aa 03F30F03 		ssat r3, #16, r3
 151              	@ 0 "" 2
 152              		.thumb
 153              		.syntax unified
 154 00ae FB63     		str	r3, [r7, #60]
 155 00b0 FB6B     		ldr	r3, [r7, #60]
 156              	.LBE2:
 157              		.loc 1 97 10
 158 00b2 7B87     		strh	r3, [r7, #58]	@ movhi
 159              	.LBB3:
  98:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     out2 = (q15_t) __SSAT((mul2 + NN_ROUND(out_shift)) >> out_shift, 16);
 160              		.loc 1 98 20
 161 00b4 7B88     		ldrh	r3, [r7, #2]
 162 00b6 0122     		movs	r2, #1
 163 00b8 02FA03F3 		lsl	r3, r2, r3
 164 00bc 5A08     		lsrs	r2, r3, #1
 165 00be FB6C     		ldr	r3, [r7, #76]
 166 00c0 1A44     		add	r2, r2, r3
 167 00c2 7B88     		ldrh	r3, [r7, #2]
 168 00c4 22FA03F3 		lsr	r3, r2, r3
 169 00c8 7B63     		str	r3, [r7, #52]
 170 00ca 7B6B     		ldr	r3, [r7, #52]
 171              		.syntax unified
 172              	@ 98 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c" 1
 173 00cc 03F30F03 		ssat r3, #16, r3
 174              	@ 0 "" 2
 175              		.thumb
 176              		.syntax unified
 177 00d0 3B63     		str	r3, [r7, #48]
 178 00d2 3B6B     		ldr	r3, [r7, #48]
 179              	.LBE3:
 180              		.loc 1 98 10
 181 00d4 FB85     		strh	r3, [r7, #46]	@ movhi
 182              	.LBB4:
  99:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     out3 = (q15_t) __SSAT((mul3 + NN_ROUND(out_shift)) >> out_shift, 16);
 183              		.loc 1 99 20
 184 00d6 7B88     		ldrh	r3, [r7, #2]
 185 00d8 0122     		movs	r2, #1
 186 00da 02FA03F3 		lsl	r3, r2, r3
 187 00de 5A08     		lsrs	r2, r3, #1
ARM GAS  /tmp/ccZcmgTv.s 			page 6


 188 00e0 BB6C     		ldr	r3, [r7, #72]
 189 00e2 1A44     		add	r2, r2, r3
 190 00e4 7B88     		ldrh	r3, [r7, #2]
 191 00e6 22FA03F3 		lsr	r3, r2, r3
 192 00ea BB62     		str	r3, [r7, #40]
 193 00ec BB6A     		ldr	r3, [r7, #40]
 194              		.syntax unified
 195              	@ 99 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c" 1
 196 00ee 03F30F03 		ssat r3, #16, r3
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200 00f2 7B62     		str	r3, [r7, #36]
 201 00f4 7B6A     		ldr	r3, [r7, #36]
 202              	.LBE4:
 203              		.loc 1 99 10
 204 00f6 7B84     		strh	r3, [r7, #34]	@ movhi
 205              	.LBB5:
 100:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     out4 = (q15_t) __SSAT((mul4 + NN_ROUND(out_shift)) >> out_shift, 16);
 206              		.loc 1 100 20
 207 00f8 7B88     		ldrh	r3, [r7, #2]
 208 00fa 0122     		movs	r2, #1
 209 00fc 02FA03F3 		lsl	r3, r2, r3
 210 0100 5A08     		lsrs	r2, r3, #1
 211 0102 7B6C     		ldr	r3, [r7, #68]
 212 0104 1A44     		add	r2, r2, r3
 213 0106 7B88     		ldrh	r3, [r7, #2]
 214 0108 22FA03F3 		lsr	r3, r2, r3
 215 010c FB61     		str	r3, [r7, #28]
 216 010e FB69     		ldr	r3, [r7, #28]
 217              		.syntax unified
 218              	@ 100 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c" 1
 219 0110 03F30F03 		ssat r3, #16, r3
 220              	@ 0 "" 2
 221              		.thumb
 222              		.syntax unified
 223 0114 BB61     		str	r3, [r7, #24]
 224 0116 BB69     		ldr	r3, [r7, #24]
 225              	.LBE5:
 226              		.loc 1 100 10
 227 0118 FB82     		strh	r3, [r7, #22]	@ movhi
 101:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 102:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* store the result */
 103:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 104:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 105:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     *__SIMD32(pDst)++ = __PKHBT(out2, out1, 16);
 228              		.loc 1 105 25
 229 011a B7F92E30 		ldrsh	r3, [r7, #46]
 230 011e 9AB2     		uxth	r2, r3
 231 0120 B7F93A30 		ldrsh	r3, [r7, #58]
 232 0124 1B04     		lsls	r3, r3, #16
 233 0126 42EA0300 		orr	r0, r2, r3
 234              		.loc 1 105 6
 235 012a 3A1D     		adds	r2, r7, #4
 236 012c 1368     		ldr	r3, [r2]
 237              		.loc 1 105 20
 238 012e 191D     		adds	r1, r3, #4
ARM GAS  /tmp/ccZcmgTv.s 			page 7


 239 0130 1160     		str	r1, [r2]
 240              		.loc 1 105 25
 241 0132 0246     		mov	r2, r0
 242              		.loc 1 105 23
 243 0134 1A60     		str	r2, [r3]
 106:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     *__SIMD32(pDst)++ = __PKHBT(out4, out3, 16);
 244              		.loc 1 106 25
 245 0136 B7F91630 		ldrsh	r3, [r7, #22]
 246 013a 9AB2     		uxth	r2, r3
 247 013c B7F92230 		ldrsh	r3, [r7, #34]
 248 0140 1B04     		lsls	r3, r3, #16
 249 0142 42EA0300 		orr	r0, r2, r3
 250              		.loc 1 106 6
 251 0146 3A1D     		adds	r2, r7, #4
 252 0148 1368     		ldr	r3, [r2]
 253              		.loc 1 106 20
 254 014a 191D     		adds	r1, r3, #4
 255 014c 1160     		str	r1, [r2]
 256              		.loc 1 106 25
 257 014e 0246     		mov	r2, r0
 258              		.loc 1 106 23
 259 0150 1A60     		str	r2, [r3]
 107:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 108:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #else
 109:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 110:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     *__SIMD32(pDst)++ = __PKHBT(out2, out1, 16);
 111:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     *__SIMD32(pDst)++ = __PKHBT(out4, out3, 16);
 112:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 113:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 114:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 115:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* Decrement the blockSize loop counter */
 116:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     blkCnt--;
 260              		.loc 1 116 11
 261 0152 FB6E     		ldr	r3, [r7, #108]
 262 0154 013B     		subs	r3, r3, #1
 263 0156 FB66     		str	r3, [r7, #108]
 264              	.L2:
  79:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   {
 265              		.loc 1 79 9
 266 0158 FB6E     		ldr	r3, [r7, #108]
 267 015a 002B     		cmp	r3, #0
 268 015c 7FF45BAF 		bne	.L3
 117:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   }
 118:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 119:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 120:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****    ** No loop unrolling is used. */
 121:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   blkCnt = blockSize % 0x4U;
 269              		.loc 1 121 10
 270 0160 BB6F     		ldr	r3, [r7, #120]
 271 0162 03F00303 		and	r3, r3, #3
 272 0166 FB66     		str	r3, [r7, #108]
 122:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 123:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #else
 124:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 125:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   /* Run the below code for Cortex-M0 */
 126:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 127:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   /* Initialize blkCnt with number of samples */
ARM GAS  /tmp/ccZcmgTv.s 			page 8


 128:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   blkCnt = blockSize;
 129:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 130:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 131:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 132:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 133:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   while (blkCnt > 0U)
 273              		.loc 1 133 9
 274 0168 24E0     		b	.L4
 275              	.L5:
 276              	.LBB6:
 134:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   {
 135:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* C = A * B */
 136:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* Multiply the inputs and store the result in the destination buffer */
 137:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     *pDst++ = (q15_t) __SSAT((((q31_t) (*pSrcA++) * (*pSrcB++) + NN_ROUND(out_shift)) >> out_shift)
 277              		.loc 1 137 23
 278 016a FB68     		ldr	r3, [r7, #12]
 279 016c 9A1C     		adds	r2, r3, #2
 280 016e FA60     		str	r2, [r7, #12]
 281 0170 B3F90030 		ldrsh	r3, [r3]
 282 0174 1946     		mov	r1, r3
 283 0176 BB68     		ldr	r3, [r7, #8]
 284 0178 9A1C     		adds	r2, r3, #2
 285 017a BA60     		str	r2, [r7, #8]
 286 017c B3F90030 		ldrsh	r3, [r3]
 287 0180 03FB01F3 		mul	r3, r3, r1
 288 0184 1946     		mov	r1, r3
 289 0186 7B88     		ldrh	r3, [r7, #2]
 290 0188 0122     		movs	r2, #1
 291 018a 02FA03F3 		lsl	r3, r2, r3
 292 018e 5B08     		lsrs	r3, r3, #1
 293 0190 CA18     		adds	r2, r1, r3
 294 0192 7B88     		ldrh	r3, [r7, #2]
 295 0194 22FA03F3 		lsr	r3, r2, r3
 296 0198 BB66     		str	r3, [r7, #104]
 297 019a BB6E     		ldr	r3, [r7, #104]
 298              		.syntax unified
 299              	@ 137 "./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c" 1
 300 019c 03F30F03 		ssat r3, #16, r3
 301              	@ 0 "" 2
 302              		.thumb
 303              		.syntax unified
 304 01a0 7B66     		str	r3, [r7, #100]
 305 01a2 796E     		ldr	r1, [r7, #100]
 306              	.LBE6:
 307              		.loc 1 137 10
 308 01a4 7B68     		ldr	r3, [r7, #4]
 309 01a6 9A1C     		adds	r2, r3, #2
 310 01a8 7A60     		str	r2, [r7, #4]
 311              		.loc 1 137 15
 312 01aa 0AB2     		sxth	r2, r1
 313              		.loc 1 137 13
 314 01ac 1A80     		strh	r2, [r3]	@ movhi
 138:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** 
 139:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     /* Decrement the blockSize loop counter */
 140:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****     blkCnt--;
 315              		.loc 1 140 11
 316 01ae FB6E     		ldr	r3, [r7, #108]
ARM GAS  /tmp/ccZcmgTv.s 			page 9


 317 01b0 013B     		subs	r3, r3, #1
 318 01b2 FB66     		str	r3, [r7, #108]
 319              	.L4:
 133:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   {
 320              		.loc 1 133 9
 321 01b4 FB6E     		ldr	r3, [r7, #108]
 322 01b6 002B     		cmp	r3, #0
 323 01b8 D7D1     		bne	.L5
 141:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c ****   }
 142:./Libraries/CMSIS/NN/Source/NNSupportFunctions/arm_nn_mult_q15.c **** }
 324              		.loc 1 142 1
 325 01ba 00BF     		nop
 326 01bc 00BF     		nop
 327 01be 7437     		adds	r7, r7, #116
 328              	.LCFI3:
 329              		.cfi_def_cfa_offset 4
 330 01c0 BD46     		mov	sp, r7
 331              	.LCFI4:
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 01c2 5DF8047B 		ldr	r7, [sp], #4
 335              	.LCFI5:
 336              		.cfi_restore 7
 337              		.cfi_def_cfa_offset 0
 338 01c6 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE149:
 342              		.text
 343              	.Letext0:
 344              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 345              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 346              		.file 4 "/usr/include/newlib/sys/_types.h"
 347              		.file 5 "/usr/include/newlib/sys/reent.h"
 348              		.file 6 "/usr/include/newlib/sys/lock.h"
 349              		.file 7 "/usr/include/newlib/math.h"
 350              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
 351              		.file 9 "./Libraries/CMSIS/DSP/Include/arm_common_tables.h"
 352              		.file 10 "./Libraries/CMSIS/NN/Include/arm_nn_tables.h"
ARM GAS  /tmp/ccZcmgTv.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_nn_mult_q15.c
     /tmp/ccZcmgTv.s:17     .text.arm_nn_mult_q15:0000000000000000 $t
     /tmp/ccZcmgTv.s:25     .text.arm_nn_mult_q15:0000000000000000 arm_nn_mult_q15

NO UNDEFINED SYMBOLS
