ARM GAS  /tmp/ccXj48YU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32_lcd.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.bss.DrawProp,"aw",%nobits
  17              		.align	2
  20              	DrawProp:
  21 0000 00000000 		.space	64
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.bss.FuncDriver,"aw",%nobits
  23              		.align	2
  26              	FuncDriver:
  27 0000 00000000 		.space	44
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.section	.text.UTIL_LCD_SetFuncDriver,"ax",%progbits
  29              		.align	1
  30              		.global	UTIL_LCD_SetFuncDriver
  31              		.arch armv7e-m
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu fpv5-d16
  37              	UTIL_LCD_SetFuncDriver:
  38              	.LFB0:
  39              		.file 1 "./BSP/ST/stm32_lcd.c"
   1:./BSP/ST/stm32_lcd.c **** /**
   2:./BSP/ST/stm32_lcd.c ****   ******************************************************************************
   3:./BSP/ST/stm32_lcd.c ****   * @file    stm32_lcd.c
   4:./BSP/ST/stm32_lcd.c ****   * @author  MCD Application Team
   5:./BSP/ST/stm32_lcd.c ****   * @brief   This file includes the basic functionalities to drive LCD
   6:./BSP/ST/stm32_lcd.c ****   ******************************************************************************
   7:./BSP/ST/stm32_lcd.c ****   * @attention
   8:./BSP/ST/stm32_lcd.c ****   *
   9:./BSP/ST/stm32_lcd.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:./BSP/ST/stm32_lcd.c ****   * All rights reserved.</center></h2>
  11:./BSP/ST/stm32_lcd.c ****   *
  12:./BSP/ST/stm32_lcd.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:./BSP/ST/stm32_lcd.c ****   * the "License"; You may not use this file except in compliance with the
  14:./BSP/ST/stm32_lcd.c ****   * License. You may obtain a copy of the License at:
  15:./BSP/ST/stm32_lcd.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccXj48YU.s 			page 2


  16:./BSP/ST/stm32_lcd.c ****   *
  17:./BSP/ST/stm32_lcd.c ****   ******************************************************************************
  18:./BSP/ST/stm32_lcd.c ****   */
  19:./BSP/ST/stm32_lcd.c **** 
  20:./BSP/ST/stm32_lcd.c **** /* File Info: ------------------------------------------------------------------
  21:./BSP/ST/stm32_lcd.c ****                                    User NOTES
  22:./BSP/ST/stm32_lcd.c **** 1. How To use this driver:
  23:./BSP/ST/stm32_lcd.c **** --------------------------
  24:./BSP/ST/stm32_lcd.c ****    - This driver is a generic driver that provides basic display services. It should
  25:./BSP/ST/stm32_lcd.c ****      be used by any platform once LCD is initialized and following draw methods are
  26:./BSP/ST/stm32_lcd.c ****      registered:
  27:./BSP/ST/stm32_lcd.c ****          BSP_LCD_DrawBitmap
  28:./BSP/ST/stm32_lcd.c ****          BSP_LCD_DrawHLine
  29:./BSP/ST/stm32_lcd.c ****          BSP_LCD_DrawVLine
  30:./BSP/ST/stm32_lcd.c ****          BSP_LCD_FillRect
  31:./BSP/ST/stm32_lcd.c ****          BSP_LCD_ReadPixel
  32:./BSP/ST/stm32_lcd.c ****          BSP_LCD_WritePixel
  33:./BSP/ST/stm32_lcd.c ****          BSP_LCD_GetXSize
  34:./BSP/ST/stm32_lcd.c ****          BSP_LCD_GetYSize
  35:./BSP/ST/stm32_lcd.c ****          BSP_LCD_SetActiveLayer
  36:./BSP/ST/stm32_lcd.c **** 
  37:./BSP/ST/stm32_lcd.c ****    - At application level, once the LCD is initialized, user should call UTIL_LCD_SetFuncDriver()
  38:./BSP/ST/stm32_lcd.c ****      API to link board LCD drivers to BASIC GUI LCD drivers.
  39:./BSP/ST/stm32_lcd.c ****      User can then call the BASIC GUI services:
  40:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetFuncDriver()
  41:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetLayer()
  42:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetDevice()
  43:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetTextColor()
  44:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_GetTextColor()
  45:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetBackColor()
  46:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_GetBackColor()
  47:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetFont()
  48:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_GetFont()
  49:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_Clear)
  50:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_ClearStringLine()
  51:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DisplayStringAtLine()
  52:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DisplayStringAt()
  53:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DisplayChar()
  54:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_GetPixel()
  55:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_SetPixel()
  56:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_FillRGBRect()
  57:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawHLine()
  58:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawVLine()
  59:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawBitmap()
  60:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_FillRect()
  61:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawLine()
  62:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawRect()
  63:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawCircle()
  64:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawPolygon()
  65:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_DrawEllipse()
  66:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_FillCircle()
  67:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_FillPolygon()
  68:./BSP/ST/stm32_lcd.c ****          UTIL_LCD_FillEllipse()
  69:./BSP/ST/stm32_lcd.c **** ------------------------------------------------------------------------------*/
  70:./BSP/ST/stm32_lcd.c **** 
  71:./BSP/ST/stm32_lcd.c **** /* Includes ------------------------------------------------------------------*/
  72:./BSP/ST/stm32_lcd.c **** #include "stm32_lcd.h"
ARM GAS  /tmp/ccXj48YU.s 			page 3


  73:./BSP/ST/stm32_lcd.c **** 
  74:./BSP/ST/stm32_lcd.c **** /** @addtogroup Utilities
  75:./BSP/ST/stm32_lcd.c ****   * @{
  76:./BSP/ST/stm32_lcd.c ****   */
  77:./BSP/ST/stm32_lcd.c **** 
  78:./BSP/ST/stm32_lcd.c **** /** @addtogroup STM32_EVAL
  79:./BSP/ST/stm32_lcd.c ****   * @{
  80:./BSP/ST/stm32_lcd.c ****   */
  81:./BSP/ST/stm32_lcd.c **** 
  82:./BSP/ST/stm32_lcd.c **** /** @addtogroup Common
  83:./BSP/ST/stm32_lcd.c ****   * @{
  84:./BSP/ST/stm32_lcd.c ****   */
  85:./BSP/ST/stm32_lcd.c **** 
  86:./BSP/ST/stm32_lcd.c **** /** @defgroup STM32_LCD STM32 LCD Utility
  87:./BSP/ST/stm32_lcd.c ****   * @{
  88:./BSP/ST/stm32_lcd.c ****   */
  89:./BSP/ST/stm32_lcd.c **** 
  90:./BSP/ST/stm32_lcd.c **** #ifndef UTIL_LCD_MAX_LAYERS_NBR
  91:./BSP/ST/stm32_lcd.c ****   #define UTIL_LCD_MAX_LAYERS_NBR    2U
  92:./BSP/ST/stm32_lcd.c **** #endif
  93:./BSP/ST/stm32_lcd.c **** 
  94:./BSP/ST/stm32_lcd.c **** /** @defgroup UTIL_LCD_Private_Macros STM32 LCD Utility Private Macros
  95:./BSP/ST/stm32_lcd.c ****   * @{
  96:./BSP/ST/stm32_lcd.c ****   */
  97:./BSP/ST/stm32_lcd.c **** #define ABS(X)                 ((X) > 0 ? (X) : -(X))
  98:./BSP/ST/stm32_lcd.c **** #define POLY_X(Z)              ((int32_t)((Points + (Z))->X))
  99:./BSP/ST/stm32_lcd.c **** #define POLY_Y(Z)              ((int32_t)((Points + (Z))->Y))
 100:./BSP/ST/stm32_lcd.c **** 
 101:./BSP/ST/stm32_lcd.c **** #define CONVERTARGB88882RGB565(Color)((((Color & 0xFFU) >> 3) & 0x1FU) |\
 102:./BSP/ST/stm32_lcd.c ****                                      (((((Color & 0xFF00U) >> 8) >>2) & 0x3FU) << 5) |\
 103:./BSP/ST/stm32_lcd.c ****                                      (((((Color & 0xFF0000U) >> 16) >>3) & 0x1FU) << 11))
 104:./BSP/ST/stm32_lcd.c **** 
 105:./BSP/ST/stm32_lcd.c **** #define CONVERTRGB5652ARGB8888(Color)(((((((Color >> 11) & 0x1FU) * 527) + 23) >> 6) << 16) |\
 106:./BSP/ST/stm32_lcd.c ****                                      ((((((Color >> 5) & 0x3FU) * 259) + 33) >> 6) << 8) |\
 107:./BSP/ST/stm32_lcd.c ****                                      ((((Color & 0x1FU) * 527) + 23) >> 6) | 0xFF000000)
 108:./BSP/ST/stm32_lcd.c **** 
 109:./BSP/ST/stm32_lcd.c **** /**
 110:./BSP/ST/stm32_lcd.c ****   * @}
 111:./BSP/ST/stm32_lcd.c ****   */
 112:./BSP/ST/stm32_lcd.c **** 
 113:./BSP/ST/stm32_lcd.c **** /** @defgroup UTIL_LCD_Private_Types STM32 LCD Utility Private Types
 114:./BSP/ST/stm32_lcd.c ****   * @{
 115:./BSP/ST/stm32_lcd.c ****   */
 116:./BSP/ST/stm32_lcd.c **** typedef struct
 117:./BSP/ST/stm32_lcd.c **** {
 118:./BSP/ST/stm32_lcd.c ****   uint32_t x1;
 119:./BSP/ST/stm32_lcd.c ****   uint32_t y1;
 120:./BSP/ST/stm32_lcd.c ****   uint32_t x2;
 121:./BSP/ST/stm32_lcd.c ****   uint32_t y2;
 122:./BSP/ST/stm32_lcd.c ****   uint32_t x3;
 123:./BSP/ST/stm32_lcd.c ****   uint32_t y3;
 124:./BSP/ST/stm32_lcd.c **** }Triangle_Positions_t;
 125:./BSP/ST/stm32_lcd.c **** 
 126:./BSP/ST/stm32_lcd.c **** /**
 127:./BSP/ST/stm32_lcd.c ****   * @}
 128:./BSP/ST/stm32_lcd.c ****   */
 129:./BSP/ST/stm32_lcd.c **** 
ARM GAS  /tmp/ccXj48YU.s 			page 4


 130:./BSP/ST/stm32_lcd.c **** /** @defgroup UTIL_LCD_Private_Variables STM32 LCD Utility Private Variables
 131:./BSP/ST/stm32_lcd.c ****   * @{
 132:./BSP/ST/stm32_lcd.c ****   */
 133:./BSP/ST/stm32_lcd.c **** 
 134:./BSP/ST/stm32_lcd.c **** /**
 135:./BSP/ST/stm32_lcd.c ****   * @brief  Current Drawing Layer properties variable
 136:./BSP/ST/stm32_lcd.c ****   */
 137:./BSP/ST/stm32_lcd.c **** static UTIL_LCD_Ctx_t DrawProp[UTIL_LCD_MAX_LAYERS_NBR];
 138:./BSP/ST/stm32_lcd.c **** static LCD_UTILS_Drv_t FuncDriver;
 139:./BSP/ST/stm32_lcd.c **** 
 140:./BSP/ST/stm32_lcd.c **** /**
 141:./BSP/ST/stm32_lcd.c ****   * @}
 142:./BSP/ST/stm32_lcd.c ****   */
 143:./BSP/ST/stm32_lcd.c **** 
 144:./BSP/ST/stm32_lcd.c **** /** @defgroup UTIL_LCD_Private_FunctionPrototypes STM32 LCD Utility Private FunctionPrototypes
 145:./BSP/ST/stm32_lcd.c ****   * @{
 146:./BSP/ST/stm32_lcd.c ****   */
 147:./BSP/ST/stm32_lcd.c **** static void DrawChar(uint32_t Xpos, uint32_t Ypos, const uint8_t *pData);
 148:./BSP/ST/stm32_lcd.c **** static void FillTriangle(Triangle_Positions_t *Positions, uint32_t Color);
 149:./BSP/ST/stm32_lcd.c **** /**
 150:./BSP/ST/stm32_lcd.c ****   * @}
 151:./BSP/ST/stm32_lcd.c ****   */
 152:./BSP/ST/stm32_lcd.c **** 
 153:./BSP/ST/stm32_lcd.c **** /** @defgroup UTIL_LCD_Exported_Functions STM32 LCD Utility Exported Functions
 154:./BSP/ST/stm32_lcd.c ****   * @{
 155:./BSP/ST/stm32_lcd.c ****   */
 156:./BSP/ST/stm32_lcd.c **** 
 157:./BSP/ST/stm32_lcd.c **** /**
 158:./BSP/ST/stm32_lcd.c ****   * @brief  Link board LCD drivers to STM32 LCD Utility drivers
 159:./BSP/ST/stm32_lcd.c ****   * @param  pDrv Structure of LCD functions
 160:./BSP/ST/stm32_lcd.c ****   */
 161:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetFuncDriver(const LCD_UTILS_Drv_t *pDrv)
 162:./BSP/ST/stm32_lcd.c **** {
  40              		.loc 1 162 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 8
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 16
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 7860     		str	r0, [r7, #4]
 163:./BSP/ST/stm32_lcd.c ****   FuncDriver.DrawBitmap     = pDrv->DrawBitmap;
  56              		.loc 1 163 35
  57 0008 7B68     		ldr	r3, [r7, #4]
  58 000a 1B68     		ldr	r3, [r3]
  59              		.loc 1 163 29
  60 000c 224A     		ldr	r2, .L2
  61 000e 1360     		str	r3, [r2]
 164:./BSP/ST/stm32_lcd.c ****   FuncDriver.FillRGBRect    = pDrv->FillRGBRect;
ARM GAS  /tmp/ccXj48YU.s 			page 5


  62              		.loc 1 164 35
  63 0010 7B68     		ldr	r3, [r7, #4]
  64 0012 5B68     		ldr	r3, [r3, #4]
  65              		.loc 1 164 29
  66 0014 204A     		ldr	r2, .L2
  67 0016 5360     		str	r3, [r2, #4]
 165:./BSP/ST/stm32_lcd.c ****   FuncDriver.DrawHLine      = pDrv->DrawHLine;
  68              		.loc 1 165 35
  69 0018 7B68     		ldr	r3, [r7, #4]
  70 001a 9B68     		ldr	r3, [r3, #8]
  71              		.loc 1 165 29
  72 001c 1E4A     		ldr	r2, .L2
  73 001e 9360     		str	r3, [r2, #8]
 166:./BSP/ST/stm32_lcd.c ****   FuncDriver.DrawVLine      = pDrv->DrawVLine;
  74              		.loc 1 166 35
  75 0020 7B68     		ldr	r3, [r7, #4]
  76 0022 DB68     		ldr	r3, [r3, #12]
  77              		.loc 1 166 29
  78 0024 1C4A     		ldr	r2, .L2
  79 0026 D360     		str	r3, [r2, #12]
 167:./BSP/ST/stm32_lcd.c ****   FuncDriver.FillRect       = pDrv->FillRect;
  80              		.loc 1 167 35
  81 0028 7B68     		ldr	r3, [r7, #4]
  82 002a 1B69     		ldr	r3, [r3, #16]
  83              		.loc 1 167 29
  84 002c 1A4A     		ldr	r2, .L2
  85 002e 1361     		str	r3, [r2, #16]
 168:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetPixel       = pDrv->GetPixel;
  86              		.loc 1 168 35
  87 0030 7B68     		ldr	r3, [r7, #4]
  88 0032 5B69     		ldr	r3, [r3, #20]
  89              		.loc 1 168 29
  90 0034 184A     		ldr	r2, .L2
  91 0036 5361     		str	r3, [r2, #20]
 169:./BSP/ST/stm32_lcd.c ****   FuncDriver.SetPixel       = pDrv->SetPixel;
  92              		.loc 1 169 35
  93 0038 7B68     		ldr	r3, [r7, #4]
  94 003a 9B69     		ldr	r3, [r3, #24]
  95              		.loc 1 169 29
  96 003c 164A     		ldr	r2, .L2
  97 003e 9361     		str	r3, [r2, #24]
 170:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetXSize       = pDrv->GetXSize;
  98              		.loc 1 170 35
  99 0040 7B68     		ldr	r3, [r7, #4]
 100 0042 DB69     		ldr	r3, [r3, #28]
 101              		.loc 1 170 29
 102 0044 144A     		ldr	r2, .L2
 103 0046 D361     		str	r3, [r2, #28]
 171:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetYSize       = pDrv->GetYSize;
 104              		.loc 1 171 35
 105 0048 7B68     		ldr	r3, [r7, #4]
 106 004a 1B6A     		ldr	r3, [r3, #32]
 107              		.loc 1 171 29
 108 004c 124A     		ldr	r2, .L2
 109 004e 1362     		str	r3, [r2, #32]
 172:./BSP/ST/stm32_lcd.c ****   FuncDriver.SetLayer       = pDrv->SetLayer;
 110              		.loc 1 172 35
ARM GAS  /tmp/ccXj48YU.s 			page 6


 111 0050 7B68     		ldr	r3, [r7, #4]
 112 0052 5B6A     		ldr	r3, [r3, #36]
 113              		.loc 1 172 29
 114 0054 104A     		ldr	r2, .L2
 115 0056 5362     		str	r3, [r2, #36]
 173:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetFormat      = pDrv->GetFormat;
 116              		.loc 1 173 35
 117 0058 7B68     		ldr	r3, [r7, #4]
 118 005a 9B6A     		ldr	r3, [r3, #40]
 119              		.loc 1 173 29
 120 005c 0E4A     		ldr	r2, .L2
 121 005e 9362     		str	r3, [r2, #40]
 174:./BSP/ST/stm32_lcd.c **** 
 175:./BSP/ST/stm32_lcd.c ****   DrawProp->LcdLayer = 0;
 122              		.loc 1 175 22
 123 0060 0E4B     		ldr	r3, .L2+4
 124 0062 0022     		movs	r2, #0
 125 0064 DA60     		str	r2, [r3, #12]
 176:./BSP/ST/stm32_lcd.c ****   DrawProp->LcdDevice = 0;
 126              		.loc 1 176 23
 127 0066 0D4B     		ldr	r3, .L2+4
 128 0068 0022     		movs	r2, #0
 129 006a 1A61     		str	r2, [r3, #16]
 177:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetXSize(0, &DrawProp->LcdXsize);
 130              		.loc 1 177 13
 131 006c 0A4B     		ldr	r3, .L2
 132 006e DB69     		ldr	r3, [r3, #28]
 133              		.loc 1 177 3
 134 0070 0B4A     		ldr	r2, .L2+8
 135 0072 1146     		mov	r1, r2
 136 0074 0020     		movs	r0, #0
 137 0076 9847     		blx	r3
 138              	.LVL0:
 178:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetYSize(0, &DrawProp->LcdYsize);
 139              		.loc 1 178 13
 140 0078 074B     		ldr	r3, .L2
 141 007a 1B6A     		ldr	r3, [r3, #32]
 142              		.loc 1 178 3
 143 007c 094A     		ldr	r2, .L2+12
 144 007e 1146     		mov	r1, r2
 145 0080 0020     		movs	r0, #0
 146 0082 9847     		blx	r3
 147              	.LVL1:
 179:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetFormat(0, &DrawProp->LcdPixelFormat);
 148              		.loc 1 179 13
 149 0084 044B     		ldr	r3, .L2
 150 0086 9B6A     		ldr	r3, [r3, #40]
 151              		.loc 1 179 3
 152 0088 074A     		ldr	r2, .L2+16
 153 008a 1146     		mov	r1, r2
 154 008c 0020     		movs	r0, #0
 155 008e 9847     		blx	r3
 156              	.LVL2:
 180:./BSP/ST/stm32_lcd.c **** }
 157              		.loc 1 180 1
 158 0090 00BF     		nop
 159 0092 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccXj48YU.s 			page 7


 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162 0094 BD46     		mov	sp, r7
 163              	.LCFI4:
 164              		.cfi_def_cfa_register 13
 165              		@ sp needed
 166 0096 80BD     		pop	{r7, pc}
 167              	.L3:
 168              		.align	2
 169              	.L2:
 170 0098 00000000 		.word	FuncDriver
 171 009c 00000000 		.word	DrawProp
 172 00a0 14000000 		.word	DrawProp+20
 173 00a4 18000000 		.word	DrawProp+24
 174 00a8 1C000000 		.word	DrawProp+28
 175              		.cfi_endproc
 176              	.LFE0:
 178              		.section	.text.UTIL_LCD_SetLayer,"ax",%progbits
 179              		.align	1
 180              		.global	UTIL_LCD_SetLayer
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	UTIL_LCD_SetLayer:
 187              	.LFB1:
 181:./BSP/ST/stm32_lcd.c **** 
 182:./BSP/ST/stm32_lcd.c **** /**
 183:./BSP/ST/stm32_lcd.c ****   * @brief  Set the LCD layer.
 184:./BSP/ST/stm32_lcd.c ****   * @param  Layer  LCD layer
 185:./BSP/ST/stm32_lcd.c ****   */
 186:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetLayer(uint32_t Layer)
 187:./BSP/ST/stm32_lcd.c **** {
 188              		.loc 1 187 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI5:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI7:
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 188:./BSP/ST/stm32_lcd.c ****   if(FuncDriver.SetLayer != NULL)
 204              		.loc 1 188 16
 205 0008 0A4B     		ldr	r3, .L7
 206 000a 5B6A     		ldr	r3, [r3, #36]
 207              		.loc 1 188 5
 208 000c 002B     		cmp	r3, #0
 209 000e 0CD0     		beq	.L6
 189:./BSP/ST/stm32_lcd.c ****   {
ARM GAS  /tmp/ccXj48YU.s 			page 8


 190:./BSP/ST/stm32_lcd.c ****     if(FuncDriver.SetLayer(DrawProp->LcdDevice, Layer) == 0)
 210              		.loc 1 190 18
 211 0010 084B     		ldr	r3, .L7
 212 0012 5B6A     		ldr	r3, [r3, #36]
 213              		.loc 1 190 8
 214 0014 084A     		ldr	r2, .L7+4
 215 0016 1269     		ldr	r2, [r2, #16]
 216 0018 7968     		ldr	r1, [r7, #4]
 217 001a 1046     		mov	r0, r2
 218 001c 9847     		blx	r3
 219              	.LVL3:
 220 001e 0346     		mov	r3, r0
 221              		.loc 1 190 7
 222 0020 002B     		cmp	r3, #0
 223 0022 02D1     		bne	.L6
 191:./BSP/ST/stm32_lcd.c ****     {
 192:./BSP/ST/stm32_lcd.c ****       DrawProp->LcdLayer = Layer;
 224              		.loc 1 192 26
 225 0024 044A     		ldr	r2, .L7+4
 226 0026 7B68     		ldr	r3, [r7, #4]
 227 0028 D360     		str	r3, [r2, #12]
 228              	.L6:
 193:./BSP/ST/stm32_lcd.c ****     }
 194:./BSP/ST/stm32_lcd.c ****   }
 195:./BSP/ST/stm32_lcd.c **** }
 229              		.loc 1 195 1
 230 002a 00BF     		nop
 231 002c 0837     		adds	r7, r7, #8
 232              	.LCFI8:
 233              		.cfi_def_cfa_offset 8
 234 002e BD46     		mov	sp, r7
 235              	.LCFI9:
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0030 80BD     		pop	{r7, pc}
 239              	.L8:
 240 0032 00BF     		.align	2
 241              	.L7:
 242 0034 00000000 		.word	FuncDriver
 243 0038 00000000 		.word	DrawProp
 244              		.cfi_endproc
 245              	.LFE1:
 247              		.section	.text.UTIL_LCD_SetDevice,"ax",%progbits
 248              		.align	1
 249              		.global	UTIL_LCD_SetDevice
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-d16
 255              	UTIL_LCD_SetDevice:
 256              	.LFB2:
 196:./BSP/ST/stm32_lcd.c **** 
 197:./BSP/ST/stm32_lcd.c **** /**
 198:./BSP/ST/stm32_lcd.c ****   * @brief  Set the LCD instance to be used.
 199:./BSP/ST/stm32_lcd.c ****   * @param  Device  LCD instance
 200:./BSP/ST/stm32_lcd.c ****   */
 201:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetDevice(uint32_t Device)
ARM GAS  /tmp/ccXj48YU.s 			page 9


 202:./BSP/ST/stm32_lcd.c **** {
 257              		.loc 1 202 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI10:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 82B0     		sub	sp, sp, #8
 267              	.LCFI11:
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI12:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 203:./BSP/ST/stm32_lcd.c ****   DrawProp->LcdDevice = Device;
 273              		.loc 1 203 23
 274 0008 094A     		ldr	r2, .L10
 275 000a 7B68     		ldr	r3, [r7, #4]
 276 000c 1361     		str	r3, [r2, #16]
 204:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetXSize(Device, &DrawProp->LcdXsize);
 277              		.loc 1 204 13
 278 000e 094B     		ldr	r3, .L10+4
 279 0010 DB69     		ldr	r3, [r3, #28]
 280              		.loc 1 204 3
 281 0012 094A     		ldr	r2, .L10+8
 282 0014 1146     		mov	r1, r2
 283 0016 7868     		ldr	r0, [r7, #4]
 284 0018 9847     		blx	r3
 285              	.LVL4:
 205:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetYSize(Device, &DrawProp->LcdYsize);
 286              		.loc 1 205 13
 287 001a 064B     		ldr	r3, .L10+4
 288 001c 1B6A     		ldr	r3, [r3, #32]
 289              		.loc 1 205 3
 290 001e 074A     		ldr	r2, .L10+12
 291 0020 1146     		mov	r1, r2
 292 0022 7868     		ldr	r0, [r7, #4]
 293 0024 9847     		blx	r3
 294              	.LVL5:
 206:./BSP/ST/stm32_lcd.c **** }
 295              		.loc 1 206 1
 296 0026 00BF     		nop
 297 0028 0837     		adds	r7, r7, #8
 298              	.LCFI13:
 299              		.cfi_def_cfa_offset 8
 300 002a BD46     		mov	sp, r7
 301              	.LCFI14:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 002c 80BD     		pop	{r7, pc}
 305              	.L11:
 306 002e 00BF     		.align	2
 307              	.L10:
 308 0030 00000000 		.word	DrawProp
ARM GAS  /tmp/ccXj48YU.s 			page 10


 309 0034 00000000 		.word	FuncDriver
 310 0038 14000000 		.word	DrawProp+20
 311 003c 18000000 		.word	DrawProp+24
 312              		.cfi_endproc
 313              	.LFE2:
 315              		.section	.text.UTIL_LCD_SetTextColor,"ax",%progbits
 316              		.align	1
 317              		.global	UTIL_LCD_SetTextColor
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv5-d16
 323              	UTIL_LCD_SetTextColor:
 324              	.LFB3:
 207:./BSP/ST/stm32_lcd.c **** 
 208:./BSP/ST/stm32_lcd.c **** /**
 209:./BSP/ST/stm32_lcd.c ****   * @brief  Sets the LCD text color.
 210:./BSP/ST/stm32_lcd.c ****   * @param  Color  Text color code
 211:./BSP/ST/stm32_lcd.c ****   */
 212:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetTextColor(uint32_t Color)
 213:./BSP/ST/stm32_lcd.c **** {
 325              		.loc 1 213 1
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330 0000 80B4     		push	{r7}
 331              	.LCFI15:
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 83B0     		sub	sp, sp, #12
 335              	.LCFI16:
 336              		.cfi_def_cfa_offset 16
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI17:
 339              		.cfi_def_cfa_register 7
 340 0006 7860     		str	r0, [r7, #4]
 214:./BSP/ST/stm32_lcd.c ****   DrawProp[DrawProp->LcdLayer].TextColor = Color;
 341              		.loc 1 214 20
 342 0008 064B     		ldr	r3, .L13
 343 000a DB68     		ldr	r3, [r3, #12]
 344              		.loc 1 214 42
 345 000c 054A     		ldr	r2, .L13
 346 000e 5B01     		lsls	r3, r3, #5
 347 0010 1344     		add	r3, r3, r2
 348 0012 7A68     		ldr	r2, [r7, #4]
 349 0014 1A60     		str	r2, [r3]
 215:./BSP/ST/stm32_lcd.c **** }
 350              		.loc 1 215 1
 351 0016 00BF     		nop
 352 0018 0C37     		adds	r7, r7, #12
 353              	.LCFI18:
 354              		.cfi_def_cfa_offset 4
 355 001a BD46     		mov	sp, r7
 356              	.LCFI19:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
ARM GAS  /tmp/ccXj48YU.s 			page 11


 359 001c 5DF8047B 		ldr	r7, [sp], #4
 360              	.LCFI20:
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0020 7047     		bx	lr
 364              	.L14:
 365 0022 00BF     		.align	2
 366              	.L13:
 367 0024 00000000 		.word	DrawProp
 368              		.cfi_endproc
 369              	.LFE3:
 371              		.section	.text.UTIL_LCD_GetTextColor,"ax",%progbits
 372              		.align	1
 373              		.global	UTIL_LCD_GetTextColor
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv5-d16
 379              	UTIL_LCD_GetTextColor:
 380              	.LFB4:
 216:./BSP/ST/stm32_lcd.c **** 
 217:./BSP/ST/stm32_lcd.c **** /**
 218:./BSP/ST/stm32_lcd.c ****   * @brief  Gets the LCD text color.
 219:./BSP/ST/stm32_lcd.c ****   * @retval Used text color.
 220:./BSP/ST/stm32_lcd.c ****   */
 221:./BSP/ST/stm32_lcd.c **** uint32_t UTIL_LCD_GetTextColor(void)
 222:./BSP/ST/stm32_lcd.c **** {
 381              		.loc 1 222 1
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              	.LCFI21:
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 00AF     		add	r7, sp, #0
 391              	.LCFI22:
 392              		.cfi_def_cfa_register 7
 223:./BSP/ST/stm32_lcd.c ****   return DrawProp[DrawProp->LcdLayer].TextColor;
 393              		.loc 1 223 27
 394 0004 054B     		ldr	r3, .L17
 395 0006 DB68     		ldr	r3, [r3, #12]
 396              		.loc 1 223 38
 397 0008 044A     		ldr	r2, .L17
 398 000a 5B01     		lsls	r3, r3, #5
 399 000c 1344     		add	r3, r3, r2
 400 000e 1B68     		ldr	r3, [r3]
 224:./BSP/ST/stm32_lcd.c **** }
 401              		.loc 1 224 1
 402 0010 1846     		mov	r0, r3
 403 0012 BD46     		mov	sp, r7
 404              	.LCFI23:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0014 5DF8047B 		ldr	r7, [sp], #4
 408              	.LCFI24:
ARM GAS  /tmp/ccXj48YU.s 			page 12


 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0018 7047     		bx	lr
 412              	.L18:
 413 001a 00BF     		.align	2
 414              	.L17:
 415 001c 00000000 		.word	DrawProp
 416              		.cfi_endproc
 417              	.LFE4:
 419              		.section	.text.UTIL_LCD_SetBackColor,"ax",%progbits
 420              		.align	1
 421              		.global	UTIL_LCD_SetBackColor
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu fpv5-d16
 427              	UTIL_LCD_SetBackColor:
 428              	.LFB5:
 225:./BSP/ST/stm32_lcd.c **** 
 226:./BSP/ST/stm32_lcd.c **** /**
 227:./BSP/ST/stm32_lcd.c ****   * @brief  Sets the LCD background color.
 228:./BSP/ST/stm32_lcd.c ****   * @param  Color  Layer background color code
 229:./BSP/ST/stm32_lcd.c ****   */
 230:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetBackColor(uint32_t Color)
 231:./BSP/ST/stm32_lcd.c **** {
 429              		.loc 1 231 1
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 8
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              	.LCFI25:
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 83B0     		sub	sp, sp, #12
 439              	.LCFI26:
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              	.LCFI27:
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 232:./BSP/ST/stm32_lcd.c ****   DrawProp[DrawProp->LcdLayer].BackColor = Color;
 445              		.loc 1 232 20
 446 0008 064B     		ldr	r3, .L20
 447 000a DB68     		ldr	r3, [r3, #12]
 448              		.loc 1 232 42
 449 000c 054A     		ldr	r2, .L20
 450 000e 5B01     		lsls	r3, r3, #5
 451 0010 1344     		add	r3, r3, r2
 452 0012 0433     		adds	r3, r3, #4
 453 0014 7A68     		ldr	r2, [r7, #4]
 454 0016 1A60     		str	r2, [r3]
 233:./BSP/ST/stm32_lcd.c **** }
 455              		.loc 1 233 1
 456 0018 00BF     		nop
 457 001a 0C37     		adds	r7, r7, #12
 458              	.LCFI28:
ARM GAS  /tmp/ccXj48YU.s 			page 13


 459              		.cfi_def_cfa_offset 4
 460 001c BD46     		mov	sp, r7
 461              	.LCFI29:
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 001e 5DF8047B 		ldr	r7, [sp], #4
 465              	.LCFI30:
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0022 7047     		bx	lr
 469              	.L21:
 470              		.align	2
 471              	.L20:
 472 0024 00000000 		.word	DrawProp
 473              		.cfi_endproc
 474              	.LFE5:
 476              		.section	.text.UTIL_LCD_GetBackColor,"ax",%progbits
 477              		.align	1
 478              		.global	UTIL_LCD_GetBackColor
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv5-d16
 484              	UTIL_LCD_GetBackColor:
 485              	.LFB6:
 234:./BSP/ST/stm32_lcd.c **** 
 235:./BSP/ST/stm32_lcd.c **** /**
 236:./BSP/ST/stm32_lcd.c ****   * @brief  Gets the LCD background color.
 237:./BSP/ST/stm32_lcd.c ****   * @retval Used background color
 238:./BSP/ST/stm32_lcd.c ****   */
 239:./BSP/ST/stm32_lcd.c **** uint32_t UTIL_LCD_GetBackColor(void)
 240:./BSP/ST/stm32_lcd.c **** {
 486              		.loc 1 240 1
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              	.LCFI31:
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 00AF     		add	r7, sp, #0
 496              	.LCFI32:
 497              		.cfi_def_cfa_register 7
 241:./BSP/ST/stm32_lcd.c ****   return DrawProp[DrawProp->LcdLayer].BackColor;
 498              		.loc 1 241 27
 499 0004 054B     		ldr	r3, .L24
 500 0006 DB68     		ldr	r3, [r3, #12]
 501              		.loc 1 241 38
 502 0008 044A     		ldr	r2, .L24
 503 000a 5B01     		lsls	r3, r3, #5
 504 000c 1344     		add	r3, r3, r2
 505 000e 0433     		adds	r3, r3, #4
 506 0010 1B68     		ldr	r3, [r3]
 242:./BSP/ST/stm32_lcd.c **** }
 507              		.loc 1 242 1
 508 0012 1846     		mov	r0, r3
ARM GAS  /tmp/ccXj48YU.s 			page 14


 509 0014 BD46     		mov	sp, r7
 510              	.LCFI33:
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0016 5DF8047B 		ldr	r7, [sp], #4
 514              	.LCFI34:
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 0
 517 001a 7047     		bx	lr
 518              	.L25:
 519              		.align	2
 520              	.L24:
 521 001c 00000000 		.word	DrawProp
 522              		.cfi_endproc
 523              	.LFE6:
 525              		.section	.text.UTIL_LCD_SetFont,"ax",%progbits
 526              		.align	1
 527              		.global	UTIL_LCD_SetFont
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv5-d16
 533              	UTIL_LCD_SetFont:
 534              	.LFB7:
 243:./BSP/ST/stm32_lcd.c **** 
 244:./BSP/ST/stm32_lcd.c **** /**
 245:./BSP/ST/stm32_lcd.c ****   * @brief  Sets the LCD text font.
 246:./BSP/ST/stm32_lcd.c ****   * @param  fonts  Layer font to be used
 247:./BSP/ST/stm32_lcd.c ****   */
 248:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetFont(sFONT *fonts)
 249:./BSP/ST/stm32_lcd.c **** {
 535              		.loc 1 249 1
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              	.LCFI35:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              	.LCFI36:
 546              		.cfi_def_cfa_offset 16
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI37:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 250:./BSP/ST/stm32_lcd.c ****   DrawProp[DrawProp->LcdLayer].pFont = fonts;
 551              		.loc 1 250 20
 552 0008 064B     		ldr	r3, .L27
 553 000a DB68     		ldr	r3, [r3, #12]
 554              		.loc 1 250 38
 555 000c 054A     		ldr	r2, .L27
 556 000e 5B01     		lsls	r3, r3, #5
 557 0010 1344     		add	r3, r3, r2
 558 0012 0833     		adds	r3, r3, #8
 559 0014 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccXj48YU.s 			page 15


 560 0016 1A60     		str	r2, [r3]
 251:./BSP/ST/stm32_lcd.c **** }
 561              		.loc 1 251 1
 562 0018 00BF     		nop
 563 001a 0C37     		adds	r7, r7, #12
 564              	.LCFI38:
 565              		.cfi_def_cfa_offset 4
 566 001c BD46     		mov	sp, r7
 567              	.LCFI39:
 568              		.cfi_def_cfa_register 13
 569              		@ sp needed
 570 001e 5DF8047B 		ldr	r7, [sp], #4
 571              	.LCFI40:
 572              		.cfi_restore 7
 573              		.cfi_def_cfa_offset 0
 574 0022 7047     		bx	lr
 575              	.L28:
 576              		.align	2
 577              	.L27:
 578 0024 00000000 		.word	DrawProp
 579              		.cfi_endproc
 580              	.LFE7:
 582              		.section	.text.UTIL_LCD_GetFont,"ax",%progbits
 583              		.align	1
 584              		.global	UTIL_LCD_GetFont
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv5-d16
 590              	UTIL_LCD_GetFont:
 591              	.LFB8:
 252:./BSP/ST/stm32_lcd.c **** 
 253:./BSP/ST/stm32_lcd.c **** /**
 254:./BSP/ST/stm32_lcd.c ****   * @brief  Gets the LCD text font.
 255:./BSP/ST/stm32_lcd.c ****   * @retval Used layer font
 256:./BSP/ST/stm32_lcd.c ****   */
 257:./BSP/ST/stm32_lcd.c **** sFONT *UTIL_LCD_GetFont(void)
 258:./BSP/ST/stm32_lcd.c **** {
 592              		.loc 1 258 1
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 80B4     		push	{r7}
 598              	.LCFI41:
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 7, -4
 601 0002 00AF     		add	r7, sp, #0
 602              	.LCFI42:
 603              		.cfi_def_cfa_register 7
 259:./BSP/ST/stm32_lcd.c ****   return DrawProp[DrawProp->LcdLayer].pFont;
 604              		.loc 1 259 27
 605 0004 054B     		ldr	r3, .L31
 606 0006 DB68     		ldr	r3, [r3, #12]
 607              		.loc 1 259 38
 608 0008 044A     		ldr	r2, .L31
 609 000a 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/ccXj48YU.s 			page 16


 610 000c 1344     		add	r3, r3, r2
 611 000e 0833     		adds	r3, r3, #8
 612 0010 1B68     		ldr	r3, [r3]
 260:./BSP/ST/stm32_lcd.c **** }
 613              		.loc 1 260 1
 614 0012 1846     		mov	r0, r3
 615 0014 BD46     		mov	sp, r7
 616              	.LCFI43:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0016 5DF8047B 		ldr	r7, [sp], #4
 620              	.LCFI44:
 621              		.cfi_restore 7
 622              		.cfi_def_cfa_offset 0
 623 001a 7047     		bx	lr
 624              	.L32:
 625              		.align	2
 626              	.L31:
 627 001c 00000000 		.word	DrawProp
 628              		.cfi_endproc
 629              	.LFE8:
 631              		.section	.text.UTIL_LCD_FillRGBRect,"ax",%progbits
 632              		.align	1
 633              		.global	UTIL_LCD_FillRGBRect
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv5-d16
 639              	UTIL_LCD_FillRGBRect:
 640              	.LFB9:
 261:./BSP/ST/stm32_lcd.c **** 
 262:./BSP/ST/stm32_lcd.c **** /**
 263:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a RGB rectangle in currently active layer.
 264:./BSP/ST/stm32_lcd.c ****   * @param  pData   Pointer to RGB rectangle data
 265:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 266:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 267:./BSP/ST/stm32_lcd.c ****   * @param  Length  Line length
 268:./BSP/ST/stm32_lcd.c ****   */
 269:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_FillRGBRect(uint32_t Xpos, uint32_t Ypos, uint8_t *pData, uint32_t Width, uint32_t He
 270:./BSP/ST/stm32_lcd.c **** {
 641              		.loc 1 270 1
 642              		.cfi_startproc
 643              		@ args = 4, pretend = 0, frame = 16
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 90B5     		push	{r4, r7, lr}
 646              	.LCFI45:
 647              		.cfi_def_cfa_offset 12
 648              		.cfi_offset 4, -12
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 87B0     		sub	sp, sp, #28
 652              	.LCFI46:
 653              		.cfi_def_cfa_offset 40
 654 0004 02AF     		add	r7, sp, #8
 655              	.LCFI47:
 656              		.cfi_def_cfa 7, 32
 657 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccXj48YU.s 			page 17


 658 0008 B960     		str	r1, [r7, #8]
 659 000a 7A60     		str	r2, [r7, #4]
 660 000c 3B60     		str	r3, [r7]
 271:./BSP/ST/stm32_lcd.c ****   /* Write RGB rectangle data */
 272:./BSP/ST/stm32_lcd.c ****   FuncDriver.FillRGBRect(DrawProp->LcdDevice, Xpos, Ypos, pData, Width, Height);
 661              		.loc 1 272 13
 662 000e 084B     		ldr	r3, .L34
 663 0010 5C68     		ldr	r4, [r3, #4]
 664              		.loc 1 272 3
 665 0012 084B     		ldr	r3, .L34+4
 666 0014 1869     		ldr	r0, [r3, #16]
 667 0016 3B6A     		ldr	r3, [r7, #32]
 668 0018 0193     		str	r3, [sp, #4]
 669 001a 3B68     		ldr	r3, [r7]
 670 001c 0093     		str	r3, [sp]
 671 001e 7B68     		ldr	r3, [r7, #4]
 672 0020 BA68     		ldr	r2, [r7, #8]
 673 0022 F968     		ldr	r1, [r7, #12]
 674 0024 A047     		blx	r4
 675              	.LVL6:
 273:./BSP/ST/stm32_lcd.c **** }
 676              		.loc 1 273 1
 677 0026 00BF     		nop
 678 0028 1437     		adds	r7, r7, #20
 679              	.LCFI48:
 680              		.cfi_def_cfa_offset 12
 681 002a BD46     		mov	sp, r7
 682              	.LCFI49:
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 002c 90BD     		pop	{r4, r7, pc}
 686              	.L35:
 687 002e 00BF     		.align	2
 688              	.L34:
 689 0030 00000000 		.word	FuncDriver
 690 0034 00000000 		.word	DrawProp
 691              		.cfi_endproc
 692              	.LFE9:
 694              		.section	.text.UTIL_LCD_DrawHLine,"ax",%progbits
 695              		.align	1
 696              		.global	UTIL_LCD_DrawHLine
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu fpv5-d16
 702              	UTIL_LCD_DrawHLine:
 703              	.LFB10:
 274:./BSP/ST/stm32_lcd.c **** 
 275:./BSP/ST/stm32_lcd.c **** /**
 276:./BSP/ST/stm32_lcd.c ****   * @brief  Draws an horizontal line in currently active layer.
 277:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 278:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 279:./BSP/ST/stm32_lcd.c ****   * @param  Length  Line length
 280:./BSP/ST/stm32_lcd.c ****   * @param  Color   Draw color
 281:./BSP/ST/stm32_lcd.c ****   */
 282:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawHLine(uint32_t Xpos, uint32_t Ypos, uint32_t Length, uint32_t Color)
 283:./BSP/ST/stm32_lcd.c **** {
ARM GAS  /tmp/ccXj48YU.s 			page 18


 704              		.loc 1 283 1
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 16
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708 0000 90B5     		push	{r4, r7, lr}
 709              	.LCFI50:
 710              		.cfi_def_cfa_offset 12
 711              		.cfi_offset 4, -12
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 87B0     		sub	sp, sp, #28
 715              	.LCFI51:
 716              		.cfi_def_cfa_offset 40
 717 0004 02AF     		add	r7, sp, #8
 718              	.LCFI52:
 719              		.cfi_def_cfa 7, 32
 720 0006 F860     		str	r0, [r7, #12]
 721 0008 B960     		str	r1, [r7, #8]
 722 000a 7A60     		str	r2, [r7, #4]
 723 000c 3B60     		str	r3, [r7]
 284:./BSP/ST/stm32_lcd.c ****   /* Write line */
 285:./BSP/ST/stm32_lcd.c ****   if(DrawProp->LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 724              		.loc 1 285 14
 725 000e 154B     		ldr	r3, .L40
 726 0010 DB69     		ldr	r3, [r3, #28]
 727              		.loc 1 285 5
 728 0012 022B     		cmp	r3, #2
 729 0014 18D1     		bne	.L37
 286:./BSP/ST/stm32_lcd.c ****   {
 287:./BSP/ST/stm32_lcd.c ****     FuncDriver.DrawHLine(DrawProp->LcdDevice, Xpos, Ypos, Length, CONVERTARGB88882RGB565(Color));
 730              		.loc 1 287 15
 731 0016 144B     		ldr	r3, .L40+4
 732 0018 9C68     		ldr	r4, [r3, #8]
 733              		.loc 1 287 5
 734 001a 124B     		ldr	r3, .L40
 735 001c 1869     		ldr	r0, [r3, #16]
 736              		.loc 1 287 67
 737 001e 3B68     		ldr	r3, [r7]
 738 0020 DB08     		lsrs	r3, r3, #3
 739 0022 03F01F02 		and	r2, r3, #31
 740 0026 3B68     		ldr	r3, [r7]
 741 0028 9B0A     		lsrs	r3, r3, #10
 742 002a 5B01     		lsls	r3, r3, #5
 743 002c 03F4FC63 		and	r3, r3, #2016
 744 0030 1A43     		orrs	r2, r2, r3
 745 0032 3B68     		ldr	r3, [r7]
 746 0034 DB0C     		lsrs	r3, r3, #19
 747 0036 DB02     		lsls	r3, r3, #11
 748 0038 9BB2     		uxth	r3, r3
 749              		.loc 1 287 5
 750 003a 1343     		orrs	r3, r3, r2
 751 003c 0093     		str	r3, [sp]
 752 003e 7B68     		ldr	r3, [r7, #4]
 753 0040 BA68     		ldr	r2, [r7, #8]
 754 0042 F968     		ldr	r1, [r7, #12]
 755 0044 A047     		blx	r4
 756              	.LVL7:
ARM GAS  /tmp/ccXj48YU.s 			page 19


 288:./BSP/ST/stm32_lcd.c ****   }
 289:./BSP/ST/stm32_lcd.c ****   else
 290:./BSP/ST/stm32_lcd.c ****   {
 291:./BSP/ST/stm32_lcd.c ****     FuncDriver.DrawHLine(DrawProp->LcdDevice, Xpos, Ypos, Length, Color);
 292:./BSP/ST/stm32_lcd.c ****   }
 293:./BSP/ST/stm32_lcd.c **** }
 757              		.loc 1 293 1
 758 0046 09E0     		b	.L39
 759              	.L37:
 291:./BSP/ST/stm32_lcd.c ****   }
 760              		.loc 1 291 15
 761 0048 074B     		ldr	r3, .L40+4
 762 004a 9C68     		ldr	r4, [r3, #8]
 291:./BSP/ST/stm32_lcd.c ****   }
 763              		.loc 1 291 5
 764 004c 054B     		ldr	r3, .L40
 765 004e 1869     		ldr	r0, [r3, #16]
 766 0050 3B68     		ldr	r3, [r7]
 767 0052 0093     		str	r3, [sp]
 768 0054 7B68     		ldr	r3, [r7, #4]
 769 0056 BA68     		ldr	r2, [r7, #8]
 770 0058 F968     		ldr	r1, [r7, #12]
 771 005a A047     		blx	r4
 772              	.LVL8:
 773              	.L39:
 774              		.loc 1 293 1
 775 005c 00BF     		nop
 776 005e 1437     		adds	r7, r7, #20
 777              	.LCFI53:
 778              		.cfi_def_cfa_offset 12
 779 0060 BD46     		mov	sp, r7
 780              	.LCFI54:
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0062 90BD     		pop	{r4, r7, pc}
 784              	.L41:
 785              		.align	2
 786              	.L40:
 787 0064 00000000 		.word	DrawProp
 788 0068 00000000 		.word	FuncDriver
 789              		.cfi_endproc
 790              	.LFE10:
 792              		.section	.text.UTIL_LCD_DrawVLine,"ax",%progbits
 793              		.align	1
 794              		.global	UTIL_LCD_DrawVLine
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv5-d16
 800              	UTIL_LCD_DrawVLine:
 801              	.LFB11:
 294:./BSP/ST/stm32_lcd.c **** 
 295:./BSP/ST/stm32_lcd.c **** /**
 296:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a vertical line in currently active layer.
 297:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 298:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 299:./BSP/ST/stm32_lcd.c ****   * @param  Length  Line length
ARM GAS  /tmp/ccXj48YU.s 			page 20


 300:./BSP/ST/stm32_lcd.c ****   * @param  Color   Draw color
 301:./BSP/ST/stm32_lcd.c ****   */
 302:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawVLine(uint32_t Xpos, uint32_t Ypos, uint32_t Length, uint32_t Color)
 303:./BSP/ST/stm32_lcd.c **** {
 802              		.loc 1 303 1
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 16
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 90B5     		push	{r4, r7, lr}
 807              	.LCFI55:
 808              		.cfi_def_cfa_offset 12
 809              		.cfi_offset 4, -12
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 87B0     		sub	sp, sp, #28
 813              	.LCFI56:
 814              		.cfi_def_cfa_offset 40
 815 0004 02AF     		add	r7, sp, #8
 816              	.LCFI57:
 817              		.cfi_def_cfa 7, 32
 818 0006 F860     		str	r0, [r7, #12]
 819 0008 B960     		str	r1, [r7, #8]
 820 000a 7A60     		str	r2, [r7, #4]
 821 000c 3B60     		str	r3, [r7]
 304:./BSP/ST/stm32_lcd.c ****   /* Write line */
 305:./BSP/ST/stm32_lcd.c ****   if(DrawProp->LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 822              		.loc 1 305 14
 823 000e 154B     		ldr	r3, .L46
 824 0010 DB69     		ldr	r3, [r3, #28]
 825              		.loc 1 305 5
 826 0012 022B     		cmp	r3, #2
 827 0014 18D1     		bne	.L43
 306:./BSP/ST/stm32_lcd.c ****   {
 307:./BSP/ST/stm32_lcd.c ****     FuncDriver.DrawVLine(DrawProp->LcdDevice, Xpos, Ypos, Length, CONVERTARGB88882RGB565(Color));
 828              		.loc 1 307 15
 829 0016 144B     		ldr	r3, .L46+4
 830 0018 DC68     		ldr	r4, [r3, #12]
 831              		.loc 1 307 5
 832 001a 124B     		ldr	r3, .L46
 833 001c 1869     		ldr	r0, [r3, #16]
 834              		.loc 1 307 67
 835 001e 3B68     		ldr	r3, [r7]
 836 0020 DB08     		lsrs	r3, r3, #3
 837 0022 03F01F02 		and	r2, r3, #31
 838 0026 3B68     		ldr	r3, [r7]
 839 0028 9B0A     		lsrs	r3, r3, #10
 840 002a 5B01     		lsls	r3, r3, #5
 841 002c 03F4FC63 		and	r3, r3, #2016
 842 0030 1A43     		orrs	r2, r2, r3
 843 0032 3B68     		ldr	r3, [r7]
 844 0034 DB0C     		lsrs	r3, r3, #19
 845 0036 DB02     		lsls	r3, r3, #11
 846 0038 9BB2     		uxth	r3, r3
 847              		.loc 1 307 5
 848 003a 1343     		orrs	r3, r3, r2
 849 003c 0093     		str	r3, [sp]
 850 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXj48YU.s 			page 21


 851 0040 BA68     		ldr	r2, [r7, #8]
 852 0042 F968     		ldr	r1, [r7, #12]
 853 0044 A047     		blx	r4
 854              	.LVL9:
 308:./BSP/ST/stm32_lcd.c ****   }
 309:./BSP/ST/stm32_lcd.c ****   else
 310:./BSP/ST/stm32_lcd.c ****   {
 311:./BSP/ST/stm32_lcd.c ****     FuncDriver.DrawVLine(DrawProp->LcdDevice, Xpos, Ypos, Length, Color);
 312:./BSP/ST/stm32_lcd.c ****   }
 313:./BSP/ST/stm32_lcd.c **** }
 855              		.loc 1 313 1
 856 0046 09E0     		b	.L45
 857              	.L43:
 311:./BSP/ST/stm32_lcd.c ****   }
 858              		.loc 1 311 15
 859 0048 074B     		ldr	r3, .L46+4
 860 004a DC68     		ldr	r4, [r3, #12]
 311:./BSP/ST/stm32_lcd.c ****   }
 861              		.loc 1 311 5
 862 004c 054B     		ldr	r3, .L46
 863 004e 1869     		ldr	r0, [r3, #16]
 864 0050 3B68     		ldr	r3, [r7]
 865 0052 0093     		str	r3, [sp]
 866 0054 7B68     		ldr	r3, [r7, #4]
 867 0056 BA68     		ldr	r2, [r7, #8]
 868 0058 F968     		ldr	r1, [r7, #12]
 869 005a A047     		blx	r4
 870              	.LVL10:
 871              	.L45:
 872              		.loc 1 313 1
 873 005c 00BF     		nop
 874 005e 1437     		adds	r7, r7, #20
 875              	.LCFI58:
 876              		.cfi_def_cfa_offset 12
 877 0060 BD46     		mov	sp, r7
 878              	.LCFI59:
 879              		.cfi_def_cfa_register 13
 880              		@ sp needed
 881 0062 90BD     		pop	{r4, r7, pc}
 882              	.L47:
 883              		.align	2
 884              	.L46:
 885 0064 00000000 		.word	DrawProp
 886 0068 00000000 		.word	FuncDriver
 887              		.cfi_endproc
 888              	.LFE11:
 890              		.section	.text.UTIL_LCD_GetPixel,"ax",%progbits
 891              		.align	1
 892              		.global	UTIL_LCD_GetPixel
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv5-d16
 898              	UTIL_LCD_GetPixel:
 899              	.LFB12:
 314:./BSP/ST/stm32_lcd.c **** 
 315:./BSP/ST/stm32_lcd.c **** /**
ARM GAS  /tmp/ccXj48YU.s 			page 22


 316:./BSP/ST/stm32_lcd.c ****   * @brief  Read an LCD pixel.
 317:./BSP/ST/stm32_lcd.c ****   * @param  Xpos     X position
 318:./BSP/ST/stm32_lcd.c ****   * @param  Ypos     Y position
 319:./BSP/ST/stm32_lcd.c ****   * @retval Color    pixel color
 320:./BSP/ST/stm32_lcd.c ****   */
 321:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_GetPixel(uint16_t Xpos, uint16_t Ypos, uint32_t *Color)
 322:./BSP/ST/stm32_lcd.c **** {
 900              		.loc 1 322 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 8
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 90B5     		push	{r4, r7, lr}
 905              	.LCFI60:
 906              		.cfi_def_cfa_offset 12
 907              		.cfi_offset 4, -12
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 83B0     		sub	sp, sp, #12
 911              	.LCFI61:
 912              		.cfi_def_cfa_offset 24
 913 0004 00AF     		add	r7, sp, #0
 914              	.LCFI62:
 915              		.cfi_def_cfa_register 7
 916 0006 0346     		mov	r3, r0
 917 0008 3A60     		str	r2, [r7]
 918 000a FB80     		strh	r3, [r7, #6]	@ movhi
 919 000c 0B46     		mov	r3, r1	@ movhi
 920 000e BB80     		strh	r3, [r7, #4]	@ movhi
 323:./BSP/ST/stm32_lcd.c ****   /* Get Pixel */
 324:./BSP/ST/stm32_lcd.c ****   FuncDriver.GetPixel(DrawProp->LcdDevice, Xpos, Ypos, Color);
 921              		.loc 1 324 13
 922 0010 1D4B     		ldr	r3, .L51
 923 0012 5C69     		ldr	r4, [r3, #20]
 924              		.loc 1 324 3
 925 0014 1D4B     		ldr	r3, .L51+4
 926 0016 1869     		ldr	r0, [r3, #16]
 927 0018 F988     		ldrh	r1, [r7, #6]
 928 001a BA88     		ldrh	r2, [r7, #4]
 929 001c 3B68     		ldr	r3, [r7]
 930 001e A047     		blx	r4
 931              	.LVL11:
 325:./BSP/ST/stm32_lcd.c ****   if(DrawProp->LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 932              		.loc 1 325 14
 933 0020 1A4B     		ldr	r3, .L51+4
 934 0022 DB69     		ldr	r3, [r3, #28]
 935              		.loc 1 325 5
 936 0024 022B     		cmp	r3, #2
 937 0026 2AD1     		bne	.L50
 326:./BSP/ST/stm32_lcd.c ****   {
 327:./BSP/ST/stm32_lcd.c ****     *Color = CONVERTRGB5652ARGB8888(*Color);
 938              		.loc 1 327 14
 939 0028 3B68     		ldr	r3, [r7]
 940 002a 1B68     		ldr	r3, [r3]
 941 002c DB0A     		lsrs	r3, r3, #11
 942 002e 03F01F02 		and	r2, r3, #31
 943 0032 1346     		mov	r3, r2
 944 0034 1B01     		lsls	r3, r3, #4
ARM GAS  /tmp/ccXj48YU.s 			page 23


 945 0036 1344     		add	r3, r3, r2
 946 0038 5A01     		lsls	r2, r3, #5
 947 003a D31A     		subs	r3, r2, r3
 948 003c 1733     		adds	r3, r3, #23
 949 003e 9B09     		lsrs	r3, r3, #6
 950 0040 1904     		lsls	r1, r3, #16
 951 0042 3B68     		ldr	r3, [r7]
 952 0044 1B68     		ldr	r3, [r3]
 953 0046 5B09     		lsrs	r3, r3, #5
 954 0048 03F03F02 		and	r2, r3, #63
 955 004c 1346     		mov	r3, r2
 956 004e DB01     		lsls	r3, r3, #7
 957 0050 1344     		add	r3, r3, r2
 958 0052 5B00     		lsls	r3, r3, #1
 959 0054 1344     		add	r3, r3, r2
 960 0056 2133     		adds	r3, r3, #33
 961 0058 9B09     		lsrs	r3, r3, #6
 962 005a 1B02     		lsls	r3, r3, #8
 963 005c 1943     		orrs	r1, r1, r3
 964 005e 3B68     		ldr	r3, [r7]
 965 0060 1B68     		ldr	r3, [r3]
 966 0062 03F01F02 		and	r2, r3, #31
 967 0066 1346     		mov	r3, r2
 968 0068 1B01     		lsls	r3, r3, #4
 969 006a 1344     		add	r3, r3, r2
 970 006c 5A01     		lsls	r2, r3, #5
 971 006e D31A     		subs	r3, r2, r3
 972 0070 1733     		adds	r3, r3, #23
 973 0072 9B09     		lsrs	r3, r3, #6
 974 0074 0B43     		orrs	r3, r3, r1
 975 0076 43F07F42 		orr	r2, r3, #-16777216
 976              		.loc 1 327 12
 977 007a 3B68     		ldr	r3, [r7]
 978 007c 1A60     		str	r2, [r3]
 979              	.L50:
 328:./BSP/ST/stm32_lcd.c ****   }
 329:./BSP/ST/stm32_lcd.c **** }
 980              		.loc 1 329 1
 981 007e 00BF     		nop
 982 0080 0C37     		adds	r7, r7, #12
 983              	.LCFI63:
 984              		.cfi_def_cfa_offset 12
 985 0082 BD46     		mov	sp, r7
 986              	.LCFI64:
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0084 90BD     		pop	{r4, r7, pc}
 990              	.L52:
 991 0086 00BF     		.align	2
 992              	.L51:
 993 0088 00000000 		.word	FuncDriver
 994 008c 00000000 		.word	DrawProp
 995              		.cfi_endproc
 996              	.LFE12:
 998              		.section	.text.UTIL_LCD_SetPixel,"ax",%progbits
 999              		.align	1
 1000              		.global	UTIL_LCD_SetPixel
ARM GAS  /tmp/ccXj48YU.s 			page 24


 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv5-d16
 1006              	UTIL_LCD_SetPixel:
 1007              	.LFB13:
 330:./BSP/ST/stm32_lcd.c **** 
 331:./BSP/ST/stm32_lcd.c **** /**
 332:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a pixel on LCD.
 333:./BSP/ST/stm32_lcd.c ****   * @param  Xpos     X position
 334:./BSP/ST/stm32_lcd.c ****   * @param  Ypos     Y position
 335:./BSP/ST/stm32_lcd.c ****   * @param  Color    Pixel color
 336:./BSP/ST/stm32_lcd.c ****   */
 337:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_SetPixel(uint16_t Xpos, uint16_t Ypos, uint32_t Color)
 338:./BSP/ST/stm32_lcd.c **** {
 1008              		.loc 1 338 1
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 B0B5     		push	{r4, r5, r7, lr}
 1013              	.LCFI65:
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 4, -16
 1016              		.cfi_offset 5, -12
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 82B0     		sub	sp, sp, #8
 1020              	.LCFI66:
 1021              		.cfi_def_cfa_offset 24
 1022 0004 00AF     		add	r7, sp, #0
 1023              	.LCFI67:
 1024              		.cfi_def_cfa_register 7
 1025 0006 0346     		mov	r3, r0
 1026 0008 3A60     		str	r2, [r7]
 1027 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1028 000c 0B46     		mov	r3, r1	@ movhi
 1029 000e BB80     		strh	r3, [r7, #4]	@ movhi
 339:./BSP/ST/stm32_lcd.c ****   /* Set Pixel */
 340:./BSP/ST/stm32_lcd.c ****   if(DrawProp->LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 1030              		.loc 1 340 14
 1031 0010 134B     		ldr	r3, .L57
 1032 0012 DB69     		ldr	r3, [r3, #28]
 1033              		.loc 1 340 5
 1034 0014 022B     		cmp	r3, #2
 1035 0016 17D1     		bne	.L54
 341:./BSP/ST/stm32_lcd.c ****   {
 342:./BSP/ST/stm32_lcd.c ****     FuncDriver.SetPixel(DrawProp->LcdDevice, Xpos, Ypos, CONVERTARGB88882RGB565(Color));
 1036              		.loc 1 342 15
 1037 0018 124B     		ldr	r3, .L57+4
 1038 001a 9C69     		ldr	r4, [r3, #24]
 1039              		.loc 1 342 5
 1040 001c 104B     		ldr	r3, .L57
 1041 001e 1869     		ldr	r0, [r3, #16]
 1042 0020 F988     		ldrh	r1, [r7, #6]
 1043 0022 BD88     		ldrh	r5, [r7, #4]
 1044              		.loc 1 342 58
 1045 0024 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccXj48YU.s 			page 25


 1046 0026 DB08     		lsrs	r3, r3, #3
 1047 0028 03F01F02 		and	r2, r3, #31
 1048 002c 3B68     		ldr	r3, [r7]
 1049 002e 9B0A     		lsrs	r3, r3, #10
 1050 0030 5B01     		lsls	r3, r3, #5
 1051 0032 03F4FC63 		and	r3, r3, #2016
 1052 0036 1A43     		orrs	r2, r2, r3
 1053 0038 3B68     		ldr	r3, [r7]
 1054 003a DB0C     		lsrs	r3, r3, #19
 1055 003c DB02     		lsls	r3, r3, #11
 1056 003e 9BB2     		uxth	r3, r3
 1057              		.loc 1 342 5
 1058 0040 1343     		orrs	r3, r3, r2
 1059 0042 2A46     		mov	r2, r5
 1060 0044 A047     		blx	r4
 1061              	.LVL12:
 343:./BSP/ST/stm32_lcd.c ****   }
 344:./BSP/ST/stm32_lcd.c ****   else
 345:./BSP/ST/stm32_lcd.c ****   {
 346:./BSP/ST/stm32_lcd.c ****     FuncDriver.SetPixel(DrawProp->LcdDevice, Xpos, Ypos, Color);
 347:./BSP/ST/stm32_lcd.c ****   }
 348:./BSP/ST/stm32_lcd.c **** }
 1062              		.loc 1 348 1
 1063 0046 07E0     		b	.L56
 1064              	.L54:
 346:./BSP/ST/stm32_lcd.c ****   }
 1065              		.loc 1 346 15
 1066 0048 064B     		ldr	r3, .L57+4
 1067 004a 9C69     		ldr	r4, [r3, #24]
 346:./BSP/ST/stm32_lcd.c ****   }
 1068              		.loc 1 346 5
 1069 004c 044B     		ldr	r3, .L57
 1070 004e 1869     		ldr	r0, [r3, #16]
 1071 0050 F988     		ldrh	r1, [r7, #6]
 1072 0052 BA88     		ldrh	r2, [r7, #4]
 1073 0054 3B68     		ldr	r3, [r7]
 1074 0056 A047     		blx	r4
 1075              	.LVL13:
 1076              	.L56:
 1077              		.loc 1 348 1
 1078 0058 00BF     		nop
 1079 005a 0837     		adds	r7, r7, #8
 1080              	.LCFI68:
 1081              		.cfi_def_cfa_offset 16
 1082 005c BD46     		mov	sp, r7
 1083              	.LCFI69:
 1084              		.cfi_def_cfa_register 13
 1085              		@ sp needed
 1086 005e B0BD     		pop	{r4, r5, r7, pc}
 1087              	.L58:
 1088              		.align	2
 1089              	.L57:
 1090 0060 00000000 		.word	DrawProp
 1091 0064 00000000 		.word	FuncDriver
 1092              		.cfi_endproc
 1093              	.LFE13:
 1095              		.section	.text.UTIL_LCD_Clear,"ax",%progbits
ARM GAS  /tmp/ccXj48YU.s 			page 26


 1096              		.align	1
 1097              		.global	UTIL_LCD_Clear
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv5-d16
 1103              	UTIL_LCD_Clear:
 1104              	.LFB14:
 349:./BSP/ST/stm32_lcd.c **** 
 350:./BSP/ST/stm32_lcd.c **** /**
 351:./BSP/ST/stm32_lcd.c ****   * @brief  Clears the whole currently active layer of LTDC.
 352:./BSP/ST/stm32_lcd.c ****   * @param  Color  Color of the background
 353:./BSP/ST/stm32_lcd.c ****   */
 354:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_Clear(uint32_t Color)
 355:./BSP/ST/stm32_lcd.c **** {
 1105              		.loc 1 355 1
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109 0000 80B5     		push	{r7, lr}
 1110              	.LCFI70:
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 84B0     		sub	sp, sp, #16
 1115              	.LCFI71:
 1116              		.cfi_def_cfa_offset 24
 1117 0004 02AF     		add	r7, sp, #8
 1118              	.LCFI72:
 1119              		.cfi_def_cfa 7, 16
 1120 0006 7860     		str	r0, [r7, #4]
 356:./BSP/ST/stm32_lcd.c ****   /* Clear the LCD */
 357:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_FillRect(0, 0, DrawProp->LcdXsize, DrawProp->LcdYsize, Color);
 1121              		.loc 1 357 3
 1122 0008 074B     		ldr	r3, .L60
 1123 000a 5A69     		ldr	r2, [r3, #20]
 1124 000c 064B     		ldr	r3, .L60
 1125 000e 9969     		ldr	r1, [r3, #24]
 1126 0010 7B68     		ldr	r3, [r7, #4]
 1127 0012 0093     		str	r3, [sp]
 1128 0014 0B46     		mov	r3, r1
 1129 0016 0021     		movs	r1, #0
 1130 0018 0020     		movs	r0, #0
 1131 001a FFF7FEFF 		bl	UTIL_LCD_FillRect
 358:./BSP/ST/stm32_lcd.c **** }
 1132              		.loc 1 358 1
 1133 001e 00BF     		nop
 1134 0020 0837     		adds	r7, r7, #8
 1135              	.LCFI73:
 1136              		.cfi_def_cfa_offset 8
 1137 0022 BD46     		mov	sp, r7
 1138              	.LCFI74:
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
 1141 0024 80BD     		pop	{r7, pc}
 1142              	.L61:
 1143 0026 00BF     		.align	2
ARM GAS  /tmp/ccXj48YU.s 			page 27


 1144              	.L60:
 1145 0028 00000000 		.word	DrawProp
 1146              		.cfi_endproc
 1147              	.LFE14:
 1149              		.section	.text.UTIL_LCD_ClearStringLine,"ax",%progbits
 1150              		.align	1
 1151              		.global	UTIL_LCD_ClearStringLine
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu fpv5-d16
 1157              	UTIL_LCD_ClearStringLine:
 1158              	.LFB15:
 359:./BSP/ST/stm32_lcd.c **** 
 360:./BSP/ST/stm32_lcd.c **** /**
 361:./BSP/ST/stm32_lcd.c ****   * @brief  Clears the selected line in currently active layer.
 362:./BSP/ST/stm32_lcd.c ****   * @param  Line  Line to be cleared
 363:./BSP/ST/stm32_lcd.c ****   */
 364:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_ClearStringLine(uint32_t Line)
 365:./BSP/ST/stm32_lcd.c **** {
 1159              		.loc 1 365 1
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 8
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 90B5     		push	{r4, r7, lr}
 1164              	.LCFI75:
 1165              		.cfi_def_cfa_offset 12
 1166              		.cfi_offset 4, -12
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 85B0     		sub	sp, sp, #20
 1170              	.LCFI76:
 1171              		.cfi_def_cfa_offset 32
 1172 0004 02AF     		add	r7, sp, #8
 1173              	.LCFI77:
 1174              		.cfi_def_cfa 7, 24
 1175 0006 7860     		str	r0, [r7, #4]
 366:./BSP/ST/stm32_lcd.c ****   /* Draw rectangle with background color */
 367:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_FillRect(0, (Line * DrawProp[DrawProp->LcdLayer].pFont->Height), DrawProp->LcdXsize, Dra
 1176              		.loc 1 367 49
 1177 0008 134B     		ldr	r3, .L63
 1178 000a DB68     		ldr	r3, [r3, #12]
 1179              		.loc 1 367 60
 1180 000c 124A     		ldr	r2, .L63
 1181 000e 5B01     		lsls	r3, r3, #5
 1182 0010 1344     		add	r3, r3, r2
 1183 0012 0833     		adds	r3, r3, #8
 1184 0014 1B68     		ldr	r3, [r3]
 1185              		.loc 1 367 66
 1186 0016 DB88     		ldrh	r3, [r3, #6]
 1187 0018 1A46     		mov	r2, r3
 1188              		.loc 1 367 3
 1189 001a 7B68     		ldr	r3, [r7, #4]
 1190 001c 03FB02F1 		mul	r1, r3, r2
 1191 0020 0D4B     		ldr	r3, .L63
 1192 0022 5A69     		ldr	r2, [r3, #20]
 1193              		.loc 1 367 114
ARM GAS  /tmp/ccXj48YU.s 			page 28


 1194 0024 0C4B     		ldr	r3, .L63
 1195 0026 DB68     		ldr	r3, [r3, #12]
 1196              		.loc 1 367 125
 1197 0028 0B48     		ldr	r0, .L63
 1198 002a 5B01     		lsls	r3, r3, #5
 1199 002c 0344     		add	r3, r3, r0
 1200 002e 0833     		adds	r3, r3, #8
 1201 0030 1B68     		ldr	r3, [r3]
 1202              		.loc 1 367 131
 1203 0032 DB88     		ldrh	r3, [r3, #6]
 1204              		.loc 1 367 3
 1205 0034 1C46     		mov	r4, r3
 1206              		.loc 1 367 158
 1207 0036 084B     		ldr	r3, .L63
 1208 0038 DB68     		ldr	r3, [r3, #12]
 1209              		.loc 1 367 3
 1210 003a 0748     		ldr	r0, .L63
 1211 003c 5B01     		lsls	r3, r3, #5
 1212 003e 0344     		add	r3, r3, r0
 1213 0040 0433     		adds	r3, r3, #4
 1214 0042 1B68     		ldr	r3, [r3]
 1215 0044 0093     		str	r3, [sp]
 1216 0046 2346     		mov	r3, r4
 1217 0048 0020     		movs	r0, #0
 1218 004a FFF7FEFF 		bl	UTIL_LCD_FillRect
 368:./BSP/ST/stm32_lcd.c **** }
 1219              		.loc 1 368 1
 1220 004e 00BF     		nop
 1221 0050 0C37     		adds	r7, r7, #12
 1222              	.LCFI78:
 1223              		.cfi_def_cfa_offset 12
 1224 0052 BD46     		mov	sp, r7
 1225              	.LCFI79:
 1226              		.cfi_def_cfa_register 13
 1227              		@ sp needed
 1228 0054 90BD     		pop	{r4, r7, pc}
 1229              	.L64:
 1230 0056 00BF     		.align	2
 1231              	.L63:
 1232 0058 00000000 		.word	DrawProp
 1233              		.cfi_endproc
 1234              	.LFE15:
 1236              		.section	.text.UTIL_LCD_DisplayChar,"ax",%progbits
 1237              		.align	1
 1238              		.global	UTIL_LCD_DisplayChar
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv5-d16
 1244              	UTIL_LCD_DisplayChar:
 1245              	.LFB16:
 369:./BSP/ST/stm32_lcd.c **** 
 370:./BSP/ST/stm32_lcd.c **** /**
 371:./BSP/ST/stm32_lcd.c ****   * @brief  Displays one character in currently active layer.
 372:./BSP/ST/stm32_lcd.c ****   * @param  Xpos Start column address
 373:./BSP/ST/stm32_lcd.c ****   * @param  Ypos Line where to display the character shape.
 374:./BSP/ST/stm32_lcd.c ****   * @param  Ascii Character ascii code
ARM GAS  /tmp/ccXj48YU.s 			page 29


 375:./BSP/ST/stm32_lcd.c ****   *           This parameter must be a number between Min_Data = 0x20 and Max_Data = 0x7E
 376:./BSP/ST/stm32_lcd.c ****   */
 377:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DisplayChar(uint32_t Xpos, uint32_t Ypos, uint8_t Ascii)
 378:./BSP/ST/stm32_lcd.c **** {
 1246              		.loc 1 378 1
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              	.LCFI80:
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 84B0     		sub	sp, sp, #16
 1256              	.LCFI81:
 1257              		.cfi_def_cfa_offset 24
 1258 0004 00AF     		add	r7, sp, #0
 1259              	.LCFI82:
 1260              		.cfi_def_cfa_register 7
 1261 0006 F860     		str	r0, [r7, #12]
 1262 0008 B960     		str	r1, [r7, #8]
 1263 000a 1346     		mov	r3, r2
 1264 000c FB71     		strb	r3, [r7, #7]
 379:./BSP/ST/stm32_lcd.c ****   DrawChar(Xpos, Ypos, &DrawProp[DrawProp->LcdLayer].pFont->table[(Ascii-' ') *\
 1265              		.loc 1 379 42
 1266 000e 164B     		ldr	r3, .L67
 1267 0010 DB68     		ldr	r3, [r3, #12]
 1268              		.loc 1 379 53
 1269 0012 154A     		ldr	r2, .L67
 1270 0014 5B01     		lsls	r3, r3, #5
 1271 0016 1344     		add	r3, r3, r2
 1272 0018 0833     		adds	r3, r3, #8
 1273 001a 1B68     		ldr	r3, [r3]
 1274              		.loc 1 379 59
 1275 001c 1A68     		ldr	r2, [r3]
 1276              		.loc 1 379 73
 1277 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 0020 203B     		subs	r3, r3, #32
 380:./BSP/ST/stm32_lcd.c ****   DrawProp[DrawProp->LcdLayer].pFont->Height * ((DrawProp[DrawProp->LcdLayer].pFont->Width + 7) / 8
 1279              		.loc 1 380 20
 1280 0022 1149     		ldr	r1, .L67
 1281 0024 C968     		ldr	r1, [r1, #12]
 1282              		.loc 1 380 31
 1283 0026 1048     		ldr	r0, .L67
 1284 0028 4901     		lsls	r1, r1, #5
 1285 002a 0144     		add	r1, r1, r0
 1286 002c 0831     		adds	r1, r1, #8
 1287 002e 0968     		ldr	r1, [r1]
 1288              		.loc 1 380 37
 1289 0030 C988     		ldrh	r1, [r1, #6]
 379:./BSP/ST/stm32_lcd.c ****   DrawChar(Xpos, Ypos, &DrawProp[DrawProp->LcdLayer].pFont->table[(Ascii-' ') *\
 1290              		.loc 1 379 79
 1291 0032 01FB03F1 		mul	r1, r1, r3
 1292              		.loc 1 380 67
 1293 0036 0C4B     		ldr	r3, .L67
 1294 0038 DB68     		ldr	r3, [r3, #12]
 1295              		.loc 1 380 78
ARM GAS  /tmp/ccXj48YU.s 			page 30


 1296 003a 0B48     		ldr	r0, .L67
 1297 003c 5B01     		lsls	r3, r3, #5
 1298 003e 0344     		add	r3, r3, r0
 1299 0040 0833     		adds	r3, r3, #8
 1300 0042 1B68     		ldr	r3, [r3]
 1301              		.loc 1 380 84
 1302 0044 9B88     		ldrh	r3, [r3, #4]
 1303              		.loc 1 380 92
 1304 0046 0733     		adds	r3, r3, #7
 1305              		.loc 1 380 97
 1306 0048 002B     		cmp	r3, #0
 1307 004a 00DA     		bge	.L66
 1308 004c 0733     		adds	r3, r3, #7
 1309              	.L66:
 1310 004e DB10     		asrs	r3, r3, #3
 1311              		.loc 1 380 46
 1312 0050 03FB01F3 		mul	r3, r3, r1
 379:./BSP/ST/stm32_lcd.c ****   DrawChar(Xpos, Ypos, &DrawProp[DrawProp->LcdLayer].pFont->table[(Ascii-' ') *\
 1313              		.loc 1 379 3
 1314 0054 1344     		add	r3, r3, r2
 1315 0056 1A46     		mov	r2, r3
 1316 0058 B968     		ldr	r1, [r7, #8]
 1317 005a F868     		ldr	r0, [r7, #12]
 1318 005c FFF7FEFF 		bl	DrawChar
 381:./BSP/ST/stm32_lcd.c **** }
 1319              		.loc 1 381 1
 1320 0060 00BF     		nop
 1321 0062 1037     		adds	r7, r7, #16
 1322              	.LCFI83:
 1323              		.cfi_def_cfa_offset 8
 1324 0064 BD46     		mov	sp, r7
 1325              	.LCFI84:
 1326              		.cfi_def_cfa_register 13
 1327              		@ sp needed
 1328 0066 80BD     		pop	{r7, pc}
 1329              	.L68:
 1330              		.align	2
 1331              	.L67:
 1332 0068 00000000 		.word	DrawProp
 1333              		.cfi_endproc
 1334              	.LFE16:
 1336              		.section	.text.UTIL_LCD_DisplayStringAt,"ax",%progbits
 1337              		.align	1
 1338              		.global	UTIL_LCD_DisplayStringAt
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv5-d16
 1344              	UTIL_LCD_DisplayStringAt:
 1345              	.LFB17:
 382:./BSP/ST/stm32_lcd.c **** 
 383:./BSP/ST/stm32_lcd.c **** /**
 384:./BSP/ST/stm32_lcd.c ****   * @brief  Displays characters in currently active layer.
 385:./BSP/ST/stm32_lcd.c ****   * @param  Xpos X position (in pixel)
 386:./BSP/ST/stm32_lcd.c ****   * @param  Ypos Y position (in pixel)
 387:./BSP/ST/stm32_lcd.c ****   * @param  Text Pointer to string to display on LCD
 388:./BSP/ST/stm32_lcd.c ****   * @param  Mode Display mode
ARM GAS  /tmp/ccXj48YU.s 			page 31


 389:./BSP/ST/stm32_lcd.c ****   *          This parameter can be one of the following values:
 390:./BSP/ST/stm32_lcd.c ****   *            @arg  CENTER_MODE
 391:./BSP/ST/stm32_lcd.c ****   *            @arg  RIGHT_MODE
 392:./BSP/ST/stm32_lcd.c ****   *            @arg  LEFT_MODE
 393:./BSP/ST/stm32_lcd.c ****   */
 394:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DisplayStringAt(uint32_t Xpos, uint32_t Ypos, uint8_t *Text, Text_AlignModeTypdef Mod
 395:./BSP/ST/stm32_lcd.c **** {
 1346              		.loc 1 395 1
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 40
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350 0000 80B5     		push	{r7, lr}
 1351              	.LCFI85:
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355 0002 8AB0     		sub	sp, sp, #40
 1356              	.LCFI86:
 1357              		.cfi_def_cfa_offset 48
 1358 0004 00AF     		add	r7, sp, #0
 1359              	.LCFI87:
 1360              		.cfi_def_cfa_register 7
 1361 0006 F860     		str	r0, [r7, #12]
 1362 0008 B960     		str	r1, [r7, #8]
 1363 000a 7A60     		str	r2, [r7, #4]
 1364 000c FB70     		strb	r3, [r7, #3]
 396:./BSP/ST/stm32_lcd.c ****   uint32_t refcolumn = 1, i = 0;
 1365              		.loc 1 396 12
 1366 000e 0123     		movs	r3, #1
 1367 0010 7B62     		str	r3, [r7, #36]
 1368              		.loc 1 396 27
 1369 0012 0023     		movs	r3, #0
 1370 0014 3B62     		str	r3, [r7, #32]
 397:./BSP/ST/stm32_lcd.c ****   uint32_t size = 0, xsize = 0;
 1371              		.loc 1 397 12
 1372 0016 0023     		movs	r3, #0
 1373 0018 FB61     		str	r3, [r7, #28]
 1374              		.loc 1 397 22
 1375 001a 0023     		movs	r3, #0
 1376 001c 7B61     		str	r3, [r7, #20]
 398:./BSP/ST/stm32_lcd.c ****   uint8_t  *ptr = Text;
 1377              		.loc 1 398 13
 1378 001e 7B68     		ldr	r3, [r7, #4]
 1379 0020 BB61     		str	r3, [r7, #24]
 399:./BSP/ST/stm32_lcd.c **** 
 400:./BSP/ST/stm32_lcd.c ****   /* Get the text size */
 401:./BSP/ST/stm32_lcd.c ****   while (*ptr++) size ++ ;
 1380              		.loc 1 401 9
 1381 0022 02E0     		b	.L70
 1382              	.L71:
 1383              		.loc 1 401 23 discriminator 2
 1384 0024 FB69     		ldr	r3, [r7, #28]
 1385 0026 0133     		adds	r3, r3, #1
 1386 0028 FB61     		str	r3, [r7, #28]
 1387              	.L70:
 1388              		.loc 1 401 14 discriminator 1
 1389 002a BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccXj48YU.s 			page 32


 1390 002c 5A1C     		adds	r2, r3, #1
 1391 002e BA61     		str	r2, [r7, #24]
 1392              		.loc 1 401 10 discriminator 1
 1393 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1394              		.loc 1 401 9 discriminator 1
 1395 0032 002B     		cmp	r3, #0
 1396 0034 F6D1     		bne	.L71
 402:./BSP/ST/stm32_lcd.c **** 
 403:./BSP/ST/stm32_lcd.c ****   /* Characters number per line */
 404:./BSP/ST/stm32_lcd.c ****   xsize = (DrawProp->LcdXsize/DrawProp[DrawProp->LcdLayer].pFont->Width);
 1397              		.loc 1 404 20
 1398 0036 484B     		ldr	r3, .L81
 1399 0038 5B69     		ldr	r3, [r3, #20]
 1400              		.loc 1 404 48
 1401 003a 474A     		ldr	r2, .L81
 1402 003c D268     		ldr	r2, [r2, #12]
 1403              		.loc 1 404 59
 1404 003e 4649     		ldr	r1, .L81
 1405 0040 5201     		lsls	r2, r2, #5
 1406 0042 0A44     		add	r2, r2, r1
 1407 0044 0832     		adds	r2, r2, #8
 1408 0046 1268     		ldr	r2, [r2]
 1409              		.loc 1 404 65
 1410 0048 9288     		ldrh	r2, [r2, #4]
 1411              		.loc 1 404 9
 1412 004a B3FBF2F3 		udiv	r3, r3, r2
 1413 004e 7B61     		str	r3, [r7, #20]
 405:./BSP/ST/stm32_lcd.c **** 
 406:./BSP/ST/stm32_lcd.c ****   switch (Mode)
 1414              		.loc 1 406 3
 1415 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1416 0052 032B     		cmp	r3, #3
 1417 0054 18D0     		beq	.L72
 1418 0056 032B     		cmp	r3, #3
 1419 0058 2ADC     		bgt	.L73
 1420 005a 012B     		cmp	r3, #1
 1421 005c 02D0     		beq	.L74
 1422 005e 022B     		cmp	r3, #2
 1423 0060 15D0     		beq	.L75
 1424 0062 25E0     		b	.L73
 1425              	.L74:
 407:./BSP/ST/stm32_lcd.c ****   {
 408:./BSP/ST/stm32_lcd.c ****   case CENTER_MODE:
 409:./BSP/ST/stm32_lcd.c ****     {
 410:./BSP/ST/stm32_lcd.c ****       refcolumn = Xpos + ((xsize - size)* DrawProp[DrawProp->LcdLayer].pFont->Width) / 2;
 1426              		.loc 1 410 34
 1427 0064 7A69     		ldr	r2, [r7, #20]
 1428 0066 FB69     		ldr	r3, [r7, #28]
 1429 0068 D31A     		subs	r3, r2, r3
 1430              		.loc 1 410 60
 1431 006a 3B4A     		ldr	r2, .L81
 1432 006c D268     		ldr	r2, [r2, #12]
 1433              		.loc 1 410 71
 1434 006e 3A49     		ldr	r1, .L81
 1435 0070 5201     		lsls	r2, r2, #5
 1436 0072 0A44     		add	r2, r2, r1
 1437 0074 0832     		adds	r2, r2, #8
ARM GAS  /tmp/ccXj48YU.s 			page 33


 1438 0076 1268     		ldr	r2, [r2]
 1439              		.loc 1 410 77
 1440 0078 9288     		ldrh	r2, [r2, #4]
 1441              		.loc 1 410 41
 1442 007a 02FB03F3 		mul	r3, r2, r3
 1443              		.loc 1 410 86
 1444 007e 5B08     		lsrs	r3, r3, #1
 1445              		.loc 1 410 17
 1446 0080 FA68     		ldr	r2, [r7, #12]
 1447 0082 1344     		add	r3, r3, r2
 1448 0084 7B62     		str	r3, [r7, #36]
 411:./BSP/ST/stm32_lcd.c ****       break;
 1449              		.loc 1 411 7
 1450 0086 16E0     		b	.L76
 1451              	.L72:
 412:./BSP/ST/stm32_lcd.c ****     }
 413:./BSP/ST/stm32_lcd.c ****   case LEFT_MODE:
 414:./BSP/ST/stm32_lcd.c ****     {
 415:./BSP/ST/stm32_lcd.c ****       refcolumn = Xpos;
 1452              		.loc 1 415 17
 1453 0088 FB68     		ldr	r3, [r7, #12]
 1454 008a 7B62     		str	r3, [r7, #36]
 416:./BSP/ST/stm32_lcd.c ****       break;
 1455              		.loc 1 416 7
 1456 008c 13E0     		b	.L76
 1457              	.L75:
 417:./BSP/ST/stm32_lcd.c ****     }
 418:./BSP/ST/stm32_lcd.c ****   case RIGHT_MODE:
 419:./BSP/ST/stm32_lcd.c ****     {
 420:./BSP/ST/stm32_lcd.c ****       refcolumn = - Xpos + ((xsize - size)*DrawProp[DrawProp->LcdLayer].pFont->Width);
 1458              		.loc 1 420 36
 1459 008e 7A69     		ldr	r2, [r7, #20]
 1460 0090 FB69     		ldr	r3, [r7, #28]
 1461 0092 D31A     		subs	r3, r2, r3
 1462              		.loc 1 420 61
 1463 0094 304A     		ldr	r2, .L81
 1464 0096 D268     		ldr	r2, [r2, #12]
 1465              		.loc 1 420 72
 1466 0098 2F49     		ldr	r1, .L81
 1467 009a 5201     		lsls	r2, r2, #5
 1468 009c 0A44     		add	r2, r2, r1
 1469 009e 0832     		adds	r2, r2, #8
 1470 00a0 1268     		ldr	r2, [r2]
 1471              		.loc 1 420 78
 1472 00a2 9288     		ldrh	r2, [r2, #4]
 1473              		.loc 1 420 43
 1474 00a4 02FB03F2 		mul	r2, r2, r3
 1475              		.loc 1 420 17
 1476 00a8 FB68     		ldr	r3, [r7, #12]
 1477 00aa D31A     		subs	r3, r2, r3
 1478 00ac 7B62     		str	r3, [r7, #36]
 421:./BSP/ST/stm32_lcd.c ****       break;
 1479              		.loc 1 421 7
 1480 00ae 02E0     		b	.L76
 1481              	.L73:
 422:./BSP/ST/stm32_lcd.c ****     }
 423:./BSP/ST/stm32_lcd.c ****   default:
ARM GAS  /tmp/ccXj48YU.s 			page 34


 424:./BSP/ST/stm32_lcd.c ****     {
 425:./BSP/ST/stm32_lcd.c ****       refcolumn = Xpos;
 1482              		.loc 1 425 17
 1483 00b0 FB68     		ldr	r3, [r7, #12]
 1484 00b2 7B62     		str	r3, [r7, #36]
 426:./BSP/ST/stm32_lcd.c ****       break;
 1485              		.loc 1 426 7
 1486 00b4 00BF     		nop
 1487              	.L76:
 427:./BSP/ST/stm32_lcd.c ****     }
 428:./BSP/ST/stm32_lcd.c ****   }
 429:./BSP/ST/stm32_lcd.c **** 
 430:./BSP/ST/stm32_lcd.c ****   /* Check that the Start column is located in the screen */
 431:./BSP/ST/stm32_lcd.c ****   if ((refcolumn < 1) || (refcolumn >= 0x8000))
 1488              		.loc 1 431 6
 1489 00b6 7B6A     		ldr	r3, [r7, #36]
 1490 00b8 002B     		cmp	r3, #0
 1491 00ba 03D0     		beq	.L77
 1492              		.loc 1 431 23 discriminator 1
 1493 00bc 7B6A     		ldr	r3, [r7, #36]
 1494 00be B3F5004F 		cmp	r3, #32768
 1495 00c2 1BD3     		bcc	.L79
 1496              	.L77:
 432:./BSP/ST/stm32_lcd.c ****   {
 433:./BSP/ST/stm32_lcd.c ****     refcolumn = 1;
 1497              		.loc 1 433 15
 1498 00c4 0123     		movs	r3, #1
 1499 00c6 7B62     		str	r3, [r7, #36]
 434:./BSP/ST/stm32_lcd.c ****   }
 435:./BSP/ST/stm32_lcd.c **** 
 436:./BSP/ST/stm32_lcd.c ****   /* Send the string character by character on LCD */
 437:./BSP/ST/stm32_lcd.c ****   while ((*Text != 0) & (((DrawProp->LcdXsize - (i*DrawProp[DrawProp->LcdLayer].pFont->Width)) & 0x
 1500              		.loc 1 437 9
 1501 00c8 18E0     		b	.L79
 1502              	.L80:
 438:./BSP/ST/stm32_lcd.c ****   {
 439:./BSP/ST/stm32_lcd.c ****     /* Display one character on LCD */
 440:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_DisplayChar(refcolumn, Ypos, *Text);
 1503              		.loc 1 440 5
 1504 00ca 7B68     		ldr	r3, [r7, #4]
 1505 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506 00ce 1A46     		mov	r2, r3
 1507 00d0 B968     		ldr	r1, [r7, #8]
 1508 00d2 786A     		ldr	r0, [r7, #36]
 1509 00d4 FFF7FEFF 		bl	UTIL_LCD_DisplayChar
 441:./BSP/ST/stm32_lcd.c ****     /* Decrement the column position by 16 */
 442:./BSP/ST/stm32_lcd.c ****     refcolumn += DrawProp[DrawProp->LcdLayer].pFont->Width;
 1510              		.loc 1 442 35
 1511 00d8 1F4B     		ldr	r3, .L81
 1512 00da DB68     		ldr	r3, [r3, #12]
 1513              		.loc 1 442 46
 1514 00dc 1E4A     		ldr	r2, .L81
 1515 00de 5B01     		lsls	r3, r3, #5
 1516 00e0 1344     		add	r3, r3, r2
 1517 00e2 0833     		adds	r3, r3, #8
 1518 00e4 1B68     		ldr	r3, [r3]
 1519              		.loc 1 442 52
ARM GAS  /tmp/ccXj48YU.s 			page 35


 1520 00e6 9B88     		ldrh	r3, [r3, #4]
 1521 00e8 1A46     		mov	r2, r3
 1522              		.loc 1 442 15
 1523 00ea 7B6A     		ldr	r3, [r7, #36]
 1524 00ec 1344     		add	r3, r3, r2
 1525 00ee 7B62     		str	r3, [r7, #36]
 443:./BSP/ST/stm32_lcd.c **** 
 444:./BSP/ST/stm32_lcd.c ****     /* Point on the next character */
 445:./BSP/ST/stm32_lcd.c ****     Text++;
 1526              		.loc 1 445 9
 1527 00f0 7B68     		ldr	r3, [r7, #4]
 1528 00f2 0133     		adds	r3, r3, #1
 1529 00f4 7B60     		str	r3, [r7, #4]
 446:./BSP/ST/stm32_lcd.c ****     i++;
 1530              		.loc 1 446 6
 1531 00f6 3B6A     		ldr	r3, [r7, #32]
 1532 00f8 0133     		adds	r3, r3, #1
 1533 00fa 3B62     		str	r3, [r7, #32]
 1534              	.L79:
 437:./BSP/ST/stm32_lcd.c ****   {
 1535              		.loc 1 437 11
 1536 00fc 7B68     		ldr	r3, [r7, #4]
 1537 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437:./BSP/ST/stm32_lcd.c ****   {
 1538              		.loc 1 437 23
 1539 0100 002B     		cmp	r3, #0
 1540 0102 14BF     		ite	ne
 1541 0104 0123     		movne	r3, #1
 1542 0106 0023     		moveq	r3, #0
 1543 0108 DAB2     		uxtb	r2, r3
 437:./BSP/ST/stm32_lcd.c ****   {
 1544              		.loc 1 437 36
 1545 010a 134B     		ldr	r3, .L81
 1546 010c 5969     		ldr	r1, [r3, #20]
 437:./BSP/ST/stm32_lcd.c ****   {
 1547              		.loc 1 437 69
 1548 010e 124B     		ldr	r3, .L81
 1549 0110 DB68     		ldr	r3, [r3, #12]
 437:./BSP/ST/stm32_lcd.c ****   {
 1550              		.loc 1 437 80
 1551 0112 1148     		ldr	r0, .L81
 1552 0114 5B01     		lsls	r3, r3, #5
 1553 0116 0344     		add	r3, r3, r0
 1554 0118 0833     		adds	r3, r3, #8
 1555 011a 1B68     		ldr	r3, [r3]
 437:./BSP/ST/stm32_lcd.c ****   {
 1556              		.loc 1 437 86
 1557 011c 9B88     		ldrh	r3, [r3, #4]
 1558 011e 1846     		mov	r0, r3
 437:./BSP/ST/stm32_lcd.c ****   {
 1559              		.loc 1 437 51
 1560 0120 3B6A     		ldr	r3, [r7, #32]
 1561 0122 03FB00F3 		mul	r3, r3, r0
 437:./BSP/ST/stm32_lcd.c ****   {
 1562              		.loc 1 437 47
 1563 0126 CB1A     		subs	r3, r1, r3
 437:./BSP/ST/stm32_lcd.c ****   {
ARM GAS  /tmp/ccXj48YU.s 			page 36


 1564              		.loc 1 437 96
 1565 0128 9BB2     		uxth	r3, r3
 437:./BSP/ST/stm32_lcd.c ****   {
 1566              		.loc 1 437 126
 1567 012a 0B49     		ldr	r1, .L81
 1568 012c C968     		ldr	r1, [r1, #12]
 437:./BSP/ST/stm32_lcd.c ****   {
 1569              		.loc 1 437 137
 1570 012e 0A48     		ldr	r0, .L81
 1571 0130 4901     		lsls	r1, r1, #5
 1572 0132 0144     		add	r1, r1, r0
 1573 0134 0831     		adds	r1, r1, #8
 1574 0136 0968     		ldr	r1, [r1]
 437:./BSP/ST/stm32_lcd.c ****   {
 1575              		.loc 1 437 143
 1576 0138 8988     		ldrh	r1, [r1, #4]
 437:./BSP/ST/stm32_lcd.c ****   {
 1577              		.loc 1 437 23
 1578 013a 8B42     		cmp	r3, r1
 1579 013c 2CBF     		ite	cs
 1580 013e 0123     		movcs	r3, #1
 1581 0140 0023     		movcc	r3, #0
 1582 0142 DBB2     		uxtb	r3, r3
 1583 0144 1340     		ands	r3, r3, r2
 1584 0146 DBB2     		uxtb	r3, r3
 437:./BSP/ST/stm32_lcd.c ****   {
 1585              		.loc 1 437 9
 1586 0148 002B     		cmp	r3, #0
 1587 014a BED1     		bne	.L80
 447:./BSP/ST/stm32_lcd.c ****   }
 448:./BSP/ST/stm32_lcd.c **** }
 1588              		.loc 1 448 1
 1589 014c 00BF     		nop
 1590 014e 00BF     		nop
 1591 0150 2837     		adds	r7, r7, #40
 1592              	.LCFI88:
 1593              		.cfi_def_cfa_offset 8
 1594 0152 BD46     		mov	sp, r7
 1595              	.LCFI89:
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 0154 80BD     		pop	{r7, pc}
 1599              	.L82:
 1600 0156 00BF     		.align	2
 1601              	.L81:
 1602 0158 00000000 		.word	DrawProp
 1603              		.cfi_endproc
 1604              	.LFE17:
 1606              		.section	.text.UTIL_LCD_DisplayStringAtLine,"ax",%progbits
 1607              		.align	1
 1608              		.global	UTIL_LCD_DisplayStringAtLine
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1612              		.fpu fpv5-d16
 1614              	UTIL_LCD_DisplayStringAtLine:
 1615              	.LFB18:
ARM GAS  /tmp/ccXj48YU.s 			page 37


 449:./BSP/ST/stm32_lcd.c **** 
 450:./BSP/ST/stm32_lcd.c **** /**
 451:./BSP/ST/stm32_lcd.c ****   * @brief  Displays a maximum of 60 characters on the LCD.
 452:./BSP/ST/stm32_lcd.c ****   * @param  Line: Line where to display the character shape
 453:./BSP/ST/stm32_lcd.c ****   * @param  ptr: Pointer to string to display on LCD
 454:./BSP/ST/stm32_lcd.c ****   */
 455:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DisplayStringAtLine(uint32_t Line, uint8_t *ptr)
 456:./BSP/ST/stm32_lcd.c **** {
 1616              		.loc 1 456 1
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 8
 1619              		@ frame_needed = 1, uses_anonymous_args = 0
 1620 0000 80B5     		push	{r7, lr}
 1621              	.LCFI90:
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 82B0     		sub	sp, sp, #8
 1626              	.LCFI91:
 1627              		.cfi_def_cfa_offset 16
 1628 0004 00AF     		add	r7, sp, #0
 1629              	.LCFI92:
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
 1632 0008 3960     		str	r1, [r7]
 457:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DisplayStringAt(0, LINE(Line), ptr, LEFT_MODE);
 1633              		.loc 1 457 31
 1634 000a FFF7FEFF 		bl	UTIL_LCD_GetFont
 1635 000e 0346     		mov	r3, r0
 1636 0010 DB88     		ldrh	r3, [r3, #6]
 1637 0012 1A46     		mov	r2, r3
 1638              		.loc 1 457 3
 1639 0014 7B68     		ldr	r3, [r7, #4]
 1640 0016 03FB02F1 		mul	r1, r3, r2
 1641 001a 0323     		movs	r3, #3
 1642 001c 3A68     		ldr	r2, [r7]
 1643 001e 0020     		movs	r0, #0
 1644 0020 FFF7FEFF 		bl	UTIL_LCD_DisplayStringAt
 458:./BSP/ST/stm32_lcd.c **** }
 1645              		.loc 1 458 1
 1646 0024 00BF     		nop
 1647 0026 0837     		adds	r7, r7, #8
 1648              	.LCFI93:
 1649              		.cfi_def_cfa_offset 8
 1650 0028 BD46     		mov	sp, r7
 1651              	.LCFI94:
 1652              		.cfi_def_cfa_register 13
 1653              		@ sp needed
 1654 002a 80BD     		pop	{r7, pc}
 1655              		.cfi_endproc
 1656              	.LFE18:
 1658              		.section	.text.UTIL_LCD_DrawLine,"ax",%progbits
 1659              		.align	1
 1660              		.global	UTIL_LCD_DrawLine
 1661              		.syntax unified
 1662              		.thumb
 1663              		.thumb_func
ARM GAS  /tmp/ccXj48YU.s 			page 38


 1664              		.fpu fpv5-d16
 1666              	UTIL_LCD_DrawLine:
 1667              	.LFB19:
 459:./BSP/ST/stm32_lcd.c **** 
 460:./BSP/ST/stm32_lcd.c **** /**
 461:./BSP/ST/stm32_lcd.c ****   * @brief  Draws an uni-line (between two points) in currently active layer.
 462:./BSP/ST/stm32_lcd.c ****   * @param  Xpos1 Point 1 X position
 463:./BSP/ST/stm32_lcd.c ****   * @param  Ypos1 Point 1 Y position
 464:./BSP/ST/stm32_lcd.c ****   * @param  Xpos2 Point 2 X position
 465:./BSP/ST/stm32_lcd.c ****   * @param  Ypos2 Point 2 Y position
 466:./BSP/ST/stm32_lcd.c ****   * @param  Color Draw color
 467:./BSP/ST/stm32_lcd.c ****   */
 468:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawLine(uint32_t Xpos1, uint32_t Ypos1, uint32_t Xpos2, uint32_t Ypos2, uint32_t Col
 469:./BSP/ST/stm32_lcd.c **** {
 1668              		.loc 1 469 1
 1669              		.cfi_startproc
 1670              		@ args = 4, pretend = 0, frame = 56
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 80B5     		push	{r7, lr}
 1673              	.LCFI95:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 8EB0     		sub	sp, sp, #56
 1678              	.LCFI96:
 1679              		.cfi_def_cfa_offset 64
 1680 0004 00AF     		add	r7, sp, #0
 1681              	.LCFI97:
 1682              		.cfi_def_cfa_register 7
 1683 0006 F860     		str	r0, [r7, #12]
 1684 0008 B960     		str	r1, [r7, #8]
 1685 000a 7A60     		str	r2, [r7, #4]
 1686 000c 3B60     		str	r3, [r7]
 470:./BSP/ST/stm32_lcd.c ****   int16_t deltax = 0, deltay = 0, x = 0, y = 0, xinc1 = 0, xinc2 = 0,
 1687              		.loc 1 470 11
 1688 000e 0023     		movs	r3, #0
 1689 0010 3B84     		strh	r3, [r7, #32]	@ movhi
 1690              		.loc 1 470 23
 1691 0012 0023     		movs	r3, #0
 1692 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 1693              		.loc 1 470 35
 1694 0016 0023     		movs	r3, #0
 1695 0018 FB86     		strh	r3, [r7, #54]	@ movhi
 1696              		.loc 1 470 42
 1697 001a 0023     		movs	r3, #0
 1698 001c BB86     		strh	r3, [r7, #52]	@ movhi
 1699              		.loc 1 470 49
 1700 001e 0023     		movs	r3, #0
 1701 0020 7B86     		strh	r3, [r7, #50]	@ movhi
 1702              		.loc 1 470 60
 1703 0022 0023     		movs	r3, #0
 1704 0024 3B86     		strh	r3, [r7, #48]	@ movhi
 471:./BSP/ST/stm32_lcd.c ****   yinc1 = 0, yinc2 = 0, den = 0, num = 0, numadd = 0, numpixels = 0,
 1705              		.loc 1 471 3
 1706 0026 0023     		movs	r3, #0
 1707 0028 FB85     		strh	r3, [r7, #46]	@ movhi
 1708              		.loc 1 471 14
ARM GAS  /tmp/ccXj48YU.s 			page 39


 1709 002a 0023     		movs	r3, #0
 1710 002c BB85     		strh	r3, [r7, #44]	@ movhi
 1711              		.loc 1 471 25
 1712 002e 0023     		movs	r3, #0
 1713 0030 7B85     		strh	r3, [r7, #42]	@ movhi
 1714              		.loc 1 471 34
 1715 0032 0023     		movs	r3, #0
 1716 0034 3B85     		strh	r3, [r7, #40]	@ movhi
 1717              		.loc 1 471 43
 1718 0036 0023     		movs	r3, #0
 1719 0038 FB84     		strh	r3, [r7, #38]	@ movhi
 1720              		.loc 1 471 55
 1721 003a 0023     		movs	r3, #0
 1722 003c BB84     		strh	r3, [r7, #36]	@ movhi
 472:./BSP/ST/stm32_lcd.c ****   curpixel = 0;
 1723              		.loc 1 472 3
 1724 003e 0023     		movs	r3, #0
 1725 0040 7B84     		strh	r3, [r7, #34]	@ movhi
 473:./BSP/ST/stm32_lcd.c ****   int32_t x_diff, y_diff;
 474:./BSP/ST/stm32_lcd.c **** 
 475:./BSP/ST/stm32_lcd.c ****   x_diff = Xpos2 - Xpos1;
 1726              		.loc 1 475 18
 1727 0042 7A68     		ldr	r2, [r7, #4]
 1728 0044 FB68     		ldr	r3, [r7, #12]
 1729 0046 D31A     		subs	r3, r2, r3
 1730              		.loc 1 475 10
 1731 0048 BB61     		str	r3, [r7, #24]
 476:./BSP/ST/stm32_lcd.c ****   y_diff = Ypos2 - Ypos1;
 1732              		.loc 1 476 18
 1733 004a 3A68     		ldr	r2, [r7]
 1734 004c BB68     		ldr	r3, [r7, #8]
 1735 004e D31A     		subs	r3, r2, r3
 1736              		.loc 1 476 10
 1737 0050 7B61     		str	r3, [r7, #20]
 477:./BSP/ST/stm32_lcd.c **** 
 478:./BSP/ST/stm32_lcd.c ****   deltax = ABS(x_diff);         /* The absolute difference between the x's */
 1738              		.loc 1 478 12
 1739 0052 BB69     		ldr	r3, [r7, #24]
 1740 0054 002B     		cmp	r3, #0
 1741 0056 B8BF     		it	lt
 1742 0058 5B42     		rsblt	r3, r3, #0
 1743              		.loc 1 478 10
 1744 005a 3B84     		strh	r3, [r7, #32]	@ movhi
 479:./BSP/ST/stm32_lcd.c ****   deltay = ABS(y_diff);         /* The absolute difference between the y's */
 1745              		.loc 1 479 12
 1746 005c 7B69     		ldr	r3, [r7, #20]
 1747 005e 002B     		cmp	r3, #0
 1748 0060 B8BF     		it	lt
 1749 0062 5B42     		rsblt	r3, r3, #0
 1750              		.loc 1 479 10
 1751 0064 FB83     		strh	r3, [r7, #30]	@ movhi
 480:./BSP/ST/stm32_lcd.c ****   x = Xpos1;                       /* Start x off at the first pixel */
 1752              		.loc 1 480 5
 1753 0066 FB68     		ldr	r3, [r7, #12]
 1754 0068 FB86     		strh	r3, [r7, #54]	@ movhi
 481:./BSP/ST/stm32_lcd.c ****   y = Ypos1;                       /* Start y off at the first pixel */
 1755              		.loc 1 481 5
ARM GAS  /tmp/ccXj48YU.s 			page 40


 1756 006a BB68     		ldr	r3, [r7, #8]
 1757 006c BB86     		strh	r3, [r7, #52]	@ movhi
 482:./BSP/ST/stm32_lcd.c **** 
 483:./BSP/ST/stm32_lcd.c ****   if (Xpos2 >= Xpos1)                 /* The x-values are increasing */
 1758              		.loc 1 483 6
 1759 006e 7A68     		ldr	r2, [r7, #4]
 1760 0070 FB68     		ldr	r3, [r7, #12]
 1761 0072 9A42     		cmp	r2, r3
 1762 0074 04D3     		bcc	.L85
 484:./BSP/ST/stm32_lcd.c ****   {
 485:./BSP/ST/stm32_lcd.c ****     xinc1 = 1;
 1763              		.loc 1 485 11
 1764 0076 0123     		movs	r3, #1
 1765 0078 7B86     		strh	r3, [r7, #50]	@ movhi
 486:./BSP/ST/stm32_lcd.c ****     xinc2 = 1;
 1766              		.loc 1 486 11
 1767 007a 0123     		movs	r3, #1
 1768 007c 3B86     		strh	r3, [r7, #48]	@ movhi
 1769 007e 05E0     		b	.L86
 1770              	.L85:
 487:./BSP/ST/stm32_lcd.c ****   }
 488:./BSP/ST/stm32_lcd.c ****   else                          /* The x-values are decreasing */
 489:./BSP/ST/stm32_lcd.c ****   {
 490:./BSP/ST/stm32_lcd.c ****     xinc1 = -1;
 1771              		.loc 1 490 11
 1772 0080 4FF6FF73 		movw	r3, #65535
 1773 0084 7B86     		strh	r3, [r7, #50]	@ movhi
 491:./BSP/ST/stm32_lcd.c ****     xinc2 = -1;
 1774              		.loc 1 491 11
 1775 0086 4FF6FF73 		movw	r3, #65535
 1776 008a 3B86     		strh	r3, [r7, #48]	@ movhi
 1777              	.L86:
 492:./BSP/ST/stm32_lcd.c ****   }
 493:./BSP/ST/stm32_lcd.c **** 
 494:./BSP/ST/stm32_lcd.c ****   if (Ypos2 >= Ypos1)                 /* The y-values are increasing */
 1778              		.loc 1 494 6
 1779 008c 3A68     		ldr	r2, [r7]
 1780 008e BB68     		ldr	r3, [r7, #8]
 1781 0090 9A42     		cmp	r2, r3
 1782 0092 04D3     		bcc	.L87
 495:./BSP/ST/stm32_lcd.c ****   {
 496:./BSP/ST/stm32_lcd.c ****     yinc1 = 1;
 1783              		.loc 1 496 11
 1784 0094 0123     		movs	r3, #1
 1785 0096 FB85     		strh	r3, [r7, #46]	@ movhi
 497:./BSP/ST/stm32_lcd.c ****     yinc2 = 1;
 1786              		.loc 1 497 11
 1787 0098 0123     		movs	r3, #1
 1788 009a BB85     		strh	r3, [r7, #44]	@ movhi
 1789 009c 05E0     		b	.L88
 1790              	.L87:
 498:./BSP/ST/stm32_lcd.c ****   }
 499:./BSP/ST/stm32_lcd.c ****   else                          /* The y-values are decreasing */
 500:./BSP/ST/stm32_lcd.c ****   {
 501:./BSP/ST/stm32_lcd.c ****     yinc1 = -1;
 1791              		.loc 1 501 11
 1792 009e 4FF6FF73 		movw	r3, #65535
ARM GAS  /tmp/ccXj48YU.s 			page 41


 1793 00a2 FB85     		strh	r3, [r7, #46]	@ movhi
 502:./BSP/ST/stm32_lcd.c ****     yinc2 = -1;
 1794              		.loc 1 502 11
 1795 00a4 4FF6FF73 		movw	r3, #65535
 1796 00a8 BB85     		strh	r3, [r7, #44]	@ movhi
 1797              	.L88:
 503:./BSP/ST/stm32_lcd.c ****   }
 504:./BSP/ST/stm32_lcd.c **** 
 505:./BSP/ST/stm32_lcd.c ****   if (deltax >= deltay)         /* There is at least one x-value for every y-value */
 1798              		.loc 1 505 6
 1799 00aa B7F92020 		ldrsh	r2, [r7, #32]
 1800 00ae B7F91E30 		ldrsh	r3, [r7, #30]
 1801 00b2 9A42     		cmp	r2, r3
 1802 00b4 11DB     		blt	.L89
 506:./BSP/ST/stm32_lcd.c ****   {
 507:./BSP/ST/stm32_lcd.c ****     xinc1 = 0;                  /* Don't change the x when numerator >= denominator */
 1803              		.loc 1 507 11
 1804 00b6 0023     		movs	r3, #0
 1805 00b8 7B86     		strh	r3, [r7, #50]	@ movhi
 508:./BSP/ST/stm32_lcd.c ****     yinc2 = 0;                  /* Don't change the y for every iteration */
 1806              		.loc 1 508 11
 1807 00ba 0023     		movs	r3, #0
 1808 00bc BB85     		strh	r3, [r7, #44]	@ movhi
 509:./BSP/ST/stm32_lcd.c ****     den = deltax;
 1809              		.loc 1 509 9
 1810 00be 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1811 00c0 7B85     		strh	r3, [r7, #42]	@ movhi
 510:./BSP/ST/stm32_lcd.c ****     num = deltax / 2;
 1812              		.loc 1 510 9
 1813 00c2 B7F92030 		ldrsh	r3, [r7, #32]
 1814 00c6 002B     		cmp	r3, #0
 1815 00c8 00DA     		bge	.L90
 1816 00ca 0133     		adds	r3, r3, #1
 1817              	.L90:
 1818 00cc 5B10     		asrs	r3, r3, #1
 1819 00ce 3B85     		strh	r3, [r7, #40]	@ movhi
 511:./BSP/ST/stm32_lcd.c ****     numadd = deltay;
 1820              		.loc 1 511 12
 1821 00d0 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 1822 00d2 FB84     		strh	r3, [r7, #38]	@ movhi
 512:./BSP/ST/stm32_lcd.c ****     numpixels = deltax;         /* There are more x-values than y-values */
 1823              		.loc 1 512 15
 1824 00d4 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1825 00d6 BB84     		strh	r3, [r7, #36]	@ movhi
 1826 00d8 10E0     		b	.L91
 1827              	.L89:
 513:./BSP/ST/stm32_lcd.c ****   }
 514:./BSP/ST/stm32_lcd.c ****   else                          /* There is at least one y-value for every x-value */
 515:./BSP/ST/stm32_lcd.c ****   {
 516:./BSP/ST/stm32_lcd.c ****     xinc2 = 0;                  /* Don't change the x for every iteration */
 1828              		.loc 1 516 11
 1829 00da 0023     		movs	r3, #0
 1830 00dc 3B86     		strh	r3, [r7, #48]	@ movhi
 517:./BSP/ST/stm32_lcd.c ****     yinc1 = 0;                  /* Don't change the y when numerator >= denominator */
 1831              		.loc 1 517 11
 1832 00de 0023     		movs	r3, #0
 1833 00e0 FB85     		strh	r3, [r7, #46]	@ movhi
ARM GAS  /tmp/ccXj48YU.s 			page 42


 518:./BSP/ST/stm32_lcd.c ****     den = deltay;
 1834              		.loc 1 518 9
 1835 00e2 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 1836 00e4 7B85     		strh	r3, [r7, #42]	@ movhi
 519:./BSP/ST/stm32_lcd.c ****     num = deltay / 2;
 1837              		.loc 1 519 9
 1838 00e6 B7F91E30 		ldrsh	r3, [r7, #30]
 1839 00ea 002B     		cmp	r3, #0
 1840 00ec 00DA     		bge	.L92
 1841 00ee 0133     		adds	r3, r3, #1
 1842              	.L92:
 1843 00f0 5B10     		asrs	r3, r3, #1
 1844 00f2 3B85     		strh	r3, [r7, #40]	@ movhi
 520:./BSP/ST/stm32_lcd.c ****     numadd = deltax;
 1845              		.loc 1 520 12
 1846 00f4 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1847 00f6 FB84     		strh	r3, [r7, #38]	@ movhi
 521:./BSP/ST/stm32_lcd.c ****     numpixels = deltay;         /* There are more y-values than x-values */
 1848              		.loc 1 521 15
 1849 00f8 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 1850 00fa BB84     		strh	r3, [r7, #36]	@ movhi
 1851              	.L91:
 522:./BSP/ST/stm32_lcd.c ****   }
 523:./BSP/ST/stm32_lcd.c **** 
 524:./BSP/ST/stm32_lcd.c ****   for (curpixel = 0; curpixel <= numpixels; curpixel++)
 1852              		.loc 1 524 17
 1853 00fc 0023     		movs	r3, #0
 1854 00fe 7B84     		strh	r3, [r7, #34]	@ movhi
 1855              		.loc 1 524 3
 1856 0100 2FE0     		b	.L93
 1857              	.L95:
 525:./BSP/ST/stm32_lcd.c ****   {
 526:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_SetPixel(x, y, Color);   /* Draw the current pixel */
 1858              		.loc 1 526 5
 1859 0102 FB8E     		ldrh	r3, [r7, #54]
 1860 0104 B98E     		ldrh	r1, [r7, #52]
 1861 0106 3A6C     		ldr	r2, [r7, #64]
 1862 0108 1846     		mov	r0, r3
 1863 010a FFF7FEFF 		bl	UTIL_LCD_SetPixel
 527:./BSP/ST/stm32_lcd.c ****     num += numadd;                            /* Increase the numerator by the top of the fraction 
 1864              		.loc 1 527 9
 1865 010e 3A8D     		ldrh	r2, [r7, #40]
 1866 0110 FB8C     		ldrh	r3, [r7, #38]
 1867 0112 1344     		add	r3, r3, r2
 1868 0114 9BB2     		uxth	r3, r3
 1869 0116 3B85     		strh	r3, [r7, #40]	@ movhi
 528:./BSP/ST/stm32_lcd.c ****     if (num >= den)                           /* Check if numerator >= denominator */
 1870              		.loc 1 528 8
 1871 0118 B7F92820 		ldrsh	r2, [r7, #40]
 1872 011c B7F92A30 		ldrsh	r3, [r7, #42]
 1873 0120 9A42     		cmp	r2, r3
 1874 0122 0EDB     		blt	.L94
 529:./BSP/ST/stm32_lcd.c ****     {
 530:./BSP/ST/stm32_lcd.c ****       num -= den;                             /* Calculate the new numerator value */
 1875              		.loc 1 530 11
 1876 0124 3A8D     		ldrh	r2, [r7, #40]
 1877 0126 7B8D     		ldrh	r3, [r7, #42]
ARM GAS  /tmp/ccXj48YU.s 			page 43


 1878 0128 D31A     		subs	r3, r2, r3
 1879 012a 9BB2     		uxth	r3, r3
 1880 012c 3B85     		strh	r3, [r7, #40]	@ movhi
 531:./BSP/ST/stm32_lcd.c ****       x += xinc1;                             /* Change the x as appropriate */
 1881              		.loc 1 531 9
 1882 012e FA8E     		ldrh	r2, [r7, #54]
 1883 0130 7B8E     		ldrh	r3, [r7, #50]
 1884 0132 1344     		add	r3, r3, r2
 1885 0134 9BB2     		uxth	r3, r3
 1886 0136 FB86     		strh	r3, [r7, #54]	@ movhi
 532:./BSP/ST/stm32_lcd.c ****       y += yinc1;                             /* Change the y as appropriate */
 1887              		.loc 1 532 9
 1888 0138 BA8E     		ldrh	r2, [r7, #52]
 1889 013a FB8D     		ldrh	r3, [r7, #46]
 1890 013c 1344     		add	r3, r3, r2
 1891 013e 9BB2     		uxth	r3, r3
 1892 0140 BB86     		strh	r3, [r7, #52]	@ movhi
 1893              	.L94:
 533:./BSP/ST/stm32_lcd.c ****     }
 534:./BSP/ST/stm32_lcd.c ****     x += xinc2;                               /* Change the x as appropriate */
 1894              		.loc 1 534 7 discriminator 2
 1895 0142 FA8E     		ldrh	r2, [r7, #54]
 1896 0144 3B8E     		ldrh	r3, [r7, #48]
 1897 0146 1344     		add	r3, r3, r2
 1898 0148 9BB2     		uxth	r3, r3
 1899 014a FB86     		strh	r3, [r7, #54]	@ movhi
 535:./BSP/ST/stm32_lcd.c ****     y += yinc2;                               /* Change the y as appropriate */
 1900              		.loc 1 535 7 discriminator 2
 1901 014c BA8E     		ldrh	r2, [r7, #52]
 1902 014e BB8D     		ldrh	r3, [r7, #44]
 1903 0150 1344     		add	r3, r3, r2
 1904 0152 9BB2     		uxth	r3, r3
 1905 0154 BB86     		strh	r3, [r7, #52]	@ movhi
 524:./BSP/ST/stm32_lcd.c ****   {
 1906              		.loc 1 524 53 discriminator 2
 1907 0156 B7F92230 		ldrsh	r3, [r7, #34]
 1908 015a 9BB2     		uxth	r3, r3
 1909 015c 0133     		adds	r3, r3, #1
 1910 015e 9BB2     		uxth	r3, r3
 1911 0160 7B84     		strh	r3, [r7, #34]	@ movhi
 1912              	.L93:
 524:./BSP/ST/stm32_lcd.c ****   {
 1913              		.loc 1 524 3 discriminator 1
 1914 0162 B7F92220 		ldrsh	r2, [r7, #34]
 1915 0166 B7F92430 		ldrsh	r3, [r7, #36]
 1916 016a 9A42     		cmp	r2, r3
 1917 016c C9DD     		ble	.L95
 536:./BSP/ST/stm32_lcd.c ****   }
 537:./BSP/ST/stm32_lcd.c **** }
 1918              		.loc 1 537 1
 1919 016e 00BF     		nop
 1920 0170 00BF     		nop
 1921 0172 3837     		adds	r7, r7, #56
 1922              	.LCFI98:
 1923              		.cfi_def_cfa_offset 8
 1924 0174 BD46     		mov	sp, r7
 1925              	.LCFI99:
ARM GAS  /tmp/ccXj48YU.s 			page 44


 1926              		.cfi_def_cfa_register 13
 1927              		@ sp needed
 1928 0176 80BD     		pop	{r7, pc}
 1929              		.cfi_endproc
 1930              	.LFE19:
 1932              		.section	.text.UTIL_LCD_DrawRect,"ax",%progbits
 1933              		.align	1
 1934              		.global	UTIL_LCD_DrawRect
 1935              		.syntax unified
 1936              		.thumb
 1937              		.thumb_func
 1938              		.fpu fpv5-d16
 1940              	UTIL_LCD_DrawRect:
 1941              	.LFB20:
 538:./BSP/ST/stm32_lcd.c **** 
 539:./BSP/ST/stm32_lcd.c **** /**
 540:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a rectangle in currently active layer.
 541:./BSP/ST/stm32_lcd.c ****   * @param  Xpos X position
 542:./BSP/ST/stm32_lcd.c ****   * @param  Ypos Y position
 543:./BSP/ST/stm32_lcd.c ****   * @param  Width  Rectangle width
 544:./BSP/ST/stm32_lcd.c ****   * @param  Height Rectangle height
 545:./BSP/ST/stm32_lcd.c ****   * @param  Color  Draw color
 546:./BSP/ST/stm32_lcd.c ****   */
 547:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawRect(uint32_t Xpos, uint32_t Ypos, uint32_t Width, uint32_t Height, uint32_t Colo
 548:./BSP/ST/stm32_lcd.c **** {
 1942              		.loc 1 548 1
 1943              		.cfi_startproc
 1944              		@ args = 4, pretend = 0, frame = 16
 1945              		@ frame_needed = 1, uses_anonymous_args = 0
 1946 0000 80B5     		push	{r7, lr}
 1947              	.LCFI100:
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 7, -8
 1950              		.cfi_offset 14, -4
 1951 0002 84B0     		sub	sp, sp, #16
 1952              	.LCFI101:
 1953              		.cfi_def_cfa_offset 24
 1954 0004 00AF     		add	r7, sp, #0
 1955              	.LCFI102:
 1956              		.cfi_def_cfa_register 7
 1957 0006 F860     		str	r0, [r7, #12]
 1958 0008 B960     		str	r1, [r7, #8]
 1959 000a 7A60     		str	r2, [r7, #4]
 1960 000c 3B60     		str	r3, [r7]
 549:./BSP/ST/stm32_lcd.c ****   /* Draw horizontal lines */
 550:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawHLine(Xpos, Ypos, Width, Color);
 1961              		.loc 1 550 3
 1962 000e BB69     		ldr	r3, [r7, #24]
 1963 0010 7A68     		ldr	r2, [r7, #4]
 1964 0012 B968     		ldr	r1, [r7, #8]
 1965 0014 F868     		ldr	r0, [r7, #12]
 1966 0016 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 551:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawHLine(Xpos, (Ypos+ Height - 1U), Width, Color);
 1967              		.loc 1 551 33
 1968 001a BA68     		ldr	r2, [r7, #8]
 1969 001c 3B68     		ldr	r3, [r7]
 1970 001e 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccXj48YU.s 			page 45


 1971              		.loc 1 551 3
 1972 0020 591E     		subs	r1, r3, #1
 1973 0022 BB69     		ldr	r3, [r7, #24]
 1974 0024 7A68     		ldr	r2, [r7, #4]
 1975 0026 F868     		ldr	r0, [r7, #12]
 1976 0028 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 552:./BSP/ST/stm32_lcd.c **** 
 553:./BSP/ST/stm32_lcd.c ****   /* Draw vertical lines */
 554:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawVLine(Xpos, Ypos, Height, Color);
 1977              		.loc 1 554 3
 1978 002c BB69     		ldr	r3, [r7, #24]
 1979 002e 3A68     		ldr	r2, [r7]
 1980 0030 B968     		ldr	r1, [r7, #8]
 1981 0032 F868     		ldr	r0, [r7, #12]
 1982 0034 FFF7FEFF 		bl	UTIL_LCD_DrawVLine
 555:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawVLine((Xpos + Width - 1U), Ypos, Height, Color);
 1983              		.loc 1 555 28
 1984 0038 FA68     		ldr	r2, [r7, #12]
 1985 003a 7B68     		ldr	r3, [r7, #4]
 1986 003c 1344     		add	r3, r3, r2
 1987              		.loc 1 555 3
 1988 003e 581E     		subs	r0, r3, #1
 1989 0040 BB69     		ldr	r3, [r7, #24]
 1990 0042 3A68     		ldr	r2, [r7]
 1991 0044 B968     		ldr	r1, [r7, #8]
 1992 0046 FFF7FEFF 		bl	UTIL_LCD_DrawVLine
 556:./BSP/ST/stm32_lcd.c **** }
 1993              		.loc 1 556 1
 1994 004a 00BF     		nop
 1995 004c 1037     		adds	r7, r7, #16
 1996              	.LCFI103:
 1997              		.cfi_def_cfa_offset 8
 1998 004e BD46     		mov	sp, r7
 1999              	.LCFI104:
 2000              		.cfi_def_cfa_register 13
 2001              		@ sp needed
 2002 0050 80BD     		pop	{r7, pc}
 2003              		.cfi_endproc
 2004              	.LFE20:
 2006              		.section	.text.UTIL_LCD_DrawCircle,"ax",%progbits
 2007              		.align	1
 2008              		.global	UTIL_LCD_DrawCircle
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu fpv5-d16
 2014              	UTIL_LCD_DrawCircle:
 2015              	.LFB21:
 557:./BSP/ST/stm32_lcd.c **** 
 558:./BSP/ST/stm32_lcd.c **** /**
 559:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a circle in currently active layer.
 560:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 561:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 562:./BSP/ST/stm32_lcd.c ****   * @param  Radius  Circle radius
 563:./BSP/ST/stm32_lcd.c ****   * @param  Color   Draw color
 564:./BSP/ST/stm32_lcd.c ****   */
 565:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawCircle(uint32_t Xpos, uint32_t Ypos, uint32_t Radius, uint32_t Color)
ARM GAS  /tmp/ccXj48YU.s 			page 46


 566:./BSP/ST/stm32_lcd.c **** {
 2016              		.loc 1 566 1
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 32
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020 0000 80B5     		push	{r7, lr}
 2021              	.LCFI105:
 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 7, -8
 2024              		.cfi_offset 14, -4
 2025 0002 88B0     		sub	sp, sp, #32
 2026              	.LCFI106:
 2027              		.cfi_def_cfa_offset 40
 2028 0004 00AF     		add	r7, sp, #0
 2029              	.LCFI107:
 2030              		.cfi_def_cfa_register 7
 2031 0006 F860     		str	r0, [r7, #12]
 2032 0008 B960     		str	r1, [r7, #8]
 2033 000a 7A60     		str	r2, [r7, #4]
 2034 000c 3B60     		str	r3, [r7]
 567:./BSP/ST/stm32_lcd.c ****   int32_t   decision;  /* Decision Variable */
 568:./BSP/ST/stm32_lcd.c ****   uint32_t  current_x; /* Current X Value */
 569:./BSP/ST/stm32_lcd.c ****   uint32_t  current_y; /* Current Y Value */
 570:./BSP/ST/stm32_lcd.c **** 
 571:./BSP/ST/stm32_lcd.c ****   decision = 3 - (Radius << 1);
 2035              		.loc 1 571 26
 2036 000e 7B68     		ldr	r3, [r7, #4]
 2037 0010 5B00     		lsls	r3, r3, #1
 2038              		.loc 1 571 16
 2039 0012 C3F10303 		rsb	r3, r3, #3
 2040              		.loc 1 571 12
 2041 0016 FB61     		str	r3, [r7, #28]
 572:./BSP/ST/stm32_lcd.c ****   current_x = 0;
 2042              		.loc 1 572 13
 2043 0018 0023     		movs	r3, #0
 2044 001a BB61     		str	r3, [r7, #24]
 573:./BSP/ST/stm32_lcd.c ****   current_y = Radius;
 2045              		.loc 1 573 13
 2046 001c 7B68     		ldr	r3, [r7, #4]
 2047 001e 7B61     		str	r3, [r7, #20]
 574:./BSP/ST/stm32_lcd.c **** 
 575:./BSP/ST/stm32_lcd.c ****   while (current_x <= current_y)
 2048              		.loc 1 575 9
 2049 0020 EBE0     		b	.L98
 2050              	.L109:
 576:./BSP/ST/stm32_lcd.c ****   {
 577:./BSP/ST/stm32_lcd.c ****     if((Ypos - current_y) < DrawProp->LcdYsize)
 2051              		.loc 1 577 14
 2052 0022 BA68     		ldr	r2, [r7, #8]
 2053 0024 7B69     		ldr	r3, [r7, #20]
 2054 0026 D21A     		subs	r2, r2, r3
 2055              		.loc 1 577 37
 2056 0028 794B     		ldr	r3, .L110
 2057 002a 9B69     		ldr	r3, [r3, #24]
 2058              		.loc 1 577 7
 2059 002c 9A42     		cmp	r2, r3
 2060 002e 2DD2     		bcs	.L99
ARM GAS  /tmp/ccXj48YU.s 			page 47


 578:./BSP/ST/stm32_lcd.c ****     {
 579:./BSP/ST/stm32_lcd.c ****       if((Xpos + current_x) < DrawProp->LcdXsize)
 2061              		.loc 1 579 16
 2062 0030 FA68     		ldr	r2, [r7, #12]
 2063 0032 BB69     		ldr	r3, [r7, #24]
 2064 0034 1A44     		add	r2, r2, r3
 2065              		.loc 1 579 39
 2066 0036 764B     		ldr	r3, .L110
 2067 0038 5B69     		ldr	r3, [r3, #20]
 2068              		.loc 1 579 9
 2069 003a 9A42     		cmp	r2, r3
 2070 003c 0FD2     		bcs	.L100
 580:./BSP/ST/stm32_lcd.c ****       {
 581:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos + current_x), (Ypos - current_y), Color);
 2071              		.loc 1 581 9
 2072 003e FB68     		ldr	r3, [r7, #12]
 2073 0040 9AB2     		uxth	r2, r3
 2074 0042 BB69     		ldr	r3, [r7, #24]
 2075 0044 9BB2     		uxth	r3, r3
 2076 0046 1344     		add	r3, r3, r2
 2077 0048 98B2     		uxth	r0, r3
 2078 004a BB68     		ldr	r3, [r7, #8]
 2079 004c 9AB2     		uxth	r2, r3
 2080 004e 7B69     		ldr	r3, [r7, #20]
 2081 0050 9BB2     		uxth	r3, r3
 2082 0052 D31A     		subs	r3, r2, r3
 2083 0054 9BB2     		uxth	r3, r3
 2084 0056 3A68     		ldr	r2, [r7]
 2085 0058 1946     		mov	r1, r3
 2086 005a FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2087              	.L100:
 582:./BSP/ST/stm32_lcd.c ****       }
 583:./BSP/ST/stm32_lcd.c ****       if((Xpos - current_x) < DrawProp->LcdXsize)
 2088              		.loc 1 583 16
 2089 005e FA68     		ldr	r2, [r7, #12]
 2090 0060 BB69     		ldr	r3, [r7, #24]
 2091 0062 D21A     		subs	r2, r2, r3
 2092              		.loc 1 583 39
 2093 0064 6A4B     		ldr	r3, .L110
 2094 0066 5B69     		ldr	r3, [r3, #20]
 2095              		.loc 1 583 9
 2096 0068 9A42     		cmp	r2, r3
 2097 006a 0FD2     		bcs	.L99
 584:./BSP/ST/stm32_lcd.c ****       {
 585:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos - current_x), (Ypos - current_y), Color);
 2098              		.loc 1 585 9
 2099 006c FB68     		ldr	r3, [r7, #12]
 2100 006e 9AB2     		uxth	r2, r3
 2101 0070 BB69     		ldr	r3, [r7, #24]
 2102 0072 9BB2     		uxth	r3, r3
 2103 0074 D31A     		subs	r3, r2, r3
 2104 0076 98B2     		uxth	r0, r3
 2105 0078 BB68     		ldr	r3, [r7, #8]
 2106 007a 9AB2     		uxth	r2, r3
 2107 007c 7B69     		ldr	r3, [r7, #20]
 2108 007e 9BB2     		uxth	r3, r3
 2109 0080 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccXj48YU.s 			page 48


 2110 0082 9BB2     		uxth	r3, r3
 2111 0084 3A68     		ldr	r2, [r7]
 2112 0086 1946     		mov	r1, r3
 2113 0088 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2114              	.L99:
 586:./BSP/ST/stm32_lcd.c ****       }
 587:./BSP/ST/stm32_lcd.c ****     }
 588:./BSP/ST/stm32_lcd.c **** 
 589:./BSP/ST/stm32_lcd.c ****     if((Ypos - current_x) < DrawProp->LcdYsize)
 2115              		.loc 1 589 14
 2116 008c BA68     		ldr	r2, [r7, #8]
 2117 008e BB69     		ldr	r3, [r7, #24]
 2118 0090 D21A     		subs	r2, r2, r3
 2119              		.loc 1 589 37
 2120 0092 5F4B     		ldr	r3, .L110
 2121 0094 9B69     		ldr	r3, [r3, #24]
 2122              		.loc 1 589 7
 2123 0096 9A42     		cmp	r2, r3
 2124 0098 2DD2     		bcs	.L101
 590:./BSP/ST/stm32_lcd.c ****     {
 591:./BSP/ST/stm32_lcd.c ****       if((Xpos + current_y) < DrawProp->LcdXsize)
 2125              		.loc 1 591 16
 2126 009a FA68     		ldr	r2, [r7, #12]
 2127 009c 7B69     		ldr	r3, [r7, #20]
 2128 009e 1A44     		add	r2, r2, r3
 2129              		.loc 1 591 39
 2130 00a0 5B4B     		ldr	r3, .L110
 2131 00a2 5B69     		ldr	r3, [r3, #20]
 2132              		.loc 1 591 9
 2133 00a4 9A42     		cmp	r2, r3
 2134 00a6 0FD2     		bcs	.L102
 592:./BSP/ST/stm32_lcd.c ****       {
 593:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos + current_y), (Ypos - current_x), Color);
 2135              		.loc 1 593 9
 2136 00a8 FB68     		ldr	r3, [r7, #12]
 2137 00aa 9AB2     		uxth	r2, r3
 2138 00ac 7B69     		ldr	r3, [r7, #20]
 2139 00ae 9BB2     		uxth	r3, r3
 2140 00b0 1344     		add	r3, r3, r2
 2141 00b2 98B2     		uxth	r0, r3
 2142 00b4 BB68     		ldr	r3, [r7, #8]
 2143 00b6 9AB2     		uxth	r2, r3
 2144 00b8 BB69     		ldr	r3, [r7, #24]
 2145 00ba 9BB2     		uxth	r3, r3
 2146 00bc D31A     		subs	r3, r2, r3
 2147 00be 9BB2     		uxth	r3, r3
 2148 00c0 3A68     		ldr	r2, [r7]
 2149 00c2 1946     		mov	r1, r3
 2150 00c4 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2151              	.L102:
 594:./BSP/ST/stm32_lcd.c ****       }
 595:./BSP/ST/stm32_lcd.c ****       if((Xpos - current_y) < DrawProp->LcdXsize)
 2152              		.loc 1 595 16
 2153 00c8 FA68     		ldr	r2, [r7, #12]
 2154 00ca 7B69     		ldr	r3, [r7, #20]
 2155 00cc D21A     		subs	r2, r2, r3
 2156              		.loc 1 595 39
ARM GAS  /tmp/ccXj48YU.s 			page 49


 2157 00ce 504B     		ldr	r3, .L110
 2158 00d0 5B69     		ldr	r3, [r3, #20]
 2159              		.loc 1 595 9
 2160 00d2 9A42     		cmp	r2, r3
 2161 00d4 0FD2     		bcs	.L101
 596:./BSP/ST/stm32_lcd.c ****       {
 597:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos - current_y), (Ypos - current_x), Color);
 2162              		.loc 1 597 9
 2163 00d6 FB68     		ldr	r3, [r7, #12]
 2164 00d8 9AB2     		uxth	r2, r3
 2165 00da 7B69     		ldr	r3, [r7, #20]
 2166 00dc 9BB2     		uxth	r3, r3
 2167 00de D31A     		subs	r3, r2, r3
 2168 00e0 98B2     		uxth	r0, r3
 2169 00e2 BB68     		ldr	r3, [r7, #8]
 2170 00e4 9AB2     		uxth	r2, r3
 2171 00e6 BB69     		ldr	r3, [r7, #24]
 2172 00e8 9BB2     		uxth	r3, r3
 2173 00ea D31A     		subs	r3, r2, r3
 2174 00ec 9BB2     		uxth	r3, r3
 2175 00ee 3A68     		ldr	r2, [r7]
 2176 00f0 1946     		mov	r1, r3
 2177 00f2 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2178              	.L101:
 598:./BSP/ST/stm32_lcd.c ****       }
 599:./BSP/ST/stm32_lcd.c ****     }
 600:./BSP/ST/stm32_lcd.c **** 
 601:./BSP/ST/stm32_lcd.c ****     if((Ypos + current_y) < DrawProp->LcdYsize)
 2179              		.loc 1 601 14
 2180 00f6 BA68     		ldr	r2, [r7, #8]
 2181 00f8 7B69     		ldr	r3, [r7, #20]
 2182 00fa 1A44     		add	r2, r2, r3
 2183              		.loc 1 601 37
 2184 00fc 444B     		ldr	r3, .L110
 2185 00fe 9B69     		ldr	r3, [r3, #24]
 2186              		.loc 1 601 7
 2187 0100 9A42     		cmp	r2, r3
 2188 0102 2DD2     		bcs	.L103
 602:./BSP/ST/stm32_lcd.c ****     {
 603:./BSP/ST/stm32_lcd.c ****       if((Xpos + current_x) < DrawProp->LcdXsize)
 2189              		.loc 1 603 16
 2190 0104 FA68     		ldr	r2, [r7, #12]
 2191 0106 BB69     		ldr	r3, [r7, #24]
 2192 0108 1A44     		add	r2, r2, r3
 2193              		.loc 1 603 39
 2194 010a 414B     		ldr	r3, .L110
 2195 010c 5B69     		ldr	r3, [r3, #20]
 2196              		.loc 1 603 9
 2197 010e 9A42     		cmp	r2, r3
 2198 0110 0FD2     		bcs	.L104
 604:./BSP/ST/stm32_lcd.c ****       {
 605:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos + current_x), (Ypos + current_y), Color);
 2199              		.loc 1 605 9
 2200 0112 FB68     		ldr	r3, [r7, #12]
 2201 0114 9AB2     		uxth	r2, r3
 2202 0116 BB69     		ldr	r3, [r7, #24]
 2203 0118 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccXj48YU.s 			page 50


 2204 011a 1344     		add	r3, r3, r2
 2205 011c 98B2     		uxth	r0, r3
 2206 011e BB68     		ldr	r3, [r7, #8]
 2207 0120 9AB2     		uxth	r2, r3
 2208 0122 7B69     		ldr	r3, [r7, #20]
 2209 0124 9BB2     		uxth	r3, r3
 2210 0126 1344     		add	r3, r3, r2
 2211 0128 9BB2     		uxth	r3, r3
 2212 012a 3A68     		ldr	r2, [r7]
 2213 012c 1946     		mov	r1, r3
 2214 012e FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2215              	.L104:
 606:./BSP/ST/stm32_lcd.c ****       }
 607:./BSP/ST/stm32_lcd.c ****       if((Xpos - current_x) < DrawProp->LcdXsize)
 2216              		.loc 1 607 16
 2217 0132 FA68     		ldr	r2, [r7, #12]
 2218 0134 BB69     		ldr	r3, [r7, #24]
 2219 0136 D21A     		subs	r2, r2, r3
 2220              		.loc 1 607 39
 2221 0138 354B     		ldr	r3, .L110
 2222 013a 5B69     		ldr	r3, [r3, #20]
 2223              		.loc 1 607 9
 2224 013c 9A42     		cmp	r2, r3
 2225 013e 0FD2     		bcs	.L103
 608:./BSP/ST/stm32_lcd.c ****       {
 609:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos - current_x), (Ypos + current_y), Color);
 2226              		.loc 1 609 9
 2227 0140 FB68     		ldr	r3, [r7, #12]
 2228 0142 9AB2     		uxth	r2, r3
 2229 0144 BB69     		ldr	r3, [r7, #24]
 2230 0146 9BB2     		uxth	r3, r3
 2231 0148 D31A     		subs	r3, r2, r3
 2232 014a 98B2     		uxth	r0, r3
 2233 014c BB68     		ldr	r3, [r7, #8]
 2234 014e 9AB2     		uxth	r2, r3
 2235 0150 7B69     		ldr	r3, [r7, #20]
 2236 0152 9BB2     		uxth	r3, r3
 2237 0154 1344     		add	r3, r3, r2
 2238 0156 9BB2     		uxth	r3, r3
 2239 0158 3A68     		ldr	r2, [r7]
 2240 015a 1946     		mov	r1, r3
 2241 015c FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2242              	.L103:
 610:./BSP/ST/stm32_lcd.c ****       }
 611:./BSP/ST/stm32_lcd.c ****     }
 612:./BSP/ST/stm32_lcd.c **** 
 613:./BSP/ST/stm32_lcd.c ****     if((Ypos + current_x) < DrawProp->LcdYsize)
 2243              		.loc 1 613 14
 2244 0160 BA68     		ldr	r2, [r7, #8]
 2245 0162 BB69     		ldr	r3, [r7, #24]
 2246 0164 1A44     		add	r2, r2, r3
 2247              		.loc 1 613 37
 2248 0166 2A4B     		ldr	r3, .L110
 2249 0168 9B69     		ldr	r3, [r3, #24]
 2250              		.loc 1 613 7
 2251 016a 9A42     		cmp	r2, r3
 2252 016c 2DD2     		bcs	.L105
ARM GAS  /tmp/ccXj48YU.s 			page 51


 614:./BSP/ST/stm32_lcd.c ****     {
 615:./BSP/ST/stm32_lcd.c ****       if((Xpos + current_y) < DrawProp->LcdXsize)
 2253              		.loc 1 615 16
 2254 016e FA68     		ldr	r2, [r7, #12]
 2255 0170 7B69     		ldr	r3, [r7, #20]
 2256 0172 1A44     		add	r2, r2, r3
 2257              		.loc 1 615 39
 2258 0174 264B     		ldr	r3, .L110
 2259 0176 5B69     		ldr	r3, [r3, #20]
 2260              		.loc 1 615 9
 2261 0178 9A42     		cmp	r2, r3
 2262 017a 0FD2     		bcs	.L106
 616:./BSP/ST/stm32_lcd.c ****       {
 617:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos + current_y), (Ypos + current_x), Color);
 2263              		.loc 1 617 9
 2264 017c FB68     		ldr	r3, [r7, #12]
 2265 017e 9AB2     		uxth	r2, r3
 2266 0180 7B69     		ldr	r3, [r7, #20]
 2267 0182 9BB2     		uxth	r3, r3
 2268 0184 1344     		add	r3, r3, r2
 2269 0186 98B2     		uxth	r0, r3
 2270 0188 BB68     		ldr	r3, [r7, #8]
 2271 018a 9AB2     		uxth	r2, r3
 2272 018c BB69     		ldr	r3, [r7, #24]
 2273 018e 9BB2     		uxth	r3, r3
 2274 0190 1344     		add	r3, r3, r2
 2275 0192 9BB2     		uxth	r3, r3
 2276 0194 3A68     		ldr	r2, [r7]
 2277 0196 1946     		mov	r1, r3
 2278 0198 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2279              	.L106:
 618:./BSP/ST/stm32_lcd.c ****       }
 619:./BSP/ST/stm32_lcd.c ****       if((Xpos - current_y) < DrawProp->LcdXsize)
 2280              		.loc 1 619 16
 2281 019c FA68     		ldr	r2, [r7, #12]
 2282 019e 7B69     		ldr	r3, [r7, #20]
 2283 01a0 D21A     		subs	r2, r2, r3
 2284              		.loc 1 619 39
 2285 01a2 1B4B     		ldr	r3, .L110
 2286 01a4 5B69     		ldr	r3, [r3, #20]
 2287              		.loc 1 619 9
 2288 01a6 9A42     		cmp	r2, r3
 2289 01a8 0FD2     		bcs	.L105
 620:./BSP/ST/stm32_lcd.c ****       {
 621:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_SetPixel((Xpos - current_y), (Ypos + current_x), Color);
 2290              		.loc 1 621 9
 2291 01aa FB68     		ldr	r3, [r7, #12]
 2292 01ac 9AB2     		uxth	r2, r3
 2293 01ae 7B69     		ldr	r3, [r7, #20]
 2294 01b0 9BB2     		uxth	r3, r3
 2295 01b2 D31A     		subs	r3, r2, r3
 2296 01b4 98B2     		uxth	r0, r3
 2297 01b6 BB68     		ldr	r3, [r7, #8]
 2298 01b8 9AB2     		uxth	r2, r3
 2299 01ba BB69     		ldr	r3, [r7, #24]
 2300 01bc 9BB2     		uxth	r3, r3
 2301 01be 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccXj48YU.s 			page 52


 2302 01c0 9BB2     		uxth	r3, r3
 2303 01c2 3A68     		ldr	r2, [r7]
 2304 01c4 1946     		mov	r1, r3
 2305 01c6 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 2306              	.L105:
 622:./BSP/ST/stm32_lcd.c ****       }
 623:./BSP/ST/stm32_lcd.c ****     }
 624:./BSP/ST/stm32_lcd.c **** 
 625:./BSP/ST/stm32_lcd.c ****     if (decision < 0)
 2307              		.loc 1 625 8
 2308 01ca FB69     		ldr	r3, [r7, #28]
 2309 01cc 002B     		cmp	r3, #0
 2310 01ce 06DA     		bge	.L107
 626:./BSP/ST/stm32_lcd.c ****     {
 627:./BSP/ST/stm32_lcd.c ****       decision += (current_x << 2) + 6;
 2311              		.loc 1 627 30
 2312 01d0 BB69     		ldr	r3, [r7, #24]
 2313 01d2 9A00     		lsls	r2, r3, #2
 2314              		.loc 1 627 16
 2315 01d4 FB69     		ldr	r3, [r7, #28]
 2316 01d6 1344     		add	r3, r3, r2
 2317 01d8 0633     		adds	r3, r3, #6
 2318 01da FB61     		str	r3, [r7, #28]
 2319 01dc 0AE0     		b	.L108
 2320              	.L107:
 628:./BSP/ST/stm32_lcd.c ****     }
 629:./BSP/ST/stm32_lcd.c ****     else
 630:./BSP/ST/stm32_lcd.c ****     {
 631:./BSP/ST/stm32_lcd.c ****       decision += ((current_x - current_y) << 2) + 10;
 2321              		.loc 1 631 31
 2322 01de BA69     		ldr	r2, [r7, #24]
 2323 01e0 7B69     		ldr	r3, [r7, #20]
 2324 01e2 D31A     		subs	r3, r2, r3
 2325              		.loc 1 631 44
 2326 01e4 9A00     		lsls	r2, r3, #2
 2327              		.loc 1 631 16
 2328 01e6 FB69     		ldr	r3, [r7, #28]
 2329 01e8 1344     		add	r3, r3, r2
 2330 01ea 0A33     		adds	r3, r3, #10
 2331 01ec FB61     		str	r3, [r7, #28]
 632:./BSP/ST/stm32_lcd.c ****       current_y--;
 2332              		.loc 1 632 16
 2333 01ee 7B69     		ldr	r3, [r7, #20]
 2334 01f0 013B     		subs	r3, r3, #1
 2335 01f2 7B61     		str	r3, [r7, #20]
 2336              	.L108:
 633:./BSP/ST/stm32_lcd.c ****     }
 634:./BSP/ST/stm32_lcd.c ****     current_x++;
 2337              		.loc 1 634 14
 2338 01f4 BB69     		ldr	r3, [r7, #24]
 2339 01f6 0133     		adds	r3, r3, #1
 2340 01f8 BB61     		str	r3, [r7, #24]
 2341              	.L98:
 575:./BSP/ST/stm32_lcd.c ****   {
 2342              		.loc 1 575 9
 2343 01fa BA69     		ldr	r2, [r7, #24]
 2344 01fc 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccXj48YU.s 			page 53


 2345 01fe 9A42     		cmp	r2, r3
 2346 0200 7FF60FAF 		bls	.L109
 635:./BSP/ST/stm32_lcd.c ****   }
 636:./BSP/ST/stm32_lcd.c **** }
 2347              		.loc 1 636 1
 2348 0204 00BF     		nop
 2349 0206 00BF     		nop
 2350 0208 2037     		adds	r7, r7, #32
 2351              	.LCFI108:
 2352              		.cfi_def_cfa_offset 8
 2353 020a BD46     		mov	sp, r7
 2354              	.LCFI109:
 2355              		.cfi_def_cfa_register 13
 2356              		@ sp needed
 2357 020c 80BD     		pop	{r7, pc}
 2358              	.L111:
 2359 020e 00BF     		.align	2
 2360              	.L110:
 2361 0210 00000000 		.word	DrawProp
 2362              		.cfi_endproc
 2363              	.LFE21:
 2365              		.section	.text.UTIL_LCD_DrawPolygon,"ax",%progbits
 2366              		.align	1
 2367              		.global	UTIL_LCD_DrawPolygon
 2368              		.syntax unified
 2369              		.thumb
 2370              		.thumb_func
 2371              		.fpu fpv5-d16
 2373              	UTIL_LCD_DrawPolygon:
 2374              	.LFB22:
 637:./BSP/ST/stm32_lcd.c **** 
 638:./BSP/ST/stm32_lcd.c **** /**
 639:./BSP/ST/stm32_lcd.c ****   * @brief  Draws an poly-line (between many points) in currently active layer.
 640:./BSP/ST/stm32_lcd.c ****   * @param  Points      Pointer to the points array
 641:./BSP/ST/stm32_lcd.c ****   * @param  PointCount  Number of points
 642:./BSP/ST/stm32_lcd.c ****   * @param  Color       Draw color
 643:./BSP/ST/stm32_lcd.c ****   */
 644:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawPolygon(pPoint Points, uint32_t PointCount, uint32_t Color)
 645:./BSP/ST/stm32_lcd.c **** {
 2375              		.loc 1 645 1
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 24
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 90B5     		push	{r4, r7, lr}
 2380              	.LCFI110:
 2381              		.cfi_def_cfa_offset 12
 2382              		.cfi_offset 4, -12
 2383              		.cfi_offset 7, -8
 2384              		.cfi_offset 14, -4
 2385 0002 89B0     		sub	sp, sp, #36
 2386              	.LCFI111:
 2387              		.cfi_def_cfa_offset 48
 2388 0004 02AF     		add	r7, sp, #8
 2389              	.LCFI112:
 2390              		.cfi_def_cfa 7, 40
 2391 0006 F860     		str	r0, [r7, #12]
 2392 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccXj48YU.s 			page 54


 2393 000a 7A60     		str	r2, [r7, #4]
 646:./BSP/ST/stm32_lcd.c ****   int16_t x_pos = 0, y_pos = 0;
 2394              		.loc 1 646 11
 2395 000c 0023     		movs	r3, #0
 2396 000e FB82     		strh	r3, [r7, #22]	@ movhi
 2397              		.loc 1 646 22
 2398 0010 0023     		movs	r3, #0
 2399 0012 BB82     		strh	r3, [r7, #20]	@ movhi
 647:./BSP/ST/stm32_lcd.c **** 
 648:./BSP/ST/stm32_lcd.c ****   if(PointCount < 2)
 2400              		.loc 1 648 5
 2401 0014 BB68     		ldr	r3, [r7, #8]
 2402 0016 012B     		cmp	r3, #1
 2403 0018 43D9     		bls	.L117
 649:./BSP/ST/stm32_lcd.c ****   {
 650:./BSP/ST/stm32_lcd.c ****     return;
 651:./BSP/ST/stm32_lcd.c ****   }
 652:./BSP/ST/stm32_lcd.c **** 
 653:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawLine(Points->X, Points->Y, (Points+PointCount-1)->X, (Points+PointCount-1)->Y, Color
 2404              		.loc 1 653 27
 2405 001a FB68     		ldr	r3, [r7, #12]
 2406 001c B3F90030 		ldrsh	r3, [r3]
 2407              		.loc 1 653 3
 2408 0020 1846     		mov	r0, r3
 2409              		.loc 1 653 38
 2410 0022 FB68     		ldr	r3, [r7, #12]
 2411 0024 B3F90230 		ldrsh	r3, [r3, #2]
 2412              		.loc 1 653 3
 2413 0028 1946     		mov	r1, r3
 2414              		.loc 1 653 61
 2415 002a BA68     		ldr	r2, [r7, #8]
 2416 002c 6FF04043 		mvn	r3, #-1073741824
 2417 0030 1344     		add	r3, r3, r2
 2418 0032 9B00     		lsls	r3, r3, #2
 2419 0034 FA68     		ldr	r2, [r7, #12]
 2420 0036 1344     		add	r3, r3, r2
 2421              		.loc 1 653 64
 2422 0038 B3F90030 		ldrsh	r3, [r3]
 2423              		.loc 1 653 3
 2424 003c 1C46     		mov	r4, r3
 2425              		.loc 1 653 87
 2426 003e BA68     		ldr	r2, [r7, #8]
 2427 0040 6FF04043 		mvn	r3, #-1073741824
 2428 0044 1344     		add	r3, r3, r2
 2429 0046 9B00     		lsls	r3, r3, #2
 2430 0048 FA68     		ldr	r2, [r7, #12]
 2431 004a 1344     		add	r3, r3, r2
 2432              		.loc 1 653 90
 2433 004c B3F90230 		ldrsh	r3, [r3, #2]
 2434              		.loc 1 653 3
 2435 0050 1A46     		mov	r2, r3
 2436 0052 7B68     		ldr	r3, [r7, #4]
 2437 0054 0093     		str	r3, [sp]
 2438 0056 1346     		mov	r3, r2
 2439 0058 2246     		mov	r2, r4
 2440 005a FFF7FEFF 		bl	UTIL_LCD_DrawLine
 654:./BSP/ST/stm32_lcd.c **** 
ARM GAS  /tmp/ccXj48YU.s 			page 55


 655:./BSP/ST/stm32_lcd.c ****   while(--PointCount)
 2441              		.loc 1 655 8
 2442 005e 19E0     		b	.L115
 2443              	.L116:
 656:./BSP/ST/stm32_lcd.c ****   {
 657:./BSP/ST/stm32_lcd.c ****     x_pos = Points->X;
 2444              		.loc 1 657 11
 2445 0060 FB68     		ldr	r3, [r7, #12]
 2446 0062 1B88     		ldrh	r3, [r3]	@ movhi
 2447 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 658:./BSP/ST/stm32_lcd.c ****     y_pos = Points->Y;
 2448              		.loc 1 658 11
 2449 0066 FB68     		ldr	r3, [r7, #12]
 2450 0068 5B88     		ldrh	r3, [r3, #2]	@ movhi
 2451 006a BB82     		strh	r3, [r7, #20]	@ movhi
 659:./BSP/ST/stm32_lcd.c ****     Points++;
 2452              		.loc 1 659 11
 2453 006c FB68     		ldr	r3, [r7, #12]
 2454 006e 0433     		adds	r3, r3, #4
 2455 0070 FB60     		str	r3, [r7, #12]
 660:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_DrawLine(x_pos, y_pos, Points->X, Points->Y, Color);
 2456              		.loc 1 660 5
 2457 0072 B7F91600 		ldrsh	r0, [r7, #22]
 2458 0076 B7F91410 		ldrsh	r1, [r7, #20]
 2459              		.loc 1 660 43
 2460 007a FB68     		ldr	r3, [r7, #12]
 2461 007c B3F90030 		ldrsh	r3, [r3]
 2462              		.loc 1 660 5
 2463 0080 1A46     		mov	r2, r3
 2464              		.loc 1 660 54
 2465 0082 FB68     		ldr	r3, [r7, #12]
 2466 0084 B3F90230 		ldrsh	r3, [r3, #2]
 2467              		.loc 1 660 5
 2468 0088 1C46     		mov	r4, r3
 2469 008a 7B68     		ldr	r3, [r7, #4]
 2470 008c 0093     		str	r3, [sp]
 2471 008e 2346     		mov	r3, r4
 2472 0090 FFF7FEFF 		bl	UTIL_LCD_DrawLine
 2473              	.L115:
 655:./BSP/ST/stm32_lcd.c ****   {
 2474              		.loc 1 655 8
 2475 0094 BB68     		ldr	r3, [r7, #8]
 2476 0096 013B     		subs	r3, r3, #1
 2477 0098 BB60     		str	r3, [r7, #8]
 2478 009a BB68     		ldr	r3, [r7, #8]
 2479 009c 002B     		cmp	r3, #0
 2480 009e DFD1     		bne	.L116
 2481 00a0 00E0     		b	.L112
 2482              	.L117:
 650:./BSP/ST/stm32_lcd.c ****   }
 2483              		.loc 1 650 5
 2484 00a2 00BF     		nop
 2485              	.L112:
 661:./BSP/ST/stm32_lcd.c ****   }
 662:./BSP/ST/stm32_lcd.c **** }
 2486              		.loc 1 662 1
 2487 00a4 1C37     		adds	r7, r7, #28
ARM GAS  /tmp/ccXj48YU.s 			page 56


 2488              	.LCFI113:
 2489              		.cfi_def_cfa_offset 12
 2490 00a6 BD46     		mov	sp, r7
 2491              	.LCFI114:
 2492              		.cfi_def_cfa_register 13
 2493              		@ sp needed
 2494 00a8 90BD     		pop	{r4, r7, pc}
 2495              		.cfi_endproc
 2496              	.LFE22:
 2498              		.section	.text.UTIL_LCD_DrawEllipse,"ax",%progbits
 2499              		.align	1
 2500              		.global	UTIL_LCD_DrawEllipse
 2501              		.syntax unified
 2502              		.thumb
 2503              		.thumb_func
 2504              		.fpu fpv5-d16
 2506              	UTIL_LCD_DrawEllipse:
 2507              	.LFB23:
 663:./BSP/ST/stm32_lcd.c **** 
 664:./BSP/ST/stm32_lcd.c **** /**
 665:./BSP/ST/stm32_lcd.c ****   * @brief  Draws an ellipse on LCD in currently active layer.
 666:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 667:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 668:./BSP/ST/stm32_lcd.c ****   * @param  XRadius Ellipse X radius
 669:./BSP/ST/stm32_lcd.c ****   * @param  YRadius Ellipse Y radius
 670:./BSP/ST/stm32_lcd.c ****   * @param  Color   Draw color
 671:./BSP/ST/stm32_lcd.c ****   */
 672:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawEllipse(int Xpos, int Ypos, int XRadius, int YRadius, uint32_t Color)
 673:./BSP/ST/stm32_lcd.c **** {
 2508              		.loc 1 673 1
 2509              		.cfi_startproc
 2510              		@ args = 4, pretend = 0, frame = 48
 2511              		@ frame_needed = 1, uses_anonymous_args = 0
 2512 0000 80B5     		push	{r7, lr}
 2513              	.LCFI115:
 2514              		.cfi_def_cfa_offset 8
 2515              		.cfi_offset 7, -8
 2516              		.cfi_offset 14, -4
 2517 0002 8CB0     		sub	sp, sp, #48
 2518              	.LCFI116:
 2519              		.cfi_def_cfa_offset 56
 2520 0004 00AF     		add	r7, sp, #0
 2521              	.LCFI117:
 2522              		.cfi_def_cfa_register 7
 2523 0006 F860     		str	r0, [r7, #12]
 2524 0008 B960     		str	r1, [r7, #8]
 2525 000a 7A60     		str	r2, [r7, #4]
 2526 000c 3B60     		str	r3, [r7]
 674:./BSP/ST/stm32_lcd.c ****   int x_pos = 0, y_pos = -YRadius, err = 2-2*XRadius, e2;
 2527              		.loc 1 674 7
 2528 000e 0023     		movs	r3, #0
 2529 0010 FB62     		str	r3, [r7, #44]
 2530              		.loc 1 674 18
 2531 0012 3B68     		ldr	r3, [r7]
 2532 0014 5B42     		rsbs	r3, r3, #0
 2533 0016 BB62     		str	r3, [r7, #40]
 2534              		.loc 1 674 43
ARM GAS  /tmp/ccXj48YU.s 			page 57


 2535 0018 7B68     		ldr	r3, [r7, #4]
 2536 001a C3F10103 		rsb	r3, r3, #1
 2537              		.loc 1 674 36
 2538 001e 5B00     		lsls	r3, r3, #1
 2539 0020 7B62     		str	r3, [r7, #36]
 675:./BSP/ST/stm32_lcd.c ****   float k = 0, rad1 = 0, rad2 = 0;
 2540              		.loc 1 675 9
 2541 0022 4FF00003 		mov	r3, #0
 2542 0026 FB61     		str	r3, [r7, #28]	@ float
 2543              		.loc 1 675 16
 2544 0028 4FF00003 		mov	r3, #0
 2545 002c BB61     		str	r3, [r7, #24]	@ float
 2546              		.loc 1 675 26
 2547 002e 4FF00003 		mov	r3, #0
 2548 0032 7B61     		str	r3, [r7, #20]	@ float
 676:./BSP/ST/stm32_lcd.c **** 
 677:./BSP/ST/stm32_lcd.c ****   rad1 = XRadius;
 2549              		.loc 1 677 8
 2550 0034 7B68     		ldr	r3, [r7, #4]
 2551 0036 07EE903A 		vmov	s15, r3	@ int
 2552 003a F8EEE77A 		vcvt.f32.s32	s15, s15
 2553 003e C7ED067A 		vstr.32	s15, [r7, #24]
 678:./BSP/ST/stm32_lcd.c ****   rad2 = YRadius;
 2554              		.loc 1 678 8
 2555 0042 3B68     		ldr	r3, [r7]
 2556 0044 07EE903A 		vmov	s15, r3	@ int
 2557 0048 F8EEE77A 		vcvt.f32.s32	s15, s15
 2558 004c C7ED057A 		vstr.32	s15, [r7, #20]
 679:./BSP/ST/stm32_lcd.c **** 
 680:./BSP/ST/stm32_lcd.c ****   k = (float)(rad2/rad1);
 2559              		.loc 1 680 5
 2560 0050 D7ED056A 		vldr.32	s13, [r7, #20]
 2561 0054 97ED067A 		vldr.32	s14, [r7, #24]
 2562 0058 C6EE877A 		vdiv.f32	s15, s13, s14
 2563 005c C7ED077A 		vstr.32	s15, [r7, #28]
 2564              	.L121:
 681:./BSP/ST/stm32_lcd.c **** 
 682:./BSP/ST/stm32_lcd.c ****   do
 683:./BSP/ST/stm32_lcd.c ****   {
 684:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_SetPixel((Xpos-(uint32_t)(x_pos/k)), (Ypos + y_pos), Color);
 2565              		.loc 1 684 5
 2566 0060 FB68     		ldr	r3, [r7, #12]
 2567 0062 9AB2     		uxth	r2, r3
 2568              		.loc 1 684 45
 2569 0064 FB6A     		ldr	r3, [r7, #44]
 2570 0066 07EE903A 		vmov	s15, r3	@ int
 2571 006a F8EEE76A 		vcvt.f32.s32	s13, s15
 2572 006e 97ED077A 		vldr.32	s14, [r7, #28]
 2573 0072 C6EE877A 		vdiv.f32	s15, s13, s14
 2574              		.loc 1 684 29
 2575 0076 FCEEE77A 		vcvt.u32.f32	s15, s15
 2576              		.loc 1 684 5
 2577 007a 17EE903A 		vmov	r3, s15	@ int
 2578 007e 9BB2     		uxth	r3, r3
 2579 0080 D31A     		subs	r3, r2, r3
 2580 0082 98B2     		uxth	r0, r3
 2581 0084 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXj48YU.s 			page 58


 2582 0086 9AB2     		uxth	r2, r3
 2583 0088 BB6A     		ldr	r3, [r7, #40]
 2584 008a 9BB2     		uxth	r3, r3
 2585 008c 1344     		add	r3, r3, r2
 2586 008e 9BB2     		uxth	r3, r3
 2587 0090 BA6B     		ldr	r2, [r7, #56]
 2588 0092 1946     		mov	r1, r3
 2589 0094 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 685:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_SetPixel((Xpos+(uint32_t)(x_pos/k)), (Ypos + y_pos), Color);
 2590              		.loc 1 685 45
 2591 0098 FB6A     		ldr	r3, [r7, #44]
 2592 009a 07EE903A 		vmov	s15, r3	@ int
 2593 009e F8EEE76A 		vcvt.f32.s32	s13, s15
 2594 00a2 97ED077A 		vldr.32	s14, [r7, #28]
 2595 00a6 C6EE877A 		vdiv.f32	s15, s13, s14
 2596              		.loc 1 685 29
 2597 00aa FCEEE77A 		vcvt.u32.f32	s15, s15
 2598              		.loc 1 685 5
 2599 00ae 17EE903A 		vmov	r3, s15	@ int
 2600 00b2 9AB2     		uxth	r2, r3
 2601 00b4 FB68     		ldr	r3, [r7, #12]
 2602 00b6 9BB2     		uxth	r3, r3
 2603 00b8 1344     		add	r3, r3, r2
 2604 00ba 98B2     		uxth	r0, r3
 2605 00bc BB68     		ldr	r3, [r7, #8]
 2606 00be 9AB2     		uxth	r2, r3
 2607 00c0 BB6A     		ldr	r3, [r7, #40]
 2608 00c2 9BB2     		uxth	r3, r3
 2609 00c4 1344     		add	r3, r3, r2
 2610 00c6 9BB2     		uxth	r3, r3
 2611 00c8 BA6B     		ldr	r2, [r7, #56]
 2612 00ca 1946     		mov	r1, r3
 2613 00cc FFF7FEFF 		bl	UTIL_LCD_SetPixel
 686:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_SetPixel((Xpos+(uint32_t)(x_pos/k)), (Ypos - y_pos), Color);
 2614              		.loc 1 686 45
 2615 00d0 FB6A     		ldr	r3, [r7, #44]
 2616 00d2 07EE903A 		vmov	s15, r3	@ int
 2617 00d6 F8EEE76A 		vcvt.f32.s32	s13, s15
 2618 00da 97ED077A 		vldr.32	s14, [r7, #28]
 2619 00de C6EE877A 		vdiv.f32	s15, s13, s14
 2620              		.loc 1 686 29
 2621 00e2 FCEEE77A 		vcvt.u32.f32	s15, s15
 2622              		.loc 1 686 5
 2623 00e6 17EE903A 		vmov	r3, s15	@ int
 2624 00ea 9AB2     		uxth	r2, r3
 2625 00ec FB68     		ldr	r3, [r7, #12]
 2626 00ee 9BB2     		uxth	r3, r3
 2627 00f0 1344     		add	r3, r3, r2
 2628 00f2 98B2     		uxth	r0, r3
 2629 00f4 BB68     		ldr	r3, [r7, #8]
 2630 00f6 9AB2     		uxth	r2, r3
 2631 00f8 BB6A     		ldr	r3, [r7, #40]
 2632 00fa 9BB2     		uxth	r3, r3
 2633 00fc D31A     		subs	r3, r2, r3
 2634 00fe 9BB2     		uxth	r3, r3
 2635 0100 BA6B     		ldr	r2, [r7, #56]
 2636 0102 1946     		mov	r1, r3
ARM GAS  /tmp/ccXj48YU.s 			page 59


 2637 0104 FFF7FEFF 		bl	UTIL_LCD_SetPixel
 687:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_SetPixel((Xpos-(uint32_t)(x_pos/k)), (Ypos - y_pos), Color);
 2638              		.loc 1 687 5
 2639 0108 FB68     		ldr	r3, [r7, #12]
 2640 010a 9AB2     		uxth	r2, r3
 2641              		.loc 1 687 45
 2642 010c FB6A     		ldr	r3, [r7, #44]
 2643 010e 07EE903A 		vmov	s15, r3	@ int
 2644 0112 F8EEE76A 		vcvt.f32.s32	s13, s15
 2645 0116 97ED077A 		vldr.32	s14, [r7, #28]
 2646 011a C6EE877A 		vdiv.f32	s15, s13, s14
 2647              		.loc 1 687 29
 2648 011e FCEEE77A 		vcvt.u32.f32	s15, s15
 2649              		.loc 1 687 5
 2650 0122 17EE903A 		vmov	r3, s15	@ int
 2651 0126 9BB2     		uxth	r3, r3
 2652 0128 D31A     		subs	r3, r2, r3
 2653 012a 98B2     		uxth	r0, r3
 2654 012c BB68     		ldr	r3, [r7, #8]
 2655 012e 9AB2     		uxth	r2, r3
 2656 0130 BB6A     		ldr	r3, [r7, #40]
 2657 0132 9BB2     		uxth	r3, r3
 2658 0134 D31A     		subs	r3, r2, r3
 2659 0136 9BB2     		uxth	r3, r3
 2660 0138 BA6B     		ldr	r2, [r7, #56]
 2661 013a 1946     		mov	r1, r3
 2662 013c FFF7FEFF 		bl	UTIL_LCD_SetPixel
 688:./BSP/ST/stm32_lcd.c **** 
 689:./BSP/ST/stm32_lcd.c ****     e2 = err;
 2663              		.loc 1 689 8
 2664 0140 7B6A     		ldr	r3, [r7, #36]
 2665 0142 3B62     		str	r3, [r7, #32]
 690:./BSP/ST/stm32_lcd.c ****     if (e2 <= x_pos)
 2666              		.loc 1 690 8
 2667 0144 3A6A     		ldr	r2, [r7, #32]
 2668 0146 FB6A     		ldr	r3, [r7, #44]
 2669 0148 9A42     		cmp	r2, r3
 2670 014a 13DC     		bgt	.L119
 691:./BSP/ST/stm32_lcd.c ****     {
 692:./BSP/ST/stm32_lcd.c ****       err += ++x_pos*2+1;
 2671              		.loc 1 692 23
 2672 014c FB6A     		ldr	r3, [r7, #44]
 2673 014e 0133     		adds	r3, r3, #1
 2674 0150 FB62     		str	r3, [r7, #44]
 2675              		.loc 1 692 21
 2676 0152 FB6A     		ldr	r3, [r7, #44]
 2677 0154 5B00     		lsls	r3, r3, #1
 2678              		.loc 1 692 23
 2679 0156 0133     		adds	r3, r3, #1
 2680              		.loc 1 692 11
 2681 0158 7A6A     		ldr	r2, [r7, #36]
 2682 015a 1344     		add	r3, r3, r2
 2683 015c 7B62     		str	r3, [r7, #36]
 693:./BSP/ST/stm32_lcd.c ****       if (-y_pos == x_pos && e2 <= y_pos) e2 = 0;
 2684              		.loc 1 693 11
 2685 015e BB6A     		ldr	r3, [r7, #40]
 2686 0160 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/ccXj48YU.s 			page 60


 2687              		.loc 1 693 10
 2688 0162 FA6A     		ldr	r2, [r7, #44]
 2689 0164 9A42     		cmp	r2, r3
 2690 0166 05D1     		bne	.L119
 2691              		.loc 1 693 27 discriminator 1
 2692 0168 3A6A     		ldr	r2, [r7, #32]
 2693 016a BB6A     		ldr	r3, [r7, #40]
 2694 016c 9A42     		cmp	r2, r3
 2695 016e 01DC     		bgt	.L119
 2696              		.loc 1 693 46 discriminator 2
 2697 0170 0023     		movs	r3, #0
 2698 0172 3B62     		str	r3, [r7, #32]
 2699              	.L119:
 694:./BSP/ST/stm32_lcd.c ****     }
 695:./BSP/ST/stm32_lcd.c ****     if (e2 > y_pos)
 2700              		.loc 1 695 8
 2701 0174 3A6A     		ldr	r2, [r7, #32]
 2702 0176 BB6A     		ldr	r3, [r7, #40]
 2703 0178 9A42     		cmp	r2, r3
 2704 017a 08DD     		ble	.L120
 696:./BSP/ST/stm32_lcd.c ****     {
 697:./BSP/ST/stm32_lcd.c ****       err += ++y_pos*2+1;
 2705              		.loc 1 697 23
 2706 017c BB6A     		ldr	r3, [r7, #40]
 2707 017e 0133     		adds	r3, r3, #1
 2708 0180 BB62     		str	r3, [r7, #40]
 2709              		.loc 1 697 21
 2710 0182 BB6A     		ldr	r3, [r7, #40]
 2711 0184 5B00     		lsls	r3, r3, #1
 2712              		.loc 1 697 23
 2713 0186 0133     		adds	r3, r3, #1
 2714              		.loc 1 697 11
 2715 0188 7A6A     		ldr	r2, [r7, #36]
 2716 018a 1344     		add	r3, r3, r2
 2717 018c 7B62     		str	r3, [r7, #36]
 2718              	.L120:
 698:./BSP/ST/stm32_lcd.c ****     }
 699:./BSP/ST/stm32_lcd.c ****   }while (y_pos <= 0);
 2719              		.loc 1 699 3
 2720 018e BB6A     		ldr	r3, [r7, #40]
 2721 0190 002B     		cmp	r3, #0
 2722 0192 7FF765AF 		ble	.L121
 700:./BSP/ST/stm32_lcd.c **** }
 2723              		.loc 1 700 1
 2724 0196 00BF     		nop
 2725 0198 00BF     		nop
 2726 019a 3037     		adds	r7, r7, #48
 2727              	.LCFI118:
 2728              		.cfi_def_cfa_offset 8
 2729 019c BD46     		mov	sp, r7
 2730              	.LCFI119:
 2731              		.cfi_def_cfa_register 13
 2732              		@ sp needed
 2733 019e 80BD     		pop	{r7, pc}
 2734              		.cfi_endproc
 2735              	.LFE23:
 2737              		.section	.text.UTIL_LCD_DrawBitmap,"ax",%progbits
ARM GAS  /tmp/ccXj48YU.s 			page 61


 2738              		.align	1
 2739              		.global	UTIL_LCD_DrawBitmap
 2740              		.syntax unified
 2741              		.thumb
 2742              		.thumb_func
 2743              		.fpu fpv5-d16
 2745              	UTIL_LCD_DrawBitmap:
 2746              	.LFB24:
 701:./BSP/ST/stm32_lcd.c **** 
 702:./BSP/ST/stm32_lcd.c **** /**
 703:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a bitmap picture loaded in the internal Flash (32 bpp) in currently active layer.
 704:./BSP/ST/stm32_lcd.c ****   * @param  Xpos  Bmp X position in the LCD
 705:./BSP/ST/stm32_lcd.c ****   * @param  Ypos  Bmp Y position in the LCD
 706:./BSP/ST/stm32_lcd.c ****   * @param  pData Pointer to Bmp picture address in the internal Flash
 707:./BSP/ST/stm32_lcd.c ****   */
 708:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_DrawBitmap(uint32_t Xpos, uint32_t Ypos, uint8_t *pData)
 709:./BSP/ST/stm32_lcd.c **** {
 2747              		.loc 1 709 1
 2748              		.cfi_startproc
 2749              		@ args = 0, pretend = 0, frame = 16
 2750              		@ frame_needed = 1, uses_anonymous_args = 0
 2751 0000 90B5     		push	{r4, r7, lr}
 2752              	.LCFI120:
 2753              		.cfi_def_cfa_offset 12
 2754              		.cfi_offset 4, -12
 2755              		.cfi_offset 7, -8
 2756              		.cfi_offset 14, -4
 2757 0002 85B0     		sub	sp, sp, #20
 2758              	.LCFI121:
 2759              		.cfi_def_cfa_offset 32
 2760 0004 00AF     		add	r7, sp, #0
 2761              	.LCFI122:
 2762              		.cfi_def_cfa_register 7
 2763 0006 F860     		str	r0, [r7, #12]
 2764 0008 B960     		str	r1, [r7, #8]
 2765 000a 7A60     		str	r2, [r7, #4]
 710:./BSP/ST/stm32_lcd.c ****   FuncDriver.DrawBitmap(DrawProp->LcdDevice, Xpos, Ypos, pData);
 2766              		.loc 1 710 13
 2767 000c 054B     		ldr	r3, .L123
 2768 000e 1C68     		ldr	r4, [r3]
 2769              		.loc 1 710 3
 2770 0010 054B     		ldr	r3, .L123+4
 2771 0012 1869     		ldr	r0, [r3, #16]
 2772 0014 7B68     		ldr	r3, [r7, #4]
 2773 0016 BA68     		ldr	r2, [r7, #8]
 2774 0018 F968     		ldr	r1, [r7, #12]
 2775 001a A047     		blx	r4
 2776              	.LVL14:
 711:./BSP/ST/stm32_lcd.c **** }
 2777              		.loc 1 711 1
 2778 001c 00BF     		nop
 2779 001e 1437     		adds	r7, r7, #20
 2780              	.LCFI123:
 2781              		.cfi_def_cfa_offset 12
 2782 0020 BD46     		mov	sp, r7
 2783              	.LCFI124:
 2784              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXj48YU.s 			page 62


 2785              		@ sp needed
 2786 0022 90BD     		pop	{r4, r7, pc}
 2787              	.L124:
 2788              		.align	2
 2789              	.L123:
 2790 0024 00000000 		.word	FuncDriver
 2791 0028 00000000 		.word	DrawProp
 2792              		.cfi_endproc
 2793              	.LFE24:
 2795              		.section	.text.UTIL_LCD_FillRect,"ax",%progbits
 2796              		.align	1
 2797              		.global	UTIL_LCD_FillRect
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2801              		.fpu fpv5-d16
 2803              	UTIL_LCD_FillRect:
 2804              	.LFB25:
 712:./BSP/ST/stm32_lcd.c **** 
 713:./BSP/ST/stm32_lcd.c **** /**
 714:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a full rectangle in currently active layer.
 715:./BSP/ST/stm32_lcd.c ****   * @param  Xpos   X position
 716:./BSP/ST/stm32_lcd.c ****   * @param  Ypos   Y position
 717:./BSP/ST/stm32_lcd.c ****   * @param  Width  Rectangle width
 718:./BSP/ST/stm32_lcd.c ****   * @param  Height Rectangle height
 719:./BSP/ST/stm32_lcd.c ****   * @param  Color  Draw color
 720:./BSP/ST/stm32_lcd.c ****   */
 721:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_FillRect(uint32_t Xpos, uint32_t Ypos, uint32_t Width, uint32_t Height, uint32_t Colo
 722:./BSP/ST/stm32_lcd.c **** {
 2805              		.loc 1 722 1
 2806              		.cfi_startproc
 2807              		@ args = 4, pretend = 0, frame = 16
 2808              		@ frame_needed = 1, uses_anonymous_args = 0
 2809 0000 90B5     		push	{r4, r7, lr}
 2810              	.LCFI125:
 2811              		.cfi_def_cfa_offset 12
 2812              		.cfi_offset 4, -12
 2813              		.cfi_offset 7, -8
 2814              		.cfi_offset 14, -4
 2815 0002 87B0     		sub	sp, sp, #28
 2816              	.LCFI126:
 2817              		.cfi_def_cfa_offset 40
 2818 0004 02AF     		add	r7, sp, #8
 2819              	.LCFI127:
 2820              		.cfi_def_cfa 7, 32
 2821 0006 F860     		str	r0, [r7, #12]
 2822 0008 B960     		str	r1, [r7, #8]
 2823 000a 7A60     		str	r2, [r7, #4]
 2824 000c 3B60     		str	r3, [r7]
 723:./BSP/ST/stm32_lcd.c ****   /* Fill the rectangle */
 724:./BSP/ST/stm32_lcd.c ****   if(DrawProp->LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 2825              		.loc 1 724 14
 2826 000e 174B     		ldr	r3, .L129
 2827 0010 DB69     		ldr	r3, [r3, #28]
 2828              		.loc 1 724 5
 2829 0012 022B     		cmp	r3, #2
 2830 0014 1AD1     		bne	.L126
ARM GAS  /tmp/ccXj48YU.s 			page 63


 725:./BSP/ST/stm32_lcd.c ****   {
 726:./BSP/ST/stm32_lcd.c ****     FuncDriver.FillRect(DrawProp->LcdDevice, Xpos, Ypos, Width, Height, CONVERTARGB88882RGB565(Colo
 2831              		.loc 1 726 15
 2832 0016 164B     		ldr	r3, .L129+4
 2833 0018 1C69     		ldr	r4, [r3, #16]
 2834              		.loc 1 726 5
 2835 001a 144B     		ldr	r3, .L129
 2836 001c 1869     		ldr	r0, [r3, #16]
 2837              		.loc 1 726 73
 2838 001e 3B6A     		ldr	r3, [r7, #32]
 2839 0020 DB08     		lsrs	r3, r3, #3
 2840 0022 03F01F02 		and	r2, r3, #31
 2841 0026 3B6A     		ldr	r3, [r7, #32]
 2842 0028 9B0A     		lsrs	r3, r3, #10
 2843 002a 5B01     		lsls	r3, r3, #5
 2844 002c 03F4FC63 		and	r3, r3, #2016
 2845 0030 1A43     		orrs	r2, r2, r3
 2846 0032 3B6A     		ldr	r3, [r7, #32]
 2847 0034 DB0C     		lsrs	r3, r3, #19
 2848 0036 DB02     		lsls	r3, r3, #11
 2849 0038 9BB2     		uxth	r3, r3
 2850              		.loc 1 726 5
 2851 003a 1343     		orrs	r3, r3, r2
 2852 003c 0193     		str	r3, [sp, #4]
 2853 003e 3B68     		ldr	r3, [r7]
 2854 0040 0093     		str	r3, [sp]
 2855 0042 7B68     		ldr	r3, [r7, #4]
 2856 0044 BA68     		ldr	r2, [r7, #8]
 2857 0046 F968     		ldr	r1, [r7, #12]
 2858 0048 A047     		blx	r4
 2859              	.LVL15:
 727:./BSP/ST/stm32_lcd.c ****   }
 728:./BSP/ST/stm32_lcd.c ****   else
 729:./BSP/ST/stm32_lcd.c ****   {
 730:./BSP/ST/stm32_lcd.c ****     FuncDriver.FillRect(DrawProp->LcdDevice, Xpos, Ypos, Width, Height, Color);
 731:./BSP/ST/stm32_lcd.c ****   }
 732:./BSP/ST/stm32_lcd.c **** }
 2860              		.loc 1 732 1
 2861 004a 0BE0     		b	.L128
 2862              	.L126:
 730:./BSP/ST/stm32_lcd.c ****   }
 2863              		.loc 1 730 15
 2864 004c 084B     		ldr	r3, .L129+4
 2865 004e 1C69     		ldr	r4, [r3, #16]
 730:./BSP/ST/stm32_lcd.c ****   }
 2866              		.loc 1 730 5
 2867 0050 064B     		ldr	r3, .L129
 2868 0052 1869     		ldr	r0, [r3, #16]
 2869 0054 3B6A     		ldr	r3, [r7, #32]
 2870 0056 0193     		str	r3, [sp, #4]
 2871 0058 3B68     		ldr	r3, [r7]
 2872 005a 0093     		str	r3, [sp]
 2873 005c 7B68     		ldr	r3, [r7, #4]
 2874 005e BA68     		ldr	r2, [r7, #8]
 2875 0060 F968     		ldr	r1, [r7, #12]
 2876 0062 A047     		blx	r4
 2877              	.LVL16:
ARM GAS  /tmp/ccXj48YU.s 			page 64


 2878              	.L128:
 2879              		.loc 1 732 1
 2880 0064 00BF     		nop
 2881 0066 1437     		adds	r7, r7, #20
 2882              	.LCFI128:
 2883              		.cfi_def_cfa_offset 12
 2884 0068 BD46     		mov	sp, r7
 2885              	.LCFI129:
 2886              		.cfi_def_cfa_register 13
 2887              		@ sp needed
 2888 006a 90BD     		pop	{r4, r7, pc}
 2889              	.L130:
 2890              		.align	2
 2891              	.L129:
 2892 006c 00000000 		.word	DrawProp
 2893 0070 00000000 		.word	FuncDriver
 2894              		.cfi_endproc
 2895              	.LFE25:
 2897              		.section	.text.UTIL_LCD_FillCircle,"ax",%progbits
 2898              		.align	1
 2899              		.global	UTIL_LCD_FillCircle
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2903              		.fpu fpv5-d16
 2905              	UTIL_LCD_FillCircle:
 2906              	.LFB26:
 733:./BSP/ST/stm32_lcd.c **** 
 734:./BSP/ST/stm32_lcd.c **** /**
 735:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a full circle in currently active layer.
 736:./BSP/ST/stm32_lcd.c ****   * @param  Xpos   X position
 737:./BSP/ST/stm32_lcd.c ****   * @param  Ypos   Y position
 738:./BSP/ST/stm32_lcd.c ****   * @param  Radius Circle radius
 739:./BSP/ST/stm32_lcd.c ****   * @param  Color  Draw color
 740:./BSP/ST/stm32_lcd.c ****   */
 741:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_FillCircle(uint32_t Xpos, uint32_t Ypos, uint32_t Radius, uint32_t Color)
 742:./BSP/ST/stm32_lcd.c **** {
 2907              		.loc 1 742 1
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 32
 2910              		@ frame_needed = 1, uses_anonymous_args = 0
 2911 0000 80B5     		push	{r7, lr}
 2912              	.LCFI130:
 2913              		.cfi_def_cfa_offset 8
 2914              		.cfi_offset 7, -8
 2915              		.cfi_offset 14, -4
 2916 0002 88B0     		sub	sp, sp, #32
 2917              	.LCFI131:
 2918              		.cfi_def_cfa_offset 40
 2919 0004 00AF     		add	r7, sp, #0
 2920              	.LCFI132:
 2921              		.cfi_def_cfa_register 7
 2922 0006 F860     		str	r0, [r7, #12]
 2923 0008 B960     		str	r1, [r7, #8]
 2924 000a 7A60     		str	r2, [r7, #4]
 2925 000c 3B60     		str	r3, [r7]
 743:./BSP/ST/stm32_lcd.c ****   int32_t   decision;  /* Decision Variable */
ARM GAS  /tmp/ccXj48YU.s 			page 65


 744:./BSP/ST/stm32_lcd.c ****   uint32_t  current_x; /* Current X Value */
 745:./BSP/ST/stm32_lcd.c ****   uint32_t  current_y; /* Current Y Value */
 746:./BSP/ST/stm32_lcd.c **** 
 747:./BSP/ST/stm32_lcd.c ****   decision = 3 - (Radius << 1);
 2926              		.loc 1 747 26
 2927 000e 7B68     		ldr	r3, [r7, #4]
 2928 0010 5B00     		lsls	r3, r3, #1
 2929              		.loc 1 747 16
 2930 0012 C3F10303 		rsb	r3, r3, #3
 2931              		.loc 1 747 12
 2932 0016 FB61     		str	r3, [r7, #28]
 748:./BSP/ST/stm32_lcd.c **** 
 749:./BSP/ST/stm32_lcd.c ****   current_x = 0;
 2933              		.loc 1 749 13
 2934 0018 0023     		movs	r3, #0
 2935 001a BB61     		str	r3, [r7, #24]
 750:./BSP/ST/stm32_lcd.c ****   current_y = Radius;
 2936              		.loc 1 750 13
 2937 001c 7B68     		ldr	r3, [r7, #4]
 2938 001e 7B61     		str	r3, [r7, #20]
 751:./BSP/ST/stm32_lcd.c **** 
 752:./BSP/ST/stm32_lcd.c ****   while (current_x <= current_y)
 2939              		.loc 1 752 9
 2940 0020 8BE0     		b	.L132
 2941              	.L139:
 753:./BSP/ST/stm32_lcd.c ****   {
 754:./BSP/ST/stm32_lcd.c ****     if(current_y > 0)
 2942              		.loc 1 754 7
 2943 0022 7B69     		ldr	r3, [r7, #20]
 2944 0024 002B     		cmp	r3, #0
 2945 0026 36D0     		beq	.L133
 755:./BSP/ST/stm32_lcd.c ****     {
 756:./BSP/ST/stm32_lcd.c ****       if(current_y >= Xpos)
 2946              		.loc 1 756 9
 2947 0028 7A69     		ldr	r2, [r7, #20]
 2948 002a FB68     		ldr	r3, [r7, #12]
 2949 002c 9A42     		cmp	r2, r3
 2950 002e 1CD3     		bcc	.L134
 757:./BSP/ST/stm32_lcd.c ****       {
 758:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(0, Ypos + current_x, 2*current_y - (current_y - Xpos), Color);
 2951              		.loc 1 758 9
 2952 0030 BA68     		ldr	r2, [r7, #8]
 2953 0032 BB69     		ldr	r3, [r7, #24]
 2954 0034 D018     		adds	r0, r2, r3
 2955              		.loc 1 758 50
 2956 0036 7B69     		ldr	r3, [r7, #20]
 2957 0038 5A00     		lsls	r2, r3, #1
 2958              		.loc 1 758 74
 2959 003a F968     		ldr	r1, [r7, #12]
 2960 003c 7B69     		ldr	r3, [r7, #20]
 2961 003e CB1A     		subs	r3, r1, r3
 2962              		.loc 1 758 9
 2963 0040 1A44     		add	r2, r2, r3
 2964 0042 3B68     		ldr	r3, [r7]
 2965 0044 0146     		mov	r1, r0
 2966 0046 0020     		movs	r0, #0
 2967 0048 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
ARM GAS  /tmp/ccXj48YU.s 			page 66


 759:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(0, Ypos - current_x, 2*current_y - (current_y - Xpos), Color);
 2968              		.loc 1 759 9
 2969 004c BA68     		ldr	r2, [r7, #8]
 2970 004e BB69     		ldr	r3, [r7, #24]
 2971 0050 D01A     		subs	r0, r2, r3
 2972              		.loc 1 759 50
 2973 0052 7B69     		ldr	r3, [r7, #20]
 2974 0054 5A00     		lsls	r2, r3, #1
 2975              		.loc 1 759 74
 2976 0056 F968     		ldr	r1, [r7, #12]
 2977 0058 7B69     		ldr	r3, [r7, #20]
 2978 005a CB1A     		subs	r3, r1, r3
 2979              		.loc 1 759 9
 2980 005c 1A44     		add	r2, r2, r3
 2981 005e 3B68     		ldr	r3, [r7]
 2982 0060 0146     		mov	r1, r0
 2983 0062 0020     		movs	r0, #0
 2984 0064 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 2985 0068 15E0     		b	.L133
 2986              	.L134:
 760:./BSP/ST/stm32_lcd.c ****       }
 761:./BSP/ST/stm32_lcd.c ****       else
 762:./BSP/ST/stm32_lcd.c ****       {
 763:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(Xpos - current_y, Ypos + current_x, 2*current_y, Color);
 2987              		.loc 1 763 9
 2988 006a FA68     		ldr	r2, [r7, #12]
 2989 006c 7B69     		ldr	r3, [r7, #20]
 2990 006e D01A     		subs	r0, r2, r3
 2991 0070 BA68     		ldr	r2, [r7, #8]
 2992 0072 BB69     		ldr	r3, [r7, #24]
 2993 0074 D118     		adds	r1, r2, r3
 2994 0076 7B69     		ldr	r3, [r7, #20]
 2995 0078 5A00     		lsls	r2, r3, #1
 2996 007a 3B68     		ldr	r3, [r7]
 2997 007c FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 764:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(Xpos - current_y, Ypos - current_x, 2*current_y, Color);
 2998              		.loc 1 764 9
 2999 0080 FA68     		ldr	r2, [r7, #12]
 3000 0082 7B69     		ldr	r3, [r7, #20]
 3001 0084 D01A     		subs	r0, r2, r3
 3002 0086 BA68     		ldr	r2, [r7, #8]
 3003 0088 BB69     		ldr	r3, [r7, #24]
 3004 008a D11A     		subs	r1, r2, r3
 3005 008c 7B69     		ldr	r3, [r7, #20]
 3006 008e 5A00     		lsls	r2, r3, #1
 3007 0090 3B68     		ldr	r3, [r7]
 3008 0092 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 3009              	.L133:
 765:./BSP/ST/stm32_lcd.c ****       }
 766:./BSP/ST/stm32_lcd.c ****     }
 767:./BSP/ST/stm32_lcd.c **** 
 768:./BSP/ST/stm32_lcd.c ****     if(current_x > 0)
 3010              		.loc 1 768 7
 3011 0096 BB69     		ldr	r3, [r7, #24]
 3012 0098 002B     		cmp	r3, #0
 3013 009a 36D0     		beq	.L135
 769:./BSP/ST/stm32_lcd.c ****     {
ARM GAS  /tmp/ccXj48YU.s 			page 67


 770:./BSP/ST/stm32_lcd.c ****       if(current_x >= Xpos)
 3014              		.loc 1 770 9
 3015 009c BA69     		ldr	r2, [r7, #24]
 3016 009e FB68     		ldr	r3, [r7, #12]
 3017 00a0 9A42     		cmp	r2, r3
 3018 00a2 1CD3     		bcc	.L136
 771:./BSP/ST/stm32_lcd.c ****       {
 772:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(0, Ypos - current_y, 2*current_x - (current_x - Xpos), Color);
 3019              		.loc 1 772 9
 3020 00a4 BA68     		ldr	r2, [r7, #8]
 3021 00a6 7B69     		ldr	r3, [r7, #20]
 3022 00a8 D01A     		subs	r0, r2, r3
 3023              		.loc 1 772 50
 3024 00aa BB69     		ldr	r3, [r7, #24]
 3025 00ac 5A00     		lsls	r2, r3, #1
 3026              		.loc 1 772 74
 3027 00ae F968     		ldr	r1, [r7, #12]
 3028 00b0 BB69     		ldr	r3, [r7, #24]
 3029 00b2 CB1A     		subs	r3, r1, r3
 3030              		.loc 1 772 9
 3031 00b4 1A44     		add	r2, r2, r3
 3032 00b6 3B68     		ldr	r3, [r7]
 3033 00b8 0146     		mov	r1, r0
 3034 00ba 0020     		movs	r0, #0
 3035 00bc FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 773:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(0, Ypos + current_y, 2*current_x - (current_x - Xpos), Color);
 3036              		.loc 1 773 9
 3037 00c0 BA68     		ldr	r2, [r7, #8]
 3038 00c2 7B69     		ldr	r3, [r7, #20]
 3039 00c4 D018     		adds	r0, r2, r3
 3040              		.loc 1 773 50
 3041 00c6 BB69     		ldr	r3, [r7, #24]
 3042 00c8 5A00     		lsls	r2, r3, #1
 3043              		.loc 1 773 74
 3044 00ca F968     		ldr	r1, [r7, #12]
 3045 00cc BB69     		ldr	r3, [r7, #24]
 3046 00ce CB1A     		subs	r3, r1, r3
 3047              		.loc 1 773 9
 3048 00d0 1A44     		add	r2, r2, r3
 3049 00d2 3B68     		ldr	r3, [r7]
 3050 00d4 0146     		mov	r1, r0
 3051 00d6 0020     		movs	r0, #0
 3052 00d8 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 3053 00dc 15E0     		b	.L135
 3054              	.L136:
 774:./BSP/ST/stm32_lcd.c ****       }
 775:./BSP/ST/stm32_lcd.c ****       else
 776:./BSP/ST/stm32_lcd.c ****       {
 777:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(Xpos - current_x, Ypos - current_y, 2*current_x, Color);
 3055              		.loc 1 777 9
 3056 00de FA68     		ldr	r2, [r7, #12]
 3057 00e0 BB69     		ldr	r3, [r7, #24]
 3058 00e2 D01A     		subs	r0, r2, r3
 3059 00e4 BA68     		ldr	r2, [r7, #8]
 3060 00e6 7B69     		ldr	r3, [r7, #20]
 3061 00e8 D11A     		subs	r1, r2, r3
 3062 00ea BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccXj48YU.s 			page 68


 3063 00ec 5A00     		lsls	r2, r3, #1
 3064 00ee 3B68     		ldr	r3, [r7]
 3065 00f0 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 778:./BSP/ST/stm32_lcd.c ****         UTIL_LCD_DrawHLine(Xpos - current_x, Ypos + current_y, 2*current_x, Color);
 3066              		.loc 1 778 9
 3067 00f4 FA68     		ldr	r2, [r7, #12]
 3068 00f6 BB69     		ldr	r3, [r7, #24]
 3069 00f8 D01A     		subs	r0, r2, r3
 3070 00fa BA68     		ldr	r2, [r7, #8]
 3071 00fc 7B69     		ldr	r3, [r7, #20]
 3072 00fe D118     		adds	r1, r2, r3
 3073 0100 BB69     		ldr	r3, [r7, #24]
 3074 0102 5A00     		lsls	r2, r3, #1
 3075 0104 3B68     		ldr	r3, [r7]
 3076 0106 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 3077              	.L135:
 779:./BSP/ST/stm32_lcd.c ****       }
 780:./BSP/ST/stm32_lcd.c ****     }
 781:./BSP/ST/stm32_lcd.c ****     if (decision < 0)
 3078              		.loc 1 781 8
 3079 010a FB69     		ldr	r3, [r7, #28]
 3080 010c 002B     		cmp	r3, #0
 3081 010e 06DA     		bge	.L137
 782:./BSP/ST/stm32_lcd.c ****     {
 783:./BSP/ST/stm32_lcd.c ****       decision += (current_x << 2) + 6;
 3082              		.loc 1 783 30
 3083 0110 BB69     		ldr	r3, [r7, #24]
 3084 0112 9A00     		lsls	r2, r3, #2
 3085              		.loc 1 783 16
 3086 0114 FB69     		ldr	r3, [r7, #28]
 3087 0116 1344     		add	r3, r3, r2
 3088 0118 0633     		adds	r3, r3, #6
 3089 011a FB61     		str	r3, [r7, #28]
 3090 011c 0AE0     		b	.L138
 3091              	.L137:
 784:./BSP/ST/stm32_lcd.c ****     }
 785:./BSP/ST/stm32_lcd.c ****     else
 786:./BSP/ST/stm32_lcd.c ****     {
 787:./BSP/ST/stm32_lcd.c ****       decision += ((current_x - current_y) << 2) + 10;
 3092              		.loc 1 787 31
 3093 011e BA69     		ldr	r2, [r7, #24]
 3094 0120 7B69     		ldr	r3, [r7, #20]
 3095 0122 D31A     		subs	r3, r2, r3
 3096              		.loc 1 787 44
 3097 0124 9A00     		lsls	r2, r3, #2
 3098              		.loc 1 787 16
 3099 0126 FB69     		ldr	r3, [r7, #28]
 3100 0128 1344     		add	r3, r3, r2
 3101 012a 0A33     		adds	r3, r3, #10
 3102 012c FB61     		str	r3, [r7, #28]
 788:./BSP/ST/stm32_lcd.c ****       current_y--;
 3103              		.loc 1 788 16
 3104 012e 7B69     		ldr	r3, [r7, #20]
 3105 0130 013B     		subs	r3, r3, #1
 3106 0132 7B61     		str	r3, [r7, #20]
 3107              	.L138:
 789:./BSP/ST/stm32_lcd.c ****     }
ARM GAS  /tmp/ccXj48YU.s 			page 69


 790:./BSP/ST/stm32_lcd.c ****     current_x++;
 3108              		.loc 1 790 14
 3109 0134 BB69     		ldr	r3, [r7, #24]
 3110 0136 0133     		adds	r3, r3, #1
 3111 0138 BB61     		str	r3, [r7, #24]
 3112              	.L132:
 752:./BSP/ST/stm32_lcd.c ****   {
 3113              		.loc 1 752 9
 3114 013a BA69     		ldr	r2, [r7, #24]
 3115 013c 7B69     		ldr	r3, [r7, #20]
 3116 013e 9A42     		cmp	r2, r3
 3117 0140 7FF66FAF 		bls	.L139
 791:./BSP/ST/stm32_lcd.c ****   }
 792:./BSP/ST/stm32_lcd.c **** 
 793:./BSP/ST/stm32_lcd.c ****   UTIL_LCD_DrawCircle(Xpos, Ypos, Radius, Color);
 3118              		.loc 1 793 3
 3119 0144 3B68     		ldr	r3, [r7]
 3120 0146 7A68     		ldr	r2, [r7, #4]
 3121 0148 B968     		ldr	r1, [r7, #8]
 3122 014a F868     		ldr	r0, [r7, #12]
 3123 014c FFF7FEFF 		bl	UTIL_LCD_DrawCircle
 794:./BSP/ST/stm32_lcd.c **** }
 3124              		.loc 1 794 1
 3125 0150 00BF     		nop
 3126 0152 2037     		adds	r7, r7, #32
 3127              	.LCFI133:
 3128              		.cfi_def_cfa_offset 8
 3129 0154 BD46     		mov	sp, r7
 3130              	.LCFI134:
 3131              		.cfi_def_cfa_register 13
 3132              		@ sp needed
 3133 0156 80BD     		pop	{r7, pc}
 3134              		.cfi_endproc
 3135              	.LFE26:
 3137              		.section	.text.UTIL_LCD_FillPolygon,"ax",%progbits
 3138              		.align	1
 3139              		.global	UTIL_LCD_FillPolygon
 3140              		.syntax unified
 3141              		.thumb
 3142              		.thumb_func
 3143              		.fpu fpv5-d16
 3145              	UTIL_LCD_FillPolygon:
 3146              	.LFB27:
 795:./BSP/ST/stm32_lcd.c **** 
 796:./BSP/ST/stm32_lcd.c **** /**
 797:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a full poly-line (between many points) in currently active layer.
 798:./BSP/ST/stm32_lcd.c ****   * @param  Points     Pointer to the points array
 799:./BSP/ST/stm32_lcd.c ****   * @param  PointCount Number of points
 800:./BSP/ST/stm32_lcd.c ****   * @param  Color      Draw color
 801:./BSP/ST/stm32_lcd.c ****   */
 802:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_FillPolygon(pPoint Points, uint32_t PointCount, uint32_t Color)
 803:./BSP/ST/stm32_lcd.c **** {
 3147              		.loc 1 803 1
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 80
 3150              		@ frame_needed = 1, uses_anonymous_args = 0
 3151 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccXj48YU.s 			page 70


 3152              	.LCFI135:
 3153              		.cfi_def_cfa_offset 8
 3154              		.cfi_offset 7, -8
 3155              		.cfi_offset 14, -4
 3156 0002 94B0     		sub	sp, sp, #80
 3157              	.LCFI136:
 3158              		.cfi_def_cfa_offset 88
 3159 0004 00AF     		add	r7, sp, #0
 3160              	.LCFI137:
 3161              		.cfi_def_cfa_register 7
 3162 0006 F860     		str	r0, [r7, #12]
 3163 0008 B960     		str	r1, [r7, #8]
 3164 000a 7A60     		str	r2, [r7, #4]
 804:./BSP/ST/stm32_lcd.c ****   int16_t X = 0, Y = 0, X2 = 0, Y2 = 0, x_center = 0, y_center = 0, x_first = 0, y_first = 0, pixel
 3165              		.loc 1 804 11
 3166 000c 0023     		movs	r3, #0
 3167 000e FB86     		strh	r3, [r7, #54]	@ movhi
 3168              		.loc 1 804 18
 3169 0010 0023     		movs	r3, #0
 3170 0012 BB86     		strh	r3, [r7, #52]	@ movhi
 3171              		.loc 1 804 25
 3172 0014 0023     		movs	r3, #0
 3173 0016 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 3174              		.loc 1 804 33
 3175 001a 0023     		movs	r3, #0
 3176 001c A7F84C30 		strh	r3, [r7, #76]	@ movhi
 3177              		.loc 1 804 41
 3178 0020 0023     		movs	r3, #0
 3179 0022 7B86     		strh	r3, [r7, #50]	@ movhi
 3180              		.loc 1 804 55
 3181 0024 0023     		movs	r3, #0
 3182 0026 3B86     		strh	r3, [r7, #48]	@ movhi
 3183              		.loc 1 804 69
 3184 0028 0023     		movs	r3, #0
 3185 002a FB85     		strh	r3, [r7, #46]	@ movhi
 3186              		.loc 1 804 82
 3187 002c 0023     		movs	r3, #0
 3188 002e BB85     		strh	r3, [r7, #44]	@ movhi
 3189              		.loc 1 804 95
 3190 0030 0023     		movs	r3, #0
 3191 0032 7B85     		strh	r3, [r7, #42]	@ movhi
 3192              		.loc 1 804 108
 3193 0034 0023     		movs	r3, #0
 3194 0036 3B85     		strh	r3, [r7, #40]	@ movhi
 3195              		.loc 1 804 121
 3196 0038 0023     		movs	r3, #0
 3197 003a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 805:./BSP/ST/stm32_lcd.c ****   uint32_t  image_left = 0, image_right = 0, image_top = 0, image_bottom = 0;
 3198              		.loc 1 805 13
 3199 003e 0023     		movs	r3, #0
 3200 0040 7B64     		str	r3, [r7, #68]
 3201              		.loc 1 805 29
 3202 0042 0023     		movs	r3, #0
 3203 0044 3B64     		str	r3, [r7, #64]
 3204              		.loc 1 805 46
 3205 0046 0023     		movs	r3, #0
 3206 0048 FB63     		str	r3, [r7, #60]
ARM GAS  /tmp/ccXj48YU.s 			page 71


 3207              		.loc 1 805 61
 3208 004a 0023     		movs	r3, #0
 3209 004c BB63     		str	r3, [r7, #56]
 806:./BSP/ST/stm32_lcd.c ****   Triangle_Positions_t positions;
 807:./BSP/ST/stm32_lcd.c **** 
 808:./BSP/ST/stm32_lcd.c ****   image_left = image_right = Points->X;
 3210              		.loc 1 808 36
 3211 004e FB68     		ldr	r3, [r7, #12]
 3212 0050 B3F90030 		ldrsh	r3, [r3]
 3213              		.loc 1 808 28
 3214 0054 3B64     		str	r3, [r7, #64]
 3215              		.loc 1 808 14
 3216 0056 3B6C     		ldr	r3, [r7, #64]
 3217 0058 7B64     		str	r3, [r7, #68]
 809:./BSP/ST/stm32_lcd.c ****   image_top= image_bottom = Points->Y;
 3218              		.loc 1 809 35
 3219 005a FB68     		ldr	r3, [r7, #12]
 3220 005c B3F90230 		ldrsh	r3, [r3, #2]
 3221              		.loc 1 809 27
 3222 0060 BB63     		str	r3, [r7, #56]
 3223              		.loc 1 809 12
 3224 0062 BB6B     		ldr	r3, [r7, #56]
 3225 0064 FB63     		str	r3, [r7, #60]
 810:./BSP/ST/stm32_lcd.c **** 
 811:./BSP/ST/stm32_lcd.c ****   for(counter = 1; counter < PointCount; counter++)
 3226              		.loc 1 811 15
 3227 0066 0123     		movs	r3, #1
 3228 0068 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 3229              		.loc 1 811 3
 3230 006c 34E0     		b	.L141
 3231              	.L146:
 812:./BSP/ST/stm32_lcd.c ****   {
 813:./BSP/ST/stm32_lcd.c ****     pixel_x = POLY_X(counter);
 3232              		.loc 1 813 15
 3233 006e B7F94A30 		ldrsh	r3, [r7, #74]
 3234 0072 9B00     		lsls	r3, r3, #2
 3235 0074 FA68     		ldr	r2, [r7, #12]
 3236 0076 1344     		add	r3, r3, r2
 3237              		.loc 1 813 13
 3238 0078 1B88     		ldrh	r3, [r3]	@ movhi
 3239 007a 7B85     		strh	r3, [r7, #42]	@ movhi
 814:./BSP/ST/stm32_lcd.c ****     if(pixel_x < image_left)
 3240              		.loc 1 814 16
 3241 007c B7F92A30 		ldrsh	r3, [r7, #42]
 3242              		.loc 1 814 7
 3243 0080 7A6C     		ldr	r2, [r7, #68]
 3244 0082 9A42     		cmp	r2, r3
 3245 0084 02D9     		bls	.L142
 815:./BSP/ST/stm32_lcd.c ****     {
 816:./BSP/ST/stm32_lcd.c ****       image_left = pixel_x;
 3246              		.loc 1 816 18
 3247 0086 B7F92A30 		ldrsh	r3, [r7, #42]
 3248 008a 7B64     		str	r3, [r7, #68]
 3249              	.L142:
 817:./BSP/ST/stm32_lcd.c ****     }
 818:./BSP/ST/stm32_lcd.c ****     if(pixel_x > image_right)
 3250              		.loc 1 818 16
ARM GAS  /tmp/ccXj48YU.s 			page 72


 3251 008c B7F92A30 		ldrsh	r3, [r7, #42]
 3252              		.loc 1 818 7
 3253 0090 3A6C     		ldr	r2, [r7, #64]
 3254 0092 9A42     		cmp	r2, r3
 3255 0094 02D2     		bcs	.L143
 819:./BSP/ST/stm32_lcd.c ****     {
 820:./BSP/ST/stm32_lcd.c ****       image_right = pixel_x;
 3256              		.loc 1 820 19
 3257 0096 B7F92A30 		ldrsh	r3, [r7, #42]
 3258 009a 3B64     		str	r3, [r7, #64]
 3259              	.L143:
 821:./BSP/ST/stm32_lcd.c ****     }
 822:./BSP/ST/stm32_lcd.c **** 
 823:./BSP/ST/stm32_lcd.c ****     pixel_y = POLY_Y(counter);
 3260              		.loc 1 823 15
 3261 009c B7F94A30 		ldrsh	r3, [r7, #74]
 3262 00a0 9B00     		lsls	r3, r3, #2
 3263 00a2 FA68     		ldr	r2, [r7, #12]
 3264 00a4 1344     		add	r3, r3, r2
 3265              		.loc 1 823 13
 3266 00a6 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3267 00a8 3B85     		strh	r3, [r7, #40]	@ movhi
 824:./BSP/ST/stm32_lcd.c ****     if(pixel_y < image_top)
 3268              		.loc 1 824 16
 3269 00aa B7F92830 		ldrsh	r3, [r7, #40]
 3270              		.loc 1 824 7
 3271 00ae FA6B     		ldr	r2, [r7, #60]
 3272 00b0 9A42     		cmp	r2, r3
 3273 00b2 02D9     		bls	.L144
 825:./BSP/ST/stm32_lcd.c ****     {
 826:./BSP/ST/stm32_lcd.c ****       image_top = pixel_y;
 3274              		.loc 1 826 17
 3275 00b4 B7F92830 		ldrsh	r3, [r7, #40]
 3276 00b8 FB63     		str	r3, [r7, #60]
 3277              	.L144:
 827:./BSP/ST/stm32_lcd.c ****     }
 828:./BSP/ST/stm32_lcd.c ****     if(pixel_y > image_bottom)
 3278              		.loc 1 828 16
 3279 00ba B7F92830 		ldrsh	r3, [r7, #40]
 3280              		.loc 1 828 7
 3281 00be BA6B     		ldr	r2, [r7, #56]
 3282 00c0 9A42     		cmp	r2, r3
 3283 00c2 02D2     		bcs	.L145
 829:./BSP/ST/stm32_lcd.c ****     {
 830:./BSP/ST/stm32_lcd.c ****       image_bottom = pixel_y;
 3284              		.loc 1 830 20
 3285 00c4 B7F92830 		ldrsh	r3, [r7, #40]
 3286 00c8 BB63     		str	r3, [r7, #56]
 3287              	.L145:
 811:./BSP/ST/stm32_lcd.c ****   {
 3288              		.loc 1 811 49 discriminator 2
 3289 00ca B7F94A30 		ldrsh	r3, [r7, #74]
 3290 00ce 9BB2     		uxth	r3, r3
 3291 00d0 0133     		adds	r3, r3, #1
 3292 00d2 9BB2     		uxth	r3, r3
 3293 00d4 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 3294              	.L141:
ARM GAS  /tmp/ccXj48YU.s 			page 73


 811:./BSP/ST/stm32_lcd.c ****   {
 3295              		.loc 1 811 28 discriminator 1
 3296 00d8 B7F94A30 		ldrsh	r3, [r7, #74]
 811:./BSP/ST/stm32_lcd.c ****   {
 3297              		.loc 1 811 3 discriminator 1
 3298 00dc BA68     		ldr	r2, [r7, #8]
 3299 00de 9A42     		cmp	r2, r3
 3300 00e0 C5D8     		bhi	.L146
 831:./BSP/ST/stm32_lcd.c ****     }
 832:./BSP/ST/stm32_lcd.c ****   }
 833:./BSP/ST/stm32_lcd.c **** 
 834:./BSP/ST/stm32_lcd.c ****   if(PointCount < 2)
 3301              		.loc 1 834 5
 3302 00e2 BB68     		ldr	r3, [r7, #8]
 3303 00e4 012B     		cmp	r3, #1
 3304 00e6 40F2AD80 		bls	.L151
 835:./BSP/ST/stm32_lcd.c ****   {
 836:./BSP/ST/stm32_lcd.c ****     return;
 837:./BSP/ST/stm32_lcd.c ****   }
 838:./BSP/ST/stm32_lcd.c **** 
 839:./BSP/ST/stm32_lcd.c ****   x_center = (image_left + image_right)/2;
 3305              		.loc 1 839 26
 3306 00ea 7A6C     		ldr	r2, [r7, #68]
 3307 00ec 3B6C     		ldr	r3, [r7, #64]
 3308 00ee 1344     		add	r3, r3, r2
 3309              		.loc 1 839 40
 3310 00f0 5B08     		lsrs	r3, r3, #1
 3311              		.loc 1 839 12
 3312 00f2 7B86     		strh	r3, [r7, #50]	@ movhi
 840:./BSP/ST/stm32_lcd.c ****   y_center = (image_bottom + image_top)/2;
 3313              		.loc 1 840 28
 3314 00f4 BA6B     		ldr	r2, [r7, #56]
 3315 00f6 FB6B     		ldr	r3, [r7, #60]
 3316 00f8 1344     		add	r3, r3, r2
 3317              		.loc 1 840 40
 3318 00fa 5B08     		lsrs	r3, r3, #1
 3319              		.loc 1 840 12
 3320 00fc 3B86     		strh	r3, [r7, #48]	@ movhi
 841:./BSP/ST/stm32_lcd.c **** 
 842:./BSP/ST/stm32_lcd.c ****   x_first = Points->X;
 3321              		.loc 1 842 11
 3322 00fe FB68     		ldr	r3, [r7, #12]
 3323 0100 1B88     		ldrh	r3, [r3]	@ movhi
 3324 0102 FB85     		strh	r3, [r7, #46]	@ movhi
 843:./BSP/ST/stm32_lcd.c ****   y_first = Points->Y;
 3325              		.loc 1 843 11
 3326 0104 FB68     		ldr	r3, [r7, #12]
 3327 0106 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3328 0108 BB85     		strh	r3, [r7, #44]	@ movhi
 844:./BSP/ST/stm32_lcd.c **** 
 845:./BSP/ST/stm32_lcd.c ****   while(--PointCount)
 3329              		.loc 1 845 8
 3330 010a 52E0     		b	.L149
 3331              	.L150:
 846:./BSP/ST/stm32_lcd.c ****   {
 847:./BSP/ST/stm32_lcd.c ****     X = Points->X;
 3332              		.loc 1 847 7
ARM GAS  /tmp/ccXj48YU.s 			page 74


 3333 010c FB68     		ldr	r3, [r7, #12]
 3334 010e 1B88     		ldrh	r3, [r3]	@ movhi
 3335 0110 FB86     		strh	r3, [r7, #54]	@ movhi
 848:./BSP/ST/stm32_lcd.c ****     Y = Points->Y;
 3336              		.loc 1 848 7
 3337 0112 FB68     		ldr	r3, [r7, #12]
 3338 0114 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3339 0116 BB86     		strh	r3, [r7, #52]	@ movhi
 849:./BSP/ST/stm32_lcd.c ****     Points++;
 3340              		.loc 1 849 11
 3341 0118 FB68     		ldr	r3, [r7, #12]
 3342 011a 0433     		adds	r3, r3, #4
 3343 011c FB60     		str	r3, [r7, #12]
 850:./BSP/ST/stm32_lcd.c ****     X2 = Points->X;
 3344              		.loc 1 850 8
 3345 011e FB68     		ldr	r3, [r7, #12]
 3346 0120 1B88     		ldrh	r3, [r3]	@ movhi
 3347 0122 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 851:./BSP/ST/stm32_lcd.c ****     Y2 = Points->Y;
 3348              		.loc 1 851 8
 3349 0126 FB68     		ldr	r3, [r7, #12]
 3350 0128 5B88     		ldrh	r3, [r3, #2]	@ movhi
 3351 012a A7F84C30 		strh	r3, [r7, #76]	@ movhi
 852:./BSP/ST/stm32_lcd.c ****     positions.x1 = X;
 3352              		.loc 1 852 18
 3353 012e B7F93630 		ldrsh	r3, [r7, #54]
 3354 0132 3B61     		str	r3, [r7, #16]
 853:./BSP/ST/stm32_lcd.c ****     positions.y1 = Y;
 3355              		.loc 1 853 18
 3356 0134 B7F93430 		ldrsh	r3, [r7, #52]
 3357 0138 7B61     		str	r3, [r7, #20]
 854:./BSP/ST/stm32_lcd.c ****     positions.x2 = X2;
 3358              		.loc 1 854 18
 3359 013a B7F94E30 		ldrsh	r3, [r7, #78]
 3360 013e BB61     		str	r3, [r7, #24]
 855:./BSP/ST/stm32_lcd.c ****     positions.y2 = Y2;
 3361              		.loc 1 855 18
 3362 0140 B7F94C30 		ldrsh	r3, [r7, #76]
 3363 0144 FB61     		str	r3, [r7, #28]
 856:./BSP/ST/stm32_lcd.c ****     positions.x3 = x_center;
 3364              		.loc 1 856 18
 3365 0146 B7F93230 		ldrsh	r3, [r7, #50]
 3366 014a 3B62     		str	r3, [r7, #32]
 857:./BSP/ST/stm32_lcd.c ****     positions.y3 = y_center;
 3367              		.loc 1 857 18
 3368 014c B7F93030 		ldrsh	r3, [r7, #48]
 3369 0150 7B62     		str	r3, [r7, #36]
 858:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3370              		.loc 1 858 5
 3371 0152 07F11003 		add	r3, r7, #16
 3372 0156 7968     		ldr	r1, [r7, #4]
 3373 0158 1846     		mov	r0, r3
 3374 015a FFF7FEFF 		bl	FillTriangle
 859:./BSP/ST/stm32_lcd.c **** 
 860:./BSP/ST/stm32_lcd.c ****     positions.x2 = x_center;
 3375              		.loc 1 860 18
 3376 015e B7F93230 		ldrsh	r3, [r7, #50]
ARM GAS  /tmp/ccXj48YU.s 			page 75


 3377 0162 BB61     		str	r3, [r7, #24]
 861:./BSP/ST/stm32_lcd.c ****     positions.y2 = y_center;
 3378              		.loc 1 861 18
 3379 0164 B7F93030 		ldrsh	r3, [r7, #48]
 3380 0168 FB61     		str	r3, [r7, #28]
 862:./BSP/ST/stm32_lcd.c ****     positions.x3 = X2;
 3381              		.loc 1 862 18
 3382 016a B7F94E30 		ldrsh	r3, [r7, #78]
 3383 016e 3B62     		str	r3, [r7, #32]
 863:./BSP/ST/stm32_lcd.c ****     positions.y3 = Y2;
 3384              		.loc 1 863 18
 3385 0170 B7F94C30 		ldrsh	r3, [r7, #76]
 3386 0174 7B62     		str	r3, [r7, #36]
 864:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3387              		.loc 1 864 5
 3388 0176 07F11003 		add	r3, r7, #16
 3389 017a 7968     		ldr	r1, [r7, #4]
 3390 017c 1846     		mov	r0, r3
 3391 017e FFF7FEFF 		bl	FillTriangle
 865:./BSP/ST/stm32_lcd.c **** 
 866:./BSP/ST/stm32_lcd.c ****     positions.x1 = x_center;
 3392              		.loc 1 866 18
 3393 0182 B7F93230 		ldrsh	r3, [r7, #50]
 3394 0186 3B61     		str	r3, [r7, #16]
 867:./BSP/ST/stm32_lcd.c ****     positions.y1 = y_center;
 3395              		.loc 1 867 18
 3396 0188 B7F93030 		ldrsh	r3, [r7, #48]
 3397 018c 7B61     		str	r3, [r7, #20]
 868:./BSP/ST/stm32_lcd.c ****     positions.x2 = X2;
 3398              		.loc 1 868 18
 3399 018e B7F94E30 		ldrsh	r3, [r7, #78]
 3400 0192 BB61     		str	r3, [r7, #24]
 869:./BSP/ST/stm32_lcd.c ****     positions.y2 = Y2;
 3401              		.loc 1 869 18
 3402 0194 B7F94C30 		ldrsh	r3, [r7, #76]
 3403 0198 FB61     		str	r3, [r7, #28]
 870:./BSP/ST/stm32_lcd.c ****     positions.x3 = X;
 3404              		.loc 1 870 18
 3405 019a B7F93630 		ldrsh	r3, [r7, #54]
 3406 019e 3B62     		str	r3, [r7, #32]
 871:./BSP/ST/stm32_lcd.c ****     positions.y3 = Y;
 3407              		.loc 1 871 18
 3408 01a0 B7F93430 		ldrsh	r3, [r7, #52]
 3409 01a4 7B62     		str	r3, [r7, #36]
 872:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3410              		.loc 1 872 5
 3411 01a6 07F11003 		add	r3, r7, #16
 3412 01aa 7968     		ldr	r1, [r7, #4]
 3413 01ac 1846     		mov	r0, r3
 3414 01ae FFF7FEFF 		bl	FillTriangle
 3415              	.L149:
 845:./BSP/ST/stm32_lcd.c ****   {
 3416              		.loc 1 845 8
 3417 01b2 BB68     		ldr	r3, [r7, #8]
 3418 01b4 013B     		subs	r3, r3, #1
 3419 01b6 BB60     		str	r3, [r7, #8]
 3420 01b8 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXj48YU.s 			page 76


 3421 01ba 002B     		cmp	r3, #0
 3422 01bc A6D1     		bne	.L150
 873:./BSP/ST/stm32_lcd.c ****   }
 874:./BSP/ST/stm32_lcd.c **** 
 875:./BSP/ST/stm32_lcd.c ****     positions.x1 = x_first;
 3423              		.loc 1 875 18
 3424 01be B7F92E30 		ldrsh	r3, [r7, #46]
 3425 01c2 3B61     		str	r3, [r7, #16]
 876:./BSP/ST/stm32_lcd.c ****     positions.y1 = y_first;
 3426              		.loc 1 876 18
 3427 01c4 B7F92C30 		ldrsh	r3, [r7, #44]
 3428 01c8 7B61     		str	r3, [r7, #20]
 877:./BSP/ST/stm32_lcd.c ****     positions.x2 = X2;
 3429              		.loc 1 877 18
 3430 01ca B7F94E30 		ldrsh	r3, [r7, #78]
 3431 01ce BB61     		str	r3, [r7, #24]
 878:./BSP/ST/stm32_lcd.c ****     positions.y2 = Y2;
 3432              		.loc 1 878 18
 3433 01d0 B7F94C30 		ldrsh	r3, [r7, #76]
 3434 01d4 FB61     		str	r3, [r7, #28]
 879:./BSP/ST/stm32_lcd.c ****     positions.x3 = x_center;
 3435              		.loc 1 879 18
 3436 01d6 B7F93230 		ldrsh	r3, [r7, #50]
 3437 01da 3B62     		str	r3, [r7, #32]
 880:./BSP/ST/stm32_lcd.c ****     positions.y3 = y_center;
 3438              		.loc 1 880 18
 3439 01dc B7F93030 		ldrsh	r3, [r7, #48]
 3440 01e0 7B62     		str	r3, [r7, #36]
 881:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3441              		.loc 1 881 5
 3442 01e2 07F11003 		add	r3, r7, #16
 3443 01e6 7968     		ldr	r1, [r7, #4]
 3444 01e8 1846     		mov	r0, r3
 3445 01ea FFF7FEFF 		bl	FillTriangle
 882:./BSP/ST/stm32_lcd.c **** 
 883:./BSP/ST/stm32_lcd.c ****     positions.x2 = x_center;
 3446              		.loc 1 883 18
 3447 01ee B7F93230 		ldrsh	r3, [r7, #50]
 3448 01f2 BB61     		str	r3, [r7, #24]
 884:./BSP/ST/stm32_lcd.c ****     positions.y2 = y_center;
 3449              		.loc 1 884 18
 3450 01f4 B7F93030 		ldrsh	r3, [r7, #48]
 3451 01f8 FB61     		str	r3, [r7, #28]
 885:./BSP/ST/stm32_lcd.c ****     positions.x3 = X2;
 3452              		.loc 1 885 18
 3453 01fa B7F94E30 		ldrsh	r3, [r7, #78]
 3454 01fe 3B62     		str	r3, [r7, #32]
 886:./BSP/ST/stm32_lcd.c ****     positions.y3 = Y2;
 3455              		.loc 1 886 18
 3456 0200 B7F94C30 		ldrsh	r3, [r7, #76]
 3457 0204 7B62     		str	r3, [r7, #36]
 887:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3458              		.loc 1 887 5
 3459 0206 07F11003 		add	r3, r7, #16
 3460 020a 7968     		ldr	r1, [r7, #4]
 3461 020c 1846     		mov	r0, r3
 3462 020e FFF7FEFF 		bl	FillTriangle
ARM GAS  /tmp/ccXj48YU.s 			page 77


 888:./BSP/ST/stm32_lcd.c **** 
 889:./BSP/ST/stm32_lcd.c ****     positions.x1 = x_center;
 3463              		.loc 1 889 18
 3464 0212 B7F93230 		ldrsh	r3, [r7, #50]
 3465 0216 3B61     		str	r3, [r7, #16]
 890:./BSP/ST/stm32_lcd.c ****     positions.y1 = y_center;
 3466              		.loc 1 890 18
 3467 0218 B7F93030 		ldrsh	r3, [r7, #48]
 3468 021c 7B61     		str	r3, [r7, #20]
 891:./BSP/ST/stm32_lcd.c ****     positions.x2 = X2;
 3469              		.loc 1 891 18
 3470 021e B7F94E30 		ldrsh	r3, [r7, #78]
 3471 0222 BB61     		str	r3, [r7, #24]
 892:./BSP/ST/stm32_lcd.c ****     positions.y2 = Y2;
 3472              		.loc 1 892 18
 3473 0224 B7F94C30 		ldrsh	r3, [r7, #76]
 3474 0228 FB61     		str	r3, [r7, #28]
 893:./BSP/ST/stm32_lcd.c ****     positions.x3 = x_first;
 3475              		.loc 1 893 18
 3476 022a B7F92E30 		ldrsh	r3, [r7, #46]
 3477 022e 3B62     		str	r3, [r7, #32]
 894:./BSP/ST/stm32_lcd.c ****     positions.y3 = y_first;
 3478              		.loc 1 894 18
 3479 0230 B7F92C30 		ldrsh	r3, [r7, #44]
 3480 0234 7B62     		str	r3, [r7, #36]
 895:./BSP/ST/stm32_lcd.c ****     FillTriangle(&positions, Color);
 3481              		.loc 1 895 5
 3482 0236 07F11003 		add	r3, r7, #16
 3483 023a 7968     		ldr	r1, [r7, #4]
 3484 023c 1846     		mov	r0, r3
 3485 023e FFF7FEFF 		bl	FillTriangle
 3486 0242 00E0     		b	.L140
 3487              	.L151:
 836:./BSP/ST/stm32_lcd.c ****   }
 3488              		.loc 1 836 5
 3489 0244 00BF     		nop
 3490              	.L140:
 896:./BSP/ST/stm32_lcd.c **** }
 3491              		.loc 1 896 1
 3492 0246 5037     		adds	r7, r7, #80
 3493              	.LCFI138:
 3494              		.cfi_def_cfa_offset 8
 3495 0248 BD46     		mov	sp, r7
 3496              	.LCFI139:
 3497              		.cfi_def_cfa_register 13
 3498              		@ sp needed
 3499 024a 80BD     		pop	{r7, pc}
 3500              		.cfi_endproc
 3501              	.LFE27:
 3503              		.section	.text.UTIL_LCD_FillEllipse,"ax",%progbits
 3504              		.align	1
 3505              		.global	UTIL_LCD_FillEllipse
 3506              		.syntax unified
 3507              		.thumb
 3508              		.thumb_func
 3509              		.fpu fpv5-d16
 3511              	UTIL_LCD_FillEllipse:
ARM GAS  /tmp/ccXj48YU.s 			page 78


 3512              	.LFB28:
 897:./BSP/ST/stm32_lcd.c **** 
 898:./BSP/ST/stm32_lcd.c **** /**
 899:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a full ellipse in currently active layer.
 900:./BSP/ST/stm32_lcd.c ****   * @param  Xpos    X position
 901:./BSP/ST/stm32_lcd.c ****   * @param  Ypos    Y position
 902:./BSP/ST/stm32_lcd.c ****   * @param  XRadius Ellipse X radius
 903:./BSP/ST/stm32_lcd.c ****   * @param  YRadius Ellipse Y radius
 904:./BSP/ST/stm32_lcd.c ****   * @param  Color   Draw color
 905:./BSP/ST/stm32_lcd.c ****   */
 906:./BSP/ST/stm32_lcd.c **** void UTIL_LCD_FillEllipse(int Xpos, int Ypos, int XRadius, int YRadius, uint32_t Color)
 907:./BSP/ST/stm32_lcd.c **** {
 3513              		.loc 1 907 1
 3514              		.cfi_startproc
 3515              		@ args = 4, pretend = 0, frame = 48
 3516              		@ frame_needed = 1, uses_anonymous_args = 0
 3517 0000 80B5     		push	{r7, lr}
 3518              	.LCFI140:
 3519              		.cfi_def_cfa_offset 8
 3520              		.cfi_offset 7, -8
 3521              		.cfi_offset 14, -4
 3522 0002 8CB0     		sub	sp, sp, #48
 3523              	.LCFI141:
 3524              		.cfi_def_cfa_offset 56
 3525 0004 00AF     		add	r7, sp, #0
 3526              	.LCFI142:
 3527              		.cfi_def_cfa_register 7
 3528 0006 F860     		str	r0, [r7, #12]
 3529 0008 B960     		str	r1, [r7, #8]
 3530 000a 7A60     		str	r2, [r7, #4]
 3531 000c 3B60     		str	r3, [r7]
 908:./BSP/ST/stm32_lcd.c ****   int x_pos = 0, y_pos = -YRadius, err = 2-2*XRadius, e2;
 3532              		.loc 1 908 7
 3533 000e 0023     		movs	r3, #0
 3534 0010 FB62     		str	r3, [r7, #44]
 3535              		.loc 1 908 18
 3536 0012 3B68     		ldr	r3, [r7]
 3537 0014 5B42     		rsbs	r3, r3, #0
 3538 0016 BB62     		str	r3, [r7, #40]
 3539              		.loc 1 908 43
 3540 0018 7B68     		ldr	r3, [r7, #4]
 3541 001a C3F10103 		rsb	r3, r3, #1
 3542              		.loc 1 908 36
 3543 001e 5B00     		lsls	r3, r3, #1
 3544 0020 7B62     		str	r3, [r7, #36]
 909:./BSP/ST/stm32_lcd.c ****   float k = 0, rad1 = 0, rad2 = 0;
 3545              		.loc 1 909 9
 3546 0022 4FF00003 		mov	r3, #0
 3547 0026 FB61     		str	r3, [r7, #28]	@ float
 3548              		.loc 1 909 16
 3549 0028 4FF00003 		mov	r3, #0
 3550 002c BB61     		str	r3, [r7, #24]	@ float
 3551              		.loc 1 909 26
 3552 002e 4FF00003 		mov	r3, #0
 3553 0032 7B61     		str	r3, [r7, #20]	@ float
 910:./BSP/ST/stm32_lcd.c **** 
 911:./BSP/ST/stm32_lcd.c ****   rad1 = XRadius;
ARM GAS  /tmp/ccXj48YU.s 			page 79


 3554              		.loc 1 911 8
 3555 0034 7B68     		ldr	r3, [r7, #4]
 3556 0036 07EE903A 		vmov	s15, r3	@ int
 3557 003a F8EEE77A 		vcvt.f32.s32	s15, s15
 3558 003e C7ED067A 		vstr.32	s15, [r7, #24]
 912:./BSP/ST/stm32_lcd.c ****   rad2 = YRadius;
 3559              		.loc 1 912 8
 3560 0042 3B68     		ldr	r3, [r7]
 3561 0044 07EE903A 		vmov	s15, r3	@ int
 3562 0048 F8EEE77A 		vcvt.f32.s32	s15, s15
 3563 004c C7ED057A 		vstr.32	s15, [r7, #20]
 913:./BSP/ST/stm32_lcd.c **** 
 914:./BSP/ST/stm32_lcd.c ****   k = (float)(rad2/rad1);
 3564              		.loc 1 914 5
 3565 0050 D7ED056A 		vldr.32	s13, [r7, #20]
 3566 0054 97ED067A 		vldr.32	s14, [r7, #24]
 3567 0058 C6EE877A 		vdiv.f32	s15, s13, s14
 3568 005c C7ED077A 		vstr.32	s15, [r7, #28]
 3569              	.L155:
 915:./BSP/ST/stm32_lcd.c **** 
 916:./BSP/ST/stm32_lcd.c ****   do
 917:./BSP/ST/stm32_lcd.c ****   {
 918:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_DrawHLine((Xpos-(uint32_t)(x_pos/k)), (Ypos + y_pos), (2*(uint32_t)(x_pos/k) + 1), Col
 3570              		.loc 1 918 5
 3571 0060 FB68     		ldr	r3, [r7, #12]
 3572              		.loc 1 918 46
 3573 0062 FA6A     		ldr	r2, [r7, #44]
 3574 0064 07EE902A 		vmov	s15, r2	@ int
 3575 0068 F8EEE76A 		vcvt.f32.s32	s13, s15
 3576 006c 97ED077A 		vldr.32	s14, [r7, #28]
 3577 0070 C6EE877A 		vdiv.f32	s15, s13, s14
 3578              		.loc 1 918 30
 3579 0074 FCEEE77A 		vcvt.u32.f32	s15, s15
 3580 0078 17EE902A 		vmov	r2, s15	@ int
 3581              		.loc 1 918 5
 3582 007c 981A     		subs	r0, r3, r2
 3583              		.loc 1 918 58
 3584 007e BA68     		ldr	r2, [r7, #8]
 3585 0080 BB6A     		ldr	r3, [r7, #40]
 3586 0082 1344     		add	r3, r3, r2
 3587              		.loc 1 918 5
 3588 0084 1946     		mov	r1, r3
 3589              		.loc 1 918 87
 3590 0086 FB6A     		ldr	r3, [r7, #44]
 3591 0088 07EE903A 		vmov	s15, r3	@ int
 3592 008c F8EEE76A 		vcvt.f32.s32	s13, s15
 3593 0090 97ED077A 		vldr.32	s14, [r7, #28]
 3594 0094 C6EE877A 		vdiv.f32	s15, s13, s14
 3595              		.loc 1 918 71
 3596 0098 FCEEE77A 		vcvt.u32.f32	s15, s15
 3597 009c 17EE903A 		vmov	r3, s15	@ int
 3598              		.loc 1 918 70
 3599 00a0 5B00     		lsls	r3, r3, #1
 3600              		.loc 1 918 5
 3601 00a2 5A1C     		adds	r2, r3, #1
 3602 00a4 BB6B     		ldr	r3, [r7, #56]
 3603 00a6 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
ARM GAS  /tmp/ccXj48YU.s 			page 80


 919:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_DrawHLine((Xpos-(uint32_t)(x_pos/k)), (Ypos - y_pos), (2*(uint32_t)(x_pos/k) + 1), Col
 3604              		.loc 1 919 5
 3605 00aa FB68     		ldr	r3, [r7, #12]
 3606              		.loc 1 919 46
 3607 00ac FA6A     		ldr	r2, [r7, #44]
 3608 00ae 07EE902A 		vmov	s15, r2	@ int
 3609 00b2 F8EEE76A 		vcvt.f32.s32	s13, s15
 3610 00b6 97ED077A 		vldr.32	s14, [r7, #28]
 3611 00ba C6EE877A 		vdiv.f32	s15, s13, s14
 3612              		.loc 1 919 30
 3613 00be FCEEE77A 		vcvt.u32.f32	s15, s15
 3614 00c2 17EE902A 		vmov	r2, s15	@ int
 3615              		.loc 1 919 5
 3616 00c6 981A     		subs	r0, r3, r2
 3617              		.loc 1 919 58
 3618 00c8 BA68     		ldr	r2, [r7, #8]
 3619 00ca BB6A     		ldr	r3, [r7, #40]
 3620 00cc D31A     		subs	r3, r2, r3
 3621              		.loc 1 919 5
 3622 00ce 1946     		mov	r1, r3
 3623              		.loc 1 919 87
 3624 00d0 FB6A     		ldr	r3, [r7, #44]
 3625 00d2 07EE903A 		vmov	s15, r3	@ int
 3626 00d6 F8EEE76A 		vcvt.f32.s32	s13, s15
 3627 00da 97ED077A 		vldr.32	s14, [r7, #28]
 3628 00de C6EE877A 		vdiv.f32	s15, s13, s14
 3629              		.loc 1 919 71
 3630 00e2 FCEEE77A 		vcvt.u32.f32	s15, s15
 3631 00e6 17EE903A 		vmov	r3, s15	@ int
 3632              		.loc 1 919 70
 3633 00ea 5B00     		lsls	r3, r3, #1
 3634              		.loc 1 919 5
 3635 00ec 5A1C     		adds	r2, r3, #1
 3636 00ee BB6B     		ldr	r3, [r7, #56]
 3637 00f0 FFF7FEFF 		bl	UTIL_LCD_DrawHLine
 920:./BSP/ST/stm32_lcd.c **** 
 921:./BSP/ST/stm32_lcd.c ****     e2 = err;
 3638              		.loc 1 921 8
 3639 00f4 7B6A     		ldr	r3, [r7, #36]
 3640 00f6 3B62     		str	r3, [r7, #32]
 922:./BSP/ST/stm32_lcd.c ****     if (e2 <= x_pos)
 3641              		.loc 1 922 8
 3642 00f8 3A6A     		ldr	r2, [r7, #32]
 3643 00fa FB6A     		ldr	r3, [r7, #44]
 3644 00fc 9A42     		cmp	r2, r3
 3645 00fe 13DC     		bgt	.L153
 923:./BSP/ST/stm32_lcd.c ****     {
 924:./BSP/ST/stm32_lcd.c ****       err += ++x_pos*2+1;
 3646              		.loc 1 924 23
 3647 0100 FB6A     		ldr	r3, [r7, #44]
 3648 0102 0133     		adds	r3, r3, #1
 3649 0104 FB62     		str	r3, [r7, #44]
 3650              		.loc 1 924 21
 3651 0106 FB6A     		ldr	r3, [r7, #44]
 3652 0108 5B00     		lsls	r3, r3, #1
 3653              		.loc 1 924 23
 3654 010a 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccXj48YU.s 			page 81


 3655              		.loc 1 924 11
 3656 010c 7A6A     		ldr	r2, [r7, #36]
 3657 010e 1344     		add	r3, r3, r2
 3658 0110 7B62     		str	r3, [r7, #36]
 925:./BSP/ST/stm32_lcd.c ****       if (-y_pos == x_pos && e2 <= y_pos) e2 = 0;
 3659              		.loc 1 925 11
 3660 0112 BB6A     		ldr	r3, [r7, #40]
 3661 0114 5B42     		rsbs	r3, r3, #0
 3662              		.loc 1 925 10
 3663 0116 FA6A     		ldr	r2, [r7, #44]
 3664 0118 9A42     		cmp	r2, r3
 3665 011a 05D1     		bne	.L153
 3666              		.loc 1 925 27 discriminator 1
 3667 011c 3A6A     		ldr	r2, [r7, #32]
 3668 011e BB6A     		ldr	r3, [r7, #40]
 3669 0120 9A42     		cmp	r2, r3
 3670 0122 01DC     		bgt	.L153
 3671              		.loc 1 925 46 discriminator 2
 3672 0124 0023     		movs	r3, #0
 3673 0126 3B62     		str	r3, [r7, #32]
 3674              	.L153:
 926:./BSP/ST/stm32_lcd.c ****     }
 927:./BSP/ST/stm32_lcd.c ****     if (e2 > y_pos) err += ++y_pos*2+1;
 3675              		.loc 1 927 8
 3676 0128 3A6A     		ldr	r2, [r7, #32]
 3677 012a BB6A     		ldr	r3, [r7, #40]
 3678 012c 9A42     		cmp	r2, r3
 3679 012e 08DD     		ble	.L154
 3680              		.loc 1 927 37 discriminator 1
 3681 0130 BB6A     		ldr	r3, [r7, #40]
 3682 0132 0133     		adds	r3, r3, #1
 3683 0134 BB62     		str	r3, [r7, #40]
 3684              		.loc 1 927 35 discriminator 1
 3685 0136 BB6A     		ldr	r3, [r7, #40]
 3686 0138 5B00     		lsls	r3, r3, #1
 3687              		.loc 1 927 37 discriminator 1
 3688 013a 0133     		adds	r3, r3, #1
 3689              		.loc 1 927 25 discriminator 1
 3690 013c 7A6A     		ldr	r2, [r7, #36]
 3691 013e 1344     		add	r3, r3, r2
 3692 0140 7B62     		str	r3, [r7, #36]
 3693              	.L154:
 928:./BSP/ST/stm32_lcd.c ****   }
 929:./BSP/ST/stm32_lcd.c ****   while (y_pos <= 0);
 3694              		.loc 1 929 3
 3695 0142 BB6A     		ldr	r3, [r7, #40]
 3696 0144 002B     		cmp	r3, #0
 3697 0146 8BDD     		ble	.L155
 930:./BSP/ST/stm32_lcd.c **** }
 3698              		.loc 1 930 1
 3699 0148 00BF     		nop
 3700 014a 00BF     		nop
 3701 014c 3037     		adds	r7, r7, #48
 3702              	.LCFI143:
 3703              		.cfi_def_cfa_offset 8
 3704 014e BD46     		mov	sp, r7
 3705              	.LCFI144:
ARM GAS  /tmp/ccXj48YU.s 			page 82


 3706              		.cfi_def_cfa_register 13
 3707              		@ sp needed
 3708 0150 80BD     		pop	{r7, pc}
 3709              		.cfi_endproc
 3710              	.LFE28:
 3712              		.section	.text.DrawChar,"ax",%progbits
 3713              		.align	1
 3714              		.syntax unified
 3715              		.thumb
 3716              		.thumb_func
 3717              		.fpu fpv5-d16
 3719              	DrawChar:
 3720              	.LFB29:
 931:./BSP/ST/stm32_lcd.c **** 
 932:./BSP/ST/stm32_lcd.c **** /**
 933:./BSP/ST/stm32_lcd.c ****   * @brief  Draws a character on LCD.
 934:./BSP/ST/stm32_lcd.c ****   * @param  Xpos  Line where to display the character shape
 935:./BSP/ST/stm32_lcd.c ****   * @param  Ypos  Start column address
 936:./BSP/ST/stm32_lcd.c ****   * @param  pData Pointer to the character data
 937:./BSP/ST/stm32_lcd.c ****   */
 938:./BSP/ST/stm32_lcd.c **** static void DrawChar(uint32_t Xpos, uint32_t Ypos, const uint8_t *pData)
 939:./BSP/ST/stm32_lcd.c **** {
 3721              		.loc 1 939 1
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 192
 3724              		@ frame_needed = 1, uses_anonymous_args = 0
 3725 0000 80B5     		push	{r7, lr}
 3726              	.LCFI145:
 3727              		.cfi_def_cfa_offset 8
 3728              		.cfi_offset 7, -8
 3729              		.cfi_offset 14, -4
 3730 0002 B2B0     		sub	sp, sp, #200
 3731              	.LCFI146:
 3732              		.cfi_def_cfa_offset 208
 3733 0004 02AF     		add	r7, sp, #8
 3734              	.LCFI147:
 3735              		.cfi_def_cfa 7, 200
 3736 0006 F860     		str	r0, [r7, #12]
 3737 0008 B960     		str	r1, [r7, #8]
 3738 000a 7A60     		str	r2, [r7, #4]
 940:./BSP/ST/stm32_lcd.c ****   uint32_t i = 0, j = 0, offset;
 3739              		.loc 1 940 12
 3740 000c 0023     		movs	r3, #0
 3741 000e C7F8BC30 		str	r3, [r7, #188]
 3742              		.loc 1 940 19
 3743 0012 0023     		movs	r3, #0
 3744 0014 C7F8B830 		str	r3, [r7, #184]
 941:./BSP/ST/stm32_lcd.c ****   uint32_t height, width;
 942:./BSP/ST/stm32_lcd.c ****   uint8_t  *pchar;
 943:./BSP/ST/stm32_lcd.c ****   uint32_t line;
 944:./BSP/ST/stm32_lcd.c **** 
 945:./BSP/ST/stm32_lcd.c ****   height = DrawProp[DrawProp->LcdLayer].pFont->Height;
 3745              		.loc 1 945 29
 3746 0018 A74B     		ldr	r3, .L174
 3747 001a DB68     		ldr	r3, [r3, #12]
 3748              		.loc 1 945 40
 3749 001c A64A     		ldr	r2, .L174
ARM GAS  /tmp/ccXj48YU.s 			page 83


 3750 001e 5B01     		lsls	r3, r3, #5
 3751 0020 1344     		add	r3, r3, r2
 3752 0022 0833     		adds	r3, r3, #8
 3753 0024 1B68     		ldr	r3, [r3]
 3754              		.loc 1 945 46
 3755 0026 DB88     		ldrh	r3, [r3, #6]
 3756              		.loc 1 945 10
 3757 0028 C7F8B030 		str	r3, [r7, #176]
 946:./BSP/ST/stm32_lcd.c ****   width  = DrawProp[DrawProp->LcdLayer].pFont->Width;
 3758              		.loc 1 946 29
 3759 002c A24B     		ldr	r3, .L174
 3760 002e DB68     		ldr	r3, [r3, #12]
 3761              		.loc 1 946 40
 3762 0030 A14A     		ldr	r2, .L174
 3763 0032 5B01     		lsls	r3, r3, #5
 3764 0034 1344     		add	r3, r3, r2
 3765 0036 0833     		adds	r3, r3, #8
 3766 0038 1B68     		ldr	r3, [r3]
 3767              		.loc 1 946 46
 3768 003a 9B88     		ldrh	r3, [r3, #4]
 3769              		.loc 1 946 10
 3770 003c C7F8AC30 		str	r3, [r7, #172]
 947:./BSP/ST/stm32_lcd.c ****   uint16_t rgb565[24];
 948:./BSP/ST/stm32_lcd.c ****   uint32_t argb8888[24];
 949:./BSP/ST/stm32_lcd.c **** 
 950:./BSP/ST/stm32_lcd.c ****   offset =  8 *((width + 7)/8) -  width ;
 3771              		.loc 1 950 24
 3772 0040 D7F8AC30 		ldr	r3, [r7, #172]
 3773 0044 0733     		adds	r3, r3, #7
 3774              		.loc 1 950 15
 3775 0046 23F00702 		bic	r2, r3, #7
 3776              		.loc 1 950 10
 3777 004a D7F8AC30 		ldr	r3, [r7, #172]
 3778 004e D31A     		subs	r3, r2, r3
 3779 0050 C7F8A830 		str	r3, [r7, #168]
 951:./BSP/ST/stm32_lcd.c **** 
 952:./BSP/ST/stm32_lcd.c ****   for(i = 0; i < height; i++)
 3780              		.loc 1 952 9
 3781 0054 0023     		movs	r3, #0
 3782 0056 C7F8BC30 		str	r3, [r7, #188]
 3783              		.loc 1 952 3
 3784 005a 20E1     		b	.L157
 3785              	.L172:
 953:./BSP/ST/stm32_lcd.c ****   {
 954:./BSP/ST/stm32_lcd.c ****     pchar = ((uint8_t *)pData + (width + 7)/8 * i);
 3786              		.loc 1 954 40
 3787 005c D7F8AC30 		ldr	r3, [r7, #172]
 3788 0060 0733     		adds	r3, r3, #7
 3789              		.loc 1 954 44
 3790 0062 DB08     		lsrs	r3, r3, #3
 3791              		.loc 1 954 47
 3792 0064 D7F8BC20 		ldr	r2, [r7, #188]
 3793 0068 02FB03F3 		mul	r3, r2, r3
 3794              		.loc 1 954 11
 3795 006c 7A68     		ldr	r2, [r7, #4]
 3796 006e 1344     		add	r3, r3, r2
 3797 0070 C7F8A430 		str	r3, [r7, #164]
ARM GAS  /tmp/ccXj48YU.s 			page 84


 955:./BSP/ST/stm32_lcd.c **** 
 956:./BSP/ST/stm32_lcd.c ****     switch(((width + 7)/8))
 3798              		.loc 1 956 20
 3799 0074 D7F8AC30 		ldr	r3, [r7, #172]
 3800 0078 0733     		adds	r3, r3, #7
 3801              		.loc 1 956 24
 3802 007a DB08     		lsrs	r3, r3, #3
 3803              		.loc 1 956 5
 3804 007c 012B     		cmp	r3, #1
 3805 007e 02D0     		beq	.L158
 3806 0080 022B     		cmp	r3, #2
 3807 0082 06D0     		beq	.L159
 3808 0084 11E0     		b	.L173
 3809              	.L158:
 957:./BSP/ST/stm32_lcd.c ****     {
 958:./BSP/ST/stm32_lcd.c **** 
 959:./BSP/ST/stm32_lcd.c ****     case 1:
 960:./BSP/ST/stm32_lcd.c ****       line =  pchar[0];
 3810              		.loc 1 960 20
 3811 0086 D7F8A430 		ldr	r3, [r7, #164]
 3812 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3813              		.loc 1 960 12
 3814 008c C7F8B430 		str	r3, [r7, #180]
 961:./BSP/ST/stm32_lcd.c ****       break;
 3815              		.loc 1 961 7
 3816 0090 1DE0     		b	.L161
 3817              	.L159:
 962:./BSP/ST/stm32_lcd.c **** 
 963:./BSP/ST/stm32_lcd.c ****     case 2:
 964:./BSP/ST/stm32_lcd.c ****       line =  (pchar[0]<< 8) | pchar[1];
 3818              		.loc 1 964 21
 3819 0092 D7F8A430 		ldr	r3, [r7, #164]
 3820 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821              		.loc 1 964 24
 3822 0098 1B02     		lsls	r3, r3, #8
 3823              		.loc 1 964 37
 3824 009a D7F8A420 		ldr	r2, [r7, #164]
 3825 009e 0132     		adds	r2, r2, #1
 3826 00a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3827              		.loc 1 964 30
 3828 00a2 1343     		orrs	r3, r3, r2
 3829              		.loc 1 964 12
 3830 00a4 C7F8B430 		str	r3, [r7, #180]
 965:./BSP/ST/stm32_lcd.c ****       break;
 3831              		.loc 1 965 7
 3832 00a8 11E0     		b	.L161
 3833              	.L173:
 966:./BSP/ST/stm32_lcd.c **** 
 967:./BSP/ST/stm32_lcd.c ****     case 3:
 968:./BSP/ST/stm32_lcd.c ****     default:
 969:./BSP/ST/stm32_lcd.c ****       line =  (pchar[0]<< 16) | (pchar[1]<< 8) | pchar[2];
 3834              		.loc 1 969 21
 3835 00aa D7F8A430 		ldr	r3, [r7, #164]
 3836 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3837              		.loc 1 969 24
 3838 00b0 1A04     		lsls	r2, r3, #16
 3839              		.loc 1 969 39
ARM GAS  /tmp/ccXj48YU.s 			page 85


 3840 00b2 D7F8A430 		ldr	r3, [r7, #164]
 3841 00b6 0133     		adds	r3, r3, #1
 3842 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843              		.loc 1 969 42
 3844 00ba 1B02     		lsls	r3, r3, #8
 3845              		.loc 1 969 31
 3846 00bc 1343     		orrs	r3, r3, r2
 3847              		.loc 1 969 55
 3848 00be D7F8A420 		ldr	r2, [r7, #164]
 3849 00c2 0232     		adds	r2, r2, #2
 3850 00c4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3851              		.loc 1 969 48
 3852 00c6 1343     		orrs	r3, r3, r2
 3853              		.loc 1 969 12
 3854 00c8 C7F8B430 		str	r3, [r7, #180]
 970:./BSP/ST/stm32_lcd.c ****       break;
 3855              		.loc 1 970 7
 3856 00cc 00BF     		nop
 3857              	.L161:
 971:./BSP/ST/stm32_lcd.c ****     }
 972:./BSP/ST/stm32_lcd.c **** 
 973:./BSP/ST/stm32_lcd.c ****     if(DrawProp[DrawProp->LcdLayer].LcdPixelFormat == LCD_PIXEL_FORMAT_RGB565)
 3858              		.loc 1 973 25
 3859 00ce 7A4B     		ldr	r3, .L174
 3860 00d0 DB68     		ldr	r3, [r3, #12]
 3861              		.loc 1 973 36
 3862 00d2 794A     		ldr	r2, .L174
 3863 00d4 5B01     		lsls	r3, r3, #5
 3864 00d6 1344     		add	r3, r3, r2
 3865 00d8 1C33     		adds	r3, r3, #28
 3866 00da 1B68     		ldr	r3, [r3]
 3867              		.loc 1 973 7
 3868 00dc 022B     		cmp	r3, #2
 3869 00de 40F08E80 		bne	.L162
 974:./BSP/ST/stm32_lcd.c ****     {
 975:./BSP/ST/stm32_lcd.c ****       for (j = 0; j < width; j++)
 3870              		.loc 1 975 14
 3871 00e2 0023     		movs	r3, #0
 3872 00e4 C7F8B830 		str	r3, [r7, #184]
 3873              		.loc 1 975 7
 3874 00e8 76E0     		b	.L163
 3875              	.L166:
 976:./BSP/ST/stm32_lcd.c ****       {
 977:./BSP/ST/stm32_lcd.c ****         if(line & (1 << (width- j + offset- 1)))
 3876              		.loc 1 977 31
 3877 00ea D7F8AC20 		ldr	r2, [r7, #172]
 3878 00ee D7F8B830 		ldr	r3, [r7, #184]
 3879 00f2 D21A     		subs	r2, r2, r3
 3880              		.loc 1 977 35
 3881 00f4 D7F8A830 		ldr	r3, [r7, #168]
 3882 00f8 1344     		add	r3, r3, r2
 3883              		.loc 1 977 43
 3884 00fa 013B     		subs	r3, r3, #1
 3885              		.loc 1 977 22
 3886 00fc 0122     		movs	r2, #1
 3887 00fe 02FA03F3 		lsl	r3, r2, r3
 3888 0102 1A46     		mov	r2, r3
ARM GAS  /tmp/ccXj48YU.s 			page 86


 3889              		.loc 1 977 17
 3890 0104 D7F8B430 		ldr	r3, [r7, #180]
 3891 0108 1340     		ands	r3, r3, r2
 3892              		.loc 1 977 11
 3893 010a 002B     		cmp	r3, #0
 3894 010c 2ED0     		beq	.L164
 978:./BSP/ST/stm32_lcd.c ****         {
 979:./BSP/ST/stm32_lcd.c ****           rgb565[j] = CONVERTARGB88882RGB565(DrawProp[DrawProp->LcdLayer].TextColor);
 3895              		.loc 1 979 23
 3896 010e 6A4B     		ldr	r3, .L174
 3897 0110 DB68     		ldr	r3, [r3, #12]
 3898 0112 694A     		ldr	r2, .L174
 3899 0114 5B01     		lsls	r3, r3, #5
 3900 0116 1344     		add	r3, r3, r2
 3901 0118 1B68     		ldr	r3, [r3]
 3902 011a DB08     		lsrs	r3, r3, #3
 3903 011c 9BB2     		uxth	r3, r3
 3904 011e 03F01F03 		and	r3, r3, #31
 3905 0122 9AB2     		uxth	r2, r3
 3906 0124 644B     		ldr	r3, .L174
 3907 0126 DB68     		ldr	r3, [r3, #12]
 3908 0128 6349     		ldr	r1, .L174
 3909 012a 5B01     		lsls	r3, r3, #5
 3910 012c 0B44     		add	r3, r3, r1
 3911 012e 1B68     		ldr	r3, [r3]
 3912 0130 9B0A     		lsrs	r3, r3, #10
 3913 0132 9BB2     		uxth	r3, r3
 3914 0134 5B01     		lsls	r3, r3, #5
 3915 0136 9BB2     		uxth	r3, r3
 3916 0138 03F4FC63 		and	r3, r3, #2016
 3917 013c 9BB2     		uxth	r3, r3
 3918 013e 1343     		orrs	r3, r3, r2
 3919 0140 9AB2     		uxth	r2, r3
 3920 0142 5D4B     		ldr	r3, .L174
 3921 0144 DB68     		ldr	r3, [r3, #12]
 3922 0146 5C49     		ldr	r1, .L174
 3923 0148 5B01     		lsls	r3, r3, #5
 3924 014a 0B44     		add	r3, r3, r1
 3925 014c 1B68     		ldr	r3, [r3]
 3926 014e DB0C     		lsrs	r3, r3, #19
 3927 0150 9BB2     		uxth	r3, r3
 3928 0152 DB02     		lsls	r3, r3, #11
 3929 0154 9BB2     		uxth	r3, r3
 3930 0156 1343     		orrs	r3, r3, r2
 3931 0158 9AB2     		uxth	r2, r3
 3932              		.loc 1 979 21
 3933 015a D7F8B830 		ldr	r3, [r7, #184]
 3934 015e 5B00     		lsls	r3, r3, #1
 3935 0160 07F1C001 		add	r1, r7, #192
 3936 0164 0B44     		add	r3, r3, r1
 3937 0166 23F84C2C 		strh	r2, [r3, #-76]	@ movhi
 3938 016a 30E0     		b	.L165
 3939              	.L164:
 980:./BSP/ST/stm32_lcd.c ****         }
 981:./BSP/ST/stm32_lcd.c ****         else
 982:./BSP/ST/stm32_lcd.c ****         {
 983:./BSP/ST/stm32_lcd.c ****           rgb565[j] = CONVERTARGB88882RGB565(DrawProp[DrawProp->LcdLayer].BackColor);
ARM GAS  /tmp/ccXj48YU.s 			page 87


 3940              		.loc 1 983 23
 3941 016c 524B     		ldr	r3, .L174
 3942 016e DB68     		ldr	r3, [r3, #12]
 3943 0170 514A     		ldr	r2, .L174
 3944 0172 5B01     		lsls	r3, r3, #5
 3945 0174 1344     		add	r3, r3, r2
 3946 0176 0433     		adds	r3, r3, #4
 3947 0178 1B68     		ldr	r3, [r3]
 3948 017a DB08     		lsrs	r3, r3, #3
 3949 017c 9BB2     		uxth	r3, r3
 3950 017e 03F01F03 		and	r3, r3, #31
 3951 0182 9AB2     		uxth	r2, r3
 3952 0184 4C4B     		ldr	r3, .L174
 3953 0186 DB68     		ldr	r3, [r3, #12]
 3954 0188 4B49     		ldr	r1, .L174
 3955 018a 5B01     		lsls	r3, r3, #5
 3956 018c 0B44     		add	r3, r3, r1
 3957 018e 0433     		adds	r3, r3, #4
 3958 0190 1B68     		ldr	r3, [r3]
 3959 0192 9B0A     		lsrs	r3, r3, #10
 3960 0194 9BB2     		uxth	r3, r3
 3961 0196 5B01     		lsls	r3, r3, #5
 3962 0198 9BB2     		uxth	r3, r3
 3963 019a 03F4FC63 		and	r3, r3, #2016
 3964 019e 9BB2     		uxth	r3, r3
 3965 01a0 1343     		orrs	r3, r3, r2
 3966 01a2 9AB2     		uxth	r2, r3
 3967 01a4 444B     		ldr	r3, .L174
 3968 01a6 DB68     		ldr	r3, [r3, #12]
 3969 01a8 4349     		ldr	r1, .L174
 3970 01aa 5B01     		lsls	r3, r3, #5
 3971 01ac 0B44     		add	r3, r3, r1
 3972 01ae 0433     		adds	r3, r3, #4
 3973 01b0 1B68     		ldr	r3, [r3]
 3974 01b2 DB0C     		lsrs	r3, r3, #19
 3975 01b4 9BB2     		uxth	r3, r3
 3976 01b6 DB02     		lsls	r3, r3, #11
 3977 01b8 9BB2     		uxth	r3, r3
 3978 01ba 1343     		orrs	r3, r3, r2
 3979 01bc 9AB2     		uxth	r2, r3
 3980              		.loc 1 983 21
 3981 01be D7F8B830 		ldr	r3, [r7, #184]
 3982 01c2 5B00     		lsls	r3, r3, #1
 3983 01c4 07F1C001 		add	r1, r7, #192
 3984 01c8 0B44     		add	r3, r3, r1
 3985 01ca 23F84C2C 		strh	r2, [r3, #-76]	@ movhi
 3986              	.L165:
 975:./BSP/ST/stm32_lcd.c ****       {
 3987              		.loc 1 975 31 discriminator 2
 3988 01ce D7F8B830 		ldr	r3, [r7, #184]
 3989 01d2 0133     		adds	r3, r3, #1
 3990 01d4 C7F8B830 		str	r3, [r7, #184]
 3991              	.L163:
 975:./BSP/ST/stm32_lcd.c ****       {
 3992              		.loc 1 975 7 discriminator 1
 3993 01d8 D7F8B820 		ldr	r2, [r7, #184]
 3994 01dc D7F8AC30 		ldr	r3, [r7, #172]
ARM GAS  /tmp/ccXj48YU.s 			page 88


 3995 01e0 9A42     		cmp	r2, r3
 3996 01e2 82D3     		bcc	.L166
 984:./BSP/ST/stm32_lcd.c ****         }
 985:./BSP/ST/stm32_lcd.c ****       }
 986:./BSP/ST/stm32_lcd.c ****       UTIL_LCD_FillRGBRect(Xpos,  Ypos++, (uint8_t*)&rgb565[0], width, 1);
 3997              		.loc 1 986 7
 3998 01e4 B968     		ldr	r1, [r7, #8]
 3999 01e6 4B1C     		adds	r3, r1, #1
 4000 01e8 BB60     		str	r3, [r7, #8]
 4001 01ea 07F17402 		add	r2, r7, #116
 4002 01ee 0123     		movs	r3, #1
 4003 01f0 0093     		str	r3, [sp]
 4004 01f2 D7F8AC30 		ldr	r3, [r7, #172]
 4005 01f6 F868     		ldr	r0, [r7, #12]
 4006 01f8 FFF7FEFF 		bl	UTIL_LCD_FillRGBRect
 4007 01fc 4AE0     		b	.L167
 4008              	.L162:
 987:./BSP/ST/stm32_lcd.c ****     }
 988:./BSP/ST/stm32_lcd.c ****     else
 989:./BSP/ST/stm32_lcd.c ****     {
 990:./BSP/ST/stm32_lcd.c ****       for (j = 0; j < width; j++)
 4009              		.loc 1 990 14
 4010 01fe 0023     		movs	r3, #0
 4011 0200 C7F8B830 		str	r3, [r7, #184]
 4012              		.loc 1 990 7
 4013 0204 34E0     		b	.L168
 4014              	.L171:
 991:./BSP/ST/stm32_lcd.c ****       {
 992:./BSP/ST/stm32_lcd.c ****         if(line & (1 << (width- j + offset- 1)))
 4015              		.loc 1 992 31
 4016 0206 D7F8AC20 		ldr	r2, [r7, #172]
 4017 020a D7F8B830 		ldr	r3, [r7, #184]
 4018 020e D21A     		subs	r2, r2, r3
 4019              		.loc 1 992 35
 4020 0210 D7F8A830 		ldr	r3, [r7, #168]
 4021 0214 1344     		add	r3, r3, r2
 4022              		.loc 1 992 43
 4023 0216 013B     		subs	r3, r3, #1
 4024              		.loc 1 992 22
 4025 0218 0122     		movs	r2, #1
 4026 021a 02FA03F3 		lsl	r3, r2, r3
 4027 021e 1A46     		mov	r2, r3
 4028              		.loc 1 992 17
 4029 0220 D7F8B430 		ldr	r3, [r7, #180]
 4030 0224 1340     		ands	r3, r3, r2
 4031              		.loc 1 992 11
 4032 0226 002B     		cmp	r3, #0
 4033 0228 0ED0     		beq	.L169
 993:./BSP/ST/stm32_lcd.c ****         {
 994:./BSP/ST/stm32_lcd.c ****           argb8888[j] = DrawProp[DrawProp->LcdLayer].TextColor;
 4034              		.loc 1 994 42
 4035 022a 234B     		ldr	r3, .L174
 4036 022c DB68     		ldr	r3, [r3, #12]
 4037              		.loc 1 994 53
 4038 022e 224A     		ldr	r2, .L174
 4039 0230 5B01     		lsls	r3, r3, #5
 4040 0232 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccXj48YU.s 			page 89


 4041 0234 1A68     		ldr	r2, [r3]
 4042              		.loc 1 994 23
 4043 0236 D7F8B830 		ldr	r3, [r7, #184]
 4044 023a 9B00     		lsls	r3, r3, #2
 4045 023c 07F1C001 		add	r1, r7, #192
 4046 0240 0B44     		add	r3, r3, r1
 4047 0242 43F8AC2C 		str	r2, [r3, #-172]
 4048 0246 0EE0     		b	.L170
 4049              	.L169:
 995:./BSP/ST/stm32_lcd.c ****         }
 996:./BSP/ST/stm32_lcd.c ****         else
 997:./BSP/ST/stm32_lcd.c ****         {
 998:./BSP/ST/stm32_lcd.c ****           argb8888[j] = DrawProp[DrawProp->LcdLayer].BackColor;
 4050              		.loc 1 998 42
 4051 0248 1B4B     		ldr	r3, .L174
 4052 024a DB68     		ldr	r3, [r3, #12]
 4053              		.loc 1 998 53
 4054 024c 1A4A     		ldr	r2, .L174
 4055 024e 5B01     		lsls	r3, r3, #5
 4056 0250 1344     		add	r3, r3, r2
 4057 0252 0433     		adds	r3, r3, #4
 4058 0254 1A68     		ldr	r2, [r3]
 4059              		.loc 1 998 23
 4060 0256 D7F8B830 		ldr	r3, [r7, #184]
 4061 025a 9B00     		lsls	r3, r3, #2
 4062 025c 07F1C001 		add	r1, r7, #192
 4063 0260 0B44     		add	r3, r3, r1
 4064 0262 43F8AC2C 		str	r2, [r3, #-172]
 4065              	.L170:
 990:./BSP/ST/stm32_lcd.c ****       {
 4066              		.loc 1 990 31 discriminator 2
 4067 0266 D7F8B830 		ldr	r3, [r7, #184]
 4068 026a 0133     		adds	r3, r3, #1
 4069 026c C7F8B830 		str	r3, [r7, #184]
 4070              	.L168:
 990:./BSP/ST/stm32_lcd.c ****       {
 4071              		.loc 1 990 7 discriminator 1
 4072 0270 D7F8B820 		ldr	r2, [r7, #184]
 4073 0274 D7F8AC30 		ldr	r3, [r7, #172]
 4074 0278 9A42     		cmp	r2, r3
 4075 027a C4D3     		bcc	.L171
 999:./BSP/ST/stm32_lcd.c ****         }
1000:./BSP/ST/stm32_lcd.c ****       }
1001:./BSP/ST/stm32_lcd.c ****       UTIL_LCD_FillRGBRect(Xpos,  Ypos++, (uint8_t*)&argb8888[0], width, 1);
 4076              		.loc 1 1001 7
 4077 027c B968     		ldr	r1, [r7, #8]
 4078 027e 4B1C     		adds	r3, r1, #1
 4079 0280 BB60     		str	r3, [r7, #8]
 4080 0282 07F11402 		add	r2, r7, #20
 4081 0286 0123     		movs	r3, #1
 4082 0288 0093     		str	r3, [sp]
 4083 028a D7F8AC30 		ldr	r3, [r7, #172]
 4084 028e F868     		ldr	r0, [r7, #12]
 4085 0290 FFF7FEFF 		bl	UTIL_LCD_FillRGBRect
 4086              	.L167:
 952:./BSP/ST/stm32_lcd.c ****   {
 4087              		.loc 1 952 27 discriminator 2
ARM GAS  /tmp/ccXj48YU.s 			page 90


 4088 0294 D7F8BC30 		ldr	r3, [r7, #188]
 4089 0298 0133     		adds	r3, r3, #1
 4090 029a C7F8BC30 		str	r3, [r7, #188]
 4091              	.L157:
 952:./BSP/ST/stm32_lcd.c ****   {
 4092              		.loc 1 952 3 discriminator 1
 4093 029e D7F8BC20 		ldr	r2, [r7, #188]
 4094 02a2 D7F8B030 		ldr	r3, [r7, #176]
 4095 02a6 9A42     		cmp	r2, r3
 4096 02a8 FFF4D8AE 		bcc	.L172
1002:./BSP/ST/stm32_lcd.c ****     }
1003:./BSP/ST/stm32_lcd.c ****   }
1004:./BSP/ST/stm32_lcd.c **** }
 4097              		.loc 1 1004 1
 4098 02ac 00BF     		nop
 4099 02ae 00BF     		nop
 4100 02b0 C037     		adds	r7, r7, #192
 4101              	.LCFI148:
 4102              		.cfi_def_cfa_offset 8
 4103 02b2 BD46     		mov	sp, r7
 4104              	.LCFI149:
 4105              		.cfi_def_cfa_register 13
 4106              		@ sp needed
 4107 02b4 80BD     		pop	{r7, pc}
 4108              	.L175:
 4109 02b6 00BF     		.align	2
 4110              	.L174:
 4111 02b8 00000000 		.word	DrawProp
 4112              		.cfi_endproc
 4113              	.LFE29:
 4115              		.section	.text.FillTriangle,"ax",%progbits
 4116              		.align	1
 4117              		.syntax unified
 4118              		.thumb
 4119              		.thumb_func
 4120              		.fpu fpv5-d16
 4122              	FillTriangle:
 4123              	.LFB30:
1005:./BSP/ST/stm32_lcd.c **** 
1006:./BSP/ST/stm32_lcd.c **** /**
1007:./BSP/ST/stm32_lcd.c ****   * @brief  Fills a triangle (between 3 points).
1008:./BSP/ST/stm32_lcd.c ****   * @param  Positions  pointer to riangle coordinates
1009:./BSP/ST/stm32_lcd.c ****   * @param  Color      Draw color
1010:./BSP/ST/stm32_lcd.c ****   */
1011:./BSP/ST/stm32_lcd.c **** static void FillTriangle(Triangle_Positions_t *Positions, uint32_t Color)
1012:./BSP/ST/stm32_lcd.c **** {
 4124              		.loc 1 1012 1
 4125              		.cfi_startproc
 4126              		@ args = 0, pretend = 0, frame = 48
 4127              		@ frame_needed = 1, uses_anonymous_args = 0
 4128 0000 90B5     		push	{r4, r7, lr}
 4129              	.LCFI150:
 4130              		.cfi_def_cfa_offset 12
 4131              		.cfi_offset 4, -12
 4132              		.cfi_offset 7, -8
 4133              		.cfi_offset 14, -4
 4134 0002 8FB0     		sub	sp, sp, #60
ARM GAS  /tmp/ccXj48YU.s 			page 91


 4135              	.LCFI151:
 4136              		.cfi_def_cfa_offset 72
 4137 0004 02AF     		add	r7, sp, #8
 4138              	.LCFI152:
 4139              		.cfi_def_cfa 7, 64
 4140 0006 7860     		str	r0, [r7, #4]
 4141 0008 3960     		str	r1, [r7]
1013:./BSP/ST/stm32_lcd.c ****   int16_t deltax = 0, deltay = 0, x = 0, y = 0, xinc1 = 0, xinc2 = 0,
 4142              		.loc 1 1013 11
 4143 000a 0023     		movs	r3, #0
 4144 000c 3B83     		strh	r3, [r7, #24]	@ movhi
 4145              		.loc 1 1013 23
 4146 000e 0023     		movs	r3, #0
 4147 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 4148              		.loc 1 1013 35
 4149 0012 0023     		movs	r3, #0
 4150 0014 FB85     		strh	r3, [r7, #46]	@ movhi
 4151              		.loc 1 1013 42
 4152 0016 0023     		movs	r3, #0
 4153 0018 BB85     		strh	r3, [r7, #44]	@ movhi
 4154              		.loc 1 1013 49
 4155 001a 0023     		movs	r3, #0
 4156 001c 7B85     		strh	r3, [r7, #42]	@ movhi
 4157              		.loc 1 1013 60
 4158 001e 0023     		movs	r3, #0
 4159 0020 3B85     		strh	r3, [r7, #40]	@ movhi
1014:./BSP/ST/stm32_lcd.c ****   yinc1 = 0, yinc2 = 0, den = 0, num = 0, numadd = 0, numpixels = 0,
 4160              		.loc 1 1014 3
 4161 0022 0023     		movs	r3, #0
 4162 0024 FB84     		strh	r3, [r7, #38]	@ movhi
 4163              		.loc 1 1014 14
 4164 0026 0023     		movs	r3, #0
 4165 0028 BB84     		strh	r3, [r7, #36]	@ movhi
 4166              		.loc 1 1014 25
 4167 002a 0023     		movs	r3, #0
 4168 002c 7B84     		strh	r3, [r7, #34]	@ movhi
 4169              		.loc 1 1014 34
 4170 002e 0023     		movs	r3, #0
 4171 0030 3B84     		strh	r3, [r7, #32]	@ movhi
 4172              		.loc 1 1014 43
 4173 0032 0023     		movs	r3, #0
 4174 0034 FB83     		strh	r3, [r7, #30]	@ movhi
 4175              		.loc 1 1014 55
 4176 0036 0023     		movs	r3, #0
 4177 0038 BB83     		strh	r3, [r7, #28]	@ movhi
1015:./BSP/ST/stm32_lcd.c ****   curpixel = 0;
 4178              		.loc 1 1015 3
 4179 003a 0023     		movs	r3, #0
 4180 003c 7B83     		strh	r3, [r7, #26]	@ movhi
1016:./BSP/ST/stm32_lcd.c ****   int32_t x_diff, y_diff;
1017:./BSP/ST/stm32_lcd.c **** 
1018:./BSP/ST/stm32_lcd.c ****   x_diff = Positions->x2 - Positions->x1;
 4181              		.loc 1 1018 21
 4182 003e 7B68     		ldr	r3, [r7, #4]
 4183 0040 9A68     		ldr	r2, [r3, #8]
 4184              		.loc 1 1018 37
 4185 0042 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXj48YU.s 			page 92


 4186 0044 1B68     		ldr	r3, [r3]
 4187              		.loc 1 1018 26
 4188 0046 D31A     		subs	r3, r2, r3
 4189              		.loc 1 1018 10
 4190 0048 3B61     		str	r3, [r7, #16]
1019:./BSP/ST/stm32_lcd.c ****   y_diff = Positions->y2 - Positions->y1;
 4191              		.loc 1 1019 21
 4192 004a 7B68     		ldr	r3, [r7, #4]
 4193 004c DA68     		ldr	r2, [r3, #12]
 4194              		.loc 1 1019 37
 4195 004e 7B68     		ldr	r3, [r7, #4]
 4196 0050 5B68     		ldr	r3, [r3, #4]
 4197              		.loc 1 1019 26
 4198 0052 D31A     		subs	r3, r2, r3
 4199              		.loc 1 1019 10
 4200 0054 FB60     		str	r3, [r7, #12]
1020:./BSP/ST/stm32_lcd.c **** 
1021:./BSP/ST/stm32_lcd.c ****   deltax = ABS(x_diff);         /* The absolute difference between the x's */
 4201              		.loc 1 1021 12
 4202 0056 3B69     		ldr	r3, [r7, #16]
 4203 0058 002B     		cmp	r3, #0
 4204 005a B8BF     		it	lt
 4205 005c 5B42     		rsblt	r3, r3, #0
 4206              		.loc 1 1021 10
 4207 005e 3B83     		strh	r3, [r7, #24]	@ movhi
1022:./BSP/ST/stm32_lcd.c ****   deltay = ABS(y_diff);         /* The absolute difference between the y's */
 4208              		.loc 1 1022 12
 4209 0060 FB68     		ldr	r3, [r7, #12]
 4210 0062 002B     		cmp	r3, #0
 4211 0064 B8BF     		it	lt
 4212 0066 5B42     		rsblt	r3, r3, #0
 4213              		.loc 1 1022 10
 4214 0068 FB82     		strh	r3, [r7, #22]	@ movhi
1023:./BSP/ST/stm32_lcd.c ****   x = Positions->x1;                       /* Start x off at the first pixel */
 4215              		.loc 1 1023 16
 4216 006a 7B68     		ldr	r3, [r7, #4]
 4217 006c 1B68     		ldr	r3, [r3]
 4218              		.loc 1 1023 5
 4219 006e FB85     		strh	r3, [r7, #46]	@ movhi
1024:./BSP/ST/stm32_lcd.c ****   y = Positions->y1;                       /* Start y off at the first pixel */
 4220              		.loc 1 1024 16
 4221 0070 7B68     		ldr	r3, [r7, #4]
 4222 0072 5B68     		ldr	r3, [r3, #4]
 4223              		.loc 1 1024 5
 4224 0074 BB85     		strh	r3, [r7, #44]	@ movhi
1025:./BSP/ST/stm32_lcd.c **** 
1026:./BSP/ST/stm32_lcd.c ****   if (Positions->x2 >= Positions->x1)                 /* The x-values are increasing */
 4225              		.loc 1 1026 16
 4226 0076 7B68     		ldr	r3, [r7, #4]
 4227 0078 9A68     		ldr	r2, [r3, #8]
 4228              		.loc 1 1026 33
 4229 007a 7B68     		ldr	r3, [r7, #4]
 4230 007c 1B68     		ldr	r3, [r3]
 4231              		.loc 1 1026 6
 4232 007e 9A42     		cmp	r2, r3
 4233 0080 04D3     		bcc	.L177
1027:./BSP/ST/stm32_lcd.c ****   {
ARM GAS  /tmp/ccXj48YU.s 			page 93


1028:./BSP/ST/stm32_lcd.c ****     xinc1 = 1;
 4234              		.loc 1 1028 11
 4235 0082 0123     		movs	r3, #1
 4236 0084 7B85     		strh	r3, [r7, #42]	@ movhi
1029:./BSP/ST/stm32_lcd.c ****     xinc2 = 1;
 4237              		.loc 1 1029 11
 4238 0086 0123     		movs	r3, #1
 4239 0088 3B85     		strh	r3, [r7, #40]	@ movhi
 4240 008a 05E0     		b	.L178
 4241              	.L177:
1030:./BSP/ST/stm32_lcd.c ****   }
1031:./BSP/ST/stm32_lcd.c ****   else                          /* The x-values are decreasing */
1032:./BSP/ST/stm32_lcd.c ****   {
1033:./BSP/ST/stm32_lcd.c ****     xinc1 = -1;
 4242              		.loc 1 1033 11
 4243 008c 4FF6FF73 		movw	r3, #65535
 4244 0090 7B85     		strh	r3, [r7, #42]	@ movhi
1034:./BSP/ST/stm32_lcd.c ****     xinc2 = -1;
 4245              		.loc 1 1034 11
 4246 0092 4FF6FF73 		movw	r3, #65535
 4247 0096 3B85     		strh	r3, [r7, #40]	@ movhi
 4248              	.L178:
1035:./BSP/ST/stm32_lcd.c ****   }
1036:./BSP/ST/stm32_lcd.c **** 
1037:./BSP/ST/stm32_lcd.c ****   if (Positions->y2 >= Positions->y1)                 /* The y-values are increasing */
 4249              		.loc 1 1037 16
 4250 0098 7B68     		ldr	r3, [r7, #4]
 4251 009a DA68     		ldr	r2, [r3, #12]
 4252              		.loc 1 1037 33
 4253 009c 7B68     		ldr	r3, [r7, #4]
 4254 009e 5B68     		ldr	r3, [r3, #4]
 4255              		.loc 1 1037 6
 4256 00a0 9A42     		cmp	r2, r3
 4257 00a2 04D3     		bcc	.L179
1038:./BSP/ST/stm32_lcd.c ****   {
1039:./BSP/ST/stm32_lcd.c ****     yinc1 = 1;
 4258              		.loc 1 1039 11
 4259 00a4 0123     		movs	r3, #1
 4260 00a6 FB84     		strh	r3, [r7, #38]	@ movhi
1040:./BSP/ST/stm32_lcd.c ****     yinc2 = 1;
 4261              		.loc 1 1040 11
 4262 00a8 0123     		movs	r3, #1
 4263 00aa BB84     		strh	r3, [r7, #36]	@ movhi
 4264 00ac 05E0     		b	.L180
 4265              	.L179:
1041:./BSP/ST/stm32_lcd.c ****   }
1042:./BSP/ST/stm32_lcd.c ****   else                          /* The y-values are decreasing */
1043:./BSP/ST/stm32_lcd.c ****   {
1044:./BSP/ST/stm32_lcd.c ****     yinc1 = -1;
 4266              		.loc 1 1044 11
 4267 00ae 4FF6FF73 		movw	r3, #65535
 4268 00b2 FB84     		strh	r3, [r7, #38]	@ movhi
1045:./BSP/ST/stm32_lcd.c ****     yinc2 = -1;
 4269              		.loc 1 1045 11
 4270 00b4 4FF6FF73 		movw	r3, #65535
 4271 00b8 BB84     		strh	r3, [r7, #36]	@ movhi
 4272              	.L180:
ARM GAS  /tmp/ccXj48YU.s 			page 94


1046:./BSP/ST/stm32_lcd.c ****   }
1047:./BSP/ST/stm32_lcd.c **** 
1048:./BSP/ST/stm32_lcd.c ****   if (deltax >= deltay)         /* There is at least one x-value for every y-value */
 4273              		.loc 1 1048 6
 4274 00ba B7F91820 		ldrsh	r2, [r7, #24]
 4275 00be B7F91630 		ldrsh	r3, [r7, #22]
 4276 00c2 9A42     		cmp	r2, r3
 4277 00c4 11DB     		blt	.L181
1049:./BSP/ST/stm32_lcd.c ****   {
1050:./BSP/ST/stm32_lcd.c ****     xinc1 = 0;                  /* Don't change the x when numerator >= denominator */
 4278              		.loc 1 1050 11
 4279 00c6 0023     		movs	r3, #0
 4280 00c8 7B85     		strh	r3, [r7, #42]	@ movhi
1051:./BSP/ST/stm32_lcd.c ****     yinc2 = 0;                  /* Don't change the y for every iteration */
 4281              		.loc 1 1051 11
 4282 00ca 0023     		movs	r3, #0
 4283 00cc BB84     		strh	r3, [r7, #36]	@ movhi
1052:./BSP/ST/stm32_lcd.c ****     den = deltax;
 4284              		.loc 1 1052 9
 4285 00ce 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 4286 00d0 7B84     		strh	r3, [r7, #34]	@ movhi
1053:./BSP/ST/stm32_lcd.c ****     num = deltax / 2;
 4287              		.loc 1 1053 9
 4288 00d2 B7F91830 		ldrsh	r3, [r7, #24]
 4289 00d6 002B     		cmp	r3, #0
 4290 00d8 00DA     		bge	.L182
 4291 00da 0133     		adds	r3, r3, #1
 4292              	.L182:
 4293 00dc 5B10     		asrs	r3, r3, #1
 4294 00de 3B84     		strh	r3, [r7, #32]	@ movhi
1054:./BSP/ST/stm32_lcd.c ****     numadd = deltay;
 4295              		.loc 1 1054 12
 4296 00e0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4297 00e2 FB83     		strh	r3, [r7, #30]	@ movhi
1055:./BSP/ST/stm32_lcd.c ****     numpixels = deltax;         /* There are more x-values than y-values */
 4298              		.loc 1 1055 15
 4299 00e4 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 4300 00e6 BB83     		strh	r3, [r7, #28]	@ movhi
 4301 00e8 10E0     		b	.L183
 4302              	.L181:
1056:./BSP/ST/stm32_lcd.c ****   }
1057:./BSP/ST/stm32_lcd.c ****   else                          /* There is at least one y-value for every x-value */
1058:./BSP/ST/stm32_lcd.c ****   {
1059:./BSP/ST/stm32_lcd.c ****     xinc2 = 0;                  /* Don't change the x for every iteration */
 4303              		.loc 1 1059 11
 4304 00ea 0023     		movs	r3, #0
 4305 00ec 3B85     		strh	r3, [r7, #40]	@ movhi
1060:./BSP/ST/stm32_lcd.c ****     yinc1 = 0;                  /* Don't change the y when numerator >= denominator */
 4306              		.loc 1 1060 11
 4307 00ee 0023     		movs	r3, #0
 4308 00f0 FB84     		strh	r3, [r7, #38]	@ movhi
1061:./BSP/ST/stm32_lcd.c ****     den = deltay;
 4309              		.loc 1 1061 9
 4310 00f2 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4311 00f4 7B84     		strh	r3, [r7, #34]	@ movhi
1062:./BSP/ST/stm32_lcd.c ****     num = deltay / 2;
 4312              		.loc 1 1062 9
ARM GAS  /tmp/ccXj48YU.s 			page 95


 4313 00f6 B7F91630 		ldrsh	r3, [r7, #22]
 4314 00fa 002B     		cmp	r3, #0
 4315 00fc 00DA     		bge	.L184
 4316 00fe 0133     		adds	r3, r3, #1
 4317              	.L184:
 4318 0100 5B10     		asrs	r3, r3, #1
 4319 0102 3B84     		strh	r3, [r7, #32]	@ movhi
1063:./BSP/ST/stm32_lcd.c ****     numadd = deltax;
 4320              		.loc 1 1063 12
 4321 0104 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 4322 0106 FB83     		strh	r3, [r7, #30]	@ movhi
1064:./BSP/ST/stm32_lcd.c ****     numpixels = deltay;         /* There are more y-values than x-values */
 4323              		.loc 1 1064 15
 4324 0108 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4325 010a BB83     		strh	r3, [r7, #28]	@ movhi
 4326              	.L183:
1065:./BSP/ST/stm32_lcd.c ****   }
1066:./BSP/ST/stm32_lcd.c **** 
1067:./BSP/ST/stm32_lcd.c ****   for (curpixel = 0; curpixel <= numpixels; curpixel++)
 4327              		.loc 1 1067 17
 4328 010c 0023     		movs	r3, #0
 4329 010e 7B83     		strh	r3, [r7, #26]	@ movhi
 4330              		.loc 1 1067 3
 4331 0110 36E0     		b	.L185
 4332              	.L187:
1068:./BSP/ST/stm32_lcd.c ****   {
1069:./BSP/ST/stm32_lcd.c ****     UTIL_LCD_DrawLine(x, y, Positions->x3, Positions->y3, Color);
 4333              		.loc 1 1069 5
 4334 0112 B7F92E00 		ldrsh	r0, [r7, #46]
 4335 0116 B7F92C10 		ldrsh	r1, [r7, #44]
 4336 011a 7B68     		ldr	r3, [r7, #4]
 4337 011c 1A69     		ldr	r2, [r3, #16]
 4338 011e 7B68     		ldr	r3, [r7, #4]
 4339 0120 5C69     		ldr	r4, [r3, #20]
 4340 0122 3B68     		ldr	r3, [r7]
 4341 0124 0093     		str	r3, [sp]
 4342 0126 2346     		mov	r3, r4
 4343 0128 FFF7FEFF 		bl	UTIL_LCD_DrawLine
1070:./BSP/ST/stm32_lcd.c **** 
1071:./BSP/ST/stm32_lcd.c ****     num += numadd;              /* Increase the numerator by the top of the fraction */
 4344              		.loc 1 1071 9
 4345 012c 3A8C     		ldrh	r2, [r7, #32]
 4346 012e FB8B     		ldrh	r3, [r7, #30]
 4347 0130 1344     		add	r3, r3, r2
 4348 0132 9BB2     		uxth	r3, r3
 4349 0134 3B84     		strh	r3, [r7, #32]	@ movhi
1072:./BSP/ST/stm32_lcd.c ****     if (num >= den)             /* Check if numerator >= denominator */
 4350              		.loc 1 1072 8
 4351 0136 B7F92020 		ldrsh	r2, [r7, #32]
 4352 013a B7F92230 		ldrsh	r3, [r7, #34]
 4353 013e 9A42     		cmp	r2, r3
 4354 0140 0EDB     		blt	.L186
1073:./BSP/ST/stm32_lcd.c ****     {
1074:./BSP/ST/stm32_lcd.c ****       num -= den;               /* Calculate the new numerator value */
 4355              		.loc 1 1074 11
 4356 0142 3A8C     		ldrh	r2, [r7, #32]
 4357 0144 7B8C     		ldrh	r3, [r7, #34]
ARM GAS  /tmp/ccXj48YU.s 			page 96


 4358 0146 D31A     		subs	r3, r2, r3
 4359 0148 9BB2     		uxth	r3, r3
 4360 014a 3B84     		strh	r3, [r7, #32]	@ movhi
1075:./BSP/ST/stm32_lcd.c ****       x += xinc1;               /* Change the x as appropriate */
 4361              		.loc 1 1075 9
 4362 014c FA8D     		ldrh	r2, [r7, #46]
 4363 014e 7B8D     		ldrh	r3, [r7, #42]
 4364 0150 1344     		add	r3, r3, r2
 4365 0152 9BB2     		uxth	r3, r3
 4366 0154 FB85     		strh	r3, [r7, #46]	@ movhi
1076:./BSP/ST/stm32_lcd.c ****       y += yinc1;               /* Change the y as appropriate */
 4367              		.loc 1 1076 9
 4368 0156 BA8D     		ldrh	r2, [r7, #44]
 4369 0158 FB8C     		ldrh	r3, [r7, #38]
 4370 015a 1344     		add	r3, r3, r2
 4371 015c 9BB2     		uxth	r3, r3
 4372 015e BB85     		strh	r3, [r7, #44]	@ movhi
 4373              	.L186:
1077:./BSP/ST/stm32_lcd.c ****     }
1078:./BSP/ST/stm32_lcd.c ****     x += xinc2;                 /* Change the x as appropriate */
 4374              		.loc 1 1078 7 discriminator 2
 4375 0160 FA8D     		ldrh	r2, [r7, #46]
 4376 0162 3B8D     		ldrh	r3, [r7, #40]
 4377 0164 1344     		add	r3, r3, r2
 4378 0166 9BB2     		uxth	r3, r3
 4379 0168 FB85     		strh	r3, [r7, #46]	@ movhi
1079:./BSP/ST/stm32_lcd.c ****     y += yinc2;                 /* Change the y as appropriate */
 4380              		.loc 1 1079 7 discriminator 2
 4381 016a BA8D     		ldrh	r2, [r7, #44]
 4382 016c BB8C     		ldrh	r3, [r7, #36]
 4383 016e 1344     		add	r3, r3, r2
 4384 0170 9BB2     		uxth	r3, r3
 4385 0172 BB85     		strh	r3, [r7, #44]	@ movhi
1067:./BSP/ST/stm32_lcd.c ****   {
 4386              		.loc 1 1067 53 discriminator 2
 4387 0174 B7F91A30 		ldrsh	r3, [r7, #26]
 4388 0178 9BB2     		uxth	r3, r3
 4389 017a 0133     		adds	r3, r3, #1
 4390 017c 9BB2     		uxth	r3, r3
 4391 017e 7B83     		strh	r3, [r7, #26]	@ movhi
 4392              	.L185:
1067:./BSP/ST/stm32_lcd.c ****   {
 4393              		.loc 1 1067 3 discriminator 1
 4394 0180 B7F91A20 		ldrsh	r2, [r7, #26]
 4395 0184 B7F91C30 		ldrsh	r3, [r7, #28]
 4396 0188 9A42     		cmp	r2, r3
 4397 018a C2DD     		ble	.L187
1080:./BSP/ST/stm32_lcd.c ****   }
1081:./BSP/ST/stm32_lcd.c **** }
 4398              		.loc 1 1081 1
 4399 018c 00BF     		nop
 4400 018e 00BF     		nop
 4401 0190 3437     		adds	r7, r7, #52
 4402              	.LCFI153:
 4403              		.cfi_def_cfa_offset 12
 4404 0192 BD46     		mov	sp, r7
 4405              	.LCFI154:
ARM GAS  /tmp/ccXj48YU.s 			page 97


 4406              		.cfi_def_cfa_register 13
 4407              		@ sp needed
 4408 0194 90BD     		pop	{r4, r7, pc}
 4409              		.cfi_endproc
 4410              	.LFE30:
 4412              		.text
 4413              	.Letext0:
 4414              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4415              		.file 3 "./BSP/ST/Fonts/../Fonts/fonts.h"
 4416              		.file 4 "./BSP/ST/lcd.h"
 4417              		.file 5 "./BSP/ST/stm32_lcd.h"
ARM GAS  /tmp/ccXj48YU.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32_lcd.c
     /tmp/ccXj48YU.s:17     .bss.DrawProp:0000000000000000 $d
     /tmp/ccXj48YU.s:20     .bss.DrawProp:0000000000000000 DrawProp
     /tmp/ccXj48YU.s:23     .bss.FuncDriver:0000000000000000 $d
     /tmp/ccXj48YU.s:26     .bss.FuncDriver:0000000000000000 FuncDriver
     /tmp/ccXj48YU.s:29     .text.UTIL_LCD_SetFuncDriver:0000000000000000 $t
     /tmp/ccXj48YU.s:37     .text.UTIL_LCD_SetFuncDriver:0000000000000000 UTIL_LCD_SetFuncDriver
     /tmp/ccXj48YU.s:170    .text.UTIL_LCD_SetFuncDriver:0000000000000098 $d
     /tmp/ccXj48YU.s:179    .text.UTIL_LCD_SetLayer:0000000000000000 $t
     /tmp/ccXj48YU.s:186    .text.UTIL_LCD_SetLayer:0000000000000000 UTIL_LCD_SetLayer
     /tmp/ccXj48YU.s:242    .text.UTIL_LCD_SetLayer:0000000000000034 $d
     /tmp/ccXj48YU.s:248    .text.UTIL_LCD_SetDevice:0000000000000000 $t
     /tmp/ccXj48YU.s:255    .text.UTIL_LCD_SetDevice:0000000000000000 UTIL_LCD_SetDevice
     /tmp/ccXj48YU.s:308    .text.UTIL_LCD_SetDevice:0000000000000030 $d
     /tmp/ccXj48YU.s:316    .text.UTIL_LCD_SetTextColor:0000000000000000 $t
     /tmp/ccXj48YU.s:323    .text.UTIL_LCD_SetTextColor:0000000000000000 UTIL_LCD_SetTextColor
     /tmp/ccXj48YU.s:367    .text.UTIL_LCD_SetTextColor:0000000000000024 $d
     /tmp/ccXj48YU.s:372    .text.UTIL_LCD_GetTextColor:0000000000000000 $t
     /tmp/ccXj48YU.s:379    .text.UTIL_LCD_GetTextColor:0000000000000000 UTIL_LCD_GetTextColor
     /tmp/ccXj48YU.s:415    .text.UTIL_LCD_GetTextColor:000000000000001c $d
     /tmp/ccXj48YU.s:420    .text.UTIL_LCD_SetBackColor:0000000000000000 $t
     /tmp/ccXj48YU.s:427    .text.UTIL_LCD_SetBackColor:0000000000000000 UTIL_LCD_SetBackColor
     /tmp/ccXj48YU.s:472    .text.UTIL_LCD_SetBackColor:0000000000000024 $d
     /tmp/ccXj48YU.s:477    .text.UTIL_LCD_GetBackColor:0000000000000000 $t
     /tmp/ccXj48YU.s:484    .text.UTIL_LCD_GetBackColor:0000000000000000 UTIL_LCD_GetBackColor
     /tmp/ccXj48YU.s:521    .text.UTIL_LCD_GetBackColor:000000000000001c $d
     /tmp/ccXj48YU.s:526    .text.UTIL_LCD_SetFont:0000000000000000 $t
     /tmp/ccXj48YU.s:533    .text.UTIL_LCD_SetFont:0000000000000000 UTIL_LCD_SetFont
     /tmp/ccXj48YU.s:578    .text.UTIL_LCD_SetFont:0000000000000024 $d
     /tmp/ccXj48YU.s:583    .text.UTIL_LCD_GetFont:0000000000000000 $t
     /tmp/ccXj48YU.s:590    .text.UTIL_LCD_GetFont:0000000000000000 UTIL_LCD_GetFont
     /tmp/ccXj48YU.s:627    .text.UTIL_LCD_GetFont:000000000000001c $d
     /tmp/ccXj48YU.s:632    .text.UTIL_LCD_FillRGBRect:0000000000000000 $t
     /tmp/ccXj48YU.s:639    .text.UTIL_LCD_FillRGBRect:0000000000000000 UTIL_LCD_FillRGBRect
     /tmp/ccXj48YU.s:689    .text.UTIL_LCD_FillRGBRect:0000000000000030 $d
     /tmp/ccXj48YU.s:695    .text.UTIL_LCD_DrawHLine:0000000000000000 $t
     /tmp/ccXj48YU.s:702    .text.UTIL_LCD_DrawHLine:0000000000000000 UTIL_LCD_DrawHLine
     /tmp/ccXj48YU.s:787    .text.UTIL_LCD_DrawHLine:0000000000000064 $d
     /tmp/ccXj48YU.s:793    .text.UTIL_LCD_DrawVLine:0000000000000000 $t
     /tmp/ccXj48YU.s:800    .text.UTIL_LCD_DrawVLine:0000000000000000 UTIL_LCD_DrawVLine
     /tmp/ccXj48YU.s:885    .text.UTIL_LCD_DrawVLine:0000000000000064 $d
     /tmp/ccXj48YU.s:891    .text.UTIL_LCD_GetPixel:0000000000000000 $t
     /tmp/ccXj48YU.s:898    .text.UTIL_LCD_GetPixel:0000000000000000 UTIL_LCD_GetPixel
     /tmp/ccXj48YU.s:993    .text.UTIL_LCD_GetPixel:0000000000000088 $d
     /tmp/ccXj48YU.s:999    .text.UTIL_LCD_SetPixel:0000000000000000 $t
     /tmp/ccXj48YU.s:1006   .text.UTIL_LCD_SetPixel:0000000000000000 UTIL_LCD_SetPixel
     /tmp/ccXj48YU.s:1090   .text.UTIL_LCD_SetPixel:0000000000000060 $d
     /tmp/ccXj48YU.s:1096   .text.UTIL_LCD_Clear:0000000000000000 $t
     /tmp/ccXj48YU.s:1103   .text.UTIL_LCD_Clear:0000000000000000 UTIL_LCD_Clear
     /tmp/ccXj48YU.s:2803   .text.UTIL_LCD_FillRect:0000000000000000 UTIL_LCD_FillRect
     /tmp/ccXj48YU.s:1145   .text.UTIL_LCD_Clear:0000000000000028 $d
     /tmp/ccXj48YU.s:1150   .text.UTIL_LCD_ClearStringLine:0000000000000000 $t
     /tmp/ccXj48YU.s:1157   .text.UTIL_LCD_ClearStringLine:0000000000000000 UTIL_LCD_ClearStringLine
     /tmp/ccXj48YU.s:1232   .text.UTIL_LCD_ClearStringLine:0000000000000058 $d
     /tmp/ccXj48YU.s:1237   .text.UTIL_LCD_DisplayChar:0000000000000000 $t
     /tmp/ccXj48YU.s:1244   .text.UTIL_LCD_DisplayChar:0000000000000000 UTIL_LCD_DisplayChar
ARM GAS  /tmp/ccXj48YU.s 			page 99


     /tmp/ccXj48YU.s:3719   .text.DrawChar:0000000000000000 DrawChar
     /tmp/ccXj48YU.s:1332   .text.UTIL_LCD_DisplayChar:0000000000000068 $d
     /tmp/ccXj48YU.s:1337   .text.UTIL_LCD_DisplayStringAt:0000000000000000 $t
     /tmp/ccXj48YU.s:1344   .text.UTIL_LCD_DisplayStringAt:0000000000000000 UTIL_LCD_DisplayStringAt
     /tmp/ccXj48YU.s:1602   .text.UTIL_LCD_DisplayStringAt:0000000000000158 $d
     /tmp/ccXj48YU.s:1607   .text.UTIL_LCD_DisplayStringAtLine:0000000000000000 $t
     /tmp/ccXj48YU.s:1614   .text.UTIL_LCD_DisplayStringAtLine:0000000000000000 UTIL_LCD_DisplayStringAtLine
     /tmp/ccXj48YU.s:1659   .text.UTIL_LCD_DrawLine:0000000000000000 $t
     /tmp/ccXj48YU.s:1666   .text.UTIL_LCD_DrawLine:0000000000000000 UTIL_LCD_DrawLine
     /tmp/ccXj48YU.s:1933   .text.UTIL_LCD_DrawRect:0000000000000000 $t
     /tmp/ccXj48YU.s:1940   .text.UTIL_LCD_DrawRect:0000000000000000 UTIL_LCD_DrawRect
     /tmp/ccXj48YU.s:2007   .text.UTIL_LCD_DrawCircle:0000000000000000 $t
     /tmp/ccXj48YU.s:2014   .text.UTIL_LCD_DrawCircle:0000000000000000 UTIL_LCD_DrawCircle
     /tmp/ccXj48YU.s:2361   .text.UTIL_LCD_DrawCircle:0000000000000210 $d
     /tmp/ccXj48YU.s:2366   .text.UTIL_LCD_DrawPolygon:0000000000000000 $t
     /tmp/ccXj48YU.s:2373   .text.UTIL_LCD_DrawPolygon:0000000000000000 UTIL_LCD_DrawPolygon
     /tmp/ccXj48YU.s:2499   .text.UTIL_LCD_DrawEllipse:0000000000000000 $t
     /tmp/ccXj48YU.s:2506   .text.UTIL_LCD_DrawEllipse:0000000000000000 UTIL_LCD_DrawEllipse
     /tmp/ccXj48YU.s:2738   .text.UTIL_LCD_DrawBitmap:0000000000000000 $t
     /tmp/ccXj48YU.s:2745   .text.UTIL_LCD_DrawBitmap:0000000000000000 UTIL_LCD_DrawBitmap
     /tmp/ccXj48YU.s:2790   .text.UTIL_LCD_DrawBitmap:0000000000000024 $d
     /tmp/ccXj48YU.s:2796   .text.UTIL_LCD_FillRect:0000000000000000 $t
     /tmp/ccXj48YU.s:2892   .text.UTIL_LCD_FillRect:000000000000006c $d
     /tmp/ccXj48YU.s:2898   .text.UTIL_LCD_FillCircle:0000000000000000 $t
     /tmp/ccXj48YU.s:2905   .text.UTIL_LCD_FillCircle:0000000000000000 UTIL_LCD_FillCircle
     /tmp/ccXj48YU.s:3138   .text.UTIL_LCD_FillPolygon:0000000000000000 $t
     /tmp/ccXj48YU.s:3145   .text.UTIL_LCD_FillPolygon:0000000000000000 UTIL_LCD_FillPolygon
     /tmp/ccXj48YU.s:4122   .text.FillTriangle:0000000000000000 FillTriangle
     /tmp/ccXj48YU.s:3504   .text.UTIL_LCD_FillEllipse:0000000000000000 $t
     /tmp/ccXj48YU.s:3511   .text.UTIL_LCD_FillEllipse:0000000000000000 UTIL_LCD_FillEllipse
     /tmp/ccXj48YU.s:3713   .text.DrawChar:0000000000000000 $t
     /tmp/ccXj48YU.s:4111   .text.DrawChar:00000000000002b8 $d
     /tmp/ccXj48YU.s:4116   .text.FillTriangle:0000000000000000 $t

NO UNDEFINED SYMBOLS
