ARM GAS  /tmp/ccZvMaOV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_sdram.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_SDRAM_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_SDRAM_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_SDRAM_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @file    stm32h7xx_hal_sdram.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief   SDRAM HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          This file provides a generic firmware to drive SDRAM memories mounted
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          as external device.
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                        ##### How to use this driver #####
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This driver is a generic layered driver which contains a set of APIs used to
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     control SDRAM memories. It uses the FMC layer functions to interface
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     with SDRAM devices.
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     The following sequence should be followed to configure the FMC to interface
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     with SDRAM memories:
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Declare a SDRAM_HandleTypeDef handle structure, for example:
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****           SDRAM_HandleTypeDef  hsdram
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Init" field with the allowed
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             values of the structure member.
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) Fill the SDRAM_HandleTypeDef handle "Instance" field with a predefined
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             base register instance for NOR or SDRAM device
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Declare a FMC_SDRAM_TimingTypeDef structure; for example:
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****           FMC_SDRAM_TimingTypeDef  Timing;
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and fill its fields with the allowed values of the structure member.
ARM GAS  /tmp/ccZvMaOV.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) Initialize the SDRAM Controller by calling the function HAL_SDRAM_Init(). This function
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        performs the following sequence:
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) MSP hardware layer configuration using the function HAL_SDRAM_MspInit()
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Control register configuration using the FMC SDRAM interface function
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             FMC_SDRAM_Init()
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Timing register configuration using the FMC SDRAM interface function
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             FMC_SDRAM_Timing_Init()
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (##) Program the SDRAM external device by applying its initialization sequence
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             according to the device plugged in your hardware. This step is mandatory
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             for accessing the SDRAM device.
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) At this stage you can perform read/write accesses from/to the memory connected
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        to the SDRAM Bank. You can perform either polling or DMA transfer using the
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        following APIs:
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read()/HAL_SDRAM_Write() for polling read/write access
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        (++) HAL_SDRAM_Read_DMA()/HAL_SDRAM_Write_DMA() for DMA read/write transfer
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) You can also control the SDRAM device by calling the control APIs HAL_SDRAM_WriteOperation_E
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        HAL_SDRAM_WriteOperation_Disable() to respectively enable/disable the SDRAM write operation 
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        the function HAL_SDRAM_SendCommand() to send a specified command to the SDRAM
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        device. The command to be sent must be configured with the FMC_SDRAM_CommandTypeDef
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        structure.
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    (#) You can continuously monitor the SDRAM device HAL state by calling the function
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****        HAL_SDRAM_GetState()
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    *** Callback registration ***
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     =============================================
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     [..]
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       The compilation define  USE_HAL_SDRAM_REGISTER_CALLBACKS when set to 1
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       allows the user to configure dynamically the driver callbacks.
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Use Functions @ref HAL_SDRAM_RegisterCallback() to register a user callback,
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       it allows to register following callbacks:
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and a pointer to the user callback function.
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Use function @ref HAL_SDRAM_UnRegisterCallback() to reset a callback to the default
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       weak (surcharged) function. It allows to reset following callbacks:
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspInitCallback    : SDRAM MspInit.
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         (+) MspDeInitCallback  : SDRAM MspDeInit.
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       By default, after the @ref HAL_SDRAM_Init and if the state is HAL_SDRAM_STATE_RESET
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_SDRAM_Init
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and @ref  HAL_SDRAM_DeInit only when these callbacks are null (not registered beforehand).
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_SDRAM_Init and @ref HAL_SDRAM_DeInit
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Callbacks can be registered/unregistered in READY state only.
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
ARM GAS  /tmp/ccZvMaOV.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       during the Init/DeInit.
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       In that case first register the MspInit/MspDeInit user callbacks
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       using @ref HAL_SDRAM_RegisterCallback before calling @ref HAL_SDRAM_DeInit
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       or @ref HAL_SDRAM_Init function.
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       When The compilation define USE_HAL_SDRAM_REGISTER_CALLBACKS is set to 0 or
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       not defined, the callback registering feature is not available
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       and weak (surcharged) callbacks are used.
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @endverbatim
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @attention
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * All rights reserved.</center></h2>
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * the "License"; You may not use this file except in compliance with the
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * License. You may obtain a copy of the License at:
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                       opensource.org/licenses/BSD-3-Clause
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ******************************************************************************
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Includes ------------------------------------------------------------------*/
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #include "stm32h7xx_hal.h"
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @addtogroup STM32H7xx_HAL_Driver
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #ifdef HAL_SDRAM_MODULE_ENABLED
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM SDRAM
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief SDRAM driver modules
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private typedef -----------------------------------------------------------*/
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private define ------------------------------------------------------------*/
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private macro -------------------------------------------------------------*/
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private variables ---------------------------------------------------------*/
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Private function prototypes -----------------------------------------------*/
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACplt(MDMA_HandleTypeDef *hmdma);
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACpltProt(MDMA_HandleTypeDef *hmdma);
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMAError(MDMA_HandleTypeDef *hmdma);
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /* Exported functions --------------------------------------------------------*/
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions SDRAM Exported Functions
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group1 Initialization and de-initialization functions
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief    Initialization and Configuration functions
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
ARM GAS  /tmp/ccZvMaOV.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****            ##### SDRAM Initialization and de_initialization functions #####
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This section provides functions allowing to initialize/de-initialize
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     the SDRAM memory
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Performs the SDRAM device initialization sequence.
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Timing Pointer to SDRAM control timing structure
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
  28              		.loc 1 166 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7]
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM handle parameter */
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram == NULL)
  45              		.loc 1 168 6
  46 000a 7B68     		ldr	r3, [r7, #4]
  47 000c 002B     		cmp	r3, #0
  48 000e 01D1     		bne	.L2
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
  49              		.loc 1 170 12
  50 0010 0123     		movs	r3, #1
  51 0012 2BE0     		b	.L3
  52              	.L2:
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_RESET)
  53              		.loc 1 173 13
  54 0014 7B68     		ldr	r3, [r7, #4]
  55 0016 93F82C30 		ldrb	r3, [r3, #44]
  56 001a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccZvMaOV.s 			page 5


  57              		.loc 1 173 6
  58 001c 002B     		cmp	r3, #0
  59 001e 06D1     		bne	.L4
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Allocate lock resource and initialize it */
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->Lock = HAL_UNLOCKED;
  60              		.loc 1 176 18
  61 0020 7B68     		ldr	r3, [r7, #4]
  62 0022 0022     		movs	r2, #0
  63 0024 83F82D20 		strb	r2, [r3, #45]
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if (hsdram->MspInitCallback == NULL)
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Init the low level hardware */
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->MspInitCallback(hsdram);
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Initialize the low level hardware (MSP) */
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     HAL_SDRAM_MspInit(hsdram);
  64              		.loc 1 190 5
  65 0028 7868     		ldr	r0, [r7, #4]
  66 002a FFF7FEFF 		bl	HAL_SDRAM_MspInit
  67              	.L4:
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize the SDRAM controller state */
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_BUSY;
  68              		.loc 1 195 17
  69 002e 7B68     		ldr	r3, [r7, #4]
  70 0030 0222     		movs	r2, #2
  71 0032 83F82C20 		strb	r2, [r3, #44]
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize SDRAM control Interface */
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
  72              		.loc 1 198 9
  73 0036 7B68     		ldr	r3, [r7, #4]
  74 0038 1A68     		ldr	r2, [r3]
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 0433     		adds	r3, r3, #4
  77 003e 1946     		mov	r1, r3
  78 0040 1046     		mov	r0, r2
  79 0042 FFF7FEFF 		bl	FMC_SDRAM_Init
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize SDRAM timing Interface */
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
  80              		.loc 1 201 9
  81 0046 7B68     		ldr	r3, [r7, #4]
  82 0048 1868     		ldr	r0, [r3]
  83 004a 7B68     		ldr	r3, [r7, #4]
  84 004c 5B68     		ldr	r3, [r3, #4]
  85 004e 1A46     		mov	r2, r3
ARM GAS  /tmp/ccZvMaOV.s 			page 6


  86 0050 3968     		ldr	r1, [r7]
  87 0052 FFF7FEFF 		bl	FMC_SDRAM_Timing_Init
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Enable FMC Peripheral */
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __FMC_ENABLE();
  88              		.loc 1 204 3
  89 0056 074B     		ldr	r3, .L5
  90 0058 1B68     		ldr	r3, [r3]
  91 005a 064A     		ldr	r2, .L5
  92 005c 43F00043 		orr	r3, r3, #-2147483648
  93 0060 1360     		str	r3, [r2]
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
  94              		.loc 1 206 17
  95 0062 7B68     		ldr	r3, [r7, #4]
  96 0064 0122     		movs	r2, #1
  97 0066 83F82C20 		strb	r2, [r3, #44]
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
  98              		.loc 1 208 10
  99 006a 0023     		movs	r3, #0
 100              	.L3:
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 101              		.loc 1 209 1
 102 006c 1846     		mov	r0, r3
 103 006e 0837     		adds	r7, r7, #8
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 8
 106 0070 BD46     		mov	sp, r7
 107              	.LCFI4:
 108              		.cfi_def_cfa_register 13
 109              		@ sp needed
 110 0072 80BD     		pop	{r7, pc}
 111              	.L6:
 112              		.align	2
 113              	.L5:
 114 0074 00400052 		.word	1375748096
 115              		.cfi_endproc
 116              	.LFE331:
 118              		.section	.text.HAL_SDRAM_DeInit,"ax",%progbits
 119              		.align	1
 120              		.global	HAL_SDRAM_DeInit
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	HAL_SDRAM_DeInit:
 127              	.LFB332:
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Perform the SDRAM device initialization sequence.
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
ARM GAS  /tmp/ccZvMaOV.s 			page 7


 128              		.loc 1 218 1
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132 0000 80B5     		push	{r7, lr}
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 82B0     		sub	sp, sp, #8
 138              	.LCFI6:
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              	.LCFI7:
 142              		.cfi_def_cfa_register 7
 143 0006 7860     		str	r0, [r7, #4]
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->MspDeInitCallback == NULL)
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* DeInit the low level hardware */
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->MspDeInitCallback(hsdram);
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Initialize the low level hardware (MSP) */
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_MspDeInit(hsdram);
 144              		.loc 1 229 3
 145 0008 7868     		ldr	r0, [r7, #4]
 146 000a FFF7FEFF 		bl	HAL_SDRAM_MspDeInit
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Configure the SDRAM registers with their reset values */
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 147              		.loc 1 233 9
 148 000e 7B68     		ldr	r3, [r7, #4]
 149 0010 1A68     		ldr	r2, [r3]
 150 0012 7B68     		ldr	r3, [r7, #4]
 151 0014 5B68     		ldr	r3, [r3, #4]
 152 0016 1946     		mov	r1, r3
 153 0018 1046     		mov	r0, r2
 154 001a FFF7FEFF 		bl	FMC_SDRAM_DeInit
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Reset the SDRAM controller state */
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_RESET;
 155              		.loc 1 236 17
 156 001e 7B68     		ldr	r3, [r7, #4]
 157 0020 0022     		movs	r2, #0
 158 0022 83F82C20 		strb	r2, [r3, #44]
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 159              		.loc 1 239 3
 160 0026 7B68     		ldr	r3, [r7, #4]
 161 0028 0022     		movs	r2, #0
 162 002a 83F82D20 		strb	r2, [r3, #45]
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccZvMaOV.s 			page 8


 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 163              		.loc 1 241 10
 164 002e 0023     		movs	r3, #0
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 165              		.loc 1 242 1
 166 0030 1846     		mov	r0, r3
 167 0032 0837     		adds	r7, r7, #8
 168              	.LCFI8:
 169              		.cfi_def_cfa_offset 8
 170 0034 BD46     		mov	sp, r7
 171              	.LCFI9:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 0036 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE332:
 178              		.section	.text.HAL_SDRAM_MspInit,"ax",%progbits
 179              		.align	1
 180              		.weak	HAL_SDRAM_MspInit
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
 186              	HAL_SDRAM_MspInit:
 187              	.LFB333:
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM MSP Init.
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 188              		.loc 1 251 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              	.LCFI10:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI11:
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI12:
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_MspInit could be implemented in the user file
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
ARM GAS  /tmp/ccZvMaOV.s 			page 9


 204              		.loc 1 258 1
 205 0008 00BF     		nop
 206 000a 0C37     		adds	r7, r7, #12
 207              	.LCFI13:
 208              		.cfi_def_cfa_offset 4
 209 000c BD46     		mov	sp, r7
 210              	.LCFI14:
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 000e 5DF8047B 		ldr	r7, [sp], #4
 214              	.LCFI15:
 215              		.cfi_restore 7
 216              		.cfi_def_cfa_offset 0
 217 0012 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE333:
 221              		.section	.text.HAL_SDRAM_MspDeInit,"ax",%progbits
 222              		.align	1
 223              		.weak	HAL_SDRAM_MspDeInit
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv5-d16
 229              	HAL_SDRAM_MspDeInit:
 230              	.LFB334:
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM MSP DeInit.
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef *hsdram)
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 231              		.loc 1 267 1
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 80B4     		push	{r7}
 237              	.LCFI16:
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0002 83B0     		sub	sp, sp, #12
 241              	.LCFI17:
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              	.LCFI18:
 245              		.cfi_def_cfa_register 7
 246 0006 7860     		str	r0, [r7, #4]
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_MspDeInit could be implemented in the user file
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
ARM GAS  /tmp/ccZvMaOV.s 			page 10


 247              		.loc 1 274 1
 248 0008 00BF     		nop
 249 000a 0C37     		adds	r7, r7, #12
 250              	.LCFI19:
 251              		.cfi_def_cfa_offset 4
 252 000c BD46     		mov	sp, r7
 253              	.LCFI20:
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 000e 5DF8047B 		ldr	r7, [sp], #4
 257              	.LCFI21:
 258              		.cfi_restore 7
 259              		.cfi_def_cfa_offset 0
 260 0012 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE334:
 264              		.section	.text.HAL_SDRAM_IRQHandler,"ax",%progbits
 265              		.align	1
 266              		.global	HAL_SDRAM_IRQHandler
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv5-d16
 272              	HAL_SDRAM_IRQHandler:
 273              	.LFB335:
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  This function handles SDRAM refresh error interrupt request.
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** void HAL_SDRAM_IRQHandler(SDRAM_HandleTypeDef *hsdram)
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 274              		.loc 1 283 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI22:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              	.LCFI23:
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI24:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check SDRAM interrupt Rising edge flag */
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (__FMC_SDRAM_GET_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_IT))
 290              		.loc 1 285 7
 291 0008 7B68     		ldr	r3, [r7, #4]
 292 000a 1B68     		ldr	r3, [r3]
 293 000c 9B69     		ldr	r3, [r3, #24]
 294 000e 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccZvMaOV.s 			page 11


 295              		.loc 1 285 6
 296 0012 012B     		cmp	r3, #1
 297 0014 0AD1     		bne	.L13
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* SDRAM refresh error interrupt callback */
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->RefreshErrorCallback(hsdram);
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     HAL_SDRAM_RefreshErrorCallback(hsdram);
 298              		.loc 1 291 5
 299 0016 7868     		ldr	r0, [r7, #4]
 300 0018 FFF7FEFF 		bl	HAL_SDRAM_RefreshErrorCallback
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Clear SDRAM refresh error interrupt pending bit */
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __FMC_SDRAM_CLEAR_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_ERROR);
 301              		.loc 1 295 5
 302 001c 7B68     		ldr	r3, [r7, #4]
 303 001e 1B68     		ldr	r3, [r3]
 304 0020 5A69     		ldr	r2, [r3, #20]
 305 0022 7B68     		ldr	r3, [r7, #4]
 306 0024 1B68     		ldr	r3, [r3]
 307 0026 42F00102 		orr	r2, r2, #1
 308 002a 5A61     		str	r2, [r3, #20]
 309              	.L13:
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 310              		.loc 1 297 1
 311 002c 00BF     		nop
 312 002e 0837     		adds	r7, r7, #8
 313              	.LCFI25:
 314              		.cfi_def_cfa_offset 8
 315 0030 BD46     		mov	sp, r7
 316              	.LCFI26:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0032 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE335:
 323              		.section	.text.HAL_SDRAM_RefreshErrorCallback,"ax",%progbits
 324              		.align	1
 325              		.weak	HAL_SDRAM_RefreshErrorCallback
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv5-d16
 331              	HAL_SDRAM_RefreshErrorCallback:
 332              	.LFB336:
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  SDRAM Refresh error callback.
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_RefreshErrorCallback(SDRAM_HandleTypeDef *hsdram)
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
ARM GAS  /tmp/ccZvMaOV.s 			page 12


 333              		.loc 1 306 1
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 8
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI27:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 83B0     		sub	sp, sp, #12
 343              	.LCFI28:
 344              		.cfi_def_cfa_offset 16
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI29:
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hsdram);
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_RefreshErrorCallback could be implemented in the user file
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 349              		.loc 1 313 1
 350 0008 00BF     		nop
 351 000a 0C37     		adds	r7, r7, #12
 352              	.LCFI30:
 353              		.cfi_def_cfa_offset 4
 354 000c BD46     		mov	sp, r7
 355              	.LCFI31:
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 000e 5DF8047B 		ldr	r7, [sp], #4
 359              	.LCFI32:
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 0012 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE336:
 366              		.section	.text.HAL_SDRAM_DMA_XferCpltCallback,"ax",%progbits
 367              		.align	1
 368              		.weak	HAL_SDRAM_DMA_XferCpltCallback
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv5-d16
 374              	HAL_SDRAM_DMA_XferCpltCallback:
 375              	.LFB337:
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  DMA transfer complete callback.
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma pointer to a DMA_HandleTypeDef structure that contains
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for the specified DMA module.
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferCpltCallback(MDMA_HandleTypeDef *hmdma)
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
ARM GAS  /tmp/ccZvMaOV.s 			page 13


 376              		.loc 1 322 1
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              	.LCFI33:
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 83B0     		sub	sp, sp, #12
 386              	.LCFI34:
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI35:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hmdma);
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferCpltCallback could be implemented in the user file
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 392              		.loc 1 329 1
 393 0008 00BF     		nop
 394 000a 0C37     		adds	r7, r7, #12
 395              	.LCFI36:
 396              		.cfi_def_cfa_offset 4
 397 000c BD46     		mov	sp, r7
 398              	.LCFI37:
 399              		.cfi_def_cfa_register 13
 400              		@ sp needed
 401 000e 5DF8047B 		ldr	r7, [sp], #4
 402              	.LCFI38:
 403              		.cfi_restore 7
 404              		.cfi_def_cfa_offset 0
 405 0012 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE337:
 409              		.section	.text.HAL_SDRAM_DMA_XferErrorCallback,"ax",%progbits
 410              		.align	1
 411              		.weak	HAL_SDRAM_DMA_XferErrorCallback
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv5-d16
 417              	HAL_SDRAM_DMA_XferErrorCallback:
 418              	.LFB338:
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  DMA transfer complete error callback.
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma DMA handle
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** __weak void HAL_SDRAM_DMA_XferErrorCallback(MDMA_HandleTypeDef *hmdma)
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 419              		.loc 1 337 1
ARM GAS  /tmp/ccZvMaOV.s 			page 14


 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              	.LCFI39:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 0002 83B0     		sub	sp, sp, #12
 429              	.LCFI40:
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              	.LCFI41:
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Prevent unused argument(s) compilation warning */
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   UNUSED(hmdma);
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****             the HAL_SDRAM_DMA_XferErrorCallback could be implemented in the user file
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****    */
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 435              		.loc 1 344 1
 436 0008 00BF     		nop
 437 000a 0C37     		adds	r7, r7, #12
 438              	.LCFI42:
 439              		.cfi_def_cfa_offset 4
 440 000c BD46     		mov	sp, r7
 441              	.LCFI43:
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 000e 5DF8047B 		ldr	r7, [sp], #4
 445              	.LCFI44:
 446              		.cfi_restore 7
 447              		.cfi_def_cfa_offset 0
 448 0012 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE338:
 452              		.section	.text.HAL_SDRAM_Read_8b,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_SDRAM_Read_8b
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv5-d16
 460              	HAL_SDRAM_Read_8b:
 461              	.LFB339:
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group2 Input and Output functions
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief    Input Output and memory control functions
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   @verbatim
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
ARM GAS  /tmp/ccZvMaOV.s 			page 15


 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                     ##### SDRAM Input and Output functions #####
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This section provides functions allowing to use and control the SDRAM memory
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 8-bit data buffer from the SDRAM memory.
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pDstB
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                     uint32_t BufferSize)
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 462              		.loc 1 375 1
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 32
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 0000 80B4     		push	{r7}
 468              	.LCFI45:
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 0002 89B0     		sub	sp, sp, #36
 472              	.LCFI46:
 473              		.cfi_def_cfa_offset 40
 474 0004 00AF     		add	r7, sp, #0
 475              	.LCFI47:
 476              		.cfi_def_cfa_register 7
 477 0006 F860     		str	r0, [r7, #12]
 478 0008 B960     		str	r1, [r7, #8]
 479 000a 7A60     		str	r2, [r7, #4]
 480 000c 3B60     		str	r3, [r7]
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 481              		.loc 1 377 17
 482 000e BB68     		ldr	r3, [r7, #8]
 483 0010 BB61     		str	r3, [r7, #24]
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint8_t *pdestbuff = pDstBuffer;
 484              		.loc 1 378 12
 485 0012 7B68     		ldr	r3, [r7, #4]
 486 0014 7B61     		str	r3, [r7, #20]
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 487              		.loc 1 379 26
 488 0016 FB68     		ldr	r3, [r7, #12]
 489 0018 93F82C30 		ldrb	r3, [r3, #44]
 490 001c FB74     		strb	r3, [r7, #19]
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
ARM GAS  /tmp/ccZvMaOV.s 			page 16


 491              		.loc 1 382 6
 492 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 493 0020 022B     		cmp	r3, #2
 494 0022 01D1     		bne	.L18
 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 495              		.loc 1 384 12
 496 0024 0223     		movs	r3, #2
 497 0026 33E0     		b	.L19
 498              	.L18:
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 499              		.loc 1 386 11
 500 0028 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 501 002a 012B     		cmp	r3, #1
 502 002c 02D0     		beq	.L20
 503              		.loc 1 386 45 discriminator 1
 504 002e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 505 0030 042B     		cmp	r3, #4
 506 0032 2CD1     		bne	.L21
 507              	.L20:
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 508              		.loc 1 389 5
 509 0034 FB68     		ldr	r3, [r7, #12]
 510 0036 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 511 003a 012B     		cmp	r3, #1
 512 003c 01D1     		bne	.L22
 513              		.loc 1 389 5 is_stmt 0 discriminator 1
 514 003e 0223     		movs	r3, #2
 515 0040 26E0     		b	.L19
 516              	.L22:
 517              		.loc 1 389 5 discriminator 2
 518 0042 FB68     		ldr	r3, [r7, #12]
 519 0044 0122     		movs	r2, #1
 520 0046 83F82D20 		strb	r2, [r3, #45]
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 521              		.loc 1 392 19 is_stmt 1 discriminator 2
 522 004a FB68     		ldr	r3, [r7, #12]
 523 004c 0222     		movs	r2, #2
 524 004e 83F82C20 		strb	r2, [r3, #44]
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from source */
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 525              		.loc 1 395 15 discriminator 2
 526 0052 3B68     		ldr	r3, [r7]
 527 0054 FB61     		str	r3, [r7, #28]
 528              		.loc 1 395 5 discriminator 2
 529 0056 0DE0     		b	.L23
 530              	.L24:
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = *(__IO uint8_t *)pSdramAddress;
 531              		.loc 1 397 20 discriminator 3
 532 0058 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccZvMaOV.s 			page 17


 533 005a 1B78     		ldrb	r3, [r3]
 534 005c DAB2     		uxtb	r2, r3
 535              		.loc 1 397 18 discriminator 3
 536 005e 7B69     		ldr	r3, [r7, #20]
 537 0060 1A70     		strb	r2, [r3]
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 538              		.loc 1 398 16 discriminator 3
 539 0062 7B69     		ldr	r3, [r7, #20]
 540 0064 0133     		adds	r3, r3, #1
 541 0066 7B61     		str	r3, [r7, #20]
 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 542              		.loc 1 399 20 discriminator 3
 543 0068 BB69     		ldr	r3, [r7, #24]
 544 006a 0133     		adds	r3, r3, #1
 545 006c BB61     		str	r3, [r7, #24]
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 546              		.loc 1 395 45 discriminator 3
 547 006e FB69     		ldr	r3, [r7, #28]
 548 0070 013B     		subs	r3, r3, #1
 549 0072 FB61     		str	r3, [r7, #28]
 550              	.L23:
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 551              		.loc 1 395 5 discriminator 1
 552 0074 FB69     		ldr	r3, [r7, #28]
 553 0076 002B     		cmp	r3, #0
 554 0078 EED1     		bne	.L24
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 555              		.loc 1 403 19
 556 007a FB68     		ldr	r3, [r7, #12]
 557 007c FA7C     		ldrb	r2, [r7, #19]
 558 007e 83F82C20 		strb	r2, [r3, #44]
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 559              		.loc 1 406 5
 560 0082 FB68     		ldr	r3, [r7, #12]
 561 0084 0022     		movs	r2, #0
 562 0086 83F82D20 		strb	r2, [r3, #45]
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 563              		.loc 1 413 10
 564 008a 0023     		movs	r3, #0
 565 008c 00E0     		b	.L19
 566              	.L21:
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 567              		.loc 1 410 13
 568 008e 0123     		movs	r3, #1
 569              	.L19:
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
ARM GAS  /tmp/ccZvMaOV.s 			page 18


 570              		.loc 1 414 1
 571 0090 1846     		mov	r0, r3
 572 0092 2437     		adds	r7, r7, #36
 573              	.LCFI48:
 574              		.cfi_def_cfa_offset 4
 575 0094 BD46     		mov	sp, r7
 576              	.LCFI49:
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0096 5DF8047B 		ldr	r7, [sp], #4
 580              	.LCFI50:
 581              		.cfi_restore 7
 582              		.cfi_def_cfa_offset 0
 583 009a 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE339:
 587              		.section	.text.HAL_SDRAM_Write_8b,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_SDRAM_Write_8b
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv5-d16
 595              	HAL_SDRAM_Write_8b:
 596              	.LFB340:
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 8-bit data buffer to SDRAM memory.
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_8b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint8_t *pSrc
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                      uint32_t BufferSize)
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 597              		.loc 1 427 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 32
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602 0000 80B4     		push	{r7}
 603              	.LCFI51:
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 7, -4
 606 0002 89B0     		sub	sp, sp, #36
 607              	.LCFI52:
 608              		.cfi_def_cfa_offset 40
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI53:
 611              		.cfi_def_cfa_register 7
 612 0006 F860     		str	r0, [r7, #12]
 613 0008 B960     		str	r1, [r7, #8]
 614 000a 7A60     		str	r2, [r7, #4]
 615 000c 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccZvMaOV.s 			page 19


 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint8_t *pSdramAddress = (uint8_t *)pAddress;
 616              		.loc 1 429 17
 617 000e BB68     		ldr	r3, [r7, #8]
 618 0010 BB61     		str	r3, [r7, #24]
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint8_t *psrcbuff = pSrcBuffer;
 619              		.loc 1 430 12
 620 0012 7B68     		ldr	r3, [r7, #4]
 621 0014 7B61     		str	r3, [r7, #20]
 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 622              		.loc 1 433 13
 623 0016 FB68     		ldr	r3, [r7, #12]
 624 0018 93F82C30 		ldrb	r3, [r3, #44]
 625 001c DBB2     		uxtb	r3, r3
 626              		.loc 1 433 6
 627 001e 022B     		cmp	r3, #2
 628 0020 01D1     		bne	.L26
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 629              		.loc 1 435 12
 630 0022 0223     		movs	r3, #2
 631 0024 32E0     		b	.L27
 632              	.L26:
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 633              		.loc 1 437 18
 634 0026 FB68     		ldr	r3, [r7, #12]
 635 0028 93F82C30 		ldrb	r3, [r3, #44]
 636 002c DBB2     		uxtb	r3, r3
 637              		.loc 1 437 11
 638 002e 012B     		cmp	r3, #1
 639 0030 2BD1     		bne	.L28
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 640              		.loc 1 440 5
 641 0032 FB68     		ldr	r3, [r7, #12]
 642 0034 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 643 0038 012B     		cmp	r3, #1
 644 003a 01D1     		bne	.L29
 645              		.loc 1 440 5 is_stmt 0 discriminator 1
 646 003c 0223     		movs	r3, #2
 647 003e 25E0     		b	.L27
 648              	.L29:
 649              		.loc 1 440 5 discriminator 2
 650 0040 FB68     		ldr	r3, [r7, #12]
 651 0042 0122     		movs	r2, #1
 652 0044 83F82D20 		strb	r2, [r3, #45]
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 653              		.loc 1 443 19 is_stmt 1 discriminator 2
 654 0048 FB68     		ldr	r3, [r7, #12]
 655 004a 0222     		movs	r2, #2
 656 004c 83F82C20 		strb	r2, [r3, #44]
ARM GAS  /tmp/ccZvMaOV.s 			page 20


 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 657              		.loc 1 446 15 discriminator 2
 658 0050 3B68     		ldr	r3, [r7]
 659 0052 FB61     		str	r3, [r7, #28]
 660              		.loc 1 446 5 discriminator 2
 661 0054 0CE0     		b	.L30
 662              	.L31:
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *(__IO uint8_t *)pSdramAddress = *psrcbuff;
 663              		.loc 1 448 40 discriminator 3
 664 0056 7B69     		ldr	r3, [r7, #20]
 665 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 666              		.loc 1 448 38 discriminator 3
 667 005a BB69     		ldr	r3, [r7, #24]
 668 005c 1A70     		strb	r2, [r3]
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 669              		.loc 1 449 15 discriminator 3
 670 005e 7B69     		ldr	r3, [r7, #20]
 671 0060 0133     		adds	r3, r3, #1
 672 0062 7B61     		str	r3, [r7, #20]
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 673              		.loc 1 450 20 discriminator 3
 674 0064 BB69     		ldr	r3, [r7, #24]
 675 0066 0133     		adds	r3, r3, #1
 676 0068 BB61     		str	r3, [r7, #24]
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 677              		.loc 1 446 45 discriminator 3
 678 006a FB69     		ldr	r3, [r7, #28]
 679 006c 013B     		subs	r3, r3, #1
 680 006e FB61     		str	r3, [r7, #28]
 681              	.L30:
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 682              		.loc 1 446 5 discriminator 1
 683 0070 FB69     		ldr	r3, [r7, #28]
 684 0072 002B     		cmp	r3, #0
 685 0074 EFD1     		bne	.L31
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 686              		.loc 1 454 19
 687 0076 FB68     		ldr	r3, [r7, #12]
 688 0078 0122     		movs	r2, #1
 689 007a 83F82C20 		strb	r2, [r3, #44]
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 690              		.loc 1 457 5
 691 007e FB68     		ldr	r3, [r7, #12]
 692 0080 0022     		movs	r2, #0
 693 0082 83F82D20 		strb	r2, [r3, #45]
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
ARM GAS  /tmp/ccZvMaOV.s 			page 21


 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 694              		.loc 1 464 10
 695 0086 0023     		movs	r3, #0
 696 0088 00E0     		b	.L27
 697              	.L28:
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 698              		.loc 1 461 13
 699 008a 0123     		movs	r3, #1
 700              	.L27:
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 701              		.loc 1 465 1
 702 008c 1846     		mov	r0, r3
 703 008e 2437     		adds	r7, r7, #36
 704              	.LCFI54:
 705              		.cfi_def_cfa_offset 4
 706 0090 BD46     		mov	sp, r7
 707              	.LCFI55:
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 0092 5DF8047B 		ldr	r7, [sp], #4
 711              	.LCFI56:
 712              		.cfi_restore 7
 713              		.cfi_def_cfa_offset 0
 714 0096 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE340:
 718              		.section	.text.HAL_SDRAM_Read_16b,"ax",%progbits
 719              		.align	1
 720              		.global	HAL_SDRAM_Read_16b
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-d16
 726              	HAL_SDRAM_Read_16b:
 727              	.LFB341:
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 16-bit data buffer from the SDRAM memory.
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pDs
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                      uint32_t BufferSize)
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 728              		.loc 1 478 1
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 32
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              	.LCFI57:
ARM GAS  /tmp/ccZvMaOV.s 			page 22


 735              		.cfi_def_cfa_offset 4
 736              		.cfi_offset 7, -4
 737 0002 89B0     		sub	sp, sp, #36
 738              	.LCFI58:
 739              		.cfi_def_cfa_offset 40
 740 0004 00AF     		add	r7, sp, #0
 741              	.LCFI59:
 742              		.cfi_def_cfa_register 7
 743 0006 F860     		str	r0, [r7, #12]
 744 0008 B960     		str	r1, [r7, #8]
 745 000a 7A60     		str	r2, [r7, #4]
 746 000c 3B60     		str	r3, [r7]
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = pAddress;
 747              		.loc 1 480 18
 748 000e BB68     		ldr	r3, [r7, #8]
 749 0010 BB61     		str	r3, [r7, #24]
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint16_t *pdestbuff = pDstBuffer;
 750              		.loc 1 481 13
 751 0012 7B68     		ldr	r3, [r7, #4]
 752 0014 7B61     		str	r3, [r7, #20]
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 753              		.loc 1 482 26
 754 0016 FB68     		ldr	r3, [r7, #12]
 755 0018 93F82C30 		ldrb	r3, [r3, #44]
 756 001c FB74     		strb	r3, [r7, #19]
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 757              		.loc 1 485 6
 758 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 759 0020 022B     		cmp	r3, #2
 760 0022 01D1     		bne	.L34
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 761              		.loc 1 487 12
 762 0024 0223     		movs	r3, #2
 763 0026 46E0     		b	.L35
 764              	.L34:
 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 765              		.loc 1 489 11
 766 0028 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 767 002a 012B     		cmp	r3, #1
 768 002c 02D0     		beq	.L36
 769              		.loc 1 489 45 discriminator 1
 770 002e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 771 0030 042B     		cmp	r3, #4
 772 0032 3FD1     		bne	.L37
 773              	.L36:
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 774              		.loc 1 492 5
 775 0034 FB68     		ldr	r3, [r7, #12]
 776 0036 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 777 003a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccZvMaOV.s 			page 23


 778 003c 01D1     		bne	.L38
 779              		.loc 1 492 5 is_stmt 0 discriminator 1
 780 003e 0223     		movs	r3, #2
 781 0040 39E0     		b	.L35
 782              	.L38:
 783              		.loc 1 492 5 discriminator 2
 784 0042 FB68     		ldr	r3, [r7, #12]
 785 0044 0122     		movs	r2, #1
 786 0046 83F82D20 		strb	r2, [r3, #45]
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 787              		.loc 1 495 19 is_stmt 1 discriminator 2
 788 004a FB68     		ldr	r3, [r7, #12]
 789 004c 0222     		movs	r2, #2
 790 004e 83F82C20 		strb	r2, [r3, #44]
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from memory */
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size >= 2U ; size -= 2U)
 791              		.loc 1 498 15 discriminator 2
 792 0052 3B68     		ldr	r3, [r7]
 793 0054 FB61     		str	r3, [r7, #28]
 794              		.loc 1 498 5 discriminator 2
 795 0056 16E0     		b	.L39
 796              	.L40:
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)((*pSdramAddress) & 0x0000FFFFU);
 797              		.loc 1 500 32 discriminator 3
 798 0058 BB69     		ldr	r3, [r7, #24]
 799 005a 1B68     		ldr	r3, [r3]
 800              		.loc 1 500 20 discriminator 3
 801 005c 9AB2     		uxth	r2, r3
 802              		.loc 1 500 18 discriminator 3
 803 005e 7B69     		ldr	r3, [r7, #20]
 804 0060 1A80     		strh	r2, [r3]	@ movhi
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 805              		.loc 1 501 16 discriminator 3
 806 0062 7B69     		ldr	r3, [r7, #20]
 807 0064 0233     		adds	r3, r3, #2
 808 0066 7B61     		str	r3, [r7, #20]
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)(((*pSdramAddress) & 0xFFFF0000U) >> 16U);
 809              		.loc 1 502 33 discriminator 3
 810 0068 BB69     		ldr	r3, [r7, #24]
 811 006a 1B68     		ldr	r3, [r3]
 812              		.loc 1 502 64 discriminator 3
 813 006c 1B0C     		lsrs	r3, r3, #16
 814              		.loc 1 502 20 discriminator 3
 815 006e 9AB2     		uxth	r2, r3
 816              		.loc 1 502 18 discriminator 3
 817 0070 7B69     		ldr	r3, [r7, #20]
 818 0072 1A80     		strh	r2, [r3]	@ movhi
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 819              		.loc 1 503 16 discriminator 3
 820 0074 7B69     		ldr	r3, [r7, #20]
 821 0076 0233     		adds	r3, r3, #2
 822 0078 7B61     		str	r3, [r7, #20]
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
ARM GAS  /tmp/ccZvMaOV.s 			page 24


 823              		.loc 1 504 20 discriminator 3
 824 007a BB69     		ldr	r3, [r7, #24]
 825 007c 0433     		adds	r3, r3, #4
 826 007e BB61     		str	r3, [r7, #24]
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 827              		.loc 1 498 47 discriminator 3
 828 0080 FB69     		ldr	r3, [r7, #28]
 829 0082 023B     		subs	r3, r3, #2
 830 0084 FB61     		str	r3, [r7, #28]
 831              	.L39:
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 832              		.loc 1 498 5 discriminator 1
 833 0086 FB69     		ldr	r3, [r7, #28]
 834 0088 012B     		cmp	r3, #1
 835 008a E5D8     		bhi	.L40
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read last 16-bits if size is not 32-bits multiple */
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if ((BufferSize % 2U) != 0U)
 836              		.loc 1 508 21
 837 008c 3B68     		ldr	r3, [r7]
 838 008e 03F00103 		and	r3, r3, #1
 839              		.loc 1 508 8
 840 0092 002B     		cmp	r3, #0
 841 0094 04D0     		beq	.L41
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = (uint16_t)((*pSdramAddress) & 0x0000FFFFU);
 842              		.loc 1 510 32
 843 0096 BB69     		ldr	r3, [r7, #24]
 844 0098 1B68     		ldr	r3, [r3]
 845              		.loc 1 510 20
 846 009a 9AB2     		uxth	r2, r3
 847              		.loc 1 510 18
 848 009c 7B69     		ldr	r3, [r7, #20]
 849 009e 1A80     		strh	r2, [r3]	@ movhi
 850              	.L41:
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 851              		.loc 1 514 19
 852 00a0 FB68     		ldr	r3, [r7, #12]
 853 00a2 FA7C     		ldrb	r2, [r7, #19]
 854 00a4 83F82C20 		strb	r2, [r3, #44]
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 855              		.loc 1 517 5
 856 00a8 FB68     		ldr	r3, [r7, #12]
 857 00aa 0022     		movs	r2, #0
 858 00ac 83F82D20 		strb	r2, [r3, #45]
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccZvMaOV.s 			page 25


 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 859              		.loc 1 524 10
 860 00b0 0023     		movs	r3, #0
 861 00b2 00E0     		b	.L35
 862              	.L37:
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 863              		.loc 1 521 13
 864 00b4 0123     		movs	r3, #1
 865              	.L35:
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 866              		.loc 1 525 1
 867 00b6 1846     		mov	r0, r3
 868 00b8 2437     		adds	r7, r7, #36
 869              	.LCFI60:
 870              		.cfi_def_cfa_offset 4
 871 00ba BD46     		mov	sp, r7
 872              	.LCFI61:
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 00bc 5DF8047B 		ldr	r7, [sp], #4
 876              	.LCFI62:
 877              		.cfi_restore 7
 878              		.cfi_def_cfa_offset 0
 879 00c0 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE341:
 883              		.section	.text.HAL_SDRAM_Write_16b,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_SDRAM_Write_16b
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu fpv5-d16
 891              	HAL_SDRAM_Write_16b:
 892              	.LFB342:
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 16-bit data buffer to SDRAM memory.
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_16b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint16_t *pS
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                       uint32_t BufferSize)
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 893              		.loc 1 538 1
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 32
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898 0000 80B4     		push	{r7}
 899              	.LCFI63:
 900              		.cfi_def_cfa_offset 4
 901              		.cfi_offset 7, -4
ARM GAS  /tmp/ccZvMaOV.s 			page 26


 902 0002 89B0     		sub	sp, sp, #36
 903              	.LCFI64:
 904              		.cfi_def_cfa_offset 40
 905 0004 00AF     		add	r7, sp, #0
 906              	.LCFI65:
 907              		.cfi_def_cfa_register 7
 908 0006 F860     		str	r0, [r7, #12]
 909 0008 B960     		str	r1, [r7, #8]
 910 000a 7A60     		str	r2, [r7, #4]
 911 000c 3B60     		str	r3, [r7]
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *psdramaddress = pAddress;
 912              		.loc 1 540 18
 913 000e BB68     		ldr	r3, [r7, #8]
 914 0010 BB61     		str	r3, [r7, #24]
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint16_t *psrcbuff = pSrcBuffer;
 915              		.loc 1 541 13
 916 0012 7B68     		ldr	r3, [r7, #4]
 917 0014 7B61     		str	r3, [r7, #20]
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 918              		.loc 1 544 13
 919 0016 FB68     		ldr	r3, [r7, #12]
 920 0018 93F82C30 		ldrb	r3, [r3, #44]
 921 001c DBB2     		uxtb	r3, r3
 922              		.loc 1 544 6
 923 001e 022B     		cmp	r3, #2
 924 0020 01D1     		bne	.L43
 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 925              		.loc 1 546 12
 926 0022 0223     		movs	r3, #2
 927 0024 4EE0     		b	.L44
 928              	.L43:
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 929              		.loc 1 548 18
 930 0026 FB68     		ldr	r3, [r7, #12]
 931 0028 93F82C30 		ldrb	r3, [r3, #44]
 932 002c DBB2     		uxtb	r3, r3
 933              		.loc 1 548 11
 934 002e 012B     		cmp	r3, #1
 935 0030 47D1     		bne	.L45
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 936              		.loc 1 551 5
 937 0032 FB68     		ldr	r3, [r7, #12]
 938 0034 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 939 0038 012B     		cmp	r3, #1
 940 003a 01D1     		bne	.L46
 941              		.loc 1 551 5 is_stmt 0 discriminator 1
 942 003c 0223     		movs	r3, #2
 943 003e 41E0     		b	.L44
 944              	.L46:
 945              		.loc 1 551 5 discriminator 2
ARM GAS  /tmp/ccZvMaOV.s 			page 27


 946 0040 FB68     		ldr	r3, [r7, #12]
 947 0042 0122     		movs	r2, #1
 948 0044 83F82D20 		strb	r2, [r3, #45]
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 949              		.loc 1 554 19 is_stmt 1 discriminator 2
 950 0048 FB68     		ldr	r3, [r7, #12]
 951 004a 0222     		movs	r2, #2
 952 004c 83F82C20 		strb	r2, [r3, #44]
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size >= 2U ; size -= 2U)
 953              		.loc 1 557 15 discriminator 2
 954 0050 3B68     		ldr	r3, [r7]
 955 0052 FB61     		str	r3, [r7, #28]
 956              		.loc 1 557 5 discriminator 2
 957 0054 18E0     		b	.L47
 958              	.L48:
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress = (uint32_t)(*psrcbuff);
 959              		.loc 1 559 35 discriminator 3
 960 0056 7B69     		ldr	r3, [r7, #20]
 961 0058 1B88     		ldrh	r3, [r3]
 962              		.loc 1 559 24 discriminator 3
 963 005a 1A46     		mov	r2, r3
 964              		.loc 1 559 22 discriminator 3
 965 005c BB69     		ldr	r3, [r7, #24]
 966 005e 1A60     		str	r2, [r3]
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 967              		.loc 1 560 15 discriminator 3
 968 0060 7B69     		ldr	r3, [r7, #20]
 969 0062 0233     		adds	r3, r3, #2
 970 0064 7B61     		str	r3, [r7, #20]
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress |= ((uint32_t)(*psrcbuff) << 16U);
 971              		.loc 1 561 22 discriminator 3
 972 0066 BB69     		ldr	r3, [r7, #24]
 973 0068 1A68     		ldr	r2, [r3]
 974              		.loc 1 561 37 discriminator 3
 975 006a 7B69     		ldr	r3, [r7, #20]
 976 006c 1B88     		ldrh	r3, [r3]
 977              		.loc 1 561 48 discriminator 3
 978 006e 1B04     		lsls	r3, r3, #16
 979              		.loc 1 561 22 discriminator 3
 980 0070 1A43     		orrs	r2, r2, r3
 981 0072 BB69     		ldr	r3, [r7, #24]
 982 0074 1A60     		str	r2, [r3]
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 983              		.loc 1 562 15 discriminator 3
 984 0076 7B69     		ldr	r3, [r7, #20]
 985 0078 0233     		adds	r3, r3, #2
 986 007a 7B61     		str	r3, [r7, #20]
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psdramaddress++;
 987              		.loc 1 563 20 discriminator 3
 988 007c BB69     		ldr	r3, [r7, #24]
 989 007e 0433     		adds	r3, r3, #4
 990 0080 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccZvMaOV.s 			page 28


 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 991              		.loc 1 557 47 discriminator 3
 992 0082 FB69     		ldr	r3, [r7, #28]
 993 0084 023B     		subs	r3, r3, #2
 994 0086 FB61     		str	r3, [r7, #28]
 995              	.L47:
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 996              		.loc 1 557 5 discriminator 1
 997 0088 FB69     		ldr	r3, [r7, #28]
 998 008a 012B     		cmp	r3, #1
 999 008c E3D8     		bhi	.L48
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write last 16-bits if size is not 32-bits multiple */
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if ((BufferSize % 2U) != 0U)
 1000              		.loc 1 567 21
 1001 008e 3B68     		ldr	r3, [r7]
 1002 0090 03F00103 		and	r3, r3, #1
 1003              		.loc 1 567 8
 1004 0094 002B     		cmp	r3, #0
 1005 0096 0AD0     		beq	.L49
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *psdramaddress = ((uint32_t)(*psrcbuff) & 0x0000FFFFU) | ((*psdramaddress) & 0xFFFF0000U);
 1006              		.loc 1 569 36
 1007 0098 7B69     		ldr	r3, [r7, #20]
 1008 009a 1B88     		ldrh	r3, [r3]
 1009              		.loc 1 569 47
 1010 009c 1946     		mov	r1, r3
 1011              		.loc 1 569 66
 1012 009e BB69     		ldr	r3, [r7, #24]
 1013 00a0 1A68     		ldr	r2, [r3]
 1014              		.loc 1 569 82
 1015 00a2 0B4B     		ldr	r3, .L51
 1016 00a4 1340     		ands	r3, r3, r2
 1017              		.loc 1 569 62
 1018 00a6 41EA0302 		orr	r2, r1, r3
 1019              		.loc 1 569 22
 1020 00aa BB69     		ldr	r3, [r7, #24]
 1021 00ac 1A60     		str	r2, [r3]
 1022              	.L49:
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1023              		.loc 1 573 19
 1024 00ae FB68     		ldr	r3, [r7, #12]
 1025 00b0 0122     		movs	r2, #1
 1026 00b2 83F82C20 		strb	r2, [r3, #44]
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 1027              		.loc 1 576 5
 1028 00b6 FB68     		ldr	r3, [r7, #12]
 1029 00b8 0022     		movs	r2, #0
 1030 00ba 83F82D20 		strb	r2, [r3, #45]
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
ARM GAS  /tmp/ccZvMaOV.s 			page 29


 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1031              		.loc 1 583 10
 1032 00be 0023     		movs	r3, #0
 1033 00c0 00E0     		b	.L44
 1034              	.L45:
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1035              		.loc 1 580 13
 1036 00c2 0123     		movs	r3, #1
 1037              	.L44:
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1038              		.loc 1 584 1
 1039 00c4 1846     		mov	r0, r3
 1040 00c6 2437     		adds	r7, r7, #36
 1041              	.LCFI66:
 1042              		.cfi_def_cfa_offset 4
 1043 00c8 BD46     		mov	sp, r7
 1044              	.LCFI67:
 1045              		.cfi_def_cfa_register 13
 1046              		@ sp needed
 1047 00ca 5DF8047B 		ldr	r7, [sp], #4
 1048              	.LCFI68:
 1049              		.cfi_restore 7
 1050              		.cfi_def_cfa_offset 0
 1051 00ce 7047     		bx	lr
 1052              	.L52:
 1053              		.align	2
 1054              	.L51:
 1055 00d0 0000FFFF 		.word	-65536
 1056              		.cfi_endproc
 1057              	.LFE342:
 1059              		.section	.text.HAL_SDRAM_Read_32b,"ax",%progbits
 1060              		.align	1
 1061              		.global	HAL_SDRAM_Read_32b
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu fpv5-d16
 1067              	HAL_SDRAM_Read_32b:
 1068              	.LFB343:
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads 32-bit data buffer from the SDRAM memory.
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                      uint32_t BufferSize)
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1069              		.loc 1 597 1
ARM GAS  /tmp/ccZvMaOV.s 			page 30


 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 32
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074 0000 80B4     		push	{r7}
 1075              	.LCFI69:
 1076              		.cfi_def_cfa_offset 4
 1077              		.cfi_offset 7, -4
 1078 0002 89B0     		sub	sp, sp, #36
 1079              	.LCFI70:
 1080              		.cfi_def_cfa_offset 40
 1081 0004 00AF     		add	r7, sp, #0
 1082              	.LCFI71:
 1083              		.cfi_def_cfa_register 7
 1084 0006 F860     		str	r0, [r7, #12]
 1085 0008 B960     		str	r1, [r7, #8]
 1086 000a 7A60     		str	r2, [r7, #4]
 1087 000c 3B60     		str	r3, [r7]
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = (uint32_t *)pAddress;
 1088              		.loc 1 599 18
 1089 000e BB68     		ldr	r3, [r7, #8]
 1090 0010 BB61     		str	r3, [r7, #24]
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t *pdestbuff = pDstBuffer;
 1091              		.loc 1 600 13
 1092 0012 7B68     		ldr	r3, [r7, #4]
 1093 0014 7B61     		str	r3, [r7, #20]
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1094              		.loc 1 601 26
 1095 0016 FB68     		ldr	r3, [r7, #12]
 1096 0018 93F82C30 		ldrb	r3, [r3, #44]
 1097 001c FB74     		strb	r3, [r7, #19]
 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 1098              		.loc 1 604 6
 1099 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1100 0020 022B     		cmp	r3, #2
 1101 0022 01D1     		bne	.L54
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1102              		.loc 1 606 12
 1103 0024 0223     		movs	r3, #2
 1104 0026 32E0     		b	.L55
 1105              	.L54:
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 1106              		.loc 1 608 11
 1107 0028 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1108 002a 012B     		cmp	r3, #1
 1109 002c 02D0     		beq	.L56
 1110              		.loc 1 608 45 discriminator 1
 1111 002e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1112 0030 042B     		cmp	r3, #4
 1113 0032 2BD1     		bne	.L57
 1114              	.L56:
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
ARM GAS  /tmp/ccZvMaOV.s 			page 31


 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 1115              		.loc 1 611 5
 1116 0034 FB68     		ldr	r3, [r7, #12]
 1117 0036 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1118 003a 012B     		cmp	r3, #1
 1119 003c 01D1     		bne	.L58
 1120              		.loc 1 611 5 is_stmt 0 discriminator 1
 1121 003e 0223     		movs	r3, #2
 1122 0040 25E0     		b	.L55
 1123              	.L58:
 1124              		.loc 1 611 5 discriminator 2
 1125 0042 FB68     		ldr	r3, [r7, #12]
 1126 0044 0122     		movs	r2, #1
 1127 0046 83F82D20 		strb	r2, [r3, #45]
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1128              		.loc 1 614 19 is_stmt 1 discriminator 2
 1129 004a FB68     		ldr	r3, [r7, #12]
 1130 004c 0222     		movs	r2, #2
 1131 004e 83F82C20 		strb	r2, [r3, #44]
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Read data from source */
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 1132              		.loc 1 617 15 discriminator 2
 1133 0052 3B68     		ldr	r3, [r7]
 1134 0054 FB61     		str	r3, [r7, #28]
 1135              		.loc 1 617 5 discriminator 2
 1136 0056 0CE0     		b	.L59
 1137              	.L60:
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pdestbuff = *(__IO uint32_t *)pSdramAddress;
 1138              		.loc 1 619 20 discriminator 3
 1139 0058 BB69     		ldr	r3, [r7, #24]
 1140 005a 1A68     		ldr	r2, [r3]
 1141              		.loc 1 619 18 discriminator 3
 1142 005c 7B69     		ldr	r3, [r7, #20]
 1143 005e 1A60     		str	r2, [r3]
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pdestbuff++;
 1144              		.loc 1 620 16 discriminator 3
 1145 0060 7B69     		ldr	r3, [r7, #20]
 1146 0062 0433     		adds	r3, r3, #4
 1147 0064 7B61     		str	r3, [r7, #20]
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
 1148              		.loc 1 621 20 discriminator 3
 1149 0066 BB69     		ldr	r3, [r7, #24]
 1150 0068 0433     		adds	r3, r3, #4
 1151 006a BB61     		str	r3, [r7, #24]
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1152              		.loc 1 617 45 discriminator 3
 1153 006c FB69     		ldr	r3, [r7, #28]
 1154 006e 013B     		subs	r3, r3, #1
 1155 0070 FB61     		str	r3, [r7, #28]
 1156              	.L59:
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1157              		.loc 1 617 5 discriminator 1
ARM GAS  /tmp/ccZvMaOV.s 			page 32


 1158 0072 FB69     		ldr	r3, [r7, #28]
 1159 0074 002B     		cmp	r3, #0
 1160 0076 EFD1     		bne	.L60
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = state;
 1161              		.loc 1 625 19
 1162 0078 FB68     		ldr	r3, [r7, #12]
 1163 007a FA7C     		ldrb	r2, [r7, #19]
 1164 007c 83F82C20 		strb	r2, [r3, #44]
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 1165              		.loc 1 628 5
 1166 0080 FB68     		ldr	r3, [r7, #12]
 1167 0082 0022     		movs	r2, #0
 1168 0084 83F82D20 		strb	r2, [r3, #45]
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1169              		.loc 1 635 10
 1170 0088 0023     		movs	r3, #0
 1171 008a 00E0     		b	.L55
 1172              	.L57:
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1173              		.loc 1 632 13
 1174 008c 0123     		movs	r3, #1
 1175              	.L55:
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1176              		.loc 1 636 1
 1177 008e 1846     		mov	r0, r3
 1178 0090 2437     		adds	r7, r7, #36
 1179              	.LCFI72:
 1180              		.cfi_def_cfa_offset 4
 1181 0092 BD46     		mov	sp, r7
 1182              	.LCFI73:
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 0094 5DF8047B 		ldr	r7, [sp], #4
 1186              	.LCFI74:
 1187              		.cfi_restore 7
 1188              		.cfi_def_cfa_offset 0
 1189 0098 7047     		bx	lr
 1190              		.cfi_endproc
 1191              	.LFE343:
 1193              		.section	.text.HAL_SDRAM_Write_32b,"ax",%progbits
 1194              		.align	1
 1195              		.global	HAL_SDRAM_Write_32b
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1199              		.fpu fpv5-d16
ARM GAS  /tmp/ccZvMaOV.s 			page 33


 1201              	HAL_SDRAM_Write_32b:
 1202              	.LFB344:
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes 32-bit data buffer to SDRAM memory.
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_32b(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                       uint32_t BufferSize)
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1203              		.loc 1 649 1
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 32
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208 0000 80B4     		push	{r7}
 1209              	.LCFI75:
 1210              		.cfi_def_cfa_offset 4
 1211              		.cfi_offset 7, -4
 1212 0002 89B0     		sub	sp, sp, #36
 1213              	.LCFI76:
 1214              		.cfi_def_cfa_offset 40
 1215 0004 00AF     		add	r7, sp, #0
 1216              	.LCFI77:
 1217              		.cfi_def_cfa_register 7
 1218 0006 F860     		str	r0, [r7, #12]
 1219 0008 B960     		str	r1, [r7, #8]
 1220 000a 7A60     		str	r2, [r7, #4]
 1221 000c 3B60     		str	r3, [r7]
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t size;
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __IO uint32_t *pSdramAddress = pAddress;
 1222              		.loc 1 651 18
 1223 000e BB68     		ldr	r3, [r7, #8]
 1224 0010 BB61     		str	r3, [r7, #24]
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   uint32_t *psrcbuff = pSrcBuffer;
 1225              		.loc 1 652 13
 1226 0012 7B68     		ldr	r3, [r7, #4]
 1227 0014 7B61     		str	r3, [r7, #20]
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 1228              		.loc 1 655 13
 1229 0016 FB68     		ldr	r3, [r7, #12]
 1230 0018 93F82C30 		ldrb	r3, [r3, #44]
 1231 001c DBB2     		uxtb	r3, r3
 1232              		.loc 1 655 6
 1233 001e 022B     		cmp	r3, #2
 1234 0020 01D1     		bne	.L62
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1235              		.loc 1 657 12
 1236 0022 0223     		movs	r3, #2
ARM GAS  /tmp/ccZvMaOV.s 			page 34


 1237 0024 32E0     		b	.L63
 1238              	.L62:
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 1239              		.loc 1 659 18
 1240 0026 FB68     		ldr	r3, [r7, #12]
 1241 0028 93F82C30 		ldrb	r3, [r3, #44]
 1242 002c DBB2     		uxtb	r3, r3
 1243              		.loc 1 659 11
 1244 002e 012B     		cmp	r3, #1
 1245 0030 2BD1     		bne	.L64
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 1246              		.loc 1 662 5
 1247 0032 FB68     		ldr	r3, [r7, #12]
 1248 0034 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1249 0038 012B     		cmp	r3, #1
 1250 003a 01D1     		bne	.L65
 1251              		.loc 1 662 5 is_stmt 0 discriminator 1
 1252 003c 0223     		movs	r3, #2
 1253 003e 25E0     		b	.L63
 1254              	.L65:
 1255              		.loc 1 662 5 discriminator 2
 1256 0040 FB68     		ldr	r3, [r7, #12]
 1257 0042 0122     		movs	r2, #1
 1258 0044 83F82D20 		strb	r2, [r3, #45]
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1259              		.loc 1 665 19 is_stmt 1 discriminator 2
 1260 0048 FB68     		ldr	r3, [r7, #12]
 1261 004a 0222     		movs	r2, #2
 1262 004c 83F82C20 		strb	r2, [r3, #44]
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Write data to memory */
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     for (size = BufferSize; size != 0U; size--)
 1263              		.loc 1 668 15 discriminator 2
 1264 0050 3B68     		ldr	r3, [r7]
 1265 0052 FB61     		str	r3, [r7, #28]
 1266              		.loc 1 668 5 discriminator 2
 1267 0054 0CE0     		b	.L66
 1268              	.L67:
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       *pSdramAddress = *psrcbuff;
 1269              		.loc 1 670 24 discriminator 3
 1270 0056 7B69     		ldr	r3, [r7, #20]
 1271 0058 1A68     		ldr	r2, [r3]
 1272              		.loc 1 670 22 discriminator 3
 1273 005a BB69     		ldr	r3, [r7, #24]
 1274 005c 1A60     		str	r2, [r3]
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       psrcbuff++;
 1275              		.loc 1 671 15 discriminator 3
 1276 005e 7B69     		ldr	r3, [r7, #20]
 1277 0060 0433     		adds	r3, r3, #4
 1278 0062 7B61     		str	r3, [r7, #20]
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       pSdramAddress++;
ARM GAS  /tmp/ccZvMaOV.s 			page 35


 1279              		.loc 1 672 20 discriminator 3
 1280 0064 BB69     		ldr	r3, [r7, #24]
 1281 0066 0433     		adds	r3, r3, #4
 1282 0068 BB61     		str	r3, [r7, #24]
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1283              		.loc 1 668 45 discriminator 3
 1284 006a FB69     		ldr	r3, [r7, #28]
 1285 006c 013B     		subs	r3, r3, #1
 1286 006e FB61     		str	r3, [r7, #28]
 1287              	.L66:
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1288              		.loc 1 668 5 discriminator 1
 1289 0070 FB69     		ldr	r3, [r7, #28]
 1290 0072 002B     		cmp	r3, #0
 1291 0074 EFD1     		bne	.L67
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1292              		.loc 1 676 19
 1293 0076 FB68     		ldr	r3, [r7, #12]
 1294 0078 0122     		movs	r2, #1
 1295 007a 83F82C20 		strb	r2, [r3, #44]
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 1296              		.loc 1 679 5
 1297 007e FB68     		ldr	r3, [r7, #12]
 1298 0080 0022     		movs	r2, #0
 1299 0082 83F82D20 		strb	r2, [r3, #45]
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return  HAL_ERROR;
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1300              		.loc 1 686 10
 1301 0086 0023     		movs	r3, #0
 1302 0088 00E0     		b	.L63
 1303              	.L64:
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1304              		.loc 1 683 13
 1305 008a 0123     		movs	r3, #1
 1306              	.L63:
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1307              		.loc 1 687 1
 1308 008c 1846     		mov	r0, r3
 1309 008e 2437     		adds	r7, r7, #36
 1310              	.LCFI78:
 1311              		.cfi_def_cfa_offset 4
 1312 0090 BD46     		mov	sp, r7
 1313              	.LCFI79:
 1314              		.cfi_def_cfa_register 13
 1315              		@ sp needed
 1316 0092 5DF8047B 		ldr	r7, [sp], #4
 1317              	.LCFI80:
ARM GAS  /tmp/ccZvMaOV.s 			page 36


 1318              		.cfi_restore 7
 1319              		.cfi_def_cfa_offset 0
 1320 0096 7047     		bx	lr
 1321              		.cfi_endproc
 1322              	.LFE344:
 1324              		.section	.text.HAL_SDRAM_Read_DMA,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_SDRAM_Read_DMA
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv5-d16
 1332              	HAL_SDRAM_Read_DMA:
 1333              	.LFB345:
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Reads a Words data from the SDRAM memory using DMA transfer.
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to read start address
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pDstBuffer Pointer to destination buffer
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to read from memory
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Read_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pDs
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                      uint32_t BufferSize)
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1334              		.loc 1 700 1
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 24
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 90B5     		push	{r4, r7, lr}
 1339              	.LCFI81:
 1340              		.cfi_def_cfa_offset 12
 1341              		.cfi_offset 4, -12
 1342              		.cfi_offset 7, -8
 1343              		.cfi_offset 14, -4
 1344 0002 89B0     		sub	sp, sp, #36
 1345              	.LCFI82:
 1346              		.cfi_def_cfa_offset 48
 1347 0004 02AF     		add	r7, sp, #8
 1348              	.LCFI83:
 1349              		.cfi_def_cfa 7, 40
 1350 0006 F860     		str	r0, [r7, #12]
 1351 0008 B960     		str	r1, [r7, #8]
 1352 000a 7A60     		str	r2, [r7, #4]
 1353 000c 3B60     		str	r3, [r7]
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1354              		.loc 1 702 26
 1355 000e FB68     		ldr	r3, [r7, #12]
 1356 0010 93F82C30 		ldrb	r3, [r3, #44]
 1357 0014 BB75     		strb	r3, [r7, #22]
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 1358              		.loc 1 705 6
ARM GAS  /tmp/ccZvMaOV.s 			page 37


 1359 0016 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1360 0018 022B     		cmp	r3, #2
 1361 001a 02D1     		bne	.L70
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_BUSY;
 1362              		.loc 1 707 12
 1363 001c 0223     		movs	r3, #2
 1364 001e FB75     		strb	r3, [r7, #23]
 1365 0020 37E0     		b	.L71
 1366              	.L70:
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 1367              		.loc 1 709 11
 1368 0022 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1369 0024 012B     		cmp	r3, #1
 1370 0026 02D0     		beq	.L72
 1371              		.loc 1 709 45 discriminator 1
 1372 0028 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1373 002a 042B     		cmp	r3, #4
 1374 002c 2FD1     		bne	.L73
 1375              	.L72:
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 1376              		.loc 1 712 5
 1377 002e FB68     		ldr	r3, [r7, #12]
 1378 0030 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1379 0034 012B     		cmp	r3, #1
 1380 0036 01D1     		bne	.L74
 1381              		.loc 1 712 5 is_stmt 0 discriminator 1
 1382 0038 0223     		movs	r3, #2
 1383 003a 2BE0     		b	.L75
 1384              	.L74:
 1385              		.loc 1 712 5 discriminator 2
 1386 003c FB68     		ldr	r3, [r7, #12]
 1387 003e 0122     		movs	r2, #1
 1388 0040 83F82D20 		strb	r2, [r3, #45]
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1389              		.loc 1 715 19 is_stmt 1 discriminator 2
 1390 0044 FB68     		ldr	r3, [r7, #12]
 1391 0046 0222     		movs	r2, #2
 1392 0048 83F82C20 		strb	r2, [r3, #44]
 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Configure DMA user callbacks */
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if (state == HAL_SDRAM_STATE_READY)
 1393              		.loc 1 718 8 discriminator 2
 1394 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1395 004e 012B     		cmp	r3, #1
 1396 0050 04D1     		bne	.L76
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->hmdma->XferCpltCallback = SDRAM_DMACplt;
 1397              		.loc 1 720 13
 1398 0052 FB68     		ldr	r3, [r7, #12]
 1399 0054 1B6B     		ldr	r3, [r3, #48]
 1400              		.loc 1 720 39
ARM GAS  /tmp/ccZvMaOV.s 			page 38


 1401 0056 114A     		ldr	r2, .L78
 1402 0058 5A64     		str	r2, [r3, #68]
 1403 005a 03E0     		b	.L77
 1404              	.L76:
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     else
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->hmdma->XferCpltCallback = SDRAM_DMACpltProt;
 1405              		.loc 1 724 13
 1406 005c FB68     		ldr	r3, [r7, #12]
 1407 005e 1B6B     		ldr	r3, [r3, #48]
 1408              		.loc 1 724 39
 1409 0060 0F4A     		ldr	r2, .L78+4
 1410 0062 5A64     		str	r2, [r3, #68]
 1411              	.L77:
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferErrorCallback = SDRAM_DMAError;
 1412              		.loc 1 726 11
 1413 0064 FB68     		ldr	r3, [r7, #12]
 1414 0066 1B6B     		ldr	r3, [r3, #48]
 1415              		.loc 1 726 38
 1416 0068 0E4A     		ldr	r2, .L78+8
 1417 006a 5A65     		str	r2, [r3, #84]
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Enable the DMA Stream */
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_MDMA_Start_IT(hsdram->hmdma, (uint32_t)pAddress, (uint32_t)pDstBuffer, (uint32_t)(
 1418              		.loc 1 729 14
 1419 006c FB68     		ldr	r3, [r7, #12]
 1420 006e 186B     		ldr	r0, [r3, #48]
 1421 0070 B968     		ldr	r1, [r7, #8]
 1422 0072 7A68     		ldr	r2, [r7, #4]
 1423 0074 3B68     		ldr	r3, [r7]
 1424 0076 9B00     		lsls	r3, r3, #2
 1425 0078 0124     		movs	r4, #1
 1426 007a 0094     		str	r4, [sp]
 1427 007c FFF7FEFF 		bl	HAL_MDMA_Start_IT
 1428 0080 0346     		mov	r3, r0
 1429 0082 FB75     		strb	r3, [r7, #23]
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 1430              		.loc 1 732 5
 1431 0084 FB68     		ldr	r3, [r7, #12]
 1432 0086 0022     		movs	r2, #0
 1433 0088 83F82D20 		strb	r2, [r3, #45]
 1434 008c 01E0     		b	.L71
 1435              	.L73:
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_ERROR;
 1436              		.loc 1 736 12
 1437 008e 0123     		movs	r3, #1
 1438 0090 FB75     		strb	r3, [r7, #23]
 1439              	.L71:
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccZvMaOV.s 			page 39


 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 1440              		.loc 1 739 10
 1441 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1442              	.L75:
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1443              		.loc 1 740 1
 1444 0094 1846     		mov	r0, r3
 1445 0096 1C37     		adds	r7, r7, #28
 1446              	.LCFI84:
 1447              		.cfi_def_cfa_offset 12
 1448 0098 BD46     		mov	sp, r7
 1449              	.LCFI85:
 1450              		.cfi_def_cfa_register 13
 1451              		@ sp needed
 1452 009a 90BD     		pop	{r4, r7, pc}
 1453              	.L79:
 1454              		.align	2
 1455              	.L78:
 1456 009c 00000000 		.word	SDRAM_DMACplt
 1457 00a0 00000000 		.word	SDRAM_DMACpltProt
 1458 00a4 00000000 		.word	SDRAM_DMAError
 1459              		.cfi_endproc
 1460              	.LFE345:
 1462              		.section	.text.HAL_SDRAM_Write_DMA,"ax",%progbits
 1463              		.align	1
 1464              		.global	HAL_SDRAM_Write_DMA
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu fpv5-d16
 1470              	HAL_SDRAM_Write_DMA:
 1471              	.LFB346:
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Writes a Words data buffer to SDRAM memory using DMA transfer.
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pAddress Pointer to write start address
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  pSrcBuffer Pointer to source buffer to write
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  BufferSize Size of the buffer to write to memory
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_Write_DMA(SDRAM_HandleTypeDef *hsdram, uint32_t *pAddress, uint32_t *pS
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                       uint32_t BufferSize)
 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1472              		.loc 1 753 1
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 24
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 90B5     		push	{r4, r7, lr}
 1477              	.LCFI86:
 1478              		.cfi_def_cfa_offset 12
 1479              		.cfi_offset 4, -12
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 89B0     		sub	sp, sp, #36
 1483              	.LCFI87:
ARM GAS  /tmp/ccZvMaOV.s 			page 40


 1484              		.cfi_def_cfa_offset 48
 1485 0004 02AF     		add	r7, sp, #8
 1486              	.LCFI88:
 1487              		.cfi_def_cfa 7, 40
 1488 0006 F860     		str	r0, [r7, #12]
 1489 0008 B960     		str	r1, [r7, #8]
 1490 000a 7A60     		str	r2, [r7, #4]
 1491 000c 3B60     		str	r3, [r7]
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status;
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 1492              		.loc 1 757 13
 1493 000e FB68     		ldr	r3, [r7, #12]
 1494 0010 93F82C30 		ldrb	r3, [r3, #44]
 1495 0014 DBB2     		uxtb	r3, r3
 1496              		.loc 1 757 6
 1497 0016 022B     		cmp	r3, #2
 1498 0018 02D1     		bne	.L81
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_BUSY;
 1499              		.loc 1 759 12
 1500 001a 0223     		movs	r3, #2
 1501 001c FB75     		strb	r3, [r7, #23]
 1502 001e 2FE0     		b	.L82
 1503              	.L81:
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 1504              		.loc 1 761 18
 1505 0020 FB68     		ldr	r3, [r7, #12]
 1506 0022 93F82C30 		ldrb	r3, [r3, #44]
 1507 0026 DBB2     		uxtb	r3, r3
 1508              		.loc 1 761 11
 1509 0028 012B     		cmp	r3, #1
 1510 002a 27D1     		bne	.L83
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Locked */
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_LOCK(hsdram);
 1511              		.loc 1 764 5
 1512 002c FB68     		ldr	r3, [r7, #12]
 1513 002e 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1514 0032 012B     		cmp	r3, #1
 1515 0034 01D1     		bne	.L84
 1516              		.loc 1 764 5 is_stmt 0 discriminator 1
 1517 0036 0223     		movs	r3, #2
 1518 0038 23E0     		b	.L85
 1519              	.L84:
 1520              		.loc 1 764 5 discriminator 2
 1521 003a FB68     		ldr	r3, [r7, #12]
 1522 003c 0122     		movs	r2, #1
 1523 003e 83F82D20 		strb	r2, [r3, #45]
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state */
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1524              		.loc 1 767 19 is_stmt 1 discriminator 2
 1525 0042 FB68     		ldr	r3, [r7, #12]
 1526 0044 0222     		movs	r2, #2
ARM GAS  /tmp/ccZvMaOV.s 			page 41


 1527 0046 83F82C20 		strb	r2, [r3, #44]
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Configure DMA user callbacks */
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferCpltCallback = SDRAM_DMACplt;
 1528              		.loc 1 770 11 discriminator 2
 1529 004a FB68     		ldr	r3, [r7, #12]
 1530 004c 1B6B     		ldr	r3, [r3, #48]
 1531              		.loc 1 770 37 discriminator 2
 1532 004e 0F4A     		ldr	r2, .L86
 1533 0050 5A64     		str	r2, [r3, #68]
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->hmdma->XferErrorCallback = SDRAM_DMAError;
 1534              		.loc 1 771 11 discriminator 2
 1535 0052 FB68     		ldr	r3, [r7, #12]
 1536 0054 1B6B     		ldr	r3, [r3, #48]
 1537              		.loc 1 771 38 discriminator 2
 1538 0056 0E4A     		ldr	r2, .L86+4
 1539 0058 5A65     		str	r2, [r3, #84]
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Enable the DMA Stream */
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_MDMA_Start_IT(hsdram->hmdma, (uint32_t)pSrcBuffer, (uint32_t)pAddress, (uint32_t)(
 1540              		.loc 1 774 14 discriminator 2
 1541 005a FB68     		ldr	r3, [r7, #12]
 1542 005c 186B     		ldr	r0, [r3, #48]
 1543 005e 7968     		ldr	r1, [r7, #4]
 1544 0060 BA68     		ldr	r2, [r7, #8]
 1545 0062 3B68     		ldr	r3, [r7]
 1546 0064 9B00     		lsls	r3, r3, #2
 1547 0066 0124     		movs	r4, #1
 1548 0068 0094     		str	r4, [sp]
 1549 006a FFF7FEFF 		bl	HAL_MDMA_Start_IT
 1550 006e 0346     		mov	r3, r0
 1551 0070 FB75     		strb	r3, [r7, #23]
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Process Unlocked */
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     __HAL_UNLOCK(hsdram);
 1552              		.loc 1 777 5 discriminator 2
 1553 0072 FB68     		ldr	r3, [r7, #12]
 1554 0074 0022     		movs	r2, #0
 1555 0076 83F82D20 		strb	r2, [r3, #45]
 1556 007a 01E0     		b	.L82
 1557              	.L83:
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status = HAL_ERROR;
 1558              		.loc 1 781 12
 1559 007c 0123     		movs	r3, #1
 1560 007e FB75     		strb	r3, [r7, #23]
 1561              	.L82:
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 1562              		.loc 1 784 10
 1563 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1564              	.L85:
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1565              		.loc 1 785 1
ARM GAS  /tmp/ccZvMaOV.s 			page 42


 1566 0082 1846     		mov	r0, r3
 1567 0084 1C37     		adds	r7, r7, #28
 1568              	.LCFI89:
 1569              		.cfi_def_cfa_offset 12
 1570 0086 BD46     		mov	sp, r7
 1571              	.LCFI90:
 1572              		.cfi_def_cfa_register 13
 1573              		@ sp needed
 1574 0088 90BD     		pop	{r4, r7, pc}
 1575              	.L87:
 1576 008a 00BF     		.align	2
 1577              	.L86:
 1578 008c 00000000 		.word	SDRAM_DMACplt
 1579 0090 00000000 		.word	SDRAM_DMAError
 1580              		.cfi_endproc
 1581              	.LFE346:
 1583              		.section	.text.HAL_SDRAM_WriteProtection_Enable,"ax",%progbits
 1584              		.align	1
 1585              		.global	HAL_SDRAM_WriteProtection_Enable
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu fpv5-d16
 1591              	HAL_SDRAM_WriteProtection_Enable:
 1592              	.LFB347:
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTypeD
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                              pSDRAM_CallbackTypeDef pCallback)
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (pCallback == NULL)
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
ARM GAS  /tmp/ccZvMaOV.s 			page 43


 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_INIT_CB_ID :
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspInitCallback = pCallback;
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_DEINIT_CB_ID :
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspDeInitCallback = pCallback;
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_REFRESH_ERR_CB_ID :
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->RefreshErrorCallback = pCallback;
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       default :
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         /* update return status */
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         status =  HAL_ERROR;
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_RESET)
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_INIT_CB_ID :
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspInitCallback = pCallback;
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_DEINIT_CB_ID :
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspDeInitCallback = pCallback;
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       default :
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         /* update return status */
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         status =  HAL_ERROR;
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Unregister a User SDRAM Callback
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         SDRAM Callback is redirected to the weak (surcharged) predefined callback
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be unregistered
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_INIT_CB_ID       SDRAM MspInit callback ID
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_MSP_DEINIT_CB_ID     SDRAM MspDeInit callback ID
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_REFRESH_ERR_CB_ID    SDRAM Refresh Error callback ID
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_UnRegisterCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTyp
ARM GAS  /tmp/ccZvMaOV.s 			page 44


 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_INIT_CB_ID :
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_DEINIT_CB_ID :
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_REFRESH_ERR_CB_ID :
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->RefreshErrorCallback = HAL_SDRAM_RefreshErrorCallback;
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->DmaXferCpltCallback = HAL_SDRAM_DMA_XferCpltCallback;
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->DmaXferErrorCallback = HAL_SDRAM_DMA_XferErrorCallback;
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       default :
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         /* update return status */
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         status =  HAL_ERROR;
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_RESET)
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_INIT_CB_ID :
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspInitCallback = HAL_SDRAM_MspInit;
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_MSP_DEINIT_CB_ID :
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->MspDeInitCallback = HAL_SDRAM_MspDeInit;
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       default :
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         /* update return status */
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         status =  HAL_ERROR;
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
ARM GAS  /tmp/ccZvMaOV.s 			page 45


 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Register a User SDRAM Callback for DMA transfers
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *         To be used instead of the weak (surcharged) predefined callback
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param hsdram : SDRAM handle
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param CallbackId : ID of the callback to be registered
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *        This parameter can be one of the following values:
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_CPLT_CB_ID  SDRAM DMA Xfer Complete callback ID
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *          @arg @ref HAL_SDRAM_DMA_XFER_ERR_CB_ID   SDRAM DMA Xfer Error callback ID
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param pCallback : pointer to the Callback function
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval status
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_RegisterDmaCallback(SDRAM_HandleTypeDef *hsdram, HAL_SDRAM_CallbackIDTy
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                                 pSDRAM_DmaCallbackTypeDef pCallback)
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_StatusTypeDef status = HAL_OK;
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state;
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (pCallback == NULL)
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Process locked */
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_LOCK(hsdram);
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   state = hsdram->State;
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_WRITE_PROTECTED))
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     switch (CallbackId)
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_DMA_XFER_CPLT_CB_ID :
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->DmaXferCpltCallback = pCallback;
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       case HAL_SDRAM_DMA_XFER_ERR_CB_ID :
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         hsdram->DmaXferErrorCallback = pCallback;
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       default :
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         /* update return status */
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         status =  HAL_ERROR;
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****         break;
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* update return status */
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     status =  HAL_ERROR;
 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Release Lock */
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_UNLOCK(hsdram);
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return status;
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccZvMaOV.s 			page 46


 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group3 Control functions
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *  @brief   management functions
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @verbatim
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                          ##### SDRAM Control functions #####
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This subsection provides a set of functions allowing to control dynamically
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     the SDRAM interface.
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Enables dynamically SDRAM write protection.
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Enable(SDRAM_HandleTypeDef *hsdram)
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1593              		.loc 1 1015 1
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 8
 1596              		@ frame_needed = 1, uses_anonymous_args = 0
 1597 0000 80B5     		push	{r7, lr}
 1598              	.LCFI91:
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 82B0     		sub	sp, sp, #8
 1603              	.LCFI92:
 1604              		.cfi_def_cfa_offset 16
 1605 0004 00AF     		add	r7, sp, #0
 1606              	.LCFI93:
 1607              		.cfi_def_cfa_register 7
 1608 0006 7860     		str	r0, [r7, #4]
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 1609              		.loc 1 1017 13
 1610 0008 7B68     		ldr	r3, [r7, #4]
 1611 000a 93F82C30 		ldrb	r3, [r3, #44]
 1612 000e DBB2     		uxtb	r3, r3
 1613              		.loc 1 1017 6
 1614 0010 022B     		cmp	r3, #2
 1615 0012 01D1     		bne	.L89
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1616              		.loc 1 1019 12
 1617 0014 0223     		movs	r3, #2
 1618 0016 18E0     		b	.L90
ARM GAS  /tmp/ccZvMaOV.s 			page 47


 1619              	.L89:
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 1620              		.loc 1 1021 18
 1621 0018 7B68     		ldr	r3, [r7, #4]
 1622 001a 93F82C30 		ldrb	r3, [r3, #44]
 1623 001e DBB2     		uxtb	r3, r3
 1624              		.loc 1 1021 11
 1625 0020 012B     		cmp	r3, #1
 1626 0022 11D1     		bne	.L91
1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1627              		.loc 1 1024 19
 1628 0024 7B68     		ldr	r3, [r7, #4]
 1629 0026 0222     		movs	r2, #2
 1630 0028 83F82C20 		strb	r2, [r3, #44]
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Enable write protection */
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_WriteProtection_Enable(hsdram->Instance, hsdram->Init.SDBank);
 1631              		.loc 1 1027 11
 1632 002c 7B68     		ldr	r3, [r7, #4]
 1633 002e 1A68     		ldr	r2, [r3]
 1634 0030 7B68     		ldr	r3, [r7, #4]
 1635 0032 5B68     		ldr	r3, [r3, #4]
 1636 0034 1946     		mov	r1, r3
 1637 0036 1046     		mov	r0, r2
 1638 0038 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Enable
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
 1639              		.loc 1 1030 19
 1640 003c 7B68     		ldr	r3, [r7, #4]
 1641 003e 0422     		movs	r2, #4
 1642 0040 83F82C20 		strb	r2, [r3, #44]
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1643              		.loc 1 1037 10
 1644 0044 0023     		movs	r3, #0
 1645 0046 00E0     		b	.L90
 1646              	.L91:
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1647              		.loc 1 1034 12
 1648 0048 0123     		movs	r3, #1
 1649              	.L90:
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1650              		.loc 1 1038 1
 1651 004a 1846     		mov	r0, r3
 1652 004c 0837     		adds	r7, r7, #8
 1653              	.LCFI94:
 1654              		.cfi_def_cfa_offset 8
 1655 004e BD46     		mov	sp, r7
ARM GAS  /tmp/ccZvMaOV.s 			page 48


 1656              	.LCFI95:
 1657              		.cfi_def_cfa_register 13
 1658              		@ sp needed
 1659 0050 80BD     		pop	{r7, pc}
 1660              		.cfi_endproc
 1661              	.LFE347:
 1663              		.section	.text.HAL_SDRAM_WriteProtection_Disable,"ax",%progbits
 1664              		.align	1
 1665              		.global	HAL_SDRAM_WriteProtection_Disable
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1669              		.fpu fpv5-d16
 1671              	HAL_SDRAM_WriteProtection_Disable:
 1672              	.LFB348:
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Disables dynamically SDRAM write protection.
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Disable(SDRAM_HandleTypeDef *hsdram)
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1673              		.loc 1 1047 1
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 16
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677 0000 80B5     		push	{r7, lr}
 1678              	.LCFI96:
 1679              		.cfi_def_cfa_offset 8
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 84B0     		sub	sp, sp, #16
 1683              	.LCFI97:
 1684              		.cfi_def_cfa_offset 24
 1685 0004 00AF     		add	r7, sp, #0
 1686              	.LCFI98:
 1687              		.cfi_def_cfa_register 7
 1688 0006 7860     		str	r0, [r7, #4]
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1689              		.loc 1 1048 26
 1690 0008 7B68     		ldr	r3, [r7, #4]
 1691 000a 93F82C30 		ldrb	r3, [r3, #44]
 1692 000e FB73     		strb	r3, [r7, #15]
1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 1693              		.loc 1 1051 6
 1694 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1695 0012 022B     		cmp	r3, #2
 1696 0014 01D1     		bne	.L94
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1697              		.loc 1 1053 12
 1698 0016 0223     		movs	r3, #2
 1699 0018 15E0     		b	.L95
ARM GAS  /tmp/ccZvMaOV.s 			page 49


 1700              	.L94:
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (state == HAL_SDRAM_STATE_WRITE_PROTECTED)
 1701              		.loc 1 1055 11
 1702 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1703 001c 042B     		cmp	r3, #4
 1704 001e 11D1     		bne	.L96
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1705              		.loc 1 1058 19
 1706 0020 7B68     		ldr	r3, [r7, #4]
 1707 0022 0222     		movs	r2, #2
 1708 0024 83F82C20 		strb	r2, [r3, #44]
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Disable write protection */
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_WriteProtection_Disable(hsdram->Instance, hsdram->Init.SDBank);
 1709              		.loc 1 1061 11
 1710 0028 7B68     		ldr	r3, [r7, #4]
 1711 002a 1A68     		ldr	r2, [r3]
 1712 002c 7B68     		ldr	r3, [r7, #4]
 1713 002e 5B68     		ldr	r3, [r3, #4]
 1714 0030 1946     		mov	r1, r3
 1715 0032 1046     		mov	r0, r2
 1716 0034 FFF7FEFF 		bl	FMC_SDRAM_WriteProtection_Disable
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1717              		.loc 1 1064 19
 1718 0038 7B68     		ldr	r3, [r7, #4]
 1719 003a 0122     		movs	r2, #1
 1720 003c 83F82C20 		strb	r2, [r3, #44]
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1721              		.loc 1 1071 10
 1722 0040 0023     		movs	r3, #0
 1723 0042 00E0     		b	.L95
 1724              	.L96:
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1725              		.loc 1 1068 12
 1726 0044 0123     		movs	r3, #1
 1727              	.L95:
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1728              		.loc 1 1072 1
 1729 0046 1846     		mov	r0, r3
 1730 0048 1037     		adds	r7, r7, #16
 1731              	.LCFI99:
 1732              		.cfi_def_cfa_offset 8
 1733 004a BD46     		mov	sp, r7
 1734              	.LCFI100:
 1735              		.cfi_def_cfa_register 13
 1736              		@ sp needed
ARM GAS  /tmp/ccZvMaOV.s 			page 50


 1737 004c 80BD     		pop	{r7, pc}
 1738              		.cfi_endproc
 1739              	.LFE348:
 1741              		.section	.text.HAL_SDRAM_SendCommand,"ax",%progbits
 1742              		.align	1
 1743              		.global	HAL_SDRAM_SendCommand
 1744              		.syntax unified
 1745              		.thumb
 1746              		.thumb_func
 1747              		.fpu fpv5-d16
 1749              	HAL_SDRAM_SendCommand:
 1750              	.LFB349:
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Sends Command to the SDRAM bank.
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Command SDRAM command structure
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  Timeout Timeout duration
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Comm
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                                         uint32_t Timeout)
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1751              		.loc 1 1084 1
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 24
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 80B5     		push	{r7, lr}
 1756              	.LCFI101:
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 86B0     		sub	sp, sp, #24
 1761              	.LCFI102:
 1762              		.cfi_def_cfa_offset 32
 1763 0004 00AF     		add	r7, sp, #0
 1764              	.LCFI103:
 1765              		.cfi_def_cfa_register 7
 1766 0006 F860     		str	r0, [r7, #12]
 1767 0008 B960     		str	r1, [r7, #8]
 1768 000a 7A60     		str	r2, [r7, #4]
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_StateTypeDef state = hsdram->State;
 1769              		.loc 1 1085 26
 1770 000c FB68     		ldr	r3, [r7, #12]
 1771 000e 93F82C30 		ldrb	r3, [r3, #44]
 1772 0012 FB75     		strb	r3, [r7, #23]
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (state == HAL_SDRAM_STATE_BUSY)
 1773              		.loc 1 1088 6
 1774 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1775 0016 022B     		cmp	r3, #2
 1776 0018 01D1     		bne	.L99
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1777              		.loc 1 1090 12
ARM GAS  /tmp/ccZvMaOV.s 			page 51


 1778 001a 0223     		movs	r3, #2
 1779 001c 21E0     		b	.L100
 1780              	.L99:
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 1781              		.loc 1 1092 11
 1782 001e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1783 0020 012B     		cmp	r3, #1
 1784 0022 02D0     		beq	.L101
 1785              		.loc 1 1092 45 discriminator 1
 1786 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1787 0026 052B     		cmp	r3, #5
 1788 0028 18D1     		bne	.L102
 1789              	.L101:
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1790              		.loc 1 1095 19
 1791 002a FB68     		ldr	r3, [r7, #12]
 1792 002c 0222     		movs	r2, #2
 1793 002e 83F82C20 		strb	r2, [r3, #44]
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Send SDRAM command */
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 1794              		.loc 1 1098 11
 1795 0032 FB68     		ldr	r3, [r7, #12]
 1796 0034 1B68     		ldr	r3, [r3]
 1797 0036 7A68     		ldr	r2, [r7, #4]
 1798 0038 B968     		ldr	r1, [r7, #8]
 1799 003a 1846     		mov	r0, r3
 1800 003c FFF7FEFF 		bl	FMC_SDRAM_SendCommand
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM controller state state */
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 1801              		.loc 1 1101 16
 1802 0040 BB68     		ldr	r3, [r7, #8]
 1803 0042 1B68     		ldr	r3, [r3]
 1804              		.loc 1 1101 8
 1805 0044 022B     		cmp	r3, #2
 1806 0046 04D1     		bne	.L103
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 1807              		.loc 1 1103 21
 1808 0048 FB68     		ldr	r3, [r7, #12]
 1809 004a 0522     		movs	r2, #5
 1810 004c 83F82C20 		strb	r2, [r3, #44]
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1811              		.loc 1 1101 8
 1812 0050 06E0     		b	.L105
 1813              	.L103:
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     else
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****       hsdram->State = HAL_SDRAM_STATE_READY;
 1814              		.loc 1 1107 21
 1815 0052 FB68     		ldr	r3, [r7, #12]
 1816 0054 0122     		movs	r2, #1
ARM GAS  /tmp/ccZvMaOV.s 			page 52


 1817 0056 83F82C20 		strb	r2, [r3, #44]
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     {
 1818              		.loc 1 1101 8
 1819 005a 01E0     		b	.L105
 1820              	.L102:
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     }
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
 1821              		.loc 1 1112 12
 1822 005c 0123     		movs	r3, #1
 1823 005e 00E0     		b	.L100
 1824              	.L105:
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1825              		.loc 1 1115 10
 1826 0060 0023     		movs	r3, #0
 1827              	.L100:
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1828              		.loc 1 1116 1
 1829 0062 1846     		mov	r0, r3
 1830 0064 1837     		adds	r7, r7, #24
 1831              	.LCFI104:
 1832              		.cfi_def_cfa_offset 8
 1833 0066 BD46     		mov	sp, r7
 1834              	.LCFI105:
 1835              		.cfi_def_cfa_register 13
 1836              		@ sp needed
 1837 0068 80BD     		pop	{r7, pc}
 1838              		.cfi_endproc
 1839              	.LFE349:
 1841              		.section	.text.HAL_SDRAM_ProgramRefreshRate,"ax",%progbits
 1842              		.align	1
 1843              		.global	HAL_SDRAM_ProgramRefreshRate
 1844              		.syntax unified
 1845              		.thumb
 1846              		.thumb_func
 1847              		.fpu fpv5-d16
 1849              	HAL_SDRAM_ProgramRefreshRate:
 1850              	.LFB350:
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Programs the SDRAM Memory Refresh rate.
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  RefreshRate The SDRAM refresh rate value
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1851              		.loc 1 1126 1
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 8
 1854              		@ frame_needed = 1, uses_anonymous_args = 0
 1855 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccZvMaOV.s 			page 53


 1856              	.LCFI106:
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 82B0     		sub	sp, sp, #8
 1861              	.LCFI107:
 1862              		.cfi_def_cfa_offset 16
 1863 0004 00AF     		add	r7, sp, #0
 1864              	.LCFI108:
 1865              		.cfi_def_cfa_register 7
 1866 0006 7860     		str	r0, [r7, #4]
 1867 0008 3960     		str	r1, [r7]
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 1868              		.loc 1 1128 13
 1869 000a 7B68     		ldr	r3, [r7, #4]
 1870 000c 93F82C30 		ldrb	r3, [r3, #44]
 1871 0010 DBB2     		uxtb	r3, r3
 1872              		.loc 1 1128 6
 1873 0012 022B     		cmp	r3, #2
 1874 0014 01D1     		bne	.L107
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1875              		.loc 1 1130 12
 1876 0016 0223     		movs	r3, #2
 1877 0018 16E0     		b	.L108
 1878              	.L107:
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 1879              		.loc 1 1132 18
 1880 001a 7B68     		ldr	r3, [r7, #4]
 1881 001c 93F82C30 		ldrb	r3, [r3, #44]
 1882 0020 DBB2     		uxtb	r3, r3
 1883              		.loc 1 1132 11
 1884 0022 012B     		cmp	r3, #1
 1885 0024 0FD1     		bne	.L109
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1886              		.loc 1 1135 19
 1887 0026 7B68     		ldr	r3, [r7, #4]
 1888 0028 0222     		movs	r2, #2
 1889 002a 83F82C20 		strb	r2, [r3, #44]
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Program the refresh rate */
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 1890              		.loc 1 1138 11
 1891 002e 7B68     		ldr	r3, [r7, #4]
 1892 0030 1B68     		ldr	r3, [r3]
 1893 0032 3968     		ldr	r1, [r7]
 1894 0034 1846     		mov	r0, r3
 1895 0036 FFF7FEFF 		bl	FMC_SDRAM_ProgramRefreshRate
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1896              		.loc 1 1141 19
 1897 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccZvMaOV.s 			page 54


 1898 003c 0122     		movs	r2, #1
 1899 003e 83F82C20 		strb	r2, [r3, #44]
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1900              		.loc 1 1148 10
 1901 0042 0023     		movs	r3, #0
 1902 0044 00E0     		b	.L108
 1903              	.L109:
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1904              		.loc 1 1145 12
 1905 0046 0123     		movs	r3, #1
 1906              	.L108:
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1907              		.loc 1 1149 1
 1908 0048 1846     		mov	r0, r3
 1909 004a 0837     		adds	r7, r7, #8
 1910              	.LCFI109:
 1911              		.cfi_def_cfa_offset 8
 1912 004c BD46     		mov	sp, r7
 1913              	.LCFI110:
 1914              		.cfi_def_cfa_register 13
 1915              		@ sp needed
 1916 004e 80BD     		pop	{r7, pc}
 1917              		.cfi_endproc
 1918              	.LFE350:
 1920              		.section	.text.HAL_SDRAM_SetAutoRefreshNumber,"ax",%progbits
 1921              		.align	1
 1922              		.global	HAL_SDRAM_SetAutoRefreshNumber
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1926              		.fpu fpv5-d16
 1928              	HAL_SDRAM_SetAutoRefreshNumber:
 1929              	.LFB351:
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Sets the Number of consecutive SDRAM Memory auto Refresh commands.
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  AutoRefreshNumber The SDRAM auto Refresh number
1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL status
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_StatusTypeDef HAL_SDRAM_SetAutoRefreshNumber(SDRAM_HandleTypeDef *hsdram, uint32_t AutoRefreshN
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 1930              		.loc 1 1159 1
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 8
 1933              		@ frame_needed = 1, uses_anonymous_args = 0
 1934 0000 80B5     		push	{r7, lr}
 1935              	.LCFI111:
 1936              		.cfi_def_cfa_offset 8
 1937              		.cfi_offset 7, -8
ARM GAS  /tmp/ccZvMaOV.s 			page 55


 1938              		.cfi_offset 14, -4
 1939 0002 82B0     		sub	sp, sp, #8
 1940              	.LCFI112:
 1941              		.cfi_def_cfa_offset 16
 1942 0004 00AF     		add	r7, sp, #0
 1943              	.LCFI113:
 1944              		.cfi_def_cfa_register 7
 1945 0006 7860     		str	r0, [r7, #4]
 1946 0008 3960     		str	r1, [r7]
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Check the SDRAM controller state */
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 1947              		.loc 1 1161 13
 1948 000a 7B68     		ldr	r3, [r7, #4]
 1949 000c 93F82C30 		ldrb	r3, [r3, #44]
 1950 0010 DBB2     		uxtb	r3, r3
 1951              		.loc 1 1161 6
 1952 0012 022B     		cmp	r3, #2
 1953 0014 01D1     		bne	.L112
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_BUSY;
 1954              		.loc 1 1163 12
 1955 0016 0223     		movs	r3, #2
 1956 0018 16E0     		b	.L113
 1957              	.L112:
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else if (hsdram->State == HAL_SDRAM_STATE_READY)
 1958              		.loc 1 1165 18
 1959 001a 7B68     		ldr	r3, [r7, #4]
 1960 001c 93F82C30 		ldrb	r3, [r3, #44]
 1961 0020 DBB2     		uxtb	r3, r3
 1962              		.loc 1 1165 11
 1963 0022 012B     		cmp	r3, #1
 1964 0024 0FD1     		bne	.L114
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_BUSY;
 1965              		.loc 1 1168 19
 1966 0026 7B68     		ldr	r3, [r7, #4]
 1967 0028 0222     		movs	r2, #2
 1968 002a 83F82C20 		strb	r2, [r3, #44]
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Set the Auto-Refresh number */
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     (void)FMC_SDRAM_SetAutoRefreshNumber(hsdram->Instance, AutoRefreshNumber);
 1969              		.loc 1 1171 11
 1970 002e 7B68     		ldr	r3, [r7, #4]
 1971 0030 1B68     		ldr	r3, [r3]
 1972 0032 3968     		ldr	r1, [r7]
 1973 0034 1846     		mov	r0, r3
 1974 0036 FFF7FEFF 		bl	FMC_SDRAM_SetAutoRefreshNumber
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     /* Update the SDRAM state */
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     hsdram->State = HAL_SDRAM_STATE_READY;
 1975              		.loc 1 1174 19
 1976 003a 7B68     		ldr	r3, [r7, #4]
 1977 003c 0122     		movs	r2, #1
 1978 003e 83F82C20 		strb	r2, [r3, #44]
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
ARM GAS  /tmp/ccZvMaOV.s 			page 56


1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   else
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   {
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     return HAL_ERROR;
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return HAL_OK;
 1979              		.loc 1 1181 10
 1980 0042 0023     		movs	r3, #0
 1981 0044 00E0     		b	.L113
 1982              	.L114:
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   }
 1983              		.loc 1 1178 12
 1984 0046 0123     		movs	r3, #1
 1985              	.L113:
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 1986              		.loc 1 1182 1
 1987 0048 1846     		mov	r0, r3
 1988 004a 0837     		adds	r7, r7, #8
 1989              	.LCFI114:
 1990              		.cfi_def_cfa_offset 8
 1991 004c BD46     		mov	sp, r7
 1992              	.LCFI115:
 1993              		.cfi_def_cfa_register 13
 1994              		@ sp needed
 1995 004e 80BD     		pop	{r7, pc}
 1996              		.cfi_endproc
 1997              	.LFE351:
 1999              		.section	.text.HAL_SDRAM_GetModeStatus,"ax",%progbits
 2000              		.align	1
 2001              		.global	HAL_SDRAM_GetModeStatus
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2005              		.fpu fpv5-d16
 2007              	HAL_SDRAM_GetModeStatus:
 2008              	.LFB352:
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Returns the SDRAM memory current mode.
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval The SDRAM memory mode.
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** uint32_t HAL_SDRAM_GetModeStatus(SDRAM_HandleTypeDef *hsdram)
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 2009              		.loc 1 1191 1
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 8
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              	.LCFI116:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 0002 82B0     		sub	sp, sp, #8
 2019              	.LCFI117:
 2020              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccZvMaOV.s 			page 57


 2021 0004 00AF     		add	r7, sp, #0
 2022              	.LCFI118:
 2023              		.cfi_def_cfa_register 7
 2024 0006 7860     		str	r0, [r7, #4]
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Return the SDRAM memory current mode */
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return (FMC_SDRAM_GetModeStatus(hsdram->Instance, hsdram->Init.SDBank));
 2025              		.loc 1 1193 11
 2026 0008 7B68     		ldr	r3, [r7, #4]
 2027 000a 1A68     		ldr	r2, [r3]
 2028 000c 7B68     		ldr	r3, [r7, #4]
 2029 000e 5B68     		ldr	r3, [r3, #4]
 2030 0010 1946     		mov	r1, r3
 2031 0012 1046     		mov	r0, r2
 2032 0014 FFF7FEFF 		bl	FMC_SDRAM_GetModeStatus
 2033 0018 0346     		mov	r3, r0
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 2034              		.loc 1 1194 1
 2035 001a 1846     		mov	r0, r3
 2036 001c 0837     		adds	r7, r7, #8
 2037              	.LCFI119:
 2038              		.cfi_def_cfa_offset 8
 2039 001e BD46     		mov	sp, r7
 2040              	.LCFI120:
 2041              		.cfi_def_cfa_register 13
 2042              		@ sp needed
 2043 0020 80BD     		pop	{r7, pc}
 2044              		.cfi_endproc
 2045              	.LFE352:
 2047              		.section	.text.HAL_SDRAM_GetState,"ax",%progbits
 2048              		.align	1
 2049              		.global	HAL_SDRAM_GetState
 2050              		.syntax unified
 2051              		.thumb
 2052              		.thumb_func
 2053              		.fpu fpv5-d16
 2055              	HAL_SDRAM_GetState:
 2056              	.LFB353:
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /** @defgroup SDRAM_Exported_Functions_Group4 State functions
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *  @brief   Peripheral State functions
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @verbatim
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****                       ##### SDRAM State functions #####
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   ==============================================================================
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   [..]
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     This subsection permits to get in run-time the status of the SDRAM controller
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****     and the data flow.
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** @endverbatim
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @{
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
ARM GAS  /tmp/ccZvMaOV.s 			page 58


1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  Returns the SDRAM state.
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   *                the configuration information for SDRAM module.
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval HAL state
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** HAL_SDRAM_StateTypeDef HAL_SDRAM_GetState(SDRAM_HandleTypeDef *hsdram)
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 2057              		.loc 1 1222 1
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 8
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 2062 0000 80B4     		push	{r7}
 2063              	.LCFI121:
 2064              		.cfi_def_cfa_offset 4
 2065              		.cfi_offset 7, -4
 2066 0002 83B0     		sub	sp, sp, #12
 2067              	.LCFI122:
 2068              		.cfi_def_cfa_offset 16
 2069 0004 00AF     		add	r7, sp, #0
 2070              	.LCFI123:
 2071              		.cfi_def_cfa_register 7
 2072 0006 7860     		str	r0, [r7, #4]
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   return hsdram->State;
 2073              		.loc 1 1223 16
 2074 0008 7B68     		ldr	r3, [r7, #4]
 2075 000a 93F82C30 		ldrb	r3, [r3, #44]
 2076 000e DBB2     		uxtb	r3, r3
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 2077              		.loc 1 1224 1
 2078 0010 1846     		mov	r0, r3
 2079 0012 0C37     		adds	r7, r7, #12
 2080              	.LCFI124:
 2081              		.cfi_def_cfa_offset 4
 2082 0014 BD46     		mov	sp, r7
 2083              	.LCFI125:
 2084              		.cfi_def_cfa_register 13
 2085              		@ sp needed
 2086 0016 5DF8047B 		ldr	r7, [sp], #4
 2087              	.LCFI126:
 2088              		.cfi_restore 7
 2089              		.cfi_def_cfa_offset 0
 2090 001a 7047     		bx	lr
 2091              		.cfi_endproc
 2092              	.LFE353:
 2094              		.section	.text.SDRAM_DMACplt,"ax",%progbits
 2095              		.align	1
 2096              		.syntax unified
 2097              		.thumb
 2098              		.thumb_func
 2099              		.fpu fpv5-d16
 2101              	SDRAM_DMACplt:
 2102              	.LFB354:
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
ARM GAS  /tmp/ccZvMaOV.s 			page 59


1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @}
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SDRAM process complete callback.
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACplt(MDMA_HandleTypeDef *hmdma)
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 2103              		.loc 1 1240 1
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 16
 2106              		@ frame_needed = 1, uses_anonymous_args = 0
 2107 0000 80B5     		push	{r7, lr}
 2108              	.LCFI127:
 2109              		.cfi_def_cfa_offset 8
 2110              		.cfi_offset 7, -8
 2111              		.cfi_offset 14, -4
 2112 0002 84B0     		sub	sp, sp, #16
 2113              	.LCFI128:
 2114              		.cfi_def_cfa_offset 24
 2115 0004 00AF     		add	r7, sp, #0
 2116              	.LCFI129:
 2117              		.cfi_def_cfa_register 7
 2118 0006 7860     		str	r0, [r7, #4]
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef *hsdram = (SDRAM_HandleTypeDef *)(hmdma->Parent);
 2119              		.loc 1 1241 24
 2120 0008 7B68     		ldr	r3, [r7, #4]
 2121 000a 1B6C     		ldr	r3, [r3, #64]
 2122 000c FB60     		str	r3, [r7, #12]
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
 2123              		.loc 1 1244 3
 2124 000e 7B68     		ldr	r3, [r7, #4]
 2125 0010 1B68     		ldr	r3, [r3]
 2126 0012 DA68     		ldr	r2, [r3, #12]
 2127 0014 7B68     		ldr	r3, [r7, #4]
 2128 0016 1B68     		ldr	r3, [r3]
 2129 0018 22F00102 		bic	r2, r2, #1
 2130 001c DA60     		str	r2, [r3, #12]
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_READY;
 2131              		.loc 1 1247 17
 2132 001e FB68     		ldr	r3, [r7, #12]
 2133 0020 0122     		movs	r2, #1
 2134 0022 83F82C20 		strb	r2, [r3, #44]
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferCpltCallback(hmdma);
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferCpltCallback(hmdma);
ARM GAS  /tmp/ccZvMaOV.s 			page 60


 2135              		.loc 1 1252 3
 2136 0026 7868     		ldr	r0, [r7, #4]
 2137 0028 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferCpltCallback
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 2138              		.loc 1 1254 1
 2139 002c 00BF     		nop
 2140 002e 1037     		adds	r7, r7, #16
 2141              	.LCFI130:
 2142              		.cfi_def_cfa_offset 8
 2143 0030 BD46     		mov	sp, r7
 2144              	.LCFI131:
 2145              		.cfi_def_cfa_register 13
 2146              		@ sp needed
 2147 0032 80BD     		pop	{r7, pc}
 2148              		.cfi_endproc
 2149              	.LFE354:
 2151              		.section	.text.SDRAM_DMACpltProt,"ax",%progbits
 2152              		.align	1
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2156              		.fpu fpv5-d16
 2158              	SDRAM_DMACpltProt:
 2159              	.LFB355:
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SRAM process complete callback.
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMACpltProt(MDMA_HandleTypeDef *hmdma)
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 2160              		.loc 1 1262 1
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 16
 2163              		@ frame_needed = 1, uses_anonymous_args = 0
 2164 0000 80B5     		push	{r7, lr}
 2165              	.LCFI132:
 2166              		.cfi_def_cfa_offset 8
 2167              		.cfi_offset 7, -8
 2168              		.cfi_offset 14, -4
 2169 0002 84B0     		sub	sp, sp, #16
 2170              	.LCFI133:
 2171              		.cfi_def_cfa_offset 24
 2172 0004 00AF     		add	r7, sp, #0
 2173              	.LCFI134:
 2174              		.cfi_def_cfa_register 7
 2175 0006 7860     		str	r0, [r7, #4]
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef *hsdram = (SDRAM_HandleTypeDef *)(hmdma->Parent);
 2176              		.loc 1 1263 24
 2177 0008 7B68     		ldr	r3, [r7, #4]
 2178 000a 1B6C     		ldr	r3, [r3, #64]
 2179 000c FB60     		str	r3, [r7, #12]
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
ARM GAS  /tmp/ccZvMaOV.s 			page 61


 2180              		.loc 1 1266 3
 2181 000e 7B68     		ldr	r3, [r7, #4]
 2182 0010 1B68     		ldr	r3, [r3]
 2183 0012 DA68     		ldr	r2, [r3, #12]
 2184 0014 7B68     		ldr	r3, [r7, #4]
 2185 0016 1B68     		ldr	r3, [r3]
 2186 0018 22F00102 		bic	r2, r2, #1
 2187 001c DA60     		str	r2, [r3, #12]
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_WRITE_PROTECTED;
 2188              		.loc 1 1269 17
 2189 001e FB68     		ldr	r3, [r7, #12]
 2190 0020 0422     		movs	r2, #4
 2191 0022 83F82C20 		strb	r2, [r3, #44]
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferCpltCallback(hmdma);
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferCpltCallback(hmdma);
 2192              		.loc 1 1274 3
 2193 0026 7868     		ldr	r0, [r7, #4]
 2194 0028 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferCpltCallback
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 2195              		.loc 1 1276 1
 2196 002c 00BF     		nop
 2197 002e 1037     		adds	r7, r7, #16
 2198              	.LCFI135:
 2199              		.cfi_def_cfa_offset 8
 2200 0030 BD46     		mov	sp, r7
 2201              	.LCFI136:
 2202              		.cfi_def_cfa_register 13
 2203              		@ sp needed
 2204 0032 80BD     		pop	{r7, pc}
 2205              		.cfi_endproc
 2206              	.LFE355:
 2208              		.section	.text.SDRAM_DMAError,"ax",%progbits
 2209              		.align	1
 2210              		.syntax unified
 2211              		.thumb
 2212              		.thumb_func
 2213              		.fpu fpv5-d16
 2215              	SDRAM_DMAError:
 2216              	.LFB356:
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** /**
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @brief  MDMA SDRAM error callback.
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @param  hmdma : MDMA handle
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   * @retval None
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   */
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** static void SDRAM_DMAError(MDMA_HandleTypeDef *hmdma)
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** {
 2217              		.loc 1 1284 1
 2218              		.cfi_startproc
 2219              		@ args = 0, pretend = 0, frame = 16
 2220              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccZvMaOV.s 			page 62


 2221 0000 80B5     		push	{r7, lr}
 2222              	.LCFI137:
 2223              		.cfi_def_cfa_offset 8
 2224              		.cfi_offset 7, -8
 2225              		.cfi_offset 14, -4
 2226 0002 84B0     		sub	sp, sp, #16
 2227              	.LCFI138:
 2228              		.cfi_def_cfa_offset 24
 2229 0004 00AF     		add	r7, sp, #0
 2230              	.LCFI139:
 2231              		.cfi_def_cfa_register 7
 2232 0006 7860     		str	r0, [r7, #4]
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   SDRAM_HandleTypeDef *hsdram = (SDRAM_HandleTypeDef *)(hmdma->Parent);
 2233              		.loc 1 1285 24
 2234 0008 7B68     		ldr	r3, [r7, #4]
 2235 000a 1B6C     		ldr	r3, [r3, #64]
 2236 000c FB60     		str	r3, [r7, #12]
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Disable the MDMA channel */
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   __HAL_MDMA_DISABLE(hmdma);
 2237              		.loc 1 1288 3
 2238 000e 7B68     		ldr	r3, [r7, #4]
 2239 0010 1B68     		ldr	r3, [r3]
 2240 0012 DA68     		ldr	r2, [r3, #12]
 2241 0014 7B68     		ldr	r3, [r7, #4]
 2242 0016 1B68     		ldr	r3, [r3]
 2243 0018 22F00102 		bic	r2, r2, #1
 2244 001c DA60     		str	r2, [r3, #12]
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   /* Update the SDRAM controller state */
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->State = HAL_SDRAM_STATE_ERROR;
 2245              		.loc 1 1291 17
 2246 001e FB68     		ldr	r3, [r7, #12]
 2247 0020 0322     		movs	r2, #3
 2248 0022 83F82C20 		strb	r2, [r3, #44]
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** 
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   hsdram->DmaXferErrorCallback(hmdma);
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #else
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c ****   HAL_SDRAM_DMA_XferErrorCallback(hmdma);
 2249              		.loc 1 1296 3
 2250 0026 7868     		ldr	r0, [r7, #4]
 2251 0028 FFF7FEFF 		bl	HAL_SDRAM_DMA_XferErrorCallback
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** #endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c **** }
 2252              		.loc 1 1298 1
 2253 002c 00BF     		nop
 2254 002e 1037     		adds	r7, r7, #16
 2255              	.LCFI140:
 2256              		.cfi_def_cfa_offset 8
 2257 0030 BD46     		mov	sp, r7
 2258              	.LCFI141:
 2259              		.cfi_def_cfa_register 13
 2260              		@ sp needed
 2261 0032 80BD     		pop	{r7, pc}
 2262              		.cfi_endproc
 2263              	.LFE356:
ARM GAS  /tmp/ccZvMaOV.s 			page 63


 2265              		.text
 2266              	.Letext0:
 2267              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2268              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 2269              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2270              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 2271              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2272              		.file 7 "/usr/include/newlib/sys/_types.h"
 2273              		.file 8 "/usr/include/newlib/sys/reent.h"
 2274              		.file 9 "/usr/include/newlib/sys/lock.h"
 2275              		.file 10 "/usr/include/newlib/math.h"
 2276              		.file 11 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2277              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 2278              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2279              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 2280              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sdram.h"
 2281              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 2282              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccZvMaOV.s 			page 64


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_sdram.c
     /tmp/ccZvMaOV.s:17     .text.HAL_SDRAM_Init:0000000000000000 $t
     /tmp/ccZvMaOV.s:25     .text.HAL_SDRAM_Init:0000000000000000 HAL_SDRAM_Init
     /tmp/ccZvMaOV.s:186    .text.HAL_SDRAM_MspInit:0000000000000000 HAL_SDRAM_MspInit
     /tmp/ccZvMaOV.s:114    .text.HAL_SDRAM_Init:0000000000000074 $d
     /tmp/ccZvMaOV.s:119    .text.HAL_SDRAM_DeInit:0000000000000000 $t
     /tmp/ccZvMaOV.s:126    .text.HAL_SDRAM_DeInit:0000000000000000 HAL_SDRAM_DeInit
     /tmp/ccZvMaOV.s:229    .text.HAL_SDRAM_MspDeInit:0000000000000000 HAL_SDRAM_MspDeInit
     /tmp/ccZvMaOV.s:179    .text.HAL_SDRAM_MspInit:0000000000000000 $t
     /tmp/ccZvMaOV.s:222    .text.HAL_SDRAM_MspDeInit:0000000000000000 $t
     /tmp/ccZvMaOV.s:265    .text.HAL_SDRAM_IRQHandler:0000000000000000 $t
     /tmp/ccZvMaOV.s:272    .text.HAL_SDRAM_IRQHandler:0000000000000000 HAL_SDRAM_IRQHandler
     /tmp/ccZvMaOV.s:331    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 HAL_SDRAM_RefreshErrorCallback
     /tmp/ccZvMaOV.s:324    .text.HAL_SDRAM_RefreshErrorCallback:0000000000000000 $t
     /tmp/ccZvMaOV.s:367    .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 $t
     /tmp/ccZvMaOV.s:374    .text.HAL_SDRAM_DMA_XferCpltCallback:0000000000000000 HAL_SDRAM_DMA_XferCpltCallback
     /tmp/ccZvMaOV.s:410    .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 $t
     /tmp/ccZvMaOV.s:417    .text.HAL_SDRAM_DMA_XferErrorCallback:0000000000000000 HAL_SDRAM_DMA_XferErrorCallback
     /tmp/ccZvMaOV.s:453    .text.HAL_SDRAM_Read_8b:0000000000000000 $t
     /tmp/ccZvMaOV.s:460    .text.HAL_SDRAM_Read_8b:0000000000000000 HAL_SDRAM_Read_8b
     /tmp/ccZvMaOV.s:588    .text.HAL_SDRAM_Write_8b:0000000000000000 $t
     /tmp/ccZvMaOV.s:595    .text.HAL_SDRAM_Write_8b:0000000000000000 HAL_SDRAM_Write_8b
     /tmp/ccZvMaOV.s:719    .text.HAL_SDRAM_Read_16b:0000000000000000 $t
     /tmp/ccZvMaOV.s:726    .text.HAL_SDRAM_Read_16b:0000000000000000 HAL_SDRAM_Read_16b
     /tmp/ccZvMaOV.s:884    .text.HAL_SDRAM_Write_16b:0000000000000000 $t
     /tmp/ccZvMaOV.s:891    .text.HAL_SDRAM_Write_16b:0000000000000000 HAL_SDRAM_Write_16b
     /tmp/ccZvMaOV.s:1055   .text.HAL_SDRAM_Write_16b:00000000000000d0 $d
     /tmp/ccZvMaOV.s:1060   .text.HAL_SDRAM_Read_32b:0000000000000000 $t
     /tmp/ccZvMaOV.s:1067   .text.HAL_SDRAM_Read_32b:0000000000000000 HAL_SDRAM_Read_32b
     /tmp/ccZvMaOV.s:1194   .text.HAL_SDRAM_Write_32b:0000000000000000 $t
     /tmp/ccZvMaOV.s:1201   .text.HAL_SDRAM_Write_32b:0000000000000000 HAL_SDRAM_Write_32b
     /tmp/ccZvMaOV.s:1325   .text.HAL_SDRAM_Read_DMA:0000000000000000 $t
     /tmp/ccZvMaOV.s:1332   .text.HAL_SDRAM_Read_DMA:0000000000000000 HAL_SDRAM_Read_DMA
     /tmp/ccZvMaOV.s:1456   .text.HAL_SDRAM_Read_DMA:000000000000009c $d
     /tmp/ccZvMaOV.s:2101   .text.SDRAM_DMACplt:0000000000000000 SDRAM_DMACplt
     /tmp/ccZvMaOV.s:2158   .text.SDRAM_DMACpltProt:0000000000000000 SDRAM_DMACpltProt
     /tmp/ccZvMaOV.s:2215   .text.SDRAM_DMAError:0000000000000000 SDRAM_DMAError
     /tmp/ccZvMaOV.s:1463   .text.HAL_SDRAM_Write_DMA:0000000000000000 $t
     /tmp/ccZvMaOV.s:1470   .text.HAL_SDRAM_Write_DMA:0000000000000000 HAL_SDRAM_Write_DMA
     /tmp/ccZvMaOV.s:1578   .text.HAL_SDRAM_Write_DMA:000000000000008c $d
     /tmp/ccZvMaOV.s:1584   .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 $t
     /tmp/ccZvMaOV.s:1591   .text.HAL_SDRAM_WriteProtection_Enable:0000000000000000 HAL_SDRAM_WriteProtection_Enable
     /tmp/ccZvMaOV.s:1664   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 $t
     /tmp/ccZvMaOV.s:1671   .text.HAL_SDRAM_WriteProtection_Disable:0000000000000000 HAL_SDRAM_WriteProtection_Disable
     /tmp/ccZvMaOV.s:1742   .text.HAL_SDRAM_SendCommand:0000000000000000 $t
     /tmp/ccZvMaOV.s:1749   .text.HAL_SDRAM_SendCommand:0000000000000000 HAL_SDRAM_SendCommand
     /tmp/ccZvMaOV.s:1842   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 $t
     /tmp/ccZvMaOV.s:1849   .text.HAL_SDRAM_ProgramRefreshRate:0000000000000000 HAL_SDRAM_ProgramRefreshRate
     /tmp/ccZvMaOV.s:1921   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 $t
     /tmp/ccZvMaOV.s:1928   .text.HAL_SDRAM_SetAutoRefreshNumber:0000000000000000 HAL_SDRAM_SetAutoRefreshNumber
     /tmp/ccZvMaOV.s:2000   .text.HAL_SDRAM_GetModeStatus:0000000000000000 $t
     /tmp/ccZvMaOV.s:2007   .text.HAL_SDRAM_GetModeStatus:0000000000000000 HAL_SDRAM_GetModeStatus
     /tmp/ccZvMaOV.s:2048   .text.HAL_SDRAM_GetState:0000000000000000 $t
     /tmp/ccZvMaOV.s:2055   .text.HAL_SDRAM_GetState:0000000000000000 HAL_SDRAM_GetState
     /tmp/ccZvMaOV.s:2095   .text.SDRAM_DMACplt:0000000000000000 $t
     /tmp/ccZvMaOV.s:2152   .text.SDRAM_DMACpltProt:0000000000000000 $t
ARM GAS  /tmp/ccZvMaOV.s 			page 65


     /tmp/ccZvMaOV.s:2209   .text.SDRAM_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
FMC_SDRAM_Init
FMC_SDRAM_Timing_Init
FMC_SDRAM_DeInit
HAL_MDMA_Start_IT
FMC_SDRAM_WriteProtection_Enable
FMC_SDRAM_WriteProtection_Disable
FMC_SDRAM_SendCommand
FMC_SDRAM_ProgramRefreshRate
FMC_SDRAM_SetAutoRefreshNumber
FMC_SDRAM_GetModeStatus
