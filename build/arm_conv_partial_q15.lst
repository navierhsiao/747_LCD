ARM GAS  /tmp/ccjQyAEv.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_conv_partial_q15.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_conv_partial_q15,"ax",%progbits
  17              		.align	1
  18              		.global	arm_conv_partial_q15
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_conv_partial_q15:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c"
   1:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Title:        arm_conv_partial_q15.c
   4:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Description:  Partial convolution of Q15 sequences
   5:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
   6:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
   9:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** /*
  12:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
  14:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
  16:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
  20:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  *
  22:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  */
  28:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  29:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  31:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** /**
ARM GAS  /tmp/ccjQyAEv.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @ingroup groupFilters
  33:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  */
  34:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  35:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** /**
  36:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @addtogroup PartialConv
  37:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @{
  38:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  */
  39:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  40:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** /**
  41:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @brief         Partial convolution of Q15 sequences.
  42:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     pSrcA      points to the first input sequence
  43:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     srcALen    length of the first input sequence
  44:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     pSrcB      points to the second input sequence
  45:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     srcBLen    length of the second input sequence
  46:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[out]    pDst       points to the location where the output result is written
  47:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     firstIndex is the first output sample to start with
  48:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @param[in]     numPoints  is the number of output points to be computed
  49:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @return        execution status
  50:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****                    - \ref ARM_MATH_SUCCESS        : Operation successful
  51:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : requested subset is not in the range [0 srcALen
  52:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  53:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @remark
  54:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****                    Refer to \ref arm_conv_partial_fast_q15() for a faster but less precise version 
  55:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   @remark
  56:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****                    Refer to \ref arm_conv_partial_opt_q15() for a faster implementation of this fun
  57:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****  */
  58:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  59:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** arm_status arm_conv_partial_q15(
  60:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t * pSrcA,
  61:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t srcALen,
  62:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t * pSrcB,
  63:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t srcBLen,
  64:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         q15_t * pDst,
  65:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t firstIndex,
  66:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t numPoints)
  67:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** {
  28              		.loc 1 67 1
  29              		.cfi_startproc
  30              		@ args = 12, pretend = 0, frame = 1280
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, r10, fp}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 11, -4
  44 0004 ADF5A06D 		sub	sp, sp, #1280
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 1312
  47 0008 00AF     		add	r7, sp, #0
  48              	.LCFI2:
ARM GAS  /tmp/ccjQyAEv.s 			page 3


  49              		.cfi_def_cfa_register 7
  50 000a 07F12404 		add	r4, r7, #36
  51 000e 2060     		str	r0, [r4]
  52 0010 07F12000 		add	r0, r7, #32
  53 0014 0160     		str	r1, [r0]
  54 0016 07F11C01 		add	r1, r7, #28
  55 001a 0A60     		str	r2, [r1]
  56 001c 07F11802 		add	r2, r7, #24
  57 0020 1360     		str	r3, [r2]
  68:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  69:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #if defined (ARM_MATH_DSP)
  70:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  71:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *pIn1;                                   /* InputA pointer */
  72:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *pIn2;                                   /* InputB pointer */
  73:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         q15_t *pOut = pDst;                            /* Output pointer */
  58              		.loc 1 73 16
  59 0022 07F5DA73 		add	r3, r7, #436
  60 0026 D7F82025 		ldr	r2, [r7, #1312]
  61 002a 1A60     		str	r2, [r3]
  74:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         q63_t sum, acc0, acc1, acc2, acc3;             /* Accumulator */
  75:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *px;                                     /* Intermediate inputA pointer */
  76:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *py;                                     /* Intermediate inputB pointer */
  77:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  78:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         q31_t x0, x1, x2, x3, c0;                      /* Temporary input variables to hold state a
  79:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         int32_t blockSize1, blockSize2, blockSize3;    /* Loop counters */
  80:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t j, k, count, blkCnt, check;
  81:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         arm_status status;                             /* Status of Partial convolution */
  82:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  83:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   /* Check for range of output samples to be calculated */
  84:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
  62              		.loc 1 84 19
  63 002c D7F82425 		ldr	r2, [r7, #1316]
  64 0030 D7F82835 		ldr	r3, [r7, #1320]
  65 0034 D118     		adds	r1, r2, r3
  66              		.loc 1 84 44
  67 0036 07F11802 		add	r2, r7, #24
  68 003a 07F12003 		add	r3, r7, #32
  69 003e 1268     		ldr	r2, [r2]
  70 0040 1B68     		ldr	r3, [r3]
  71 0042 1344     		add	r3, r3, r2
  72 0044 013B     		subs	r3, r3, #1
  73              		.loc 1 84 6
  74 0046 9942     		cmp	r1, r3
  75 0048 04D9     		bls	.L2
  85:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   {
  86:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  87:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  76              		.loc 1 87 12
  77 004a FF23     		movs	r3, #255
  78 004c 87F8A734 		strb	r3, [r7, #1191]
  79 0050 01F028BE 		b	.L3
  80              	.L2:
  88:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   }
  89:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   else
  90:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   {
  91:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  92:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* srcB is always made to slide across srcA. */
ARM GAS  /tmp/ccjQyAEv.s 			page 4


  93:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  94:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     if (srcALen >= srcBLen)
  81              		.loc 1 94 8
  82 0054 07F12003 		add	r3, r7, #32
  83 0058 07F11801 		add	r1, r7, #24
  84 005c 1A68     		ldr	r2, [r3]
  85 005e 0B68     		ldr	r3, [r1]
  86 0060 9A42     		cmp	r2, r3
  87 0062 0AD3     		bcc	.L4
  95:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
  96:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputA pointer */
  97:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pIn1 = pSrcA;
  88              		.loc 1 97 12
  89 0064 07F12403 		add	r3, r7, #36
  90 0068 1B68     		ldr	r3, [r3]
  91 006a C7F8FC34 		str	r3, [r7, #1276]
  98:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
  99:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputB pointer */
 100:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pIn2 = pSrcB;
  92              		.loc 1 100 12
  93 006e 07F11C03 		add	r3, r7, #28
  94 0072 1B68     		ldr	r3, [r3]
  95 0074 C7F8F834 		str	r3, [r7, #1272]
  96 0078 19E0     		b	.L5
  97              	.L4:
 101:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 102:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     else
 103:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 104:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputA pointer */
 105:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pIn1 = pSrcB;
  98              		.loc 1 105 12
  99 007a 07F11C03 		add	r3, r7, #28
 100 007e 1B68     		ldr	r3, [r3]
 101 0080 C7F8FC34 		str	r3, [r7, #1276]
 106:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 107:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialization of inputB pointer */
 108:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pIn2 = pSrcA;
 102              		.loc 1 108 12
 103 0084 07F12403 		add	r3, r7, #36
 104 0088 1B68     		ldr	r3, [r3]
 105 008a C7F8F834 		str	r3, [r7, #1272]
 109:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 110:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 111:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       j = srcBLen;
 106              		.loc 1 111 9
 107 008e 07F11803 		add	r3, r7, #24
 108 0092 1B68     		ldr	r3, [r3]
 109 0094 C7F8B434 		str	r3, [r7, #1204]
 112:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       srcBLen = srcALen;
 110              		.loc 1 112 15
 111 0098 07F11802 		add	r2, r7, #24
 112 009c 07F12003 		add	r3, r7, #32
 113 00a0 1B68     		ldr	r3, [r3]
 114 00a2 1360     		str	r3, [r2]
 113:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       srcALen = j;
 115              		.loc 1 113 15
 116 00a4 07F12003 		add	r3, r7, #32
ARM GAS  /tmp/ccjQyAEv.s 			page 5


 117 00a8 D7F8B424 		ldr	r2, [r7, #1204]
 118 00ac 1A60     		str	r2, [r3]
 119              	.L5:
 114:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 115:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 116:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Conditions to check which loopCounter holds
 117:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * the first and last indices of the output samples to be calculated. */
 118:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     check = firstIndex + numPoints;
 120              		.loc 1 118 11
 121 00ae D7F82425 		ldr	r2, [r7, #1316]
 122 00b2 D7F82835 		ldr	r3, [r7, #1320]
 123 00b6 1344     		add	r3, r3, r2
 124 00b8 C7F8A034 		str	r3, [r7, #1184]
 119:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 125              		.loc 1 119 19
 126 00bc D7F8A024 		ldr	r2, [r7, #1184]
 127              		.loc 1 119 36
 128 00c0 07F12003 		add	r3, r7, #32
 129 00c4 1B68     		ldr	r3, [r3]
 130              		.loc 1 119 90
 131 00c6 9A42     		cmp	r2, r3
 132 00c8 06DD     		ble	.L6
 133              		.loc 1 119 56 discriminator 1
 134 00ca D7F8A024 		ldr	r2, [r7, #1184]
 135              		.loc 1 119 73 discriminator 1
 136 00ce 07F12003 		add	r3, r7, #32
 137 00d2 1B68     		ldr	r3, [r3]
 138              		.loc 1 119 90 discriminator 1
 139 00d4 D31A     		subs	r3, r2, r3
 140 00d6 00E0     		b	.L7
 141              	.L6:
 142              		.loc 1 119 90 is_stmt 0 discriminator 2
 143 00d8 0023     		movs	r3, #0
 144              	.L7:
 145              		.loc 1 119 16 is_stmt 1 discriminator 4
 146 00da C7F8B834 		str	r3, [r7, #1208]
 120:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 147              		.loc 1 120 41 discriminator 4
 148 00de 07F12003 		add	r3, r7, #32
 149 00e2 1A68     		ldr	r2, [r3]
 150              		.loc 1 120 19 discriminator 4
 151 00e4 D7F82435 		ldr	r3, [r7, #1316]
 152              		.loc 1 120 117 discriminator 4
 153 00e8 9A42     		cmp	r2, r3
 154 00ea 09DC     		bgt	.L8
 155              		.loc 1 120 78 discriminator 1
 156 00ec D7F82435 		ldr	r3, [r7, #1316]
 157              		.loc 1 120 76 discriminator 1
 158 00f0 D7F8B824 		ldr	r2, [r7, #1208]
 159 00f4 D21A     		subs	r2, r2, r3
 160              		.loc 1 120 100 discriminator 1
 161 00f6 07F12003 		add	r3, r7, #32
 162 00fa 1B68     		ldr	r3, [r3]
 163              		.loc 1 120 117 discriminator 1
 164 00fc 1344     		add	r3, r3, r2
 165 00fe 01E0     		b	.L9
 166              	.L8:
ARM GAS  /tmp/ccjQyAEv.s 			page 6


 167              		.loc 1 120 117 is_stmt 0 discriminator 2
 168 0100 D7F8B834 		ldr	r3, [r7, #1208]
 169              	.L9:
 170              		.loc 1 120 16 is_stmt 1 discriminator 4
 171 0104 C7F8B834 		str	r3, [r7, #1208]
 121:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 172              		.loc 1 121 42 discriminator 4
 173 0108 07F11803 		add	r3, r7, #24
 174 010c 1A68     		ldr	r2, [r3]
 175 010e D7F82435 		ldr	r3, [r7, #1316]
 176 0112 D31A     		subs	r3, r2, r3
 177 0114 013B     		subs	r3, r3, #1
 178              		.loc 1 121 16 discriminator 4
 179 0116 C7F8BC34 		str	r3, [r7, #1212]
 122:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1U)) ? blockSize1 : (int32_t) numPoints) :
 180              		.loc 1 122 99 discriminator 4
 181 011a D7F8BC34 		ldr	r3, [r7, #1212]
 182 011e 002B     		cmp	r3, #0
 183 0120 0DDD     		ble	.L10
 184              		.loc 1 122 56 discriminator 1
 185 0122 07F11803 		add	r3, r7, #24
 186 0126 1B68     		ldr	r3, [r3]
 187 0128 013B     		subs	r3, r3, #1
 188              		.loc 1 122 76 discriminator 1
 189 012a D7F8A024 		ldr	r2, [r7, #1184]
 190 012e 9A42     		cmp	r2, r3
 191 0130 02D9     		bls	.L11
 192              		.loc 1 122 76 is_stmt 0 discriminator 3
 193 0132 D7F8BC34 		ldr	r3, [r7, #1212]
 194 0136 03E0     		b	.L13
 195              	.L11:
 196              		.loc 1 122 76 discriminator 4
 197 0138 D7F82835 		ldr	r3, [r7, #1320]
 198 013c 00E0     		b	.L13
 199              	.L10:
 200              		.loc 1 122 99 is_stmt 1 discriminator 2
 201 013e 0023     		movs	r3, #0
 202              	.L13:
 203              		.loc 1 122 16 discriminator 8
 204 0140 C7F8BC34 		str	r3, [r7, #1212]
 123:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) + (int32_t) firstIndex);
 205              		.loc 1 123 18 discriminator 8
 206 0144 D7F8A014 		ldr	r1, [r7, #1184]
 207              		.loc 1 123 49 discriminator 8
 208 0148 D7F8B824 		ldr	r2, [r7, #1208]
 209 014c D7F8BC34 		ldr	r3, [r7, #1212]
 210 0150 1A44     		add	r2, r2, r3
 211              		.loc 1 123 65 discriminator 8
 212 0152 D7F82435 		ldr	r3, [r7, #1316]
 213              		.loc 1 123 63 discriminator 8
 214 0156 1344     		add	r3, r3, r2
 215              		.loc 1 123 16 discriminator 8
 216 0158 CB1A     		subs	r3, r1, r3
 217 015a C7F89C34 		str	r3, [r7, #1180]
 124:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 218              		.loc 1 124 16 discriminator 8
 219 015e D7F89C34 		ldr	r3, [r7, #1180]
ARM GAS  /tmp/ccjQyAEv.s 			page 7


 220 0162 23EAE373 		bic	r3, r3, r3, asr #31
 221 0166 C7F89C34 		str	r3, [r7, #1180]
 125:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 126:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 127:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The function is internally
 128:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * divided into three stages according to the number of multiplications that has to be
 129:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 130:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * algorithm, the multiplications increase by one for every iteration.
 131:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 132:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 133:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * for every iteration. */
 134:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 135:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set the output pointer to point to the firstIndex
 136:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * of the output sample to be calculated. */
 137:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pOut = pDst + firstIndex;
 222              		.loc 1 137 17 discriminator 8
 223 016a D7F82435 		ldr	r3, [r7, #1316]
 224 016e 5B00     		lsls	r3, r3, #1
 225 0170 D7F82025 		ldr	r2, [r7, #1312]
 226 0174 1A44     		add	r2, r2, r3
 227              		.loc 1 137 10 discriminator 8
 228 0176 07F5DA73 		add	r3, r7, #436
 229 017a 1A60     		str	r2, [r3]
 138:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 139:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 140:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage1
 141:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * -------------------------*/
 142:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 143:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum = x[0] * y[0]
 144:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 145:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 146:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 147:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      */
 148:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 149:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 150:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        The count variable holds the number of MAC operations performed.
 151:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        Since the partial convolution starts from firstIndex
 152:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 153:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     count = 1U + firstIndex;
 230              		.loc 1 153 11 discriminator 8
 231 017c D7F82435 		ldr	r3, [r7, #1316]
 232 0180 0133     		adds	r3, r3, #1
 233 0182 C7F8AC34 		str	r3, [r7, #1196]
 154:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 155:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 156:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     px = pIn1;
 234              		.loc 1 156 8 discriminator 8
 235 0186 07F5D873 		add	r3, r7, #432
 236 018a D7F8FC24 		ldr	r2, [r7, #1276]
 237 018e 1A60     		str	r2, [r3]
 157:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 158:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 159:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + firstIndex;
 238              		.loc 1 159 18 discriminator 8
 239 0190 D7F82435 		ldr	r3, [r7, #1316]
 240 0194 5B00     		lsls	r3, r3, #1
 241              		.loc 1 159 11 discriminator 8
ARM GAS  /tmp/ccjQyAEv.s 			page 8


 242 0196 D7F8F824 		ldr	r2, [r7, #1272]
 243 019a 1344     		add	r3, r3, r2
 244 019c C7F8C834 		str	r3, [r7, #1224]
 160:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     py = pSrc2;
 245              		.loc 1 160 8 discriminator 8
 246 01a0 07F5D673 		add	r3, r7, #428
 247 01a4 D7F8C824 		ldr	r2, [r7, #1224]
 248 01a8 1A60     		str	r2, [r3]
 161:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 162:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* ------------------------
 163:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Stage1 process
 164:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ----------------------*/
 165:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 166:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 167:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 168:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 169:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 170:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The first part of the stage starts here */
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     while ((count < 4U) && (blockSize1 > 0U))
 249              		.loc 1 171 11 discriminator 8
 250 01aa 90E0     		b	.L14
 251              	.L19:
 172:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 173:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 174:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 252              		.loc 1 174 11
 253 01ac 4FF00002 		mov	r2, #0
 254 01b0 4FF00003 		mov	r3, #0
 255 01b4 07F59E61 		add	r1, r7, #1264
 256 01b8 C1E90023 		strd	r2, [r1]
 175:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 176:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Loop over number of MAC operations between
 177:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        * inputA samples and inputB samples */
 178:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count;
 257              		.loc 1 178 9
 258 01bc D7F8AC34 		ldr	r3, [r7, #1196]
 259 01c0 C7F8B034 		str	r3, [r7, #1200]
 179:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 260              		.loc 1 180 13
 261 01c4 46E0     		b	.L15
 262              	.L17:
 181:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 182:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 183:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 263              		.loc 1 183 27
 264 01c6 07F5D873 		add	r3, r7, #432
 265 01ca 1A68     		ldr	r2, [r3]
 266 01cc 911C     		adds	r1, r2, #2
 267 01ce 07F5D873 		add	r3, r7, #432
 268 01d2 1960     		str	r1, [r3]
 269              		.loc 1 183 24
 270 01d4 B2F90030 		ldrsh	r3, [r2]
 271              		.loc 1 183 15
 272 01d8 1846     		mov	r0, r3
 273              		.loc 1 183 34
 274 01da 07F5D673 		add	r3, r7, #428
ARM GAS  /tmp/ccjQyAEv.s 			page 9


 275 01de 1968     		ldr	r1, [r3]
 276 01e0 8A1E     		subs	r2, r1, #2
 277 01e2 07F5D673 		add	r3, r7, #428
 278 01e6 1A60     		str	r2, [r3]
 279              		.loc 1 183 31
 280 01e8 B1F90030 		ldrsh	r3, [r1]
 281              		.loc 1 183 15
 282 01ec 1946     		mov	r1, r3
 283 01ee 07F59E63 		add	r3, r7, #1264
 284 01f2 D3E90023 		ldrd	r2, [r3]
 285 01f6 C7F83C04 		str	r0, [r7, #1084]
 286 01fa C7F83814 		str	r1, [r7, #1080]
 287 01fe 07F58661 		add	r1, r7, #1072
 288 0202 C1E90023 		strd	r2, [r1]
 289              	.LBB128:
 290              	.LBB129:
 291              		.file 2 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h"
   1:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /tmp/ccjQyAEv.s 			page 10


  41:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccjQyAEv.s 			page 11


  98:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
ARM GAS  /tmp/ccjQyAEv.s 			page 12


 155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 13


 212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
ARM GAS  /tmp/ccjQyAEv.s 			page 14


 269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
ARM GAS  /tmp/ccjQyAEv.s 			page 15


 326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccjQyAEv.s 			page 16


 383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
ARM GAS  /tmp/ccjQyAEv.s 			page 17


 440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 18


 497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccjQyAEv.s 			page 19


 554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjQyAEv.s 			page 20


 611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
ARM GAS  /tmp/ccjQyAEv.s 			page 21


 668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccjQyAEv.s 			page 22


 725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 23


 782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
ARM GAS  /tmp/ccjQyAEv.s 			page 24


 839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
ARM GAS  /tmp/ccjQyAEv.s 			page 25


 896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
ARM GAS  /tmp/ccjQyAEv.s 			page 26


 953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccjQyAEv.s 			page 27


1010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
ARM GAS  /tmp/ccjQyAEv.s 			page 28


1067:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1078:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccjQyAEv.s 			page 29


1124:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1154:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
1156:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1157:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccjQyAEv.s 			page 30


1181:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1205:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
1207:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1208:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1209:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1210:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1211:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1212:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
1213:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
1214:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1215:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
1216:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1217:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
1218:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1219:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1220:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1221:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1222:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1223:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1224:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1225:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1226:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1227:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1228:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1229:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1231:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1232:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1233:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
1234:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1235:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1236:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
1237:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
ARM GAS  /tmp/ccjQyAEv.s 			page 31


1238:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1239:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1240:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1241:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1242:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1243:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1244:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1245:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1246:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1247:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1248:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
1249:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
1250:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1251:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1252:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
1253:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  __extension__ \
1254:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1255:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1256:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1257:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1258:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1259:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1260:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1261:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1262:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
1263:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
1264:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
1265:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
1266:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1267:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1268:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
1269:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1270:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1271:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1272:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1273:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1274:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1275:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1276:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1277:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1278:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
1279:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
1280:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1281:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1282:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1283:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
1284:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1285:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1286:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1287:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1288:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
1289:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1290:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1291:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1292:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1293:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1294:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccjQyAEv.s 			page 32


1295:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1296:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1297:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1298:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1299:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1300:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
1301:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
1302:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1303:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1304:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1305:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
1306:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1307:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1308:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1309:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1310:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
1311:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else
1312:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1313:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1314:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     */
1315:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
1316:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1317:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1318:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1319:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1320:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1321:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1322:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
1323:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
1324:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1325:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1326:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1327:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
1328:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1329:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1330:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1331:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
1332:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1333:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1334:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1335:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1336:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1337:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
1338:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
1339:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1340:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1341:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1342:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
1343:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1344:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1345:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1346:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1347:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1348:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1349:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
1350:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
1351:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccjQyAEv.s 			page 33


1352:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1353:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1354:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
1355:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1356:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1357:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1358:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1359:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1360:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1361:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
1362:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
1363:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1364:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1365:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1366:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
1367:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1368:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
1369:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1370:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1371:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1372:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1373:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1374:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1375:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1376:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
1377:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
1378:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1379:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
1380:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1381:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1382:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1383:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1384:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
1385:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1386:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1387:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
1388:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
1389:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1390:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1391:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1392:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
1393:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1394:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
1395:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1396:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1397:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
1398:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1399:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1400:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1401:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
1402:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
1403:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
1404:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
1405:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
1406:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1407:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1408:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjQyAEv.s 			page 34


1409:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
1410:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   {
1411:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
1412:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
1413:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1414:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
1415:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1416:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
1417:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     {
1418:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
1419:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     }
1420:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   }
1421:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
1422:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1423:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1424:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1425:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1426:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
1427:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1428:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1429:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1430:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1431:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1432:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
1433:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
1434:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1435:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1436:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1437:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
1438:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1439:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1440:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1441:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) );
1442:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1443:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1444:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1445:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1446:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1447:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
1448:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
1449:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1450:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1451:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1452:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
1453:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1454:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1455:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1456:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) );
1457:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1458:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1459:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1460:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1461:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1462:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
1463:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
1464:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1465:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  /tmp/ccjQyAEv.s 			page 35


1466:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1467:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
1468:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1469:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1470:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1471:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) );
1472:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1473:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1474:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1475:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1476:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1477:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
1478:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
1479:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1480:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1481:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1482:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
1483:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1484:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1485:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1486:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1487:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1488:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1489:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
1490:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
1491:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1492:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1493:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1494:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
1495:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1496:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1497:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1498:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1499:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1500:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1501:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
1502:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
1503:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1504:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1505:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1506:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
1507:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1508:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
1509:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1510:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1511:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1512:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1513:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
1514:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
1515:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1516:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1517:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1518:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
1519:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1520:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1521:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1522:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /tmp/ccjQyAEv.s 			page 36


1523:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
1524:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1525:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1526:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1527:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1528:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
1529:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
1530:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1531:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1532:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1533:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
1534:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1535:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1536:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1537:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) );
1538:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
1539:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1540:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1541:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1542:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1543:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
1544:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
1545:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1546:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1547:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1548:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
1549:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1550:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1551:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1552:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) );
1553:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1554:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1555:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1556:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1557:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1558:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
1559:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
1560:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1561:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1562:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1563:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1564:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1565:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
1566:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1567:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1568:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1569:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1570:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1571:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1572:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1573:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1574:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1575:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
1576:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
1577:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1578:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1579:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /tmp/ccjQyAEv.s 			page 37


1580:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1581:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1582:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
1583:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1584:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1585:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1586:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1587:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1588:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1589:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1590:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1591:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /**
1592:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
1593:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
1594:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1595:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1596:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1597:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1598:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  */
1599:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
1600:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1601:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1602:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1603:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) );
1604:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1605:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1606:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1607:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1608:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
1609:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1610:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
1611:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1612:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1613:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
1614:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
1615:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated SIMD instructions
1616:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   @{
1617:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** */
1618:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1619:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
1620:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1621:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
1622:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1623:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1624:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1625:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1626:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1627:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1628:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1629:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
1630:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1631:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1632:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1633:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1634:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1635:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1636:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 38


1637:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
1638:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1639:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1640:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1641:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1642:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1643:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1644:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1645:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
1646:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1647:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1648:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1649:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1650:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1651:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1652:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1653:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
1654:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1655:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1656:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1657:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1658:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1659:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1660:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1661:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
1662:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1663:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1664:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1665:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1666:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1667:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1668:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1669:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1670:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
1671:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1672:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1673:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1674:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1675:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1676:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1677:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1678:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
1679:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1680:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1681:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1682:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1683:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1684:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1685:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1686:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
1687:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1688:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1689:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1690:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1691:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1692:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1693:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 39


1694:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
1695:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1696:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1697:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1698:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1699:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1700:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1701:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1702:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
1703:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1704:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1705:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1706:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1707:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1708:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1709:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1710:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
1711:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1712:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1713:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1714:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1715:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1716:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1717:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1718:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1719:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
1720:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1721:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1722:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1723:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1724:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1725:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1726:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1727:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
1728:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1729:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1730:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1731:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1732:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1733:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1734:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1735:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
1736:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1737:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1738:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1739:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1740:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1741:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1742:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1743:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
1744:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1745:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1746:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1747:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1748:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1749:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1750:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 40


1751:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
1752:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1753:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1754:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1755:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1756:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1757:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1758:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1759:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
1760:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1761:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1762:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1763:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1764:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1765:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1766:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1767:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
1768:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1769:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1770:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1771:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1772:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1773:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1774:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1775:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
1776:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1777:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1778:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1779:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1780:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1781:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1782:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1783:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
1784:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1785:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1786:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1787:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1788:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1789:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1790:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1791:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1792:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1793:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1794:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1795:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1796:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1797:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1798:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1799:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1800:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1801:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1802:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1803:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1804:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1805:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1806:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1807:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/ccjQyAEv.s 			page 41


1808:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1809:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1810:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1811:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1812:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1813:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1814:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1815:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1816:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1817:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1818:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1819:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1820:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1821:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1822:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1823:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1824:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1825:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1826:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1827:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1828:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1829:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1830:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1831:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1832:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1833:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1834:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1835:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1836:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1837:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1838:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1839:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1840:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1841:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1842:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1843:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1844:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1845:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1846:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1847:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1848:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1849:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1850:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1851:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1852:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1853:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1854:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1855:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1856:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1857:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1858:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1859:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1860:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1861:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1862:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1863:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1864:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjQyAEv.s 			page 42


1865:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1866:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1867:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1868:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1869:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1870:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1871:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1872:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1873:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1874:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1875:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1876:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1877:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1878:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1879:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1880:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1881:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1882:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1883:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1884:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1885:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1886:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1887:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1888:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1889:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1890:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1891:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1892:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1893:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1894:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1895:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1896:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1897:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1898:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1899:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1900:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1901:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1902:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1903:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1904:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1905:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1906:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1907:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1908:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1909:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1910:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1911:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1912:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1913:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1914:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1915:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1916:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1917:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1918:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1919:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
1920:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1921:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccjQyAEv.s 			page 43


1922:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1923:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1924:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1925:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1926:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1927:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1928:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1929:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1930:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1931:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1932:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1933:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1934:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1935:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
1936:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1937:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1938:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
1939:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****  })
1940:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1941:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTB16(uint32_t op1)
1942:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1943:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1944:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1945:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1946:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1947:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1948:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1949:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1950:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1951:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1952:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1953:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1954:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1955:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1956:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1957:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTB16(uint32_t op1)
1958:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1959:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1960:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1961:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1962:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1963:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1964:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1965:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1966:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1967:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1968:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1969:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1970:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1971:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1972:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1973:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1974:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1975:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1976:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1977:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1978:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccjQyAEv.s 			page 44


1979:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1980:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1981:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1982:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1983:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1984:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1985:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1986:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1987:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1988:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1989:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
1990:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1991:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1992:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1993:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1994:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1995:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
1996:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
1997:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
1998:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
1999:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
2000:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2001:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
2002:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
2003:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2004:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2005:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)
2006:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2007:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2008:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2009:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2010:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
 292              		.loc 2 2011 11
 293 0206 07F12801 		add	r1, r7, #40
 294 020a 07F58663 		add	r3, r7, #1072
 295 020e D3E90023 		ldrd	r2, [r3]
 296 0212 C1E90023 		strd	r2, [r1]
2012:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2013:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (o
 297              		.loc 2 2014 118
 298 0216 07F12803 		add	r3, r7, #40
 299 021a 1968     		ldr	r1, [r3]
 300              		.loc 2 2014 136
 301 021c 07F12803 		add	r3, r7, #40
 302 0220 5A68     		ldr	r2, [r3, #4]
 303              		.loc 2 2014 3
 304 0222 D7F83C04 		ldr	r0, [r7, #1084]
 305 0226 D7F83834 		ldr	r3, [r7, #1080]
 306              		.syntax unified
 307              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 308 022a C0FBC312 		smlald r1, r2, r0, r3
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312 022e 07F12803 		add	r3, r7, #40
ARM GAS  /tmp/ccjQyAEv.s 			page 45


 313 0232 1960     		str	r1, [r3]
 314 0234 07F12803 		add	r3, r7, #40
 315 0238 5A60     		str	r2, [r3, #4]
2015:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
2016:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (o
2017:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2018:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
 316              		.loc 2 2019 13
 317 023a 07F12803 		add	r3, r7, #40
 318 023e D3E90023 		ldrd	r2, [r3]
 319              	.LBE129:
 320              	.LBE128:
 321              		.loc 1 183 13
 322 0242 07F59E61 		add	r1, r7, #1264
 323 0246 C1E90023 		strd	r2, [r1]
 184:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 185:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 186:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 324              		.loc 1 186 10
 325 024a D7F8B034 		ldr	r3, [r7, #1200]
 326 024e 013B     		subs	r3, r3, #1
 327 0250 C7F8B034 		str	r3, [r7, #1200]
 328              	.L15:
 180:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 329              		.loc 1 180 13
 330 0254 D7F8B034 		ldr	r3, [r7, #1200]
 331 0258 002B     		cmp	r3, #0
 332 025a B4D1     		bne	.L17
 333              	.LBB130:
 187:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 188:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 189:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 190:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 334              		.loc 1 190 26
 335 025c 07F59E63 		add	r3, r7, #1264
 336 0260 D3E90023 		ldrd	r2, [r3]
 337 0264 4FF00000 		mov	r0, #0
 338 0268 4FF00001 		mov	r1, #0
 339 026c D00B     		lsrs	r0, r2, #15
 340 026e 40EA4340 		orr	r0, r0, r3, lsl #17
 341 0272 D913     		asrs	r1, r3, #15
 342 0274 0346     		mov	r3, r0
 343 0276 C7F89834 		str	r3, [r7, #1176]
 344 027a D7F89834 		ldr	r3, [r7, #1176]
 345              		.syntax unified
 346              	@ 190 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 347 027e 03F30F03 		ssat r3, #16, r3
 348              	@ 0 "" 2
 349              		.thumb
 350              		.syntax unified
 351 0282 C7F89434 		str	r3, [r7, #1172]
 352 0286 D7F89404 		ldr	r0, [r7, #1172]
 353              	.LBE130:
 354              		.loc 1 190 12
 355 028a 07F5DA73 		add	r3, r7, #436
 356 028e 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 46


 357 0290 8A1C     		adds	r2, r1, #2
 358 0292 07F5DA73 		add	r3, r7, #436
 359 0296 1A60     		str	r2, [r3]
 360              		.loc 1 190 17
 361 0298 03B2     		sxth	r3, r0
 362              		.loc 1 190 15
 363 029a 0B80     		strh	r3, [r1]	@ movhi
 191:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 192:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 193:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = ++pSrc2;
 364              		.loc 1 193 10
 365 029c D7F8C834 		ldr	r3, [r7, #1224]
 366 02a0 0233     		adds	r3, r3, #2
 367 02a2 C7F8C834 		str	r3, [r7, #1224]
 368 02a6 07F5D673 		add	r3, r7, #428
 369 02aa D7F8C824 		ldr	r2, [r7, #1224]
 370 02ae 1A60     		str	r2, [r3]
 194:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1;
 371              		.loc 1 194 10
 372 02b0 07F5D873 		add	r3, r7, #432
 373 02b4 D7F8FC24 		ldr	r2, [r7, #1276]
 374 02b8 1A60     		str	r2, [r3]
 195:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 196:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Increment MAC count */
 197:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       count++;
 375              		.loc 1 197 12
 376 02ba D7F8AC34 		ldr	r3, [r7, #1196]
 377 02be 0133     		adds	r3, r3, #1
 378 02c0 C7F8AC34 		str	r3, [r7, #1196]
 198:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 199:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement loop counter */
 200:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize1--;
 379              		.loc 1 200 17
 380 02c4 D7F8BC34 		ldr	r3, [r7, #1212]
 381 02c8 013B     		subs	r3, r3, #1
 382 02ca C7F8BC34 		str	r3, [r7, #1212]
 383              	.L14:
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 384              		.loc 1 171 11
 385 02ce D7F8AC34 		ldr	r3, [r7, #1196]
 386 02d2 032B     		cmp	r3, #3
 387 02d4 04D8     		bhi	.L18
 171:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 388              		.loc 1 171 25 discriminator 1
 389 02d6 D7F8BC34 		ldr	r3, [r7, #1212]
 390 02da 002B     		cmp	r3, #0
 391 02dc 7FF466AF 		bne	.L19
 392              	.L18:
 201:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 202:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 203:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The second part of the stage starts here */
 204:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 205:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* To, read the last two inputB samples using SIMD:
 206:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 207:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     py = py - 1;
 393              		.loc 1 207 13
 394 02e0 07F5D673 		add	r3, r7, #428
ARM GAS  /tmp/ccjQyAEv.s 			page 47


 395 02e4 1B68     		ldr	r3, [r3]
 396 02e6 9A1E     		subs	r2, r3, #2
 397              		.loc 1 207 8
 398 02e8 07F5D673 		add	r3, r7, #428
 399 02ec 1A60     		str	r2, [r3]
 208:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     while (blockSize1 > 0U)
 400              		.loc 1 209 11
 401 02ee 66E1     		b	.L20
 402              	.L32:
 210:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 211:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 212:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 403              		.loc 1 212 11
 404 02f0 4FF00002 		mov	r2, #0
 405 02f4 4FF00003 		mov	r3, #0
 406 02f8 07F59E61 		add	r1, r7, #1264
 407 02fc C1E90023 		strd	r2, [r1]
 213:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 214:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 215:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count >> 2U;
 408              		.loc 1 215 9
 409 0300 D7F8AC34 		ldr	r3, [r7, #1196]
 410 0304 9B08     		lsrs	r3, r3, #2
 411 0306 C7F8B034 		str	r3, [r7, #1200]
 216:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 217:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 218:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          a second loop below computes MACs for the remaining 1 to 3 samples. */
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 412              		.loc 1 219 13
 413 030a C0E0     		b	.L21
 414              	.L28:
 415 030c 07F58063 		add	r3, r7, #1024
 416 0310 07F5D872 		add	r2, r7, #432
 417 0314 1A60     		str	r2, [r3]
 418              	.LBB131:
 419              	.LBB132:
 420              		.file 3 "./Libraries/CMSIS/DSP/Include/arm_math.h"
   1:./Libraries/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:./Libraries/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:./Libraries/CMSIS/DSP/Include/arm_math.h **** /*
   8:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  10:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  12:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  16:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
  18:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccjQyAEv.s 			page 48


  20:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
  24:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
  25:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
  26:./Libraries/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  28:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  31:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  34:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  46:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  49:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  52:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  73:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  /tmp/ccjQyAEv.s 			page 49


  77:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  78:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  81:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  83:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  86:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  89:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  92:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  95:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  96:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
  98:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 101:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 103:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 105:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 107:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 109:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 111:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 113:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 115:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 117:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 118:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 119:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 121:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 125:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 127:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 131:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
ARM GAS  /tmp/ccjQyAEv.s 			page 50


 134:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 135:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:./Libraries/CMSIS/DSP/Include/arm_math.h ****    *
 146:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 151:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 152:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 153:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 154:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 156:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 157:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 158:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 164:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 165:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 166:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 167:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 175:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 176:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 177:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 179:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 180:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 181:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 183:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     {
ARM GAS  /tmp/ccjQyAEv.s 			page 51


 191:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 198:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 206:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 213:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *
 227:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
 232:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:./Libraries/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
ARM GAS  /tmp/ccjQyAEv.s 			page 52


 248:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 250:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 251:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 252:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 254:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 255:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 256:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 258:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 259:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 260:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 262:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 263:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 264:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 266:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 267:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 268:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 273:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 274:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 275:./Libraries/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 277:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 278:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 279:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 282:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 285:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 287:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
 289:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 293:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 295:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 297:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 299:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 301:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 303:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 304:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
ARM GAS  /tmp/ccjQyAEv.s 			page 53


 305:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 306:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 307:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 308:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 312:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 320:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 321:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 325:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 329:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 330:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:./Libraries/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 333:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 334:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 335:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:./Libraries/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 338:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 339:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 340:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 341:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 342:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 344:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 345:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 346:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:./Libraries/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 351:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 352:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 353:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 355:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 356:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
ARM GAS  /tmp/ccjQyAEv.s 			page 54


 362:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 363:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 364:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 366:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 370:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 371:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 372:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 374:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 375:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:./Libraries/CMSIS/DSP/Include/arm_math.h ****   {
 377:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:./Libraries/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:./Libraries/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 386:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 387:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 389:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 391:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 392:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 394:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 396:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 397:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 399:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 401:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 402:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 404:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 406:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 407:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 409:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 411:./Libraries/CMSIS/DSP/Include/arm_math.h ****   /**
 412:./Libraries/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:./Libraries/CMSIS/DSP/Include/arm_math.h ****    */
 414:./Libraries/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 416:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 417:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 418:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
ARM GAS  /tmp/ccjQyAEv.s 			page 55


 419:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 421:./Libraries/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:./Libraries/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:./Libraries/CMSIS/DSP/Include/arm_math.h **** #else
 438:./Libraries/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:./Libraries/CMSIS/DSP/Include/arm_math.h **** #endif
 440:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 441:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:./Libraries/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 446:./Libraries/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 448:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 449:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 450:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 454:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 457:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 459:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
 460:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 461:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 463:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 464:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 465:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 469:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 472:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 421              		.loc 3 474 3
ARM GAS  /tmp/ccjQyAEv.s 			page 56


 422 0316 07F58063 		add	r3, r7, #1024
 423 031a 1B68     		ldr	r3, [r3]
 424 031c 1B68     		ldr	r3, [r3]
 425 031e 1B68     		ldr	r3, [r3]	@ unaligned
 426 0320 1A46     		mov	r2, r3
 427 0322 07F14C03 		add	r3, r7, #76
 428 0326 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 429              		.loc 3 475 9
 430 0328 07F58063 		add	r3, r7, #1024
 431 032c 1B68     		ldr	r3, [r3]
 432 032e 1B68     		ldr	r3, [r3]
 433 0330 1A1D     		adds	r2, r3, #4
 434 0332 07F58063 		add	r3, r7, #1024
 435 0336 1B68     		ldr	r3, [r3]
 436 0338 1A60     		str	r2, [r3]
 476:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 477:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 437              		.loc 3 477 10
 438 033a 07F14C03 		add	r3, r7, #76
 439 033e 1B68     		ldr	r3, [r3]
 440              	.LBE132:
 441              	.LBE131:
 220:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 221:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulate */
 222:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 223:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 442              		.loc 1 223 15
 443 0340 1846     		mov	r0, r3
 444 0342 07F5D673 		add	r3, r7, #428
 445 0346 C7F80434 		str	r3, [r7, #1028]
 446              	.LBB133:
 447              	.LBB134:
 478:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 479:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 480:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 481:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 485:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 488:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 448              		.loc 3 490 3
 449 034a D7F80434 		ldr	r3, [r7, #1028]
 450 034e 1B68     		ldr	r3, [r3]
 451 0350 1B68     		ldr	r3, [r3]	@ unaligned
 452 0352 1A46     		mov	r2, r3
 453 0354 07F14803 		add	r3, r7, #72
 454 0358 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 455              		.loc 3 491 9
 456 035a D7F80434 		ldr	r3, [r7, #1028]
 457 035e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 57


 458 0360 1A1F     		subs	r2, r3, #4
 459 0362 D7F80434 		ldr	r3, [r7, #1028]
 460 0366 1A60     		str	r2, [r3]
 492:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 493:./Libraries/CMSIS/DSP/Include/arm_math.h ****   return (val);
 461              		.loc 3 493 10
 462 0368 07F14803 		add	r3, r7, #72
 463 036c 1B68     		ldr	r3, [r3]
 464              	.LBE134:
 465              	.LBE133:
 466              		.loc 1 223 15
 467 036e 1946     		mov	r1, r3
 468 0370 07F59E63 		add	r3, r7, #1264
 469 0374 D3E90023 		ldrd	r2, [r3]
 470 0378 C7F81404 		str	r0, [r7, #1044]
 471 037c C7F81014 		str	r1, [r7, #1040]
 472 0380 07F58161 		add	r1, r7, #1032
 473 0384 C1E90023 		strd	r2, [r1]
 474              	.LBB135:
 475              	.LBB136:
2020:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
2021:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2022:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)
2023:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** {
2024:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   union llreg_u{
2025:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t w32[2];
2026:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****     uint64_t w64;
2027:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   } llr;
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   llr.w64 = acc;
 476              		.loc 2 2028 11
 477 0388 07F14001 		add	r1, r7, #64
 478 038c 07F58163 		add	r3, r7, #1032
 479 0390 D3E90023 		ldrd	r2, [r3]
 480 0394 C1E90023 		strd	r2, [r1]
2029:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2030:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ARMEB__   /* Little endian */
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (
 481              		.loc 2 2031 119
 482 0398 07F14003 		add	r3, r7, #64
 483 039c 1968     		ldr	r1, [r3]
 484              		.loc 2 2031 137
 485 039e 07F14003 		add	r3, r7, #64
 486 03a2 5A68     		ldr	r2, [r3, #4]
 487              		.loc 2 2031 3
 488 03a4 D7F81404 		ldr	r0, [r7, #1044]
 489 03a8 D7F81034 		ldr	r3, [r7, #1040]
 490              		.syntax unified
 491              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 492 03ac C0FBD312 		smlaldx r1, r2, r0, r3
 493              	@ 0 "" 2
 494              		.thumb
 495              		.syntax unified
 496 03b0 07F14003 		add	r3, r7, #64
 497 03b4 1960     		str	r1, [r3]
 498 03b6 07F14003 		add	r3, r7, #64
 499 03ba 5A60     		str	r2, [r3, #4]
2032:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
ARM GAS  /tmp/ccjQyAEv.s 			page 58


2033:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[1]), "=r" (llr.w32[0]): "r" (op1), "r" (
2034:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #endif
2035:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
2036:./Libraries/CMSIS/Core/Include/cmsis_gcc.h ****   return(llr.w64);
 500              		.loc 2 2036 13
 501 03bc 07F14003 		add	r3, r7, #64
 502 03c0 D3E90023 		ldrd	r2, [r3]
 503              	.LBE136:
 504              	.LBE135:
 505              		.loc 1 223 13
 506 03c4 07F59E61 		add	r1, r7, #1264
 507 03c8 C1E90023 		strd	r2, [r1]
 508 03cc 07F5D873 		add	r3, r7, #432
 509 03d0 C7F81834 		str	r3, [r7, #1048]
 510              	.LBB137:
 511              	.LBB138:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 512              		.loc 3 474 3
 513 03d4 D7F81834 		ldr	r3, [r7, #1048]
 514 03d8 1B68     		ldr	r3, [r3]
 515 03da 1B68     		ldr	r3, [r3]	@ unaligned
 516 03dc 1A46     		mov	r2, r3
 517 03de 07F13C03 		add	r3, r7, #60
 518 03e2 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 519              		.loc 3 475 9
 520 03e4 D7F81834 		ldr	r3, [r7, #1048]
 521 03e8 1B68     		ldr	r3, [r3]
 522 03ea 1A1D     		adds	r2, r3, #4
 523 03ec D7F81834 		ldr	r3, [r7, #1048]
 524 03f0 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 525              		.loc 3 477 10
 526 03f2 07F13C03 		add	r3, r7, #60
 527 03f6 1B68     		ldr	r3, [r3]
 528              	.LBE138:
 529              	.LBE137:
 224:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 225:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 530              		.loc 1 225 15
 531 03f8 1846     		mov	r0, r3
 532 03fa 07F5D673 		add	r3, r7, #428
 533 03fe C7F81C34 		str	r3, [r7, #1052]
 534              	.LBB139:
 535              	.LBB140:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 536              		.loc 3 490 3
 537 0402 D7F81C34 		ldr	r3, [r7, #1052]
 538 0406 1B68     		ldr	r3, [r3]
 539 0408 1B68     		ldr	r3, [r3]	@ unaligned
 540 040a 1A46     		mov	r2, r3
 541 040c 07F13803 		add	r3, r7, #56
 542 0410 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 543              		.loc 3 491 9
 544 0412 D7F81C34 		ldr	r3, [r7, #1052]
 545 0416 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 59


 546 0418 1A1F     		subs	r2, r3, #4
 547 041a D7F81C34 		ldr	r3, [r7, #1052]
 548 041e 1A60     		str	r2, [r3]
 549              		.loc 3 493 10
 550 0420 07F13803 		add	r3, r7, #56
 551 0424 1B68     		ldr	r3, [r3]
 552              	.LBE140:
 553              	.LBE139:
 554              		.loc 1 225 15
 555 0426 1946     		mov	r1, r3
 556 0428 07F59E63 		add	r3, r7, #1264
 557 042c D3E90023 		ldrd	r2, [r3]
 558 0430 C7F82C04 		str	r0, [r7, #1068]
 559 0434 C7F82814 		str	r1, [r7, #1064]
 560 0438 07F58461 		add	r1, r7, #1056
 561 043c C1E90023 		strd	r2, [r1]
 562              	.LBB141:
 563              	.LBB142:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 564              		.loc 2 2028 11
 565 0440 07F13001 		add	r1, r7, #48
 566 0444 07F58463 		add	r3, r7, #1056
 567 0448 D3E90023 		ldrd	r2, [r3]
 568 044c C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 569              		.loc 2 2031 119
 570 0450 07F13003 		add	r3, r7, #48
 571 0454 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 572              		.loc 2 2031 137
 573 0456 07F13003 		add	r3, r7, #48
 574 045a 5A68     		ldr	r2, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 575              		.loc 2 2031 3
 576 045c D7F82C04 		ldr	r0, [r7, #1068]
 577 0460 D7F82834 		ldr	r3, [r7, #1064]
 578              		.syntax unified
 579              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 580 0464 C0FBD312 		smlaldx r1, r2, r0, r3
 581              	@ 0 "" 2
 582              		.thumb
 583              		.syntax unified
 584 0468 07F13003 		add	r3, r7, #48
 585 046c 1960     		str	r1, [r3]
 586 046e 07F13003 		add	r3, r7, #48
 587 0472 5A60     		str	r2, [r3, #4]
 588              		.loc 2 2036 13
 589 0474 07F13003 		add	r3, r7, #48
 590 0478 D3E90023 		ldrd	r2, [r3]
 591              	.LBE142:
 592              	.LBE141:
 593              		.loc 1 225 13
 594 047c 07F59E61 		add	r1, r7, #1264
 595 0480 C1E90023 		strd	r2, [r1]
 226:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 227:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 228:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
ARM GAS  /tmp/ccjQyAEv.s 			page 60


 596              		.loc 1 228 10
 597 0484 D7F8B034 		ldr	r3, [r7, #1200]
 598 0488 013B     		subs	r3, r3, #1
 599 048a C7F8B034 		str	r3, [r7, #1200]
 600              	.L21:
 219:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 601              		.loc 1 219 13
 602 048e D7F8B034 		ldr	r3, [r7, #1200]
 603 0492 002B     		cmp	r3, #0
 604 0494 7FF43AAF 		bne	.L28
 229:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 230:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 231:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 232:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        * So, py is incremented by 1 */
 233:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = py + 1U;
 605              		.loc 1 233 15
 606 0498 07F5D673 		add	r3, r7, #428
 607 049c 1B68     		ldr	r3, [r3]
 608 049e 9A1C     		adds	r2, r3, #2
 609              		.loc 1 233 10
 610 04a0 07F5D673 		add	r3, r7, #428
 611 04a4 1A60     		str	r2, [r3]
 234:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 235:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
 236:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          No loop unrolling is used. */
 237:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count % 0x4U;
 612              		.loc 1 237 9
 613 04a6 D7F8AC34 		ldr	r3, [r7, #1196]
 614 04aa 03F00303 		and	r3, r3, #3
 615 04ae C7F8B034 		str	r3, [r7, #1200]
 238:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 616              		.loc 1 239 13
 617 04b2 46E0     		b	.L29
 618              	.L31:
 240:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 241:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 242:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 619              		.loc 1 242 27
 620 04b4 07F5D873 		add	r3, r7, #432
 621 04b8 1A68     		ldr	r2, [r3]
 622 04ba 911C     		adds	r1, r2, #2
 623 04bc 07F5D873 		add	r3, r7, #432
 624 04c0 1960     		str	r1, [r3]
 625              		.loc 1 242 24
 626 04c2 B2F90030 		ldrsh	r3, [r2]
 627              		.loc 1 242 15
 628 04c6 1C46     		mov	r4, r3
 629              		.loc 1 242 34
 630 04c8 07F5D673 		add	r3, r7, #428
 631 04cc 1968     		ldr	r1, [r3]
 632 04ce 8A1E     		subs	r2, r1, #2
 633 04d0 07F5D673 		add	r3, r7, #428
 634 04d4 1A60     		str	r2, [r3]
 635              		.loc 1 242 31
 636 04d6 B1F90030 		ldrsh	r3, [r1]
 637              		.loc 1 242 15
ARM GAS  /tmp/ccjQyAEv.s 			page 61


 638 04da 1A46     		mov	r2, r3
 639 04dc 07F59E63 		add	r3, r7, #1264
 640 04e0 D3E90001 		ldrd	r0, [r3]
 641 04e4 07F57F73 		add	r3, r7, #1020
 642 04e8 1C60     		str	r4, [r3]
 643 04ea 07F57E73 		add	r3, r7, #1016
 644 04ee 1A60     		str	r2, [r3]
 645 04f0 C7E9FC01 		strd	r0, [r7, #1008]
 646              	.LBB143:
 647              	.LBB144:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 648              		.loc 2 2011 11
 649 04f4 07F15001 		add	r1, r7, #80
 650 04f8 D7E9FC23 		ldrd	r2, [r7, #1008]
 651 04fc C1E90023 		strd	r2, [r1]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 652              		.loc 2 2014 118
 653 0500 07F15003 		add	r3, r7, #80
 654 0504 1968     		ldr	r1, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 655              		.loc 2 2014 136
 656 0506 07F15003 		add	r3, r7, #80
 657 050a 5A68     		ldr	r2, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 658              		.loc 2 2014 3
 659 050c 07F57F73 		add	r3, r7, #1020
 660 0510 1868     		ldr	r0, [r3]
 661 0512 07F57E73 		add	r3, r7, #1016
 662 0516 1B68     		ldr	r3, [r3]
 663              		.syntax unified
 664              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 665 0518 C0FBC312 		smlald r1, r2, r0, r3
 666              	@ 0 "" 2
 667              		.thumb
 668              		.syntax unified
 669 051c 07F15003 		add	r3, r7, #80
 670 0520 1960     		str	r1, [r3]
 671 0522 07F15003 		add	r3, r7, #80
 672 0526 5A60     		str	r2, [r3, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 673              		.loc 2 2019 13
 674 0528 07F15003 		add	r3, r7, #80
 675 052c D3E90023 		ldrd	r2, [r3]
 676              	.LBE144:
 677              	.LBE143:
 678              		.loc 1 242 13
 679 0530 07F59E61 		add	r1, r7, #1264
 680 0534 C1E90023 		strd	r2, [r1]
 243:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 244:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 245:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 681              		.loc 1 245 10
 682 0538 D7F8B034 		ldr	r3, [r7, #1200]
 683 053c 013B     		subs	r3, r3, #1
 684 053e C7F8B034 		str	r3, [r7, #1200]
 685              	.L29:
 239:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
ARM GAS  /tmp/ccjQyAEv.s 			page 62


 686              		.loc 1 239 13
 687 0542 D7F8B034 		ldr	r3, [r7, #1200]
 688 0546 002B     		cmp	r3, #0
 689 0548 B4D1     		bne	.L31
 690              	.LBB145:
 246:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 247:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 248:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 249:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 691              		.loc 1 249 26
 692 054a 07F59E63 		add	r3, r7, #1264
 693 054e D3E90023 		ldrd	r2, [r3]
 694 0552 4FF00000 		mov	r0, #0
 695 0556 4FF00001 		mov	r1, #0
 696 055a D00B     		lsrs	r0, r2, #15
 697 055c 40EA4340 		orr	r0, r0, r3, lsl #17
 698 0560 D913     		asrs	r1, r3, #15
 699 0562 0346     		mov	r3, r0
 700 0564 C7F84434 		str	r3, [r7, #1092]
 701 0568 D7F84434 		ldr	r3, [r7, #1092]
 702              		.syntax unified
 703              	@ 249 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 704 056c 03F30F03 		ssat r3, #16, r3
 705              	@ 0 "" 2
 706              		.thumb
 707              		.syntax unified
 708 0570 C7F84034 		str	r3, [r7, #1088]
 709 0574 D7F84004 		ldr	r0, [r7, #1088]
 710              	.LBE145:
 711              		.loc 1 249 12
 712 0578 07F5DA73 		add	r3, r7, #436
 713 057c 1968     		ldr	r1, [r3]
 714 057e 8A1C     		adds	r2, r1, #2
 715 0580 07F5DA73 		add	r3, r7, #436
 716 0584 1A60     		str	r2, [r3]
 717              		.loc 1 249 17
 718 0586 03B2     		sxth	r3, r0
 719              		.loc 1 249 15
 720 0588 0B80     		strh	r3, [r1]	@ movhi
 250:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 251:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 252:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = ++pSrc2 - 1U;
 721              		.loc 1 252 10
 722 058a D7F8C834 		ldr	r3, [r7, #1224]
 723 058e 0233     		adds	r3, r3, #2
 724 0590 C7F8C834 		str	r3, [r7, #1224]
 725              		.loc 1 252 20
 726 0594 D7F8C834 		ldr	r3, [r7, #1224]
 727 0598 9A1E     		subs	r2, r3, #2
 728              		.loc 1 252 10
 729 059a 07F5D673 		add	r3, r7, #428
 730 059e 1A60     		str	r2, [r3]
 253:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       px = pIn1;
 731              		.loc 1 253 10
 732 05a0 07F5D873 		add	r3, r7, #432
 733 05a4 D7F8FC24 		ldr	r2, [r7, #1276]
 734 05a8 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 63


 254:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 255:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Increment MAC count */
 256:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       count++;
 735              		.loc 1 256 12
 736 05aa D7F8AC34 		ldr	r3, [r7, #1196]
 737 05ae 0133     		adds	r3, r3, #1
 738 05b0 C7F8AC34 		str	r3, [r7, #1196]
 257:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 258:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement loop counter */
 259:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize1--;
 739              		.loc 1 259 17
 740 05b4 D7F8BC34 		ldr	r3, [r7, #1212]
 741 05b8 013B     		subs	r3, r3, #1
 742 05ba C7F8BC34 		str	r3, [r7, #1212]
 743              	.L20:
 209:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 744              		.loc 1 209 11
 745 05be D7F8BC34 		ldr	r3, [r7, #1212]
 746 05c2 002B     		cmp	r3, #0
 747 05c4 7FF494AE 		bne	.L32
 260:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 261:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 262:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 263:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage2
 264:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ------------------------*/
 265:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 266:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 267:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 268:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 269:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 270:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      */
 271:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 272:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 273:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 748              		.loc 1 273 9
 749 05c8 D7F82425 		ldr	r2, [r7, #1316]
 750              		.loc 1 273 31
 751 05cc 07F11803 		add	r3, r7, #24
 752 05d0 1B68     		ldr	r3, [r3]
 753              		.loc 1 273 29
 754 05d2 D31A     		subs	r3, r2, r3
 755              		.loc 1 273 8
 756 05d4 002B     		cmp	r3, #0
 757 05d6 0DDB     		blt	.L33
 274:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 275:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pSrc1 = pIn1 + firstIndex - srcBLen + 1;
 758              		.loc 1 275 33
 759 05d8 07F11803 		add	r3, r7, #24
 760 05dc D7F82425 		ldr	r2, [r7, #1316]
 761 05e0 1B68     		ldr	r3, [r3]
 762 05e2 D31A     		subs	r3, r2, r3
 763              		.loc 1 275 43
 764 05e4 0133     		adds	r3, r3, #1
 765 05e6 5B00     		lsls	r3, r3, #1
 766              		.loc 1 275 13
 767 05e8 D7F8FC24 		ldr	r2, [r7, #1276]
 768 05ec 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccjQyAEv.s 			page 64


 769 05ee C7F8CC34 		str	r3, [r7, #1228]
 770 05f2 03E0     		b	.L34
 771              	.L33:
 276:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 277:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     else
 278:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 279:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pSrc1 = pIn1;
 772              		.loc 1 279 13
 773 05f4 D7F8FC34 		ldr	r3, [r7, #1276]
 774 05f8 C7F8CC34 		str	r3, [r7, #1228]
 775              	.L34:
 280:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 281:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     px = pSrc1;
 776              		.loc 1 281 8
 777 05fc 07F5D873 		add	r3, r7, #432
 778 0600 D7F8CC24 		ldr	r2, [r7, #1228]
 779 0604 1A60     		str	r2, [r3]
 282:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 283:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 284:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 780              		.loc 1 284 18
 781 0606 07F11803 		add	r3, r7, #24
 782 060a 1A68     		ldr	r2, [r3]
 783 060c 6FF00043 		mvn	r3, #-2147483648
 784 0610 1344     		add	r3, r3, r2
 785 0612 5B00     		lsls	r3, r3, #1
 786              		.loc 1 284 11
 787 0614 D7F8F824 		ldr	r2, [r7, #1272]
 788 0618 1344     		add	r3, r3, r2
 789 061a C7F8C834 		str	r3, [r7, #1224]
 285:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     py = pSrc2;
 790              		.loc 1 285 8
 791 061e 07F5D673 		add	r3, r7, #428
 792 0622 D7F8C824 		ldr	r2, [r7, #1224]
 793 0626 1A60     		str	r2, [r3]
 286:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 287:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 288:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     count = 0U;
 794              		.loc 1 288 11
 795 0628 0023     		movs	r3, #0
 796 062a C7F8AC34 		str	r3, [r7, #1196]
 289:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 290:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* -------------------
 291:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Stage2 process
 292:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ------------------*/
 293:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 294:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 295:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * So, to loop unroll over blockSize2,
 296:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * srcBLen should be greater than or equal to 4 */
 297:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     if (srcBLen >= 4U)
 797              		.loc 1 297 8
 798 062e 07F11803 		add	r3, r7, #24
 799 0632 1B68     		ldr	r3, [r3]
 800 0634 032B     		cmp	r3, #3
 801 0636 41F26F80 		bls	.L35
 298:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 299:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Loop unrolling: Compute 4 outputs at a time */
ARM GAS  /tmp/ccjQyAEv.s 			page 65


 300:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2U);
 802              		.loc 1 300 17
 803 063a D7F89C34 		ldr	r3, [r7, #1180]
 804              		.loc 1 300 14
 805 063e 9B08     		lsrs	r3, r3, #2
 806 0640 C7F8A834 		str	r3, [r7, #1192]
 301:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (blkCnt > 0U)
 807              		.loc 1 302 13
 808 0644 00F038BF 		b	.L36
 809              	.L81:
 303:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 304:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         py = py - 1U;
 810              		.loc 1 304 17
 811 0648 07F5D673 		add	r3, r7, #428
 812 064c 1B68     		ldr	r3, [r3]
 813 064e 9A1E     		subs	r2, r3, #2
 814              		.loc 1 304 12
 815 0650 07F5D673 		add	r3, r7, #428
 816 0654 1A60     		str	r2, [r3]
 305:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 306:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Set all accumulators to zero */
 307:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         acc0 = 0;
 817              		.loc 1 307 14
 818 0656 4FF00002 		mov	r2, #0
 819 065a 4FF00003 		mov	r3, #0
 820 065e 07F59D61 		add	r1, r7, #1256
 821 0662 C1E90023 		strd	r2, [r1]
 308:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         acc1 = 0;
 822              		.loc 1 308 14
 823 0666 4FF00002 		mov	r2, #0
 824 066a 4FF00003 		mov	r3, #0
 825 066e 07F59C61 		add	r1, r7, #1248
 826 0672 C1E90023 		strd	r2, [r1]
 309:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         acc2 = 0;
 827              		.loc 1 309 14
 828 0676 4FF00002 		mov	r2, #0
 829 067a 4FF00003 		mov	r3, #0
 830 067e 07F59B61 		add	r1, r7, #1240
 831 0682 C1E90023 		strd	r2, [r1]
 310:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         acc3 = 0;
 832              		.loc 1 310 14
 833 0686 4FF00002 		mov	r2, #0
 834 068a 4FF00003 		mov	r3, #0
 835 068e 07F59A61 		add	r1, r7, #1232
 836 0692 C1E90023 		strd	r2, [r1]
 311:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 312:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 313:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* read x[0], x[1] samples */
 314:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         x0 = read_q15x2 ((q15_t *) px);
 837              		.loc 1 314 14
 838 0696 07F5D873 		add	r3, r7, #432
 839 069a 1A68     		ldr	r2, [r3]
 840 069c 07F57A73 		add	r3, r7, #1000
 841 06a0 1A60     		str	r2, [r3]
 842 06a2 07F57A73 		add	r3, r7, #1000
 843 06a6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 66


 844 06a8 1B68     		ldr	r3, [r3]	@ unaligned
 845 06aa 1A46     		mov	r2, r3
 846              	.LBB146:
 847              	.LBB147:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 848              		.loc 3 459 3
 849 06ac 07F15C03 		add	r3, r7, #92
 850 06b0 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 851              		.loc 3 461 10
 852 06b2 07F15C03 		add	r3, r7, #92
 853 06b6 1B68     		ldr	r3, [r3]
 854              	.LBE147:
 855              	.LBE146:
 856              		.loc 1 314 14
 857 06b8 C7F8C434 		str	r3, [r7, #1220]
 315:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* read x[1], x[2] samples */
 316:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         x1 = read_q15x2 ((q15_t *) px + 1);
 858              		.loc 1 316 26
 859 06bc 07F5D873 		add	r3, r7, #432
 860 06c0 1B68     		ldr	r3, [r3]
 861              		.loc 1 316 14
 862 06c2 9A1C     		adds	r2, r3, #2
 863 06c4 07F57B73 		add	r3, r7, #1004
 864 06c8 1A60     		str	r2, [r3]
 865 06ca 07F57B73 		add	r3, r7, #1004
 866 06ce 1B68     		ldr	r3, [r3]
 867 06d0 1B68     		ldr	r3, [r3]	@ unaligned
 868 06d2 1A46     		mov	r2, r3
 869              	.LBB148:
 870              	.LBB149:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 871              		.loc 3 459 3
 872 06d4 07F15803 		add	r3, r7, #88
 873 06d8 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 874              		.loc 3 461 10
 875 06da 07F15803 		add	r3, r7, #88
 876 06de 1B68     		ldr	r3, [r3]
 877              	.LBE149:
 878              	.LBE148:
 879              		.loc 1 316 14
 880 06e0 C7F8C034 		str	r3, [r7, #1216]
 317:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         px += 2U;
 881              		.loc 1 317 12
 882 06e4 07F5D873 		add	r3, r7, #432
 883 06e8 1B68     		ldr	r3, [r3]
 884 06ea 1A1D     		adds	r2, r3, #4
 885 06ec 07F5D873 		add	r3, r7, #432
 886 06f0 1A60     		str	r2, [r3]
 318:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 319:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 320:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 321:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen >> 2U;
 887              		.loc 1 321 11
 888 06f2 07F11803 		add	r3, r7, #24
 889 06f6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 67


 890 06f8 9B08     		lsrs	r3, r3, #2
 891 06fa C7F8B034 		str	r3, [r7, #1200]
 892              	.L53:
 893 06fe 07F55373 		add	r3, r7, #844
 894 0702 07F5D672 		add	r2, r7, #428
 895 0706 1A60     		str	r2, [r3]
 896              	.LBB150:
 897              	.LBB151:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 898              		.loc 3 490 3 discriminator 1
 899 0708 07F55373 		add	r3, r7, #844
 900 070c 1B68     		ldr	r3, [r3]
 901 070e 1B68     		ldr	r3, [r3]
 902 0710 1B68     		ldr	r3, [r3]	@ unaligned
 903 0712 1A46     		mov	r2, r3
 904 0714 07F1BC03 		add	r3, r7, #188
 905 0718 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 906              		.loc 3 491 9 discriminator 1
 907 071a 07F55373 		add	r3, r7, #844
 908 071e 1B68     		ldr	r3, [r3]
 909 0720 1B68     		ldr	r3, [r3]
 910 0722 1A1F     		subs	r2, r3, #4
 911 0724 07F55373 		add	r3, r7, #844
 912 0728 1B68     		ldr	r3, [r3]
 913 072a 1A60     		str	r2, [r3]
 914              		.loc 3 493 10 discriminator 1
 915 072c 07F1BC03 		add	r3, r7, #188
 916 0730 1B68     		ldr	r3, [r3]
 917              	.LBE151:
 918              	.LBE150:
 322:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 323:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 324:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 325:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         do
 326:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 327:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read the last two inputB samples using SIMD:
 328:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****            * y[srcBLen - 1] and y[srcBLen - 2] */
 329:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = read_q15x2_da ((q15_t **) &py);
 919              		.loc 1 329 16 discriminator 1
 920 0732 C7F88034 		str	r3, [r7, #1152]
 330:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 331:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 332:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALDX(x0, c0, acc0);
 921              		.loc 1 332 18 discriminator 1
 922 0736 D7F8C424 		ldr	r2, [r7, #1220]
 923 073a D7F88044 		ldr	r4, [r7, #1152]
 924 073e 07F59D63 		add	r3, r7, #1256
 925 0742 D3E90001 		ldrd	r0, [r3]
 926 0746 07F55773 		add	r3, r7, #860
 927 074a 1A60     		str	r2, [r3]
 928 074c 07F55673 		add	r3, r7, #856
 929 0750 1C60     		str	r4, [r3]
 930 0752 C7E9D401 		strd	r0, [r7, #848]
 931              	.LBB152:
 932              	.LBB153:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 68


 933              		.loc 2 2028 11 discriminator 1
 934 0756 07F1B001 		add	r1, r7, #176
 935 075a D7E9D423 		ldrd	r2, [r7, #848]
 936 075e C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 937              		.loc 2 2031 119 discriminator 1
 938 0762 07F1B003 		add	r3, r7, #176
 939 0766 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 940              		.loc 2 2031 137 discriminator 1
 941 0768 07F1B003 		add	r3, r7, #176
 942 076c 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 943              		.loc 2 2031 3 discriminator 1
 944 076e 07F55773 		add	r3, r7, #860
 945 0772 1868     		ldr	r0, [r3]
 946 0774 07F55673 		add	r3, r7, #856
 947 0778 1A68     		ldr	r2, [r3]
 948 077a 2346     		mov	r3, r4
 949              		.syntax unified
 950              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 951 077c C0FBD213 		smlaldx r1, r3, r0, r2
 952              	@ 0 "" 2
 953              		.thumb
 954              		.syntax unified
 955 0780 07F1B002 		add	r2, r7, #176
 956 0784 1160     		str	r1, [r2]
 957 0786 07F1B002 		add	r2, r7, #176
 958 078a 5360     		str	r3, [r2, #4]
 959              		.loc 2 2036 13 discriminator 1
 960 078c 07F1B003 		add	r3, r7, #176
 961 0790 D3E90023 		ldrd	r2, [r3]
 962              	.LBE153:
 963              	.LBE152:
 964              		.loc 1 332 16 discriminator 1
 965 0794 07F59D61 		add	r1, r7, #1256
 966 0798 C1E90023 		strd	r2, [r1]
 333:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 334:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 335:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALDX(x1, c0, acc1);
 967              		.loc 1 335 18 discriminator 1
 968 079c D7F8C024 		ldr	r2, [r7, #1216]
 969 07a0 D7F88044 		ldr	r4, [r7, #1152]
 970 07a4 07F59C63 		add	r3, r7, #1248
 971 07a8 D3E90001 		ldrd	r0, [r3]
 972 07ac 07F55B73 		add	r3, r7, #876
 973 07b0 1A60     		str	r2, [r3]
 974 07b2 07F55A73 		add	r3, r7, #872
 975 07b6 1C60     		str	r4, [r3]
 976 07b8 C7E9D801 		strd	r0, [r7, #864]
 977              	.LBB154:
 978              	.LBB155:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 979              		.loc 2 2028 11 discriminator 1
 980 07bc 07F1A801 		add	r1, r7, #168
 981 07c0 D7E9D823 		ldrd	r2, [r7, #864]
 982 07c4 C1E90023 		strd	r2, [r1]
ARM GAS  /tmp/ccjQyAEv.s 			page 69


2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 983              		.loc 2 2031 119 discriminator 1
 984 07c8 07F1A803 		add	r3, r7, #168
 985 07cc 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 986              		.loc 2 2031 137 discriminator 1
 987 07ce 07F1A803 		add	r3, r7, #168
 988 07d2 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 989              		.loc 2 2031 3 discriminator 1
 990 07d4 07F55B73 		add	r3, r7, #876
 991 07d8 1868     		ldr	r0, [r3]
 992 07da 07F55A73 		add	r3, r7, #872
 993 07de 1A68     		ldr	r2, [r3]
 994 07e0 2346     		mov	r3, r4
 995              		.syntax unified
 996              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 997 07e2 C0FBD213 		smlaldx r1, r3, r0, r2
 998              	@ 0 "" 2
 999              		.thumb
 1000              		.syntax unified
 1001 07e6 07F1A802 		add	r2, r7, #168
 1002 07ea 1160     		str	r1, [r2]
 1003 07ec 07F1A802 		add	r2, r7, #168
 1004 07f0 5360     		str	r3, [r2, #4]
 1005              		.loc 2 2036 13 discriminator 1
 1006 07f2 07F1A803 		add	r3, r7, #168
 1007 07f6 D3E90023 		ldrd	r2, [r3]
 1008              	.LBE155:
 1009              	.LBE154:
 1010              		.loc 1 335 16 discriminator 1
 1011 07fa 07F59C61 		add	r1, r7, #1248
 1012 07fe C1E90023 		strd	r2, [r1]
 336:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 337:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[2], x[3] */
 338:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x2 = read_q15x2 ((q15_t *) px);
 1013              		.loc 1 338 16 discriminator 1
 1014 0802 07F5D873 		add	r3, r7, #432
 1015 0806 1A68     		ldr	r2, [r3]
 1016 0808 07F55C73 		add	r3, r7, #880
 1017 080c 1A60     		str	r2, [r3]
 1018 080e 07F55C73 		add	r3, r7, #880
 1019 0812 1B68     		ldr	r3, [r3]
 1020 0814 1B68     		ldr	r3, [r3]	@ unaligned
 1021 0816 1A46     		mov	r2, r3
 1022              	.LBB156:
 1023              	.LBB157:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1024              		.loc 3 459 3 discriminator 1
 1025 0818 07F1A403 		add	r3, r7, #164
 1026 081c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1027              		.loc 3 461 10 discriminator 1
 1028 081e 07F1A403 		add	r3, r7, #164
 1029 0822 1B68     		ldr	r3, [r3]
 1030              	.LBE157:
 1031              	.LBE156:
ARM GAS  /tmp/ccjQyAEv.s 			page 70


 1032              		.loc 1 338 16 discriminator 1
 1033 0824 C7F87C34 		str	r3, [r7, #1148]
 339:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 340:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[3], x[4] */
 341:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x3 = read_q15x2 ((q15_t *) px + 1);
 1034              		.loc 1 341 28 discriminator 1
 1035 0828 07F5D873 		add	r3, r7, #432
 1036 082c 1B68     		ldr	r3, [r3]
 1037              		.loc 1 341 16 discriminator 1
 1038 082e 9A1C     		adds	r2, r3, #2
 1039 0830 07F55D73 		add	r3, r7, #884
 1040 0834 1A60     		str	r2, [r3]
 1041 0836 07F55D73 		add	r3, r7, #884
 1042 083a 1B68     		ldr	r3, [r3]
 1043 083c 1B68     		ldr	r3, [r3]	@ unaligned
 1044 083e 1A46     		mov	r2, r3
 1045              	.LBB158:
 1046              	.LBB159:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1047              		.loc 3 459 3 discriminator 1
 1048 0840 07F1A003 		add	r3, r7, #160
 1049 0844 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1050              		.loc 3 461 10 discriminator 1
 1051 0846 07F1A003 		add	r3, r7, #160
 1052 084a 1B68     		ldr	r3, [r3]
 1053              	.LBE159:
 1054              	.LBE158:
 1055              		.loc 1 341 16 discriminator 1
 1056 084c C7F87834 		str	r3, [r7, #1144]
 342:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 343:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 344:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x2, c0, acc2);
 1057              		.loc 1 344 18 discriminator 1
 1058 0850 D7F87C24 		ldr	r2, [r7, #1148]
 1059 0854 D7F88044 		ldr	r4, [r7, #1152]
 1060 0858 07F59B63 		add	r3, r7, #1240
 1061 085c D3E90001 		ldrd	r0, [r3]
 1062 0860 07F56173 		add	r3, r7, #900
 1063 0864 1A60     		str	r2, [r3]
 1064 0866 07F56073 		add	r3, r7, #896
 1065 086a 1C60     		str	r4, [r3]
 1066 086c C7E9DE01 		strd	r0, [r7, #888]
 1067              	.LBB160:
 1068              	.LBB161:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1069              		.loc 2 2028 11 discriminator 1
 1070 0870 07F19801 		add	r1, r7, #152
 1071 0874 D7E9DE23 		ldrd	r2, [r7, #888]
 1072 0878 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1073              		.loc 2 2031 119 discriminator 1
 1074 087c 07F19803 		add	r3, r7, #152
 1075 0880 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1076              		.loc 2 2031 137 discriminator 1
 1077 0882 07F19803 		add	r3, r7, #152
ARM GAS  /tmp/ccjQyAEv.s 			page 71


 1078 0886 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1079              		.loc 2 2031 3 discriminator 1
 1080 0888 07F56173 		add	r3, r7, #900
 1081 088c 1868     		ldr	r0, [r3]
 1082 088e 07F56073 		add	r3, r7, #896
 1083 0892 1A68     		ldr	r2, [r3]
 1084 0894 2346     		mov	r3, r4
 1085              		.syntax unified
 1086              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1087 0896 C0FBD213 		smlaldx r1, r3, r0, r2
 1088              	@ 0 "" 2
 1089              		.thumb
 1090              		.syntax unified
 1091 089a 07F19802 		add	r2, r7, #152
 1092 089e 1160     		str	r1, [r2]
 1093 08a0 07F19802 		add	r2, r7, #152
 1094 08a4 5360     		str	r3, [r2, #4]
 1095              		.loc 2 2036 13 discriminator 1
 1096 08a6 07F19803 		add	r3, r7, #152
 1097 08aa D3E90023 		ldrd	r2, [r3]
 1098              	.LBE161:
 1099              	.LBE160:
 1100              		.loc 1 344 16 discriminator 1
 1101 08ae 07F59B61 		add	r1, r7, #1240
 1102 08b2 C1E90023 		strd	r2, [r1]
 345:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 346:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 347:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x3, c0, acc3);
 1103              		.loc 1 347 18 discriminator 1
 1104 08b6 D7F87824 		ldr	r2, [r7, #1144]
 1105 08ba D7F88044 		ldr	r4, [r7, #1152]
 1106 08be 07F59A63 		add	r3, r7, #1232
 1107 08c2 D3E90001 		ldrd	r0, [r3]
 1108 08c6 07F56673 		add	r3, r7, #920
 1109 08ca 1A60     		str	r2, [r3]
 1110 08cc 07F56573 		add	r3, r7, #916
 1111 08d0 1C60     		str	r4, [r3]
 1112 08d2 C7E9E201 		strd	r0, [r7, #904]
 1113              	.LBB162:
 1114              	.LBB163:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1115              		.loc 2 2028 11 discriminator 1
 1116 08d6 07F19001 		add	r1, r7, #144
 1117 08da D7E9E223 		ldrd	r2, [r7, #904]
 1118 08de C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1119              		.loc 2 2031 119 discriminator 1
 1120 08e2 07F19003 		add	r3, r7, #144
 1121 08e6 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1122              		.loc 2 2031 137 discriminator 1
 1123 08e8 07F19003 		add	r3, r7, #144
 1124 08ec 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1125              		.loc 2 2031 3 discriminator 1
 1126 08ee 07F56673 		add	r3, r7, #920
ARM GAS  /tmp/ccjQyAEv.s 			page 72


 1127 08f2 1868     		ldr	r0, [r3]
 1128 08f4 07F56573 		add	r3, r7, #916
 1129 08f8 1A68     		ldr	r2, [r3]
 1130 08fa 2346     		mov	r3, r4
 1131              		.syntax unified
 1132              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1133 08fc C0FBD213 		smlaldx r1, r3, r0, r2
 1134              	@ 0 "" 2
 1135              		.thumb
 1136              		.syntax unified
 1137 0900 07F19002 		add	r2, r7, #144
 1138 0904 1160     		str	r1, [r2]
 1139 0906 07F19002 		add	r2, r7, #144
 1140 090a 5360     		str	r3, [r2, #4]
 1141              		.loc 2 2036 13 discriminator 1
 1142 090c 07F19003 		add	r3, r7, #144
 1143 0910 D3E90023 		ldrd	r2, [r3]
 1144              	.LBE163:
 1145              	.LBE162:
 1146              		.loc 1 347 16 discriminator 1
 1147 0914 07F59A61 		add	r1, r7, #1232
 1148 0918 C1E90023 		strd	r2, [r1]
 1149 091c 07F56773 		add	r3, r7, #924
 1150 0920 07F5D672 		add	r2, r7, #428
 1151 0924 1A60     		str	r2, [r3]
 1152              	.LBB164:
 1153              	.LBB165:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 1154              		.loc 3 490 3 discriminator 1
 1155 0926 07F56773 		add	r3, r7, #924
 1156 092a 1B68     		ldr	r3, [r3]
 1157 092c 1B68     		ldr	r3, [r3]
 1158 092e 1B68     		ldr	r3, [r3]	@ unaligned
 1159 0930 1A46     		mov	r2, r3
 1160 0932 07F18C03 		add	r3, r7, #140
 1161 0936 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1162              		.loc 3 491 9 discriminator 1
 1163 0938 07F56773 		add	r3, r7, #924
 1164 093c 1B68     		ldr	r3, [r3]
 1165 093e 1B68     		ldr	r3, [r3]
 1166 0940 1A1F     		subs	r2, r3, #4
 1167 0942 07F56773 		add	r3, r7, #924
 1168 0946 1B68     		ldr	r3, [r3]
 1169 0948 1A60     		str	r2, [r3]
 1170              		.loc 3 493 10 discriminator 1
 1171 094a 07F18C03 		add	r3, r7, #140
 1172 094e 1B68     		ldr	r3, [r3]
 1173              	.LBE165:
 1174              	.LBE164:
 348:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 349:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 350:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = read_q15x2_da ((q15_t **) &py);
 1175              		.loc 1 350 16 discriminator 1
 1176 0950 C7F88034 		str	r3, [r7, #1152]
 351:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 352:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
ARM GAS  /tmp/ccjQyAEv.s 			page 73


 353:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALDX(x2, c0, acc0);
 1177              		.loc 1 353 18 discriminator 1
 1178 0954 D7F87C24 		ldr	r2, [r7, #1148]
 1179 0958 D7F88044 		ldr	r4, [r7, #1152]
 1180 095c 07F59D63 		add	r3, r7, #1256
 1181 0960 D3E90001 		ldrd	r0, [r3]
 1182 0964 07F56B73 		add	r3, r7, #940
 1183 0968 1A60     		str	r2, [r3]
 1184 096a 07F56A73 		add	r3, r7, #936
 1185 096e 1C60     		str	r4, [r3]
 1186 0970 C7E9E801 		strd	r0, [r7, #928]
 1187              	.LBB166:
 1188              	.LBB167:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1189              		.loc 2 2028 11 discriminator 1
 1190 0974 07F18001 		add	r1, r7, #128
 1191 0978 D7E9E823 		ldrd	r2, [r7, #928]
 1192 097c C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1193              		.loc 2 2031 119 discriminator 1
 1194 0980 07F18003 		add	r3, r7, #128
 1195 0984 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1196              		.loc 2 2031 137 discriminator 1
 1197 0986 07F18003 		add	r3, r7, #128
 1198 098a 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1199              		.loc 2 2031 3 discriminator 1
 1200 098c 07F56B73 		add	r3, r7, #940
 1201 0990 1868     		ldr	r0, [r3]
 1202 0992 07F56A73 		add	r3, r7, #936
 1203 0996 1A68     		ldr	r2, [r3]
 1204 0998 2346     		mov	r3, r4
 1205              		.syntax unified
 1206              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1207 099a C0FBD213 		smlaldx r1, r3, r0, r2
 1208              	@ 0 "" 2
 1209              		.thumb
 1210              		.syntax unified
 1211 099e 07F18002 		add	r2, r7, #128
 1212 09a2 1160     		str	r1, [r2]
 1213 09a4 07F18002 		add	r2, r7, #128
 1214 09a8 5360     		str	r3, [r2, #4]
 1215              		.loc 2 2036 13 discriminator 1
 1216 09aa 07F18003 		add	r3, r7, #128
 1217 09ae D3E90023 		ldrd	r2, [r3]
 1218              	.LBE167:
 1219              	.LBE166:
 1220              		.loc 1 353 16 discriminator 1
 1221 09b2 07F59D61 		add	r1, r7, #1256
 1222 09b6 C1E90023 		strd	r2, [r1]
 354:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 355:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 356:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALDX(x3, c0, acc1);
 1223              		.loc 1 356 18 discriminator 1
 1224 09ba D7F87824 		ldr	r2, [r7, #1144]
 1225 09be D7F88044 		ldr	r4, [r7, #1152]
ARM GAS  /tmp/ccjQyAEv.s 			page 74


 1226 09c2 07F59C63 		add	r3, r7, #1248
 1227 09c6 D3E90001 		ldrd	r0, [r3]
 1228 09ca 07F56F73 		add	r3, r7, #956
 1229 09ce 1A60     		str	r2, [r3]
 1230 09d0 07F56E73 		add	r3, r7, #952
 1231 09d4 1C60     		str	r4, [r3]
 1232 09d6 C7E9EC01 		strd	r0, [r7, #944]
 1233              	.LBB168:
 1234              	.LBB169:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1235              		.loc 2 2028 11 discriminator 1
 1236 09da 07F17801 		add	r1, r7, #120
 1237 09de D7E9EC23 		ldrd	r2, [r7, #944]
 1238 09e2 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1239              		.loc 2 2031 119 discriminator 1
 1240 09e6 07F17803 		add	r3, r7, #120
 1241 09ea 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1242              		.loc 2 2031 137 discriminator 1
 1243 09ec 07F17803 		add	r3, r7, #120
 1244 09f0 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1245              		.loc 2 2031 3 discriminator 1
 1246 09f2 07F56F73 		add	r3, r7, #956
 1247 09f6 1868     		ldr	r0, [r3]
 1248 09f8 07F56E73 		add	r3, r7, #952
 1249 09fc 1A68     		ldr	r2, [r3]
 1250 09fe 2346     		mov	r3, r4
 1251              		.syntax unified
 1252              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1253 0a00 C0FBD213 		smlaldx r1, r3, r0, r2
 1254              	@ 0 "" 2
 1255              		.thumb
 1256              		.syntax unified
 1257 0a04 07F17802 		add	r2, r7, #120
 1258 0a08 1160     		str	r1, [r2]
 1259 0a0a 07F17802 		add	r2, r7, #120
 1260 0a0e 5360     		str	r3, [r2, #4]
 1261              		.loc 2 2036 13 discriminator 1
 1262 0a10 07F17803 		add	r3, r7, #120
 1263 0a14 D3E90023 		ldrd	r2, [r3]
 1264              	.LBE169:
 1265              	.LBE168:
 1266              		.loc 1 356 16 discriminator 1
 1267 0a18 07F59C61 		add	r1, r7, #1248
 1268 0a1c C1E90023 		strd	r2, [r1]
 357:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 358:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[4], x[5] */
 359:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x0 = read_q15x2 ((q15_t *) px + 2);
 1269              		.loc 1 359 28 discriminator 1
 1270 0a20 07F5D873 		add	r3, r7, #432
 1271 0a24 1B68     		ldr	r3, [r3]
 1272              		.loc 1 359 16 discriminator 1
 1273 0a26 1A1D     		adds	r2, r3, #4
 1274 0a28 07F57073 		add	r3, r7, #960
 1275 0a2c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 75


 1276 0a2e 07F57073 		add	r3, r7, #960
 1277 0a32 1B68     		ldr	r3, [r3]
 1278 0a34 1B68     		ldr	r3, [r3]	@ unaligned
 1279 0a36 1A46     		mov	r2, r3
 1280              	.LBB170:
 1281              	.LBB171:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1282              		.loc 3 459 3 discriminator 1
 1283 0a38 07F17403 		add	r3, r7, #116
 1284 0a3c 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1285              		.loc 3 461 10 discriminator 1
 1286 0a3e 07F17403 		add	r3, r7, #116
 1287 0a42 1B68     		ldr	r3, [r3]
 1288              	.LBE171:
 1289              	.LBE170:
 1290              		.loc 1 359 16 discriminator 1
 1291 0a44 C7F8C434 		str	r3, [r7, #1220]
 360:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 361:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[5], x[6] */
 362:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x1 = read_q15x2 ((q15_t *) px + 3);
 1292              		.loc 1 362 28 discriminator 1
 1293 0a48 07F5D873 		add	r3, r7, #432
 1294 0a4c 1B68     		ldr	r3, [r3]
 1295              		.loc 1 362 16 discriminator 1
 1296 0a4e 9A1D     		adds	r2, r3, #6
 1297 0a50 07F57173 		add	r3, r7, #964
 1298 0a54 1A60     		str	r2, [r3]
 1299 0a56 07F57173 		add	r3, r7, #964
 1300 0a5a 1B68     		ldr	r3, [r3]
 1301 0a5c 1B68     		ldr	r3, [r3]	@ unaligned
 1302 0a5e 1A46     		mov	r2, r3
 1303              	.LBB172:
 1304              	.LBB173:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1305              		.loc 3 459 3 discriminator 1
 1306 0a60 07F17003 		add	r3, r7, #112
 1307 0a64 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1308              		.loc 3 461 10 discriminator 1
 1309 0a66 07F17003 		add	r3, r7, #112
 1310 0a6a 1B68     		ldr	r3, [r3]
 1311              	.LBE173:
 1312              	.LBE172:
 1313              		.loc 1 362 16 discriminator 1
 1314 0a6c C7F8C034 		str	r3, [r7, #1216]
 363:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           px += 4U;
 1315              		.loc 1 363 14 discriminator 1
 1316 0a70 07F5D873 		add	r3, r7, #432
 1317 0a74 1B68     		ldr	r3, [r3]
 1318 0a76 03F10802 		add	r2, r3, #8
 1319 0a7a 07F5D873 		add	r3, r7, #432
 1320 0a7e 1A60     		str	r2, [r3]
 364:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 365:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 366:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x0, c0, acc2);
 1321              		.loc 1 366 18 discriminator 1
ARM GAS  /tmp/ccjQyAEv.s 			page 76


 1322 0a80 D7F8C424 		ldr	r2, [r7, #1220]
 1323 0a84 D7F88044 		ldr	r4, [r7, #1152]
 1324 0a88 07F59B63 		add	r3, r7, #1240
 1325 0a8c D3E90001 		ldrd	r0, [r3]
 1326 0a90 07F57573 		add	r3, r7, #980
 1327 0a94 1A60     		str	r2, [r3]
 1328 0a96 07F57473 		add	r3, r7, #976
 1329 0a9a 1C60     		str	r4, [r3]
 1330 0a9c C7E9F201 		strd	r0, [r7, #968]
 1331              	.LBB174:
 1332              	.LBB175:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1333              		.loc 2 2028 11 discriminator 1
 1334 0aa0 07F16801 		add	r1, r7, #104
 1335 0aa4 D7E9F223 		ldrd	r2, [r7, #968]
 1336 0aa8 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1337              		.loc 2 2031 119 discriminator 1
 1338 0aac 07F16803 		add	r3, r7, #104
 1339 0ab0 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1340              		.loc 2 2031 137 discriminator 1
 1341 0ab2 07F16803 		add	r3, r7, #104
 1342 0ab6 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1343              		.loc 2 2031 3 discriminator 1
 1344 0ab8 07F57573 		add	r3, r7, #980
 1345 0abc 1868     		ldr	r0, [r3]
 1346 0abe 07F57473 		add	r3, r7, #976
 1347 0ac2 1A68     		ldr	r2, [r3]
 1348 0ac4 2346     		mov	r3, r4
 1349              		.syntax unified
 1350              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1351 0ac6 C0FBD213 		smlaldx r1, r3, r0, r2
 1352              	@ 0 "" 2
 1353              		.thumb
 1354              		.syntax unified
 1355 0aca 07F16802 		add	r2, r7, #104
 1356 0ace 1160     		str	r1, [r2]
 1357 0ad0 07F16802 		add	r2, r7, #104
 1358 0ad4 5360     		str	r3, [r2, #4]
 1359              		.loc 2 2036 13 discriminator 1
 1360 0ad6 07F16803 		add	r3, r7, #104
 1361 0ada D3E90023 		ldrd	r2, [r3]
 1362              	.LBE175:
 1363              	.LBE174:
 1364              		.loc 1 366 16 discriminator 1
 1365 0ade 07F59B61 		add	r1, r7, #1240
 1366 0ae2 C1E90023 		strd	r2, [r1]
 367:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 368:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 369:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x1, c0, acc3);
 1367              		.loc 1 369 18 discriminator 1
 1368 0ae6 D7F8C024 		ldr	r2, [r7, #1216]
 1369 0aea D7F88044 		ldr	r4, [r7, #1152]
 1370 0aee 07F59A63 		add	r3, r7, #1232
 1371 0af2 D3E90001 		ldrd	r0, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 77


 1372 0af6 07F57973 		add	r3, r7, #996
 1373 0afa 1A60     		str	r2, [r3]
 1374 0afc 07F57873 		add	r3, r7, #992
 1375 0b00 1C60     		str	r4, [r3]
 1376 0b02 C7E9F601 		strd	r0, [r7, #984]
 1377              	.LBB176:
 1378              	.LBB177:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1379              		.loc 2 2028 11 discriminator 1
 1380 0b06 07F16001 		add	r1, r7, #96
 1381 0b0a D7E9F623 		ldrd	r2, [r7, #984]
 1382 0b0e C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1383              		.loc 2 2031 119 discriminator 1
 1384 0b12 07F16003 		add	r3, r7, #96
 1385 0b16 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1386              		.loc 2 2031 137 discriminator 1
 1387 0b18 07F16003 		add	r3, r7, #96
 1388 0b1c 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1389              		.loc 2 2031 3 discriminator 1
 1390 0b1e 07F57973 		add	r3, r7, #996
 1391 0b22 1868     		ldr	r0, [r3]
 1392 0b24 07F57873 		add	r3, r7, #992
 1393 0b28 1A68     		ldr	r2, [r3]
 1394 0b2a 2346     		mov	r3, r4
 1395              		.syntax unified
 1396              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1397 0b2c C0FBD213 		smlaldx r1, r3, r0, r2
 1398              	@ 0 "" 2
 1399              		.thumb
 1400              		.syntax unified
 1401 0b30 07F16002 		add	r2, r7, #96
 1402 0b34 1160     		str	r1, [r2]
 1403 0b36 07F16002 		add	r2, r7, #96
 1404 0b3a 5360     		str	r3, [r2, #4]
 1405              		.loc 2 2036 13 discriminator 1
 1406 0b3c 07F16003 		add	r3, r7, #96
 1407 0b40 D3E90023 		ldrd	r2, [r3]
 1408              	.LBE177:
 1409              	.LBE176:
 1410              		.loc 1 369 16 discriminator 1
 1411 0b44 07F59A61 		add	r1, r7, #1232
 1412 0b48 C1E90023 		strd	r2, [r1]
 370:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 371:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         } while (--k);
 1413              		.loc 1 371 9 discriminator 1
 1414 0b4c D7F8B034 		ldr	r3, [r7, #1200]
 1415 0b50 013B     		subs	r3, r3, #1
 1416 0b52 C7F8B034 		str	r3, [r7, #1200]
 1417 0b56 D7F8B034 		ldr	r3, [r7, #1200]
 1418 0b5a 002B     		cmp	r3, #0
 1419 0b5c 7FF4CFAD 		bne	.L53
 372:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 373:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* For the next MAC operations, SIMD is not used
 374:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          * So, the 16 bit pointer if inputB, py is updated */
ARM GAS  /tmp/ccjQyAEv.s 			page 78


 375:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 376:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 377:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          ** No loop unrolling is used. */
 378:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen % 0x4U;
 1420              		.loc 1 378 11
 1421 0b60 07F11803 		add	r3, r7, #24
 1422 0b64 1B68     		ldr	r3, [r3]
 1423 0b66 03F00303 		and	r3, r3, #3
 1424 0b6a C7F8B034 		str	r3, [r7, #1200]
 379:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 380:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         if (k == 1U)
 1425              		.loc 1 380 12
 1426 0b6e D7F8B034 		ldr	r3, [r7, #1200]
 1427 0b72 012B     		cmp	r3, #1
 1428 0b74 40F0F380 		bne	.L54
 381:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 382:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read y[srcBLen - 5] */
 383:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = *(py+1);
 1429              		.loc 1 383 20
 1430 0b78 07F5D673 		add	r3, r7, #428
 1431 0b7c 1B68     		ldr	r3, [r3]
 1432 0b7e 0233     		adds	r3, r3, #2
 1433              		.loc 1 383 16
 1434 0b80 B3F90030 		ldrsh	r3, [r3]
 1435              		.loc 1 383 14
 1436 0b84 C7F88034 		str	r3, [r7, #1152]
 384:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 385:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = c0 << 16U;
 386:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #else
 387:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = c0 & 0x0000FFFF;
 1437              		.loc 1 387 14
 1438 0b88 D7F88034 		ldr	r3, [r7, #1152]
 1439 0b8c 9BB2     		uxth	r3, r3
 1440 0b8e C7F88034 		str	r3, [r7, #1152]
 388:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 389:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 390:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[7] */
 391:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1441              		.loc 1 391 16
 1442 0b92 07F5D873 		add	r3, r7, #432
 1443 0b96 1A68     		ldr	r2, [r3]
 1444 0b98 07F54173 		add	r3, r7, #772
 1445 0b9c 1A60     		str	r2, [r3]
 1446 0b9e 07F54173 		add	r3, r7, #772
 1447 0ba2 1B68     		ldr	r3, [r3]
 1448 0ba4 1B68     		ldr	r3, [r3]	@ unaligned
 1449 0ba6 1A46     		mov	r2, r3
 1450              	.LBB178:
 1451              	.LBB179:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1452              		.loc 3 459 3
 1453 0ba8 07F1E403 		add	r3, r7, #228
 1454 0bac 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1455              		.loc 3 461 10
 1456 0bae 07F1E403 		add	r3, r7, #228
 1457 0bb2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 79


 1458              	.LBE179:
 1459              	.LBE178:
 1460              		.loc 1 391 16
 1461 0bb4 C7F87834 		str	r3, [r7, #1144]
 392:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           px++;
 1462              		.loc 1 392 13
 1463 0bb8 07F5D873 		add	r3, r7, #432
 1464 0bbc 1B68     		ldr	r3, [r3]
 1465 0bbe 9A1C     		adds	r2, r3, #2
 1466 0bc0 07F5D873 		add	r3, r7, #432
 1467 0bc4 1A60     		str	r2, [r3]
 393:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 394:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 395:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALD (x0, c0, acc0);
 1468              		.loc 1 395 18
 1469 0bc6 D7F8C424 		ldr	r2, [r7, #1220]
 1470 0bca D7F88044 		ldr	r4, [r7, #1152]
 1471 0bce 07F59D63 		add	r3, r7, #1256
 1472 0bd2 D3E90001 		ldrd	r0, [r3]
 1473 0bd6 07F54573 		add	r3, r7, #788
 1474 0bda 1A60     		str	r2, [r3]
 1475 0bdc 07F54473 		add	r3, r7, #784
 1476 0be0 1C60     		str	r4, [r3]
 1477 0be2 C7E9C201 		strd	r0, [r7, #776]
 1478              	.LBB180:
 1479              	.LBB181:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1480              		.loc 2 2011 11
 1481 0be6 07F1D801 		add	r1, r7, #216
 1482 0bea D7E9C223 		ldrd	r2, [r7, #776]
 1483 0bee C1E90023 		strd	r2, [r1]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1484              		.loc 2 2014 118
 1485 0bf2 07F1D803 		add	r3, r7, #216
 1486 0bf6 1968     		ldr	r1, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1487              		.loc 2 2014 136
 1488 0bf8 07F1D803 		add	r3, r7, #216
 1489 0bfc 5C68     		ldr	r4, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1490              		.loc 2 2014 3
 1491 0bfe 07F54573 		add	r3, r7, #788
 1492 0c02 1868     		ldr	r0, [r3]
 1493 0c04 07F54473 		add	r3, r7, #784
 1494 0c08 1A68     		ldr	r2, [r3]
 1495 0c0a 2346     		mov	r3, r4
 1496              		.syntax unified
 1497              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1498 0c0c C0FBC213 		smlald r1, r3, r0, r2
 1499              	@ 0 "" 2
 1500              		.thumb
 1501              		.syntax unified
 1502 0c10 07F1D802 		add	r2, r7, #216
 1503 0c14 1160     		str	r1, [r2]
 1504 0c16 07F1D802 		add	r2, r7, #216
 1505 0c1a 5360     		str	r3, [r2, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccjQyAEv.s 			page 80


 1506              		.loc 2 2019 13
 1507 0c1c 07F1D803 		add	r3, r7, #216
 1508 0c20 D3E90023 		ldrd	r2, [r3]
 1509              	.LBE181:
 1510              	.LBE180:
 1511              		.loc 1 395 16
 1512 0c24 07F59D61 		add	r1, r7, #1256
 1513 0c28 C1E90023 		strd	r2, [r1]
 396:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALD (x1, c0, acc1);
 1514              		.loc 1 396 18
 1515 0c2c D7F8C024 		ldr	r2, [r7, #1216]
 1516 0c30 D7F88044 		ldr	r4, [r7, #1152]
 1517 0c34 07F59C63 		add	r3, r7, #1248
 1518 0c38 D3E90001 		ldrd	r0, [r3]
 1519 0c3c 07F54973 		add	r3, r7, #804
 1520 0c40 1A60     		str	r2, [r3]
 1521 0c42 07F54873 		add	r3, r7, #800
 1522 0c46 1C60     		str	r4, [r3]
 1523 0c48 C7E9C601 		strd	r0, [r7, #792]
 1524              	.LBB182:
 1525              	.LBB183:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1526              		.loc 2 2011 11
 1527 0c4c 07F1D001 		add	r1, r7, #208
 1528 0c50 D7E9C623 		ldrd	r2, [r7, #792]
 1529 0c54 C1E90023 		strd	r2, [r1]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1530              		.loc 2 2014 118
 1531 0c58 07F1D003 		add	r3, r7, #208
 1532 0c5c 1968     		ldr	r1, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1533              		.loc 2 2014 136
 1534 0c5e 07F1D003 		add	r3, r7, #208
 1535 0c62 5C68     		ldr	r4, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1536              		.loc 2 2014 3
 1537 0c64 07F54973 		add	r3, r7, #804
 1538 0c68 1868     		ldr	r0, [r3]
 1539 0c6a 07F54873 		add	r3, r7, #800
 1540 0c6e 1A68     		ldr	r2, [r3]
 1541 0c70 2346     		mov	r3, r4
 1542              		.syntax unified
 1543              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1544 0c72 C0FBC213 		smlald r1, r3, r0, r2
 1545              	@ 0 "" 2
 1546              		.thumb
 1547              		.syntax unified
 1548 0c76 07F1D002 		add	r2, r7, #208
 1549 0c7a 1160     		str	r1, [r2]
 1550 0c7c 07F1D002 		add	r2, r7, #208
 1551 0c80 5360     		str	r3, [r2, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 1552              		.loc 2 2019 13
 1553 0c82 07F1D003 		add	r3, r7, #208
 1554 0c86 D3E90023 		ldrd	r2, [r3]
 1555              	.LBE183:
 1556              	.LBE182:
ARM GAS  /tmp/ccjQyAEv.s 			page 81


 1557              		.loc 1 396 16
 1558 0c8a 07F59C61 		add	r1, r7, #1248
 1559 0c8e C1E90023 		strd	r2, [r1]
 397:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x1, c0, acc2);
 1560              		.loc 1 397 18
 1561 0c92 D7F8C024 		ldr	r2, [r7, #1216]
 1562 0c96 D7F88044 		ldr	r4, [r7, #1152]
 1563 0c9a 07F59B63 		add	r3, r7, #1240
 1564 0c9e D3E90001 		ldrd	r0, [r3]
 1565 0ca2 07F54D73 		add	r3, r7, #820
 1566 0ca6 1A60     		str	r2, [r3]
 1567 0ca8 07F54C73 		add	r3, r7, #816
 1568 0cac 1C60     		str	r4, [r3]
 1569 0cae C7E9CA01 		strd	r0, [r7, #808]
 1570              	.LBB184:
 1571              	.LBB185:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1572              		.loc 2 2028 11
 1573 0cb2 07F1C801 		add	r1, r7, #200
 1574 0cb6 D7E9CA23 		ldrd	r2, [r7, #808]
 1575 0cba C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1576              		.loc 2 2031 119
 1577 0cbe 07F1C803 		add	r3, r7, #200
 1578 0cc2 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1579              		.loc 2 2031 137
 1580 0cc4 07F1C803 		add	r3, r7, #200
 1581 0cc8 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1582              		.loc 2 2031 3
 1583 0cca 07F54D73 		add	r3, r7, #820
 1584 0cce 1868     		ldr	r0, [r3]
 1585 0cd0 07F54C73 		add	r3, r7, #816
 1586 0cd4 1A68     		ldr	r2, [r3]
 1587 0cd6 2346     		mov	r3, r4
 1588              		.syntax unified
 1589              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1590 0cd8 C0FBD213 		smlaldx r1, r3, r0, r2
 1591              	@ 0 "" 2
 1592              		.thumb
 1593              		.syntax unified
 1594 0cdc 07F1C802 		add	r2, r7, #200
 1595 0ce0 1160     		str	r1, [r2]
 1596 0ce2 07F1C802 		add	r2, r7, #200
 1597 0ce6 5360     		str	r3, [r2, #4]
 1598              		.loc 2 2036 13
 1599 0ce8 07F1C803 		add	r3, r7, #200
 1600 0cec D3E90023 		ldrd	r2, [r3]
 1601              	.LBE185:
 1602              	.LBE184:
 1603              		.loc 1 397 16
 1604 0cf0 07F59B61 		add	r1, r7, #1240
 1605 0cf4 C1E90023 		strd	r2, [r1]
 398:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x3, c0, acc3);
 1606              		.loc 1 398 18
 1607 0cf8 D7F87824 		ldr	r2, [r7, #1144]
ARM GAS  /tmp/ccjQyAEv.s 			page 82


 1608 0cfc D7F88044 		ldr	r4, [r7, #1152]
 1609 0d00 07F59A63 		add	r3, r7, #1232
 1610 0d04 D3E90001 		ldrd	r0, [r3]
 1611 0d08 07F55273 		add	r3, r7, #840
 1612 0d0c 1A60     		str	r2, [r3]
 1613 0d0e 07F55173 		add	r3, r7, #836
 1614 0d12 1C60     		str	r4, [r3]
 1615 0d14 C7E9CE01 		strd	r0, [r7, #824]
 1616              	.LBB186:
 1617              	.LBB187:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1618              		.loc 2 2028 11
 1619 0d18 07F1C001 		add	r1, r7, #192
 1620 0d1c D7E9CE23 		ldrd	r2, [r7, #824]
 1621 0d20 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1622              		.loc 2 2031 119
 1623 0d24 07F1C003 		add	r3, r7, #192
 1624 0d28 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1625              		.loc 2 2031 137
 1626 0d2a 07F1C003 		add	r3, r7, #192
 1627 0d2e 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1628              		.loc 2 2031 3
 1629 0d30 07F55273 		add	r3, r7, #840
 1630 0d34 1868     		ldr	r0, [r3]
 1631 0d36 07F55173 		add	r3, r7, #836
 1632 0d3a 1A68     		ldr	r2, [r3]
 1633 0d3c 2346     		mov	r3, r4
 1634              		.syntax unified
 1635              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1636 0d3e C0FBD213 		smlaldx r1, r3, r0, r2
 1637              	@ 0 "" 2
 1638              		.thumb
 1639              		.syntax unified
 1640 0d42 07F1C002 		add	r2, r7, #192
 1641 0d46 1160     		str	r1, [r2]
 1642 0d48 07F1C002 		add	r2, r7, #192
 1643 0d4c 5360     		str	r3, [r2, #4]
 1644              		.loc 2 2036 13
 1645 0d4e 07F1C003 		add	r3, r7, #192
 1646 0d52 D3E90023 		ldrd	r2, [r3]
 1647              	.LBE187:
 1648              	.LBE186:
 1649              		.loc 1 398 16
 1650 0d56 07F59A61 		add	r1, r7, #1232
 1651 0d5a C1E90023 		strd	r2, [r1]
 1652              	.L54:
 399:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 400:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 401:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         if (k == 2U)
 1653              		.loc 1 401 12
 1654 0d5e D7F8B034 		ldr	r3, [r7, #1200]
 1655 0d62 022B     		cmp	r3, #2
 1656 0d64 40F00D81 		bne	.L60
 402:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
ARM GAS  /tmp/ccjQyAEv.s 			page 83


 403:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 404:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = read_q15x2 ((q15_t *) py);
 1657              		.loc 1 404 16
 1658 0d68 07F5D673 		add	r3, r7, #428
 1659 0d6c 1A68     		ldr	r2, [r3]
 1660 0d6e 07F52D73 		add	r3, r7, #692
 1661 0d72 1A60     		str	r2, [r3]
 1662 0d74 07F52D73 		add	r3, r7, #692
 1663 0d78 1B68     		ldr	r3, [r3]
 1664 0d7a 1B68     		ldr	r3, [r3]	@ unaligned
 1665 0d7c 1A46     		mov	r2, r3
 1666              	.LBB188:
 1667              	.LBB189:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1668              		.loc 3 459 3
 1669 0d7e 07F58A73 		add	r3, r7, #276
 1670 0d82 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1671              		.loc 3 461 10
 1672 0d84 07F58A73 		add	r3, r7, #276
 1673 0d88 1B68     		ldr	r3, [r3]
 1674              	.LBE189:
 1675              	.LBE188:
 1676              		.loc 1 404 16
 1677 0d8a C7F88034 		str	r3, [r7, #1152]
 405:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 406:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[7], x[8] */
 407:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1678              		.loc 1 407 16
 1679 0d8e 07F5D873 		add	r3, r7, #432
 1680 0d92 1A68     		ldr	r2, [r3]
 1681 0d94 07F52E73 		add	r3, r7, #696
 1682 0d98 1A60     		str	r2, [r3]
 1683 0d9a 07F52E73 		add	r3, r7, #696
 1684 0d9e 1B68     		ldr	r3, [r3]
 1685 0da0 1B68     		ldr	r3, [r3]	@ unaligned
 1686 0da2 1A46     		mov	r2, r3
 1687              	.LBB190:
 1688              	.LBB191:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1689              		.loc 3 459 3
 1690 0da4 07F58873 		add	r3, r7, #272
 1691 0da8 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1692              		.loc 3 461 10
 1693 0daa 07F58873 		add	r3, r7, #272
 1694 0dae 1B68     		ldr	r3, [r3]
 1695              	.LBE191:
 1696              	.LBE190:
 1697              		.loc 1 407 16
 1698 0db0 C7F87834 		str	r3, [r7, #1144]
 408:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 409:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[9] */
 410:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x2 = read_q15x2 ((q15_t *) px + 1);
 1699              		.loc 1 410 28
 1700 0db4 07F5D873 		add	r3, r7, #432
 1701 0db8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 84


 1702              		.loc 1 410 16
 1703 0dba 9A1C     		adds	r2, r3, #2
 1704 0dbc 07F52F73 		add	r3, r7, #700
 1705 0dc0 1A60     		str	r2, [r3]
 1706 0dc2 07F52F73 		add	r3, r7, #700
 1707 0dc6 1B68     		ldr	r3, [r3]
 1708 0dc8 1B68     		ldr	r3, [r3]	@ unaligned
 1709 0dca 1A46     		mov	r2, r3
 1710              	.LBB192:
 1711              	.LBB193:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1712              		.loc 3 459 3
 1713 0dcc 07F58673 		add	r3, r7, #268
 1714 0dd0 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1715              		.loc 3 461 10
 1716 0dd2 07F58673 		add	r3, r7, #268
 1717 0dd6 1B68     		ldr	r3, [r3]
 1718              	.LBE193:
 1719              	.LBE192:
 1720              		.loc 1 410 16
 1721 0dd8 C7F87C34 		str	r3, [r7, #1148]
 411:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           px += 2U;
 1722              		.loc 1 411 14
 1723 0ddc 07F5D873 		add	r3, r7, #432
 1724 0de0 1B68     		ldr	r3, [r3]
 1725 0de2 1A1D     		adds	r2, r3, #4
 1726 0de4 07F5D873 		add	r3, r7, #432
 1727 0de8 1A60     		str	r2, [r3]
 412:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 413:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 414:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALDX(x0, c0, acc0);
 1728              		.loc 1 414 18
 1729 0dea D7F8C424 		ldr	r2, [r7, #1220]
 1730 0dee D7F88044 		ldr	r4, [r7, #1152]
 1731 0df2 07F59D63 		add	r3, r7, #1256
 1732 0df6 D3E90001 		ldrd	r0, [r3]
 1733 0dfa 07F53373 		add	r3, r7, #716
 1734 0dfe 1A60     		str	r2, [r3]
 1735 0e00 07F53273 		add	r3, r7, #712
 1736 0e04 1C60     		str	r4, [r3]
 1737 0e06 C7E9B001 		strd	r0, [r7, #704]
 1738              	.LBB194:
 1739              	.LBB195:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1740              		.loc 2 2028 11
 1741 0e0a 07F58071 		add	r1, r7, #256
 1742 0e0e D7E9B023 		ldrd	r2, [r7, #704]
 1743 0e12 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1744              		.loc 2 2031 119
 1745 0e16 07F58073 		add	r3, r7, #256
 1746 0e1a 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1747              		.loc 2 2031 137
 1748 0e1c 07F58073 		add	r3, r7, #256
 1749 0e20 5C68     		ldr	r4, [r3, #4]
ARM GAS  /tmp/ccjQyAEv.s 			page 85


2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1750              		.loc 2 2031 3
 1751 0e22 07F53373 		add	r3, r7, #716
 1752 0e26 1868     		ldr	r0, [r3]
 1753 0e28 07F53273 		add	r3, r7, #712
 1754 0e2c 1A68     		ldr	r2, [r3]
 1755 0e2e 2346     		mov	r3, r4
 1756              		.syntax unified
 1757              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1758 0e30 C0FBD213 		smlaldx r1, r3, r0, r2
 1759              	@ 0 "" 2
 1760              		.thumb
 1761              		.syntax unified
 1762 0e34 07F58072 		add	r2, r7, #256
 1763 0e38 1160     		str	r1, [r2]
 1764 0e3a 07F58072 		add	r2, r7, #256
 1765 0e3e 5360     		str	r3, [r2, #4]
 1766              		.loc 2 2036 13
 1767 0e40 07F58073 		add	r3, r7, #256
 1768 0e44 D3E90023 		ldrd	r2, [r3]
 1769              	.LBE195:
 1770              	.LBE194:
 1771              		.loc 1 414 16
 1772 0e48 07F59D61 		add	r1, r7, #1256
 1773 0e4c C1E90023 		strd	r2, [r1]
 415:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALDX(x1, c0, acc1);
 1774              		.loc 1 415 18
 1775 0e50 D7F8C024 		ldr	r2, [r7, #1216]
 1776 0e54 D7F88044 		ldr	r4, [r7, #1152]
 1777 0e58 07F59C63 		add	r3, r7, #1248
 1778 0e5c D3E90001 		ldrd	r0, [r3]
 1779 0e60 07F53773 		add	r3, r7, #732
 1780 0e64 1A60     		str	r2, [r3]
 1781 0e66 07F53673 		add	r3, r7, #728
 1782 0e6a 1C60     		str	r4, [r3]
 1783 0e6c C7E9B401 		strd	r0, [r7, #720]
 1784              	.LBB196:
 1785              	.LBB197:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1786              		.loc 2 2028 11
 1787 0e70 07F1F801 		add	r1, r7, #248
 1788 0e74 D7E9B423 		ldrd	r2, [r7, #720]
 1789 0e78 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1790              		.loc 2 2031 119
 1791 0e7c 07F1F803 		add	r3, r7, #248
 1792 0e80 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1793              		.loc 2 2031 137
 1794 0e82 07F1F803 		add	r3, r7, #248
 1795 0e86 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1796              		.loc 2 2031 3
 1797 0e88 07F53773 		add	r3, r7, #732
 1798 0e8c 1868     		ldr	r0, [r3]
 1799 0e8e 07F53673 		add	r3, r7, #728
 1800 0e92 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 86


 1801 0e94 2346     		mov	r3, r4
 1802              		.syntax unified
 1803              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1804 0e96 C0FBD213 		smlaldx r1, r3, r0, r2
 1805              	@ 0 "" 2
 1806              		.thumb
 1807              		.syntax unified
 1808 0e9a 07F1F802 		add	r2, r7, #248
 1809 0e9e 1160     		str	r1, [r2]
 1810 0ea0 07F1F802 		add	r2, r7, #248
 1811 0ea4 5360     		str	r3, [r2, #4]
 1812              		.loc 2 2036 13
 1813 0ea6 07F1F803 		add	r3, r7, #248
 1814 0eaa D3E90023 		ldrd	r2, [r3]
 1815              	.LBE197:
 1816              	.LBE196:
 1817              		.loc 1 415 16
 1818 0eae 07F59C61 		add	r1, r7, #1248
 1819 0eb2 C1E90023 		strd	r2, [r1]
 416:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x3, c0, acc2);
 1820              		.loc 1 416 18
 1821 0eb6 D7F87824 		ldr	r2, [r7, #1144]
 1822 0eba D7F88044 		ldr	r4, [r7, #1152]
 1823 0ebe 07F59B63 		add	r3, r7, #1240
 1824 0ec2 D3E90001 		ldrd	r0, [r3]
 1825 0ec6 07F53B73 		add	r3, r7, #748
 1826 0eca 1A60     		str	r2, [r3]
 1827 0ecc 07F53A73 		add	r3, r7, #744
 1828 0ed0 1C60     		str	r4, [r3]
 1829 0ed2 C7E9B801 		strd	r0, [r7, #736]
 1830              	.LBB198:
 1831              	.LBB199:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1832              		.loc 2 2028 11
 1833 0ed6 07F1F001 		add	r1, r7, #240
 1834 0eda D7E9B823 		ldrd	r2, [r7, #736]
 1835 0ede C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1836              		.loc 2 2031 119
 1837 0ee2 07F1F003 		add	r3, r7, #240
 1838 0ee6 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1839              		.loc 2 2031 137
 1840 0ee8 07F1F003 		add	r3, r7, #240
 1841 0eec 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1842              		.loc 2 2031 3
 1843 0eee 07F53B73 		add	r3, r7, #748
 1844 0ef2 1868     		ldr	r0, [r3]
 1845 0ef4 07F53A73 		add	r3, r7, #744
 1846 0ef8 1A68     		ldr	r2, [r3]
 1847 0efa 2346     		mov	r3, r4
 1848              		.syntax unified
 1849              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1850 0efc C0FBD213 		smlaldx r1, r3, r0, r2
 1851              	@ 0 "" 2
 1852              		.thumb
ARM GAS  /tmp/ccjQyAEv.s 			page 87


 1853              		.syntax unified
 1854 0f00 07F1F002 		add	r2, r7, #240
 1855 0f04 1160     		str	r1, [r2]
 1856 0f06 07F1F002 		add	r2, r7, #240
 1857 0f0a 5360     		str	r3, [r2, #4]
 1858              		.loc 2 2036 13
 1859 0f0c 07F1F003 		add	r3, r7, #240
 1860 0f10 D3E90023 		ldrd	r2, [r3]
 1861              	.LBE199:
 1862              	.LBE198:
 1863              		.loc 1 416 16
 1864 0f14 07F59B61 		add	r1, r7, #1240
 1865 0f18 C1E90023 		strd	r2, [r1]
 417:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x2, c0, acc3);
 1866              		.loc 1 417 18
 1867 0f1c D7F87C24 		ldr	r2, [r7, #1148]
 1868 0f20 D7F88044 		ldr	r4, [r7, #1152]
 1869 0f24 07F59A63 		add	r3, r7, #1232
 1870 0f28 D3E90001 		ldrd	r0, [r3]
 1871 0f2c 07F54073 		add	r3, r7, #768
 1872 0f30 1A60     		str	r2, [r3]
 1873 0f32 07F53F73 		add	r3, r7, #764
 1874 0f36 1C60     		str	r4, [r3]
 1875 0f38 C7E9BC01 		strd	r0, [r7, #752]
 1876              	.LBB200:
 1877              	.LBB201:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1878              		.loc 2 2028 11
 1879 0f3c 07F1E801 		add	r1, r7, #232
 1880 0f40 D7E9BC23 		ldrd	r2, [r7, #752]
 1881 0f44 C1E90023 		strd	r2, [r1]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1882              		.loc 2 2031 119
 1883 0f48 07F1E803 		add	r3, r7, #232
 1884 0f4c 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1885              		.loc 2 2031 137
 1886 0f4e 07F1E803 		add	r3, r7, #232
 1887 0f52 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1888              		.loc 2 2031 3
 1889 0f54 07F54073 		add	r3, r7, #768
 1890 0f58 1868     		ldr	r0, [r3]
 1891 0f5a 07F53F73 		add	r3, r7, #764
 1892 0f5e 1A68     		ldr	r2, [r3]
 1893 0f60 2346     		mov	r3, r4
 1894              		.syntax unified
 1895              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 1896 0f62 C0FBD213 		smlaldx r1, r3, r0, r2
 1897              	@ 0 "" 2
 1898              		.thumb
 1899              		.syntax unified
 1900 0f66 07F1E802 		add	r2, r7, #232
 1901 0f6a 1160     		str	r1, [r2]
 1902 0f6c 07F1E802 		add	r2, r7, #232
 1903 0f70 5360     		str	r3, [r2, #4]
 1904              		.loc 2 2036 13
ARM GAS  /tmp/ccjQyAEv.s 			page 88


 1905 0f72 07F1E803 		add	r3, r7, #232
 1906 0f76 D3E90023 		ldrd	r2, [r3]
 1907              	.LBE201:
 1908              	.LBE200:
 1909              		.loc 1 417 16
 1910 0f7a 07F59A61 		add	r1, r7, #1232
 1911 0f7e C1E90023 		strd	r2, [r1]
 1912              	.L60:
 418:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 419:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 420:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         if (k == 3U)
 1913              		.loc 1 420 12
 1914 0f82 D7F8B034 		ldr	r3, [r7, #1200]
 1915 0f86 032B     		cmp	r3, #3
 1916 0f88 40F0DA81 		bne	.L68
 421:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 422:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 423:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = read_q15x2 ((q15_t *) py);
 1917              		.loc 1 423 16
 1918 0f8c 07F5D673 		add	r3, r7, #428
 1919 0f90 1A68     		ldr	r2, [r3]
 1920 0f92 07F50773 		add	r3, r7, #540
 1921 0f96 1A60     		str	r2, [r3]
 1922 0f98 07F50773 		add	r3, r7, #540
 1923 0f9c 1B68     		ldr	r3, [r3]
 1924 0f9e 1B68     		ldr	r3, [r3]	@ unaligned
 1925 0fa0 1A46     		mov	r2, r3
 1926              	.LBB202:
 1927              	.LBB203:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1928              		.loc 3 459 3
 1929 0fa2 07F5B673 		add	r3, r7, #364
 1930 0fa6 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1931              		.loc 3 461 10
 1932 0fa8 07F5B673 		add	r3, r7, #364
 1933 0fac 1B68     		ldr	r3, [r3]
 1934              	.LBE203:
 1935              	.LBE202:
 1936              		.loc 1 423 16
 1937 0fae C7F88034 		str	r3, [r7, #1152]
 424:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 425:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[7], x[8] */
 426:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x3 = read_q15x2 ((q15_t *) px);
 1938              		.loc 1 426 16
 1939 0fb2 07F5D873 		add	r3, r7, #432
 1940 0fb6 1A68     		ldr	r2, [r3]
 1941 0fb8 07F50873 		add	r3, r7, #544
 1942 0fbc 1A60     		str	r2, [r3]
 1943 0fbe 07F50873 		add	r3, r7, #544
 1944 0fc2 1B68     		ldr	r3, [r3]
 1945 0fc4 1B68     		ldr	r3, [r3]	@ unaligned
 1946 0fc6 1A46     		mov	r2, r3
 1947              	.LBB204:
 1948              	.LBB205:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1949              		.loc 3 459 3
ARM GAS  /tmp/ccjQyAEv.s 			page 89


 1950 0fc8 07F5B473 		add	r3, r7, #360
 1951 0fcc 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1952              		.loc 3 461 10
 1953 0fce 07F5B473 		add	r3, r7, #360
 1954 0fd2 1B68     		ldr	r3, [r3]
 1955              	.LBE205:
 1956              	.LBE204:
 1957              		.loc 1 426 16
 1958 0fd4 C7F87834 		str	r3, [r7, #1144]
 427:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 428:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[9] */
 429:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x2 = read_q15x2 ((q15_t *) px + 1);
 1959              		.loc 1 429 28
 1960 0fd8 07F5D873 		add	r3, r7, #432
 1961 0fdc 1B68     		ldr	r3, [r3]
 1962              		.loc 1 429 16
 1963 0fde 9A1C     		adds	r2, r3, #2
 1964 0fe0 07F50973 		add	r3, r7, #548
 1965 0fe4 1A60     		str	r2, [r3]
 1966 0fe6 07F50973 		add	r3, r7, #548
 1967 0fea 1B68     		ldr	r3, [r3]
 1968 0fec 1B68     		ldr	r3, [r3]	@ unaligned
 1969 0fee 1A46     		mov	r2, r3
 1970              	.LBB206:
 1971              	.LBB207:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 1972              		.loc 3 459 3
 1973 0ff0 07F5B273 		add	r3, r7, #356
 1974 0ff4 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 1975              		.loc 3 461 10
 1976 0ff6 07F5B273 		add	r3, r7, #356
 1977 0ffa 1B68     		ldr	r3, [r3]
 1978              	.LBE207:
 1979              	.LBE206:
 1980              		.loc 1 429 16
 1981 0ffc C7F87C34 		str	r3, [r7, #1148]
 430:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 431:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 432:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALDX(x0, c0, acc0);
 1982              		.loc 1 432 18
 1983 1000 D7F8C424 		ldr	r2, [r7, #1220]
 1984 1004 D7F88044 		ldr	r4, [r7, #1152]
 1985 1008 07F59D63 		add	r3, r7, #1256
 1986 100c D3E90001 		ldrd	r0, [r3]
 1987 1010 07F50D73 		add	r3, r7, #564
 1988 1014 1A60     		str	r2, [r3]
 1989 1016 07F50C73 		add	r3, r7, #560
 1990 101a 1C60     		str	r4, [r3]
 1991 101c C7E98A01 		strd	r0, [r7, #552]
 1992              	.LBB208:
 1993              	.LBB209:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 1994              		.loc 2 2028 11
 1995 1020 D7E98A23 		ldrd	r2, [r7, #552]
 1996 1024 C7E95623 		strd	r2, [r7, #344]
ARM GAS  /tmp/ccjQyAEv.s 			page 90


2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 1997              		.loc 2 2031 119
 1998 1028 07F5AC73 		add	r3, r7, #344
 1999 102c 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2000              		.loc 2 2031 137
 2001 102e 07F5AC73 		add	r3, r7, #344
 2002 1032 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2003              		.loc 2 2031 3
 2004 1034 07F50D73 		add	r3, r7, #564
 2005 1038 1868     		ldr	r0, [r3]
 2006 103a 07F50C73 		add	r3, r7, #560
 2007 103e 1A68     		ldr	r2, [r3]
 2008 1040 2346     		mov	r3, r4
 2009              		.syntax unified
 2010              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2011 1042 C0FBD213 		smlaldx r1, r3, r0, r2
 2012              	@ 0 "" 2
 2013              		.thumb
 2014              		.syntax unified
 2015 1046 07F5AC72 		add	r2, r7, #344
 2016 104a 1160     		str	r1, [r2]
 2017 104c 07F5AC72 		add	r2, r7, #344
 2018 1050 5360     		str	r3, [r2, #4]
 2019              		.loc 2 2036 13
 2020 1052 D7E95623 		ldrd	r2, [r7, #344]
 2021              	.LBE209:
 2022              	.LBE208:
 2023              		.loc 1 432 16
 2024 1056 07F59D61 		add	r1, r7, #1256
 2025 105a C1E90023 		strd	r2, [r1]
 433:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALDX(x1, c0, acc1);
 2026              		.loc 1 433 18
 2027 105e D7F8C024 		ldr	r2, [r7, #1216]
 2028 1062 D7F88044 		ldr	r4, [r7, #1152]
 2029 1066 07F59C63 		add	r3, r7, #1248
 2030 106a D3E90001 		ldrd	r0, [r3]
 2031 106e 07F51173 		add	r3, r7, #580
 2032 1072 1A60     		str	r2, [r3]
 2033 1074 07F51073 		add	r3, r7, #576
 2034 1078 1C60     		str	r4, [r3]
 2035 107a C7E98E01 		strd	r0, [r7, #568]
 2036              	.LBB210:
 2037              	.LBB211:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2038              		.loc 2 2028 11
 2039 107e D7E98E23 		ldrd	r2, [r7, #568]
 2040 1082 C7E95423 		strd	r2, [r7, #336]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2041              		.loc 2 2031 119
 2042 1086 07F5A873 		add	r3, r7, #336
 2043 108a 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2044              		.loc 2 2031 137
 2045 108c 07F5A873 		add	r3, r7, #336
 2046 1090 5C68     		ldr	r4, [r3, #4]
ARM GAS  /tmp/ccjQyAEv.s 			page 91


2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2047              		.loc 2 2031 3
 2048 1092 07F51173 		add	r3, r7, #580
 2049 1096 1868     		ldr	r0, [r3]
 2050 1098 07F51073 		add	r3, r7, #576
 2051 109c 1A68     		ldr	r2, [r3]
 2052 109e 2346     		mov	r3, r4
 2053              		.syntax unified
 2054              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2055 10a0 C0FBD213 		smlaldx r1, r3, r0, r2
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059 10a4 07F5A872 		add	r2, r7, #336
 2060 10a8 1160     		str	r1, [r2]
 2061 10aa 07F5A872 		add	r2, r7, #336
 2062 10ae 5360     		str	r3, [r2, #4]
 2063              		.loc 2 2036 13
 2064 10b0 D7E95423 		ldrd	r2, [r7, #336]
 2065              	.LBE211:
 2066              	.LBE210:
 2067              		.loc 1 433 16
 2068 10b4 07F59C61 		add	r1, r7, #1248
 2069 10b8 C1E90023 		strd	r2, [r1]
 434:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x3, c0, acc2);
 2070              		.loc 1 434 18
 2071 10bc D7F87824 		ldr	r2, [r7, #1144]
 2072 10c0 D7F88044 		ldr	r4, [r7, #1152]
 2073 10c4 07F59B63 		add	r3, r7, #1240
 2074 10c8 D3E90001 		ldrd	r0, [r3]
 2075 10cc 07F51573 		add	r3, r7, #596
 2076 10d0 1A60     		str	r2, [r3]
 2077 10d2 07F51473 		add	r3, r7, #592
 2078 10d6 1C60     		str	r4, [r3]
 2079 10d8 C7E99201 		strd	r0, [r7, #584]
 2080              	.LBB212:
 2081              	.LBB213:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2082              		.loc 2 2028 11
 2083 10dc D7E99223 		ldrd	r2, [r7, #584]
 2084 10e0 C7E95223 		strd	r2, [r7, #328]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2085              		.loc 2 2031 119
 2086 10e4 07F5A473 		add	r3, r7, #328
 2087 10e8 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2088              		.loc 2 2031 137
 2089 10ea 07F5A473 		add	r3, r7, #328
 2090 10ee 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2091              		.loc 2 2031 3
 2092 10f0 07F51573 		add	r3, r7, #596
 2093 10f4 1868     		ldr	r0, [r3]
 2094 10f6 07F51473 		add	r3, r7, #592
 2095 10fa 1A68     		ldr	r2, [r3]
 2096 10fc 2346     		mov	r3, r4
 2097              		.syntax unified
ARM GAS  /tmp/ccjQyAEv.s 			page 92


 2098              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2099 10fe C0FBD213 		smlaldx r1, r3, r0, r2
 2100              	@ 0 "" 2
 2101              		.thumb
 2102              		.syntax unified
 2103 1102 07F5A472 		add	r2, r7, #328
 2104 1106 1160     		str	r1, [r2]
 2105 1108 07F5A472 		add	r2, r7, #328
 2106 110c 5360     		str	r3, [r2, #4]
 2107              		.loc 2 2036 13
 2108 110e D7E95223 		ldrd	r2, [r7, #328]
 2109              	.LBE213:
 2110              	.LBE212:
 2111              		.loc 1 434 16
 2112 1112 07F59B61 		add	r1, r7, #1240
 2113 1116 C1E90023 		strd	r2, [r1]
 435:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x2, c0, acc3);
 2114              		.loc 1 435 18
 2115 111a D7F87C24 		ldr	r2, [r7, #1148]
 2116 111e D7F88044 		ldr	r4, [r7, #1152]
 2117 1122 07F59A63 		add	r3, r7, #1232
 2118 1126 D3E90001 		ldrd	r0, [r3]
 2119 112a 07F51A73 		add	r3, r7, #616
 2120 112e 1A60     		str	r2, [r3]
 2121 1130 07F51973 		add	r3, r7, #612
 2122 1134 1C60     		str	r4, [r3]
 2123 1136 C7E99601 		strd	r0, [r7, #600]
 2124              	.LBB214:
 2125              	.LBB215:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2126              		.loc 2 2028 11
 2127 113a D7E99623 		ldrd	r2, [r7, #600]
 2128 113e C7E95023 		strd	r2, [r7, #320]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2129              		.loc 2 2031 119
 2130 1142 07F5A073 		add	r3, r7, #320
 2131 1146 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2132              		.loc 2 2031 137
 2133 1148 07F5A073 		add	r3, r7, #320
 2134 114c 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2135              		.loc 2 2031 3
 2136 114e 07F51A73 		add	r3, r7, #616
 2137 1152 1868     		ldr	r0, [r3]
 2138 1154 07F51973 		add	r3, r7, #612
 2139 1158 1A68     		ldr	r2, [r3]
 2140 115a 2346     		mov	r3, r4
 2141              		.syntax unified
 2142              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2143 115c C0FBD213 		smlaldx r1, r3, r0, r2
 2144              	@ 0 "" 2
 2145              		.thumb
 2146              		.syntax unified
 2147 1160 07F5A072 		add	r2, r7, #320
 2148 1164 1160     		str	r1, [r2]
 2149 1166 07F5A072 		add	r2, r7, #320
ARM GAS  /tmp/ccjQyAEv.s 			page 93


 2150 116a 5360     		str	r3, [r2, #4]
 2151              		.loc 2 2036 13
 2152 116c D7E95023 		ldrd	r2, [r7, #320]
 2153              	.LBE215:
 2154              	.LBE214:
 2155              		.loc 1 435 16
 2156 1170 07F59A61 		add	r1, r7, #1232
 2157 1174 C1E90023 		strd	r2, [r1]
 436:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 437:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = *(py-1);
 2158              		.loc 1 437 20
 2159 1178 07F5D673 		add	r3, r7, #428
 2160 117c 1B68     		ldr	r3, [r3]
 2161 117e 023B     		subs	r3, r3, #2
 2162              		.loc 1 437 16
 2163 1180 B3F90030 		ldrsh	r3, [r3]
 2164              		.loc 1 437 14
 2165 1184 C7F88034 		str	r3, [r7, #1152]
 438:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 439:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = c0 << 16U;
 440:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #else
 441:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           c0 = c0 & 0x0000FFFF;
 2166              		.loc 1 441 14
 2167 1188 D7F88034 		ldr	r3, [r7, #1152]
 2168 118c 9BB2     		uxth	r3, r3
 2169 118e C7F88034 		str	r3, [r7, #1152]
 442:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #endif /* #ifdef  ARM_MATH_BIG_ENDIAN */
 443:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 444:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Read x[10] */
 445:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           x3 =  read_q15x2 ((q15_t *) px + 2);
 2170              		.loc 1 445 29
 2171 1192 07F5D873 		add	r3, r7, #432
 2172 1196 1B68     		ldr	r3, [r3]
 2173              		.loc 1 445 17
 2174 1198 1A1D     		adds	r2, r3, #4
 2175 119a 07F51B73 		add	r3, r7, #620
 2176 119e 1A60     		str	r2, [r3]
 2177 11a0 07F51B73 		add	r3, r7, #620
 2178 11a4 1B68     		ldr	r3, [r3]
 2179 11a6 1B68     		ldr	r3, [r3]	@ unaligned
 2180 11a8 1A46     		mov	r2, r3
 2181              	.LBB216:
 2182              	.LBB217:
 459:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2183              		.loc 3 459 3
 2184 11aa 07F59E73 		add	r3, r7, #316
 2185 11ae 1A60     		str	r2, [r3]
 461:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2186              		.loc 3 461 10
 2187 11b0 07F59E73 		add	r3, r7, #316
 2188 11b4 1B68     		ldr	r3, [r3]
 2189              	.LBE217:
 2190              	.LBE216:
 2191              		.loc 1 445 17
 2192 11b6 C7F87834 		str	r3, [r7, #1144]
 446:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           px += 3U;
 2193              		.loc 1 446 14
ARM GAS  /tmp/ccjQyAEv.s 			page 94


 2194 11ba 07F5D873 		add	r3, r7, #432
 2195 11be 1B68     		ldr	r3, [r3]
 2196 11c0 9A1D     		adds	r2, r3, #6
 2197 11c2 07F5D873 		add	r3, r7, #432
 2198 11c6 1A60     		str	r2, [r3]
 447:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 448:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulates */
 449:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc0 = __SMLALDX(x1, c0, acc0);
 2199              		.loc 1 449 18
 2200 11c8 D7F8C024 		ldr	r2, [r7, #1216]
 2201 11cc D7F88044 		ldr	r4, [r7, #1152]
 2202 11d0 07F59D63 		add	r3, r7, #1256
 2203 11d4 D3E90001 		ldrd	r0, [r3]
 2204 11d8 07F51F73 		add	r3, r7, #636
 2205 11dc 1A60     		str	r2, [r3]
 2206 11de 07F51E73 		add	r3, r7, #632
 2207 11e2 1C60     		str	r4, [r3]
 2208 11e4 C7E99C01 		strd	r0, [r7, #624]
 2209              	.LBB218:
 2210              	.LBB219:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2211              		.loc 2 2028 11
 2212 11e8 D7E99C23 		ldrd	r2, [r7, #624]
 2213 11ec C7E94C23 		strd	r2, [r7, #304]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2214              		.loc 2 2031 119
 2215 11f0 07F59873 		add	r3, r7, #304
 2216 11f4 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2217              		.loc 2 2031 137
 2218 11f6 07F59873 		add	r3, r7, #304
 2219 11fa 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2220              		.loc 2 2031 3
 2221 11fc 07F51F73 		add	r3, r7, #636
 2222 1200 1868     		ldr	r0, [r3]
 2223 1202 07F51E73 		add	r3, r7, #632
 2224 1206 1A68     		ldr	r2, [r3]
 2225 1208 2346     		mov	r3, r4
 2226              		.syntax unified
 2227              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2228 120a C0FBD213 		smlaldx r1, r3, r0, r2
 2229              	@ 0 "" 2
 2230              		.thumb
 2231              		.syntax unified
 2232 120e 07F59872 		add	r2, r7, #304
 2233 1212 1160     		str	r1, [r2]
 2234 1214 07F59872 		add	r2, r7, #304
 2235 1218 5360     		str	r3, [r2, #4]
 2236              		.loc 2 2036 13
 2237 121a D7E94C23 		ldrd	r2, [r7, #304]
 2238              	.LBE219:
 2239              	.LBE218:
 2240              		.loc 1 449 16
 2241 121e 07F59D61 		add	r1, r7, #1256
 2242 1222 C1E90023 		strd	r2, [r1]
 450:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc1 = __SMLALD (x2, c0, acc1);
ARM GAS  /tmp/ccjQyAEv.s 			page 95


 2243              		.loc 1 450 18
 2244 1226 D7F87C24 		ldr	r2, [r7, #1148]
 2245 122a D7F88044 		ldr	r4, [r7, #1152]
 2246 122e 07F59C63 		add	r3, r7, #1248
 2247 1232 D3E90001 		ldrd	r0, [r3]
 2248 1236 07F52373 		add	r3, r7, #652
 2249 123a 1A60     		str	r2, [r3]
 2250 123c 07F52273 		add	r3, r7, #648
 2251 1240 1C60     		str	r4, [r3]
 2252 1242 C7E9A001 		strd	r0, [r7, #640]
 2253              	.LBB220:
 2254              	.LBB221:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2255              		.loc 2 2011 11
 2256 1246 D7E9A023 		ldrd	r2, [r7, #640]
 2257 124a C7E94A23 		strd	r2, [r7, #296]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2258              		.loc 2 2014 118
 2259 124e 07F59473 		add	r3, r7, #296
 2260 1252 1968     		ldr	r1, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2261              		.loc 2 2014 136
 2262 1254 07F59473 		add	r3, r7, #296
 2263 1258 5C68     		ldr	r4, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2264              		.loc 2 2014 3
 2265 125a 07F52373 		add	r3, r7, #652
 2266 125e 1868     		ldr	r0, [r3]
 2267 1260 07F52273 		add	r3, r7, #648
 2268 1264 1A68     		ldr	r2, [r3]
 2269 1266 2346     		mov	r3, r4
 2270              		.syntax unified
 2271              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2272 1268 C0FBC213 		smlald r1, r3, r0, r2
 2273              	@ 0 "" 2
 2274              		.thumb
 2275              		.syntax unified
 2276 126c 07F59472 		add	r2, r7, #296
 2277 1270 1160     		str	r1, [r2]
 2278 1272 07F59472 		add	r2, r7, #296
 2279 1276 5360     		str	r3, [r2, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 2280              		.loc 2 2019 13
 2281 1278 D7E94A23 		ldrd	r2, [r7, #296]
 2282              	.LBE221:
 2283              	.LBE220:
 2284              		.loc 1 450 16
 2285 127c 07F59C61 		add	r1, r7, #1248
 2286 1280 C1E90023 		strd	r2, [r1]
 451:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc2 = __SMLALDX(x2, c0, acc2);
 2287              		.loc 1 451 18
 2288 1284 D7F87C24 		ldr	r2, [r7, #1148]
 2289 1288 D7F88044 		ldr	r4, [r7, #1152]
 2290 128c 07F59B63 		add	r3, r7, #1240
 2291 1290 D3E90001 		ldrd	r0, [r3]
 2292 1294 07F52773 		add	r3, r7, #668
 2293 1298 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 96


 2294 129a 07F52673 		add	r3, r7, #664
 2295 129e 1C60     		str	r4, [r3]
 2296 12a0 C7E9A401 		strd	r0, [r7, #656]
 2297              	.LBB222:
 2298              	.LBB223:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2299              		.loc 2 2028 11
 2300 12a4 D7E9A423 		ldrd	r2, [r7, #656]
 2301 12a8 C7E94823 		strd	r2, [r7, #288]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2302              		.loc 2 2031 119
 2303 12ac 07F59073 		add	r3, r7, #288
 2304 12b0 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2305              		.loc 2 2031 137
 2306 12b2 07F59073 		add	r3, r7, #288
 2307 12b6 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2308              		.loc 2 2031 3
 2309 12b8 07F52773 		add	r3, r7, #668
 2310 12bc 1868     		ldr	r0, [r3]
 2311 12be 07F52673 		add	r3, r7, #664
 2312 12c2 1A68     		ldr	r2, [r3]
 2313 12c4 2346     		mov	r3, r4
 2314              		.syntax unified
 2315              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2316 12c6 C0FBD213 		smlaldx r1, r3, r0, r2
 2317              	@ 0 "" 2
 2318              		.thumb
 2319              		.syntax unified
 2320 12ca 07F59072 		add	r2, r7, #288
 2321 12ce 1160     		str	r1, [r2]
 2322 12d0 07F59072 		add	r2, r7, #288
 2323 12d4 5360     		str	r3, [r2, #4]
 2324              		.loc 2 2036 13
 2325 12d6 D7E94823 		ldrd	r2, [r7, #288]
 2326              	.LBE223:
 2327              	.LBE222:
 2328              		.loc 1 451 16
 2329 12da 07F59B61 		add	r1, r7, #1240
 2330 12de C1E90023 		strd	r2, [r1]
 452:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           acc3 = __SMLALDX(x3, c0, acc3);
 2331              		.loc 1 452 18
 2332 12e2 D7F87824 		ldr	r2, [r7, #1144]
 2333 12e6 D7F88044 		ldr	r4, [r7, #1152]
 2334 12ea 07F59A63 		add	r3, r7, #1232
 2335 12ee D3E90001 		ldrd	r0, [r3]
 2336 12f2 07F52C73 		add	r3, r7, #688
 2337 12f6 1A60     		str	r2, [r3]
 2338 12f8 07F52B73 		add	r3, r7, #684
 2339 12fc 1C60     		str	r4, [r3]
 2340 12fe C7E9A801 		strd	r0, [r7, #672]
 2341              	.LBB224:
 2342              	.LBB225:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 2343              		.loc 2 2028 11
 2344 1302 D7E9A823 		ldrd	r2, [r7, #672]
ARM GAS  /tmp/ccjQyAEv.s 			page 97


 2345 1306 C7E94623 		strd	r2, [r7, #280]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2346              		.loc 2 2031 119
 2347 130a 07F58C73 		add	r3, r7, #280
 2348 130e 1968     		ldr	r1, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2349              		.loc 2 2031 137
 2350 1310 07F58C73 		add	r3, r7, #280
 2351 1314 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 2352              		.loc 2 2031 3
 2353 1316 07F52C73 		add	r3, r7, #688
 2354 131a 1868     		ldr	r0, [r3]
 2355 131c 07F52B73 		add	r3, r7, #684
 2356 1320 1A68     		ldr	r2, [r3]
 2357 1322 2346     		mov	r3, r4
 2358              		.syntax unified
 2359              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 2360 1324 C0FBD213 		smlaldx r1, r3, r0, r2
 2361              	@ 0 "" 2
 2362              		.thumb
 2363              		.syntax unified
 2364 1328 07F58C72 		add	r2, r7, #280
 2365 132c 1160     		str	r1, [r2]
 2366 132e 07F58C72 		add	r2, r7, #280
 2367 1332 5360     		str	r3, [r2, #4]
 2368              		.loc 2 2036 13
 2369 1334 D7E94623 		ldrd	r2, [r7, #280]
 2370              	.LBE225:
 2371              	.LBE224:
 2372              		.loc 1 452 16
 2373 1338 07F59A61 		add	r1, r7, #1232
 2374 133c C1E90023 		strd	r2, [r1]
 2375              	.L68:
 2376              	.LBB226:
 453:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 454:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 455:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Store the results in the accumulators in the destination buffer. */
 456:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 457:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16));
 2377              		.loc 1 457 32
 2378 1340 07F59D63 		add	r3, r7, #1256
 2379 1344 D3E90001 		ldrd	r0, [r3]
 2380 1348 4FF00002 		mov	r2, #0
 2381 134c 4FF00003 		mov	r3, #0
 2382 1350 C20B     		lsrs	r2, r0, #15
 2383 1352 42EA4142 		orr	r2, r2, r1, lsl #17
 2384 1356 CB13     		asrs	r3, r1, #15
 2385 1358 1346     		mov	r3, r2
 2386 135a C7F87434 		str	r3, [r7, #1140]
 2387 135e D7F87434 		ldr	r3, [r7, #1140]
 2388              		.syntax unified
 2389              	@ 457 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2390 1362 03F30F03 		ssat r3, #16, r3
 2391              	@ 0 "" 2
 2392              		.thumb
 2393              		.syntax unified
ARM GAS  /tmp/ccjQyAEv.s 			page 98


 2394 1366 C7F87034 		str	r3, [r7, #1136]
 2395 136a D7F87034 		ldr	r3, [r7, #1136]
 2396              	.LBE226:
 2397 136e 9CB2     		uxth	r4, r3
 2398              	.LBB227:
 2399 1370 07F59C63 		add	r3, r7, #1248
 2400 1374 D3E90023 		ldrd	r2, [r3]
 2401 1378 4FF00000 		mov	r0, #0
 2402 137c 4FF00001 		mov	r1, #0
 2403 1380 D00B     		lsrs	r0, r2, #15
 2404 1382 40EA4340 		orr	r0, r0, r3, lsl #17
 2405 1386 D913     		asrs	r1, r3, #15
 2406 1388 0346     		mov	r3, r0
 2407 138a C7F86C34 		str	r3, [r7, #1132]
 2408 138e D7F86C34 		ldr	r3, [r7, #1132]
 2409              		.syntax unified
 2410              	@ 457 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2411 1392 03F30F03 		ssat r3, #16, r3
 2412              	@ 0 "" 2
 2413              		.thumb
 2414              		.syntax unified
 2415 1396 C7F86834 		str	r3, [r7, #1128]
 2416 139a D7F86834 		ldr	r3, [r7, #1128]
 2417              	.LBE227:
 2418 139e 1B04     		lsls	r3, r3, #16
 2419 13a0 2343     		orrs	r3, r3, r4
 2420              		.loc 1 457 9
 2421 13a2 1946     		mov	r1, r3
 2422 13a4 07F50473 		add	r3, r7, #528
 2423 13a8 07F5DA72 		add	r2, r7, #436
 2424 13ac 1A60     		str	r2, [r3]
 2425 13ae 07F50373 		add	r3, r7, #524
 2426 13b2 1960     		str	r1, [r3]
 2427              	.LBB228:
 2428              	.LBB229:
 494:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 495:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 496:./Libraries/CMSIS/DSP/Include/arm_math.h **** /**
 497:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:./Libraries/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:./Libraries/CMSIS/DSP/Include/arm_math.h ****  */
 502:./Libraries/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:./Libraries/CMSIS/DSP/Include/arm_math.h **** {
 506:./Libraries/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 2429              		.loc 3 506 9
 2430 13b4 07F5BA73 		add	r3, r7, #372
 2431 13b8 07F50372 		add	r2, r7, #524
 2432 13bc 1268     		ldr	r2, [r2]
 2433 13be 1A60     		str	r2, [r3]
 507:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 2434              		.loc 3 508 3
 2435 13c0 07F50473 		add	r3, r7, #528
ARM GAS  /tmp/ccjQyAEv.s 			page 99


 2436 13c4 1B68     		ldr	r3, [r3]
 2437 13c6 1B68     		ldr	r3, [r3]
 2438 13c8 07F5BA72 		add	r2, r7, #372
 2439 13cc 1268     		ldr	r2, [r2]
 2440 13ce 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2441              		.loc 3 509 9
 2442 13d0 07F50473 		add	r3, r7, #528
 2443 13d4 1B68     		ldr	r3, [r3]
 2444 13d6 1B68     		ldr	r3, [r3]
 2445 13d8 1A1D     		adds	r2, r3, #4
 2446 13da 07F50473 		add	r3, r7, #528
 2447 13de 1B68     		ldr	r3, [r3]
 2448 13e0 1A60     		str	r2, [r3]
 510:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2449              		.loc 3 510 1
 2450 13e2 00BF     		nop
 2451              	.LBE229:
 2452              	.LBE228:
 2453              	.LBB230:
 458:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16));
 2454              		.loc 1 458 32
 2455 13e4 07F59B63 		add	r3, r7, #1240
 2456 13e8 D3E90001 		ldrd	r0, [r3]
 2457 13ec 4FF00002 		mov	r2, #0
 2458 13f0 4FF00003 		mov	r3, #0
 2459 13f4 C20B     		lsrs	r2, r0, #15
 2460 13f6 42EA4142 		orr	r2, r2, r1, lsl #17
 2461 13fa CB13     		asrs	r3, r1, #15
 2462 13fc 1346     		mov	r3, r2
 2463 13fe C7F86434 		str	r3, [r7, #1124]
 2464 1402 D7F86434 		ldr	r3, [r7, #1124]
 2465              		.syntax unified
 2466              	@ 458 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2467 1406 03F30F03 		ssat r3, #16, r3
 2468              	@ 0 "" 2
 2469              		.thumb
 2470              		.syntax unified
 2471 140a C7F86034 		str	r3, [r7, #1120]
 2472 140e D7F86034 		ldr	r3, [r7, #1120]
 2473              	.LBE230:
 2474 1412 9CB2     		uxth	r4, r3
 2475              	.LBB231:
 2476 1414 07F59A63 		add	r3, r7, #1232
 2477 1418 D3E90023 		ldrd	r2, [r3]
 2478 141c 4FF00000 		mov	r0, #0
 2479 1420 4FF00001 		mov	r1, #0
 2480 1424 D00B     		lsrs	r0, r2, #15
 2481 1426 40EA4340 		orr	r0, r0, r3, lsl #17
 2482 142a D913     		asrs	r1, r3, #15
 2483 142c 0346     		mov	r3, r0
 2484 142e C7F85C34 		str	r3, [r7, #1116]
 2485 1432 D7F85C34 		ldr	r3, [r7, #1116]
 2486              		.syntax unified
 2487              	@ 458 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2488 1436 03F30F03 		ssat r3, #16, r3
 2489              	@ 0 "" 2
ARM GAS  /tmp/ccjQyAEv.s 			page 100


 2490              		.thumb
 2491              		.syntax unified
 2492 143a C7F85834 		str	r3, [r7, #1112]
 2493 143e D7F85834 		ldr	r3, [r7, #1112]
 2494              	.LBE231:
 2495 1442 1B04     		lsls	r3, r3, #16
 2496 1444 2343     		orrs	r3, r3, r4
 2497              		.loc 1 458 9
 2498 1446 1946     		mov	r1, r3
 2499 1448 07F50673 		add	r3, r7, #536
 2500 144c 07F5DA72 		add	r2, r7, #436
 2501 1450 1A60     		str	r2, [r3]
 2502 1452 07F50573 		add	r3, r7, #532
 2503 1456 1960     		str	r1, [r3]
 2504              	.LBB232:
 2505              	.LBB233:
 506:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 2506              		.loc 3 506 9
 2507 1458 07F5B873 		add	r3, r7, #368
 2508 145c 07F50572 		add	r2, r7, #532
 2509 1460 1268     		ldr	r2, [r2]
 2510 1462 1A60     		str	r2, [r3]
 508:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2511              		.loc 3 508 3
 2512 1464 07F50673 		add	r3, r7, #536
 2513 1468 1B68     		ldr	r3, [r3]
 2514 146a 1B68     		ldr	r3, [r3]
 2515 146c 07F5B872 		add	r2, r7, #368
 2516 1470 1268     		ldr	r2, [r2]
 2517 1472 1A60     		str	r2, [r3]	@ unaligned
 509:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 2518              		.loc 3 509 9
 2519 1474 07F50673 		add	r3, r7, #536
 2520 1478 1B68     		ldr	r3, [r3]
 2521 147a 1B68     		ldr	r3, [r3]
 2522 147c 1A1D     		adds	r2, r3, #4
 2523 147e 07F50673 		add	r3, r7, #536
 2524 1482 1B68     		ldr	r3, [r3]
 2525 1484 1A60     		str	r2, [r3]
 2526              		.loc 3 510 1
 2527 1486 00BF     		nop
 2528              	.LBE233:
 2529              	.LBE232:
 459:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #else
 460:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16));
 461:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         write_q15x2_ia (&pOut, __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16));
 462:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #endif /* #ifndef  ARM_MATH_BIG_ENDIAN */
 463:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 464:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
 465:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         count += 4U;
 2530              		.loc 1 465 15
 2531 1488 D7F8AC34 		ldr	r3, [r7, #1196]
 2532 148c 0433     		adds	r3, r3, #4
 2533 148e C7F8AC34 		str	r3, [r7, #1196]
 466:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 467:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 468:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         px = pSrc1 + count;
ARM GAS  /tmp/ccjQyAEv.s 			page 101


 2534              		.loc 1 468 20
 2535 1492 D7F8AC34 		ldr	r3, [r7, #1196]
 2536 1496 5B00     		lsls	r3, r3, #1
 2537 1498 D7F8CC24 		ldr	r2, [r7, #1228]
 2538 149c 1A44     		add	r2, r2, r3
 2539              		.loc 1 468 12
 2540 149e 07F5D873 		add	r3, r7, #432
 2541 14a2 1A60     		str	r2, [r3]
 469:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         py = pSrc2;
 2542              		.loc 1 469 12
 2543 14a4 07F5D673 		add	r3, r7, #428
 2544 14a8 D7F8C824 		ldr	r2, [r7, #1224]
 2545 14ac 1A60     		str	r2, [r3]
 470:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 471:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 472:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2546              		.loc 1 472 15
 2547 14ae D7F8A834 		ldr	r3, [r7, #1192]
 2548 14b2 013B     		subs	r3, r3, #1
 2549 14b4 C7F8A834 		str	r3, [r7, #1192]
 2550              	.L36:
 302:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2551              		.loc 1 302 13
 2552 14b8 D7F8A834 		ldr	r3, [r7, #1192]
 2553 14bc 002B     		cmp	r3, #0
 2554 14be 7FF4C3A8 		bne	.L81
 473:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 474:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 475:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 476:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          No loop unrolling is used. */
 477:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4U;
 2555              		.loc 1 477 16
 2556 14c2 D7F89C34 		ldr	r3, [r7, #1180]
 2557              		.loc 1 477 14
 2558 14c6 03F00303 		and	r3, r3, #3
 2559 14ca C7F8A834 		str	r3, [r7, #1192]
 478:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (blkCnt > 0U)
 2560              		.loc 1 479 13
 2561 14ce 1DE1     		b	.L82
 2562              	.L87:
 480:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 481:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Accumulator is made zero for every iteration */
 482:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = 0;
 2563              		.loc 1 482 13
 2564 14d0 4FF00002 		mov	r2, #0
 2565 14d4 4FF00003 		mov	r3, #0
 2566 14d8 07F59E61 		add	r1, r7, #1264
 2567 14dc C1E90023 		strd	r2, [r1]
 483:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 484:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 485:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen >> 2U;
 2568              		.loc 1 485 11
 2569 14e0 07F11803 		add	r3, r7, #24
 2570 14e4 1B68     		ldr	r3, [r3]
 2571 14e6 9B08     		lsrs	r3, r3, #2
 2572 14e8 C7F8B034 		str	r3, [r7, #1200]
ARM GAS  /tmp/ccjQyAEv.s 			page 102


 486:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 487:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 488:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****            a second loop below computes MACs for the remaining 1 to 3 samples. */
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0U)
 2573              		.loc 1 489 15
 2574 14ec 99E0     		b	.L83
 2575              	.L84:
 490:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 491:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulates */
 492:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2576              		.loc 1 492 38
 2577 14ee 07F5D873 		add	r3, r7, #432
 2578 14f2 1B68     		ldr	r3, [r3]
 2579 14f4 991C     		adds	r1, r3, #2
 2580 14f6 07F5D872 		add	r2, r7, #432
 2581 14fa 1160     		str	r1, [r2]
 2582              		.loc 1 492 35
 2583 14fc B3F90030 		ldrsh	r3, [r3]
 2584              		.loc 1 492 27
 2585 1500 1846     		mov	r0, r3
 2586              		.loc 1 492 46
 2587 1502 07F5D673 		add	r3, r7, #428
 2588 1506 1B68     		ldr	r3, [r3]
 2589 1508 991E     		subs	r1, r3, #2
 2590 150a 07F5D672 		add	r2, r7, #428
 2591 150e 1160     		str	r1, [r2]
 2592              		.loc 1 492 43
 2593 1510 B3F90030 		ldrsh	r3, [r3]
 2594              		.loc 1 492 41
 2595 1514 03FB00F3 		mul	r3, r3, r0
 2596              		.loc 1 492 18
 2597 1518 1A46     		mov	r2, r3
 2598 151a 4FEAE273 		asr	r3, r2, #31
 2599              		.loc 1 492 15
 2600 151e 07F59E61 		add	r1, r7, #1264
 2601 1522 D1E90001 		ldrd	r0, [r1]
 2602 1526 10EB020A 		adds	r10, r0, r2
 2603 152a 41EB030B 		adc	fp, r1, r3
 2604 152e 07F59E63 		add	r3, r7, #1264
 2605 1532 C3E900AB 		strd	r10, [r3]
 493:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2606              		.loc 1 493 38
 2607 1536 07F5D873 		add	r3, r7, #432
 2608 153a 1B68     		ldr	r3, [r3]
 2609 153c 991C     		adds	r1, r3, #2
 2610 153e 07F5D872 		add	r2, r7, #432
 2611 1542 1160     		str	r1, [r2]
 2612              		.loc 1 493 35
 2613 1544 B3F90030 		ldrsh	r3, [r3]
 2614              		.loc 1 493 27
 2615 1548 1846     		mov	r0, r3
 2616              		.loc 1 493 46
 2617 154a 07F5D673 		add	r3, r7, #428
 2618 154e 1B68     		ldr	r3, [r3]
 2619 1550 991E     		subs	r1, r3, #2
 2620 1552 07F5D672 		add	r2, r7, #428
 2621 1556 1160     		str	r1, [r2]
ARM GAS  /tmp/ccjQyAEv.s 			page 103


 2622              		.loc 1 493 43
 2623 1558 B3F90030 		ldrsh	r3, [r3]
 2624              		.loc 1 493 41
 2625 155c 03FB00F3 		mul	r3, r3, r0
 2626              		.loc 1 493 18
 2627 1560 1A46     		mov	r2, r3
 2628 1562 4FEAE273 		asr	r3, r2, #31
 2629              		.loc 1 493 15
 2630 1566 07F59E61 		add	r1, r7, #1264
 2631 156a D1E90001 		ldrd	r0, [r1]
 2632 156e 8518     		adds	r5, r0, r2
 2633 1570 41EB0306 		adc	r6, r1, r3
 2634 1574 07F59E63 		add	r3, r7, #1264
 2635 1578 C3E90056 		strd	r5, [r3]
 494:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2636              		.loc 1 494 38
 2637 157c 07F5D873 		add	r3, r7, #432
 2638 1580 1B68     		ldr	r3, [r3]
 2639 1582 991C     		adds	r1, r3, #2
 2640 1584 07F5D872 		add	r2, r7, #432
 2641 1588 1160     		str	r1, [r2]
 2642              		.loc 1 494 35
 2643 158a B3F90030 		ldrsh	r3, [r3]
 2644              		.loc 1 494 27
 2645 158e 1846     		mov	r0, r3
 2646              		.loc 1 494 46
 2647 1590 07F5D673 		add	r3, r7, #428
 2648 1594 1B68     		ldr	r3, [r3]
 2649 1596 991E     		subs	r1, r3, #2
 2650 1598 07F5D672 		add	r2, r7, #428
 2651 159c 1160     		str	r1, [r2]
 2652              		.loc 1 494 43
 2653 159e B3F90030 		ldrsh	r3, [r3]
 2654              		.loc 1 494 41
 2655 15a2 03FB00F3 		mul	r3, r3, r0
 2656              		.loc 1 494 18
 2657 15a6 1A46     		mov	r2, r3
 2658 15a8 4FEAE273 		asr	r3, r2, #31
 2659              		.loc 1 494 15
 2660 15ac 07F59E61 		add	r1, r7, #1264
 2661 15b0 D1E90001 		ldrd	r0, [r1]
 2662 15b4 8418     		adds	r4, r0, r2
 2663 15b6 3C61     		str	r4, [r7, #16]
 2664 15b8 41EB0303 		adc	r3, r1, r3
 2665 15bc 7B61     		str	r3, [r7, #20]
 2666 15be 07F59E62 		add	r2, r7, #1264
 2667 15c2 D7E90434 		ldrd	r3, [r7, #16]
 2668 15c6 C2E90034 		strd	r3, [r2]
 495:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2669              		.loc 1 495 38
 2670 15ca 07F5D873 		add	r3, r7, #432
 2671 15ce 1B68     		ldr	r3, [r3]
 2672 15d0 991C     		adds	r1, r3, #2
 2673 15d2 07F5D872 		add	r2, r7, #432
 2674 15d6 1160     		str	r1, [r2]
 2675              		.loc 1 495 35
 2676 15d8 B3F90030 		ldrsh	r3, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 104


 2677              		.loc 1 495 27
 2678 15dc 1846     		mov	r0, r3
 2679              		.loc 1 495 46
 2680 15de 07F5D673 		add	r3, r7, #428
 2681 15e2 1B68     		ldr	r3, [r3]
 2682 15e4 991E     		subs	r1, r3, #2
 2683 15e6 07F5D672 		add	r2, r7, #428
 2684 15ea 1160     		str	r1, [r2]
 2685              		.loc 1 495 43
 2686 15ec B3F90030 		ldrsh	r3, [r3]
 2687              		.loc 1 495 41
 2688 15f0 03FB00F3 		mul	r3, r3, r0
 2689              		.loc 1 495 18
 2690 15f4 1A46     		mov	r2, r3
 2691 15f6 4FEAE273 		asr	r3, r2, #31
 2692              		.loc 1 495 15
 2693 15fa 07F59E61 		add	r1, r7, #1264
 2694 15fe D1E90001 		ldrd	r0, [r1]
 2695 1602 8418     		adds	r4, r0, r2
 2696 1604 BC60     		str	r4, [r7, #8]
 2697 1606 41EB0303 		adc	r3, r1, r3
 2698 160a FB60     		str	r3, [r7, #12]
 2699 160c 07F59E62 		add	r2, r7, #1264
 2700 1610 D7E90234 		ldrd	r3, [r7, #8]
 2701 1614 C2E90034 		strd	r3, [r2]
 496:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 497:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement loop counter */
 498:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2702              		.loc 1 498 12
 2703 1618 D7F8B034 		ldr	r3, [r7, #1200]
 2704 161c 013B     		subs	r3, r3, #1
 2705 161e C7F8B034 		str	r3, [r7, #1200]
 2706              	.L83:
 489:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2707              		.loc 1 489 15
 2708 1622 D7F8B034 		ldr	r3, [r7, #1200]
 2709 1626 002B     		cmp	r3, #0
 2710 1628 7FF461AF 		bne	.L84
 499:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 500:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 501:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 502:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          ** No loop unrolling is used. */
 503:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen % 0x4U;
 2711              		.loc 1 503 11
 2712 162c 07F11803 		add	r3, r7, #24
 2713 1630 1B68     		ldr	r3, [r3]
 2714 1632 03F00303 		and	r3, r3, #3
 2715 1636 C7F8B034 		str	r3, [r7, #1200]
 504:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0U)
 2716              		.loc 1 505 15
 2717 163a 2BE0     		b	.L85
 2718              	.L86:
 506:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 507:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 508:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2719              		.loc 1 508 38
ARM GAS  /tmp/ccjQyAEv.s 			page 105


 2720 163c 07F5D873 		add	r3, r7, #432
 2721 1640 1B68     		ldr	r3, [r3]
 2722 1642 991C     		adds	r1, r3, #2
 2723 1644 07F5D872 		add	r2, r7, #432
 2724 1648 1160     		str	r1, [r2]
 2725              		.loc 1 508 35
 2726 164a B3F90030 		ldrsh	r3, [r3]
 2727              		.loc 1 508 27
 2728 164e 1846     		mov	r0, r3
 2729              		.loc 1 508 46
 2730 1650 07F5D673 		add	r3, r7, #428
 2731 1654 1B68     		ldr	r3, [r3]
 2732 1656 991E     		subs	r1, r3, #2
 2733 1658 07F5D672 		add	r2, r7, #428
 2734 165c 1160     		str	r1, [r2]
 2735              		.loc 1 508 43
 2736 165e B3F90030 		ldrsh	r3, [r3]
 2737              		.loc 1 508 41
 2738 1662 03FB00F3 		mul	r3, r3, r0
 2739              		.loc 1 508 18
 2740 1666 1A46     		mov	r2, r3
 2741 1668 4FEAE273 		asr	r3, r2, #31
 2742              		.loc 1 508 15
 2743 166c 07F59E61 		add	r1, r7, #1264
 2744 1670 D1E90001 		ldrd	r0, [r1]
 2745 1674 8418     		adds	r4, r0, r2
 2746 1676 3C60     		str	r4, [r7]
 2747 1678 41EB0303 		adc	r3, r1, r3
 2748 167c 7B60     		str	r3, [r7, #4]
 2749 167e 07F59E62 		add	r2, r7, #1264
 2750 1682 D7E90034 		ldrd	r3, [r7]
 2751 1686 C2E90034 		strd	r3, [r2]
 509:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 510:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement loop counter */
 511:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2752              		.loc 1 511 12
 2753 168a D7F8B034 		ldr	r3, [r7, #1200]
 2754 168e 013B     		subs	r3, r3, #1
 2755 1690 C7F8B034 		str	r3, [r7, #1200]
 2756              	.L85:
 505:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2757              		.loc 1 505 15
 2758 1694 D7F8B034 		ldr	r3, [r7, #1200]
 2759 1698 002B     		cmp	r3, #0
 2760 169a CFD1     		bne	.L86
 2761              	.LBB234:
 512:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 513:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 514:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 515:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2762              		.loc 1 515 28
 2763 169c 07F59E63 		add	r3, r7, #1264
 2764 16a0 D3E90001 		ldrd	r0, [r3]
 2765 16a4 4FF00002 		mov	r2, #0
 2766 16a8 4FF00003 		mov	r3, #0
 2767 16ac C20B     		lsrs	r2, r0, #15
 2768 16ae 42EA4142 		orr	r2, r2, r1, lsl #17
ARM GAS  /tmp/ccjQyAEv.s 			page 106


 2769 16b2 CB13     		asrs	r3, r1, #15
 2770 16b4 1346     		mov	r3, r2
 2771 16b6 C7F88834 		str	r3, [r7, #1160]
 2772 16ba D7F88834 		ldr	r3, [r7, #1160]
 2773              		.syntax unified
 2774              	@ 515 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2775 16be 03F30F03 		ssat r3, #16, r3
 2776              	@ 0 "" 2
 2777              		.thumb
 2778              		.syntax unified
 2779 16c2 C7F88434 		str	r3, [r7, #1156]
 2780 16c6 D7F88404 		ldr	r0, [r7, #1156]
 2781              	.LBE234:
 2782              		.loc 1 515 14
 2783 16ca 07F5DA73 		add	r3, r7, #436
 2784 16ce 1B68     		ldr	r3, [r3]
 2785 16d0 991C     		adds	r1, r3, #2
 2786 16d2 07F5DA72 		add	r2, r7, #436
 2787 16d6 1160     		str	r1, [r2]
 2788              		.loc 1 515 19
 2789 16d8 02B2     		sxth	r2, r0
 2790              		.loc 1 515 17
 2791 16da 1A80     		strh	r2, [r3]	@ movhi
 516:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 517:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
 518:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         count++;
 2792              		.loc 1 518 14
 2793 16dc D7F8AC34 		ldr	r3, [r7, #1196]
 2794 16e0 0133     		adds	r3, r3, #1
 2795 16e2 C7F8AC34 		str	r3, [r7, #1196]
 519:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 520:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 521:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         px = pSrc1 + count;
 2796              		.loc 1 521 20
 2797 16e6 D7F8AC34 		ldr	r3, [r7, #1196]
 2798 16ea 5B00     		lsls	r3, r3, #1
 2799 16ec D7F8CC24 		ldr	r2, [r7, #1228]
 2800 16f0 1A44     		add	r2, r2, r3
 2801              		.loc 1 521 12
 2802 16f2 07F5D873 		add	r3, r7, #432
 2803 16f6 1A60     		str	r2, [r3]
 522:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         py = pSrc2;
 2804              		.loc 1 522 12
 2805 16f8 07F5D673 		add	r3, r7, #428
 2806 16fc D7F8C824 		ldr	r2, [r7, #1224]
 2807 1700 1A60     		str	r2, [r3]
 523:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 524:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 525:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2808              		.loc 1 525 15
 2809 1702 D7F8A834 		ldr	r3, [r7, #1192]
 2810 1706 013B     		subs	r3, r3, #1
 2811 1708 C7F8A834 		str	r3, [r7, #1192]
 2812              	.L82:
 479:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2813              		.loc 1 479 13
 2814 170c D7F8A834 		ldr	r3, [r7, #1192]
ARM GAS  /tmp/ccjQyAEv.s 			page 107


 2815 1710 002B     		cmp	r3, #0
 2816 1712 7FF4DDAE 		bne	.L87
 2817 1716 7BE0     		b	.L88
 2818              	.L35:
 526:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 527:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 528:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     else
 529:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 530:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the srcBLen is not a multiple of 4,
 531:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 532:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blkCnt = (uint32_t) blockSize2;
 2819              		.loc 1 532 14
 2820 1718 D7F89C34 		ldr	r3, [r7, #1180]
 2821 171c C7F8A834 		str	r3, [r7, #1192]
 533:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (blkCnt > 0U)
 2822              		.loc 1 534 13
 2823 1720 72E0     		b	.L89
 2824              	.L92:
 535:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 536:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Accumulator is made zero for every iteration */
 537:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = 0;
 2825              		.loc 1 537 13
 2826 1722 4FF00002 		mov	r2, #0
 2827 1726 4FF00003 		mov	r3, #0
 2828 172a 07F59E61 		add	r1, r7, #1264
 2829 172e C1E90023 		strd	r2, [r1]
 538:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 539:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* srcBLen number of MACS should be performed */
 540:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k = srcBLen;
 2830              		.loc 1 540 11
 2831 1732 07F11803 		add	r3, r7, #24
 2832 1736 1B68     		ldr	r3, [r3]
 2833 1738 C7F8B034 		str	r3, [r7, #1200]
 541:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         while (k > 0U)
 2834              		.loc 1 542 15
 2835 173c 28E0     		b	.L90
 2836              	.L91:
 543:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 544:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Perform the multiply-accumulate */
 545:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += (q63_t) ((q31_t) *px++ * *py--);
 2837              		.loc 1 545 38
 2838 173e 07F5D873 		add	r3, r7, #432
 2839 1742 1B68     		ldr	r3, [r3]
 2840 1744 991C     		adds	r1, r3, #2
 2841 1746 07F5D872 		add	r2, r7, #432
 2842 174a 1160     		str	r1, [r2]
 2843              		.loc 1 545 35
 2844 174c B3F90030 		ldrsh	r3, [r3]
 2845              		.loc 1 545 27
 2846 1750 1846     		mov	r0, r3
 2847              		.loc 1 545 46
 2848 1752 07F5D673 		add	r3, r7, #428
 2849 1756 1B68     		ldr	r3, [r3]
 2850 1758 991E     		subs	r1, r3, #2
 2851 175a 07F5D672 		add	r2, r7, #428
ARM GAS  /tmp/ccjQyAEv.s 			page 108


 2852 175e 1160     		str	r1, [r2]
 2853              		.loc 1 545 43
 2854 1760 B3F90030 		ldrsh	r3, [r3]
 2855              		.loc 1 545 41
 2856 1764 03FB00F3 		mul	r3, r3, r0
 2857              		.loc 1 545 18
 2858 1768 1A46     		mov	r2, r3
 2859 176a 4FEAE273 		asr	r3, r2, #31
 2860              		.loc 1 545 15
 2861 176e 07F59E61 		add	r1, r7, #1264
 2862 1772 D1E90001 		ldrd	r0, [r1]
 2863 1776 10EB0208 		adds	r8, r0, r2
 2864 177a 41EB0309 		adc	r9, r1, r3
 2865 177e 07F59E63 		add	r3, r7, #1264
 2866 1782 C3E90089 		strd	r8, [r3]
 546:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 547:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* Decrement the loop counter */
 548:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           k--;
 2867              		.loc 1 548 12
 2868 1786 D7F8B034 		ldr	r3, [r7, #1200]
 2869 178a 013B     		subs	r3, r3, #1
 2870 178c C7F8B034 		str	r3, [r7, #1200]
 2871              	.L90:
 542:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 2872              		.loc 1 542 15
 2873 1790 D7F8B034 		ldr	r3, [r7, #1200]
 2874 1794 002B     		cmp	r3, #0
 2875 1796 D2D1     		bne	.L91
 2876              	.LBB235:
 549:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 550:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 551:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 552:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         *pOut++ = (q15_t) (__SSAT(sum >> 15, 16));
 2877              		.loc 1 552 28
 2878 1798 07F59E63 		add	r3, r7, #1264
 2879 179c D3E90001 		ldrd	r0, [r3]
 2880 17a0 4FF00002 		mov	r2, #0
 2881 17a4 4FF00003 		mov	r3, #0
 2882 17a8 C20B     		lsrs	r2, r0, #15
 2883 17aa 42EA4142 		orr	r2, r2, r1, lsl #17
 2884 17ae CB13     		asrs	r3, r1, #15
 2885 17b0 1346     		mov	r3, r2
 2886 17b2 C7F89034 		str	r3, [r7, #1168]
 2887 17b6 D7F89034 		ldr	r3, [r7, #1168]
 2888              		.syntax unified
 2889              	@ 552 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 2890 17ba 03F30F03 		ssat r3, #16, r3
 2891              	@ 0 "" 2
 2892              		.thumb
 2893              		.syntax unified
 2894 17be C7F88C34 		str	r3, [r7, #1164]
 2895 17c2 D7F88C04 		ldr	r0, [r7, #1164]
 2896              	.LBE235:
 2897              		.loc 1 552 14
 2898 17c6 07F5DA73 		add	r3, r7, #436
 2899 17ca 1B68     		ldr	r3, [r3]
 2900 17cc 991C     		adds	r1, r3, #2
ARM GAS  /tmp/ccjQyAEv.s 			page 109


 2901 17ce 07F5DA72 		add	r2, r7, #436
 2902 17d2 1160     		str	r1, [r2]
 2903              		.loc 1 552 19
 2904 17d4 02B2     		sxth	r2, r0
 2905              		.loc 1 552 17
 2906 17d6 1A80     		strh	r2, [r3]	@ movhi
 553:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 554:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Increment the MAC count */
 555:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         count++;
 2907              		.loc 1 555 14
 2908 17d8 D7F8AC34 		ldr	r3, [r7, #1196]
 2909 17dc 0133     		adds	r3, r3, #1
 2910 17de C7F8AC34 		str	r3, [r7, #1196]
 556:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 557:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 558:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         px = pSrc1 + count;
 2911              		.loc 1 558 20
 2912 17e2 D7F8AC34 		ldr	r3, [r7, #1196]
 2913 17e6 5B00     		lsls	r3, r3, #1
 2914 17e8 D7F8CC24 		ldr	r2, [r7, #1228]
 2915 17ec 1A44     		add	r2, r2, r3
 2916              		.loc 1 558 12
 2917 17ee 07F5D873 		add	r3, r7, #432
 2918 17f2 1A60     		str	r2, [r3]
 559:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         py = pSrc2;
 2919              		.loc 1 559 12
 2920 17f4 07F5D673 		add	r3, r7, #428
 2921 17f8 D7F8C824 		ldr	r2, [r7, #1224]
 2922 17fc 1A60     		str	r2, [r3]
 560:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 561:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement the loop counter */
 562:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         blkCnt--;
 2923              		.loc 1 562 15
 2924 17fe D7F8A834 		ldr	r3, [r7, #1192]
 2925 1802 013B     		subs	r3, r3, #1
 2926 1804 C7F8A834 		str	r3, [r7, #1192]
 2927              	.L89:
 534:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 2928              		.loc 1 534 13
 2929 1808 D7F8A834 		ldr	r3, [r7, #1192]
 2930 180c 002B     		cmp	r3, #0
 2931 180e 88D1     		bne	.L92
 2932              	.L88:
 563:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 564:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 565:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 566:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 567:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* --------------------------
 568:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Initializations of stage3
 569:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * -------------------------*/
 570:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 571:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 572:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 573:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ....
 574:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 575:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 576:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      */
ARM GAS  /tmp/ccjQyAEv.s 			page 110


 577:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 578:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 579:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        The count variable holds the number of MAC operations performed */
 580:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     count = srcBLen - 1U;
 2933              		.loc 1 580 11
 2934 1810 07F11803 		add	r3, r7, #24
 2935 1814 1B68     		ldr	r3, [r3]
 2936 1816 013B     		subs	r3, r3, #1
 2937 1818 C7F8AC34 		str	r3, [r7, #1196]
 581:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 582:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputA */
 583:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 2938              		.loc 1 583 30
 2939 181c 07F12002 		add	r2, r7, #32
 2940 1820 07F11803 		add	r3, r7, #24
 2941 1824 1268     		ldr	r2, [r2]
 2942 1826 1B68     		ldr	r3, [r3]
 2943 1828 D31A     		subs	r3, r2, r3
 2944 182a 0133     		adds	r3, r3, #1
 2945 182c 5B00     		lsls	r3, r3, #1
 2946              		.loc 1 583 11
 2947 182e D7F8FC24 		ldr	r2, [r7, #1276]
 2948 1832 1344     		add	r3, r3, r2
 2949 1834 C7F8CC34 		str	r3, [r7, #1228]
 584:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     px = pSrc1;
 2950              		.loc 1 584 8
 2951 1838 07F5D873 		add	r3, r7, #432
 2952 183c D7F8CC24 		ldr	r2, [r7, #1228]
 2953 1840 1A60     		str	r2, [r3]
 585:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 586:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Working pointer of inputB */
 587:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 2954              		.loc 1 587 18
 2955 1842 07F11803 		add	r3, r7, #24
 2956 1846 1A68     		ldr	r2, [r3]
 2957 1848 6FF00043 		mvn	r3, #-2147483648
 2958 184c 1344     		add	r3, r3, r2
 2959 184e 5B00     		lsls	r3, r3, #1
 2960              		.loc 1 587 11
 2961 1850 D7F8F824 		ldr	r2, [r7, #1272]
 2962 1854 1344     		add	r3, r3, r2
 2963 1856 C7F8C834 		str	r3, [r7, #1224]
 588:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     pIn2 = pSrc2 - 1U;
 2964              		.loc 1 588 10
 2965 185a D7F8C834 		ldr	r3, [r7, #1224]
 2966 185e 023B     		subs	r3, r3, #2
 2967 1860 C7F8F834 		str	r3, [r7, #1272]
 589:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     py = pIn2;
 2968              		.loc 1 589 8
 2969 1864 07F5D673 		add	r3, r7, #428
 2970 1868 D7F8F824 		ldr	r2, [r7, #1272]
 2971 186c 1A60     		str	r2, [r3]
 590:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 591:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* -------------------
 592:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * Stage3 process
 593:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * ------------------*/
 594:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
ARM GAS  /tmp/ccjQyAEv.s 			page 111


 595:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 596:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
 597:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
 598:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 599:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The first part of the stage starts here */
 600:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     j = count >> 2U;
 2972              		.loc 1 600 7
 2973 186e D7F8AC34 		ldr	r3, [r7, #1196]
 2974 1872 9B08     		lsrs	r3, r3, #2
 2975 1874 C7F8B434 		str	r3, [r7, #1204]
 601:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     while ((j > 0U) && (blockSize3 > 0U))
 2976              		.loc 1 602 11
 2977 1878 6DE1     		b	.L93
 2978              	.L106:
 603:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 604:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 605:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 2979              		.loc 1 605 11
 2980 187a 4FF00002 		mov	r2, #0
 2981 187e 4FF00003 		mov	r3, #0
 2982 1882 07F59E61 		add	r1, r7, #1264
 2983 1886 C1E90023 		strd	r2, [r1]
 606:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 607:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 608:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count >> 2U;
 2984              		.loc 1 608 9
 2985 188a D7F8AC34 		ldr	r3, [r7, #1196]
 2986 188e 9B08     		lsrs	r3, r3, #2
 2987 1890 C7F8B034 		str	r3, [r7, #1200]
 609:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 610:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 611:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 2988              		.loc 1 612 13
 2989 1894 C6E0     		b	.L94
 2990              	.L101:
 2991 1896 07F5EC73 		add	r3, r7, #472
 2992 189a 07F5D872 		add	r2, r7, #432
 2993 189e 1A60     		str	r2, [r3]
 2994              	.LBB236:
 2995              	.LBB237:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 2996              		.loc 3 474 3
 2997 18a0 07F5EC73 		add	r3, r7, #472
 2998 18a4 1B68     		ldr	r3, [r3]
 2999 18a6 1B68     		ldr	r3, [r3]
 3000 18a8 1B68     		ldr	r3, [r3]	@ unaligned
 3001 18aa 1A46     		mov	r2, r3
 3002 18ac 07F5CA73 		add	r3, r7, #404
 3003 18b0 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 3004              		.loc 3 475 9
 3005 18b2 07F5EC73 		add	r3, r7, #472
 3006 18b6 1B68     		ldr	r3, [r3]
 3007 18b8 1B68     		ldr	r3, [r3]
 3008 18ba 1A1D     		adds	r2, r3, #4
ARM GAS  /tmp/ccjQyAEv.s 			page 112


 3009 18bc 07F5EC73 		add	r3, r7, #472
 3010 18c0 1B68     		ldr	r3, [r3]
 3011 18c2 1A60     		str	r2, [r3]
 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 3012              		.loc 3 477 10
 3013 18c4 07F5CA73 		add	r3, r7, #404
 3014 18c8 1B68     		ldr	r3, [r3]
 3015              	.LBE237:
 3016              	.LBE236:
 613:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 614:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied
 615:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 616:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 3017              		.loc 1 616 15
 3018 18ca 1C46     		mov	r4, r3
 3019 18cc 07F5EE73 		add	r3, r7, #476
 3020 18d0 07F5D672 		add	r2, r7, #428
 3021 18d4 1A60     		str	r2, [r3]
 3022              	.LBB238:
 3023              	.LBB239:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 3024              		.loc 3 490 3
 3025 18d6 07F5EE73 		add	r3, r7, #476
 3026 18da 1B68     		ldr	r3, [r3]
 3027 18dc 1B68     		ldr	r3, [r3]
 3028 18de 1B68     		ldr	r3, [r3]	@ unaligned
 3029 18e0 1A46     		mov	r2, r3
 3030 18e2 07F5C873 		add	r3, r7, #400
 3031 18e6 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 3032              		.loc 3 491 9
 3033 18e8 07F5EE73 		add	r3, r7, #476
 3034 18ec 1B68     		ldr	r3, [r3]
 3035 18ee 1B68     		ldr	r3, [r3]
 3036 18f0 1A1F     		subs	r2, r3, #4
 3037 18f2 07F5EE73 		add	r3, r7, #476
 3038 18f6 1B68     		ldr	r3, [r3]
 3039 18f8 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 3040              		.loc 3 493 10
 3041 18fa 07F5C873 		add	r3, r7, #400
 3042 18fe 1B68     		ldr	r3, [r3]
 3043              	.LBE239:
 3044              	.LBE238:
 3045              		.loc 1 616 15
 3046 1900 1846     		mov	r0, r3
 3047 1902 07F59E63 		add	r3, r7, #1264
 3048 1906 D3E90023 		ldrd	r2, [r3]
 3049 190a 07F5F671 		add	r1, r7, #492
 3050 190e 0C60     		str	r4, [r1]
 3051 1910 07F5F471 		add	r1, r7, #488
 3052 1914 0860     		str	r0, [r1]
 3053 1916 C7E97823 		strd	r2, [r7, #480]
 3054              	.LBB240:
 3055              	.LBB241:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3056              		.loc 2 2028 11
ARM GAS  /tmp/ccjQyAEv.s 			page 113


 3057 191a D7E97823 		ldrd	r2, [r7, #480]
 3058 191e C7E96223 		strd	r2, [r7, #392]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3059              		.loc 2 2031 119
 3060 1922 07F5C473 		add	r3, r7, #392
 3061 1926 1A68     		ldr	r2, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3062              		.loc 2 2031 137
 3063 1928 07F5C473 		add	r3, r7, #392
 3064 192c 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3065              		.loc 2 2031 3
 3066 192e 07F5F673 		add	r3, r7, #492
 3067 1932 1968     		ldr	r1, [r3]
 3068 1934 07F5F473 		add	r3, r7, #488
 3069 1938 1868     		ldr	r0, [r3]
 3070 193a 2346     		mov	r3, r4
 3071              		.syntax unified
 3072              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3073 193c C1FBD023 		smlaldx r2, r3, r1, r0
 3074              	@ 0 "" 2
 3075              		.thumb
 3076              		.syntax unified
 3077 1940 07F5C471 		add	r1, r7, #392
 3078 1944 0A60     		str	r2, [r1]
 3079 1946 07F5C472 		add	r2, r7, #392
 3080 194a 5360     		str	r3, [r2, #4]
 3081              		.loc 2 2036 13
 3082 194c D7E96223 		ldrd	r2, [r7, #392]
 3083              	.LBE241:
 3084              	.LBE240:
 3085              		.loc 1 616 13
 3086 1950 07F59E61 		add	r1, r7, #1264
 3087 1954 C1E90023 		strd	r2, [r1]
 3088 1958 07F5F873 		add	r3, r7, #496
 3089 195c 07F5D872 		add	r2, r7, #432
 3090 1960 1A60     		str	r2, [r3]
 3091              	.LBB242:
 3092              	.LBB243:
 474:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 3093              		.loc 3 474 3
 3094 1962 07F5F873 		add	r3, r7, #496
 3095 1966 1B68     		ldr	r3, [r3]
 3096 1968 1B68     		ldr	r3, [r3]
 3097 196a 1B68     		ldr	r3, [r3]	@ unaligned
 3098 196c 1A46     		mov	r2, r3
 3099 196e 07F5C273 		add	r3, r7, #388
 3100 1972 1A60     		str	r2, [r3]
 475:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 3101              		.loc 3 475 9
 3102 1974 07F5F873 		add	r3, r7, #496
 3103 1978 1B68     		ldr	r3, [r3]
 3104 197a 1B68     		ldr	r3, [r3]
 3105 197c 1A1D     		adds	r2, r3, #4
 3106 197e 07F5F873 		add	r3, r7, #496
 3107 1982 1B68     		ldr	r3, [r3]
 3108 1984 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccjQyAEv.s 			page 114


 477:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 3109              		.loc 3 477 10
 3110 1986 07F5C273 		add	r3, r7, #388
 3111 198a 1B68     		ldr	r3, [r3]
 3112              	.LBE243:
 3113              	.LBE242:
 617:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied
 618:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****          * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 619:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALDX(read_q15x2_ia ((q15_t **) &px), read_q15x2_da ((q15_t **) &py), sum);
 3114              		.loc 1 619 15
 3115 198c 1C46     		mov	r4, r3
 3116 198e 07F5FA73 		add	r3, r7, #500
 3117 1992 07F5D672 		add	r2, r7, #428
 3118 1996 1A60     		str	r2, [r3]
 3119              	.LBB244:
 3120              	.LBB245:
 490:./Libraries/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 3121              		.loc 3 490 3
 3122 1998 07F5FA73 		add	r3, r7, #500
 3123 199c 1B68     		ldr	r3, [r3]
 3124 199e 1B68     		ldr	r3, [r3]
 3125 19a0 1B68     		ldr	r3, [r3]	@ unaligned
 3126 19a2 1A46     		mov	r2, r3
 3127 19a4 07F5C073 		add	r3, r7, #384
 3128 19a8 1A60     		str	r2, [r3]
 491:./Libraries/CMSIS/DSP/Include/arm_math.h **** 
 3129              		.loc 3 491 9
 3130 19aa 07F5FA73 		add	r3, r7, #500
 3131 19ae 1B68     		ldr	r3, [r3]
 3132 19b0 1B68     		ldr	r3, [r3]
 3133 19b2 1A1F     		subs	r2, r3, #4
 3134 19b4 07F5FA73 		add	r3, r7, #500
 3135 19b8 1B68     		ldr	r3, [r3]
 3136 19ba 1A60     		str	r2, [r3]
 493:./Libraries/CMSIS/DSP/Include/arm_math.h **** }
 3137              		.loc 3 493 10
 3138 19bc 07F5C073 		add	r3, r7, #384
 3139 19c0 1B68     		ldr	r3, [r3]
 3140              	.LBE245:
 3141              	.LBE244:
 3142              		.loc 1 619 15
 3143 19c2 1846     		mov	r0, r3
 3144 19c4 07F59E63 		add	r3, r7, #1264
 3145 19c8 D3E90023 		ldrd	r2, [r3]
 3146 19cc 07F50271 		add	r1, r7, #520
 3147 19d0 0C60     		str	r4, [r1]
 3148 19d2 07F50171 		add	r1, r7, #516
 3149 19d6 0860     		str	r0, [r1]
 3150 19d8 C7E97E23 		strd	r2, [r7, #504]
 3151              	.LBB246:
 3152              	.LBB247:
2028:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3153              		.loc 2 2028 11
 3154 19dc D7E97E23 		ldrd	r2, [r7, #504]
 3155 19e0 C7E95E23 		strd	r2, [r7, #376]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3156              		.loc 2 2031 119
ARM GAS  /tmp/ccjQyAEv.s 			page 115


 3157 19e4 07F5BC73 		add	r3, r7, #376
 3158 19e8 1A68     		ldr	r2, [r3]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3159              		.loc 2 2031 137
 3160 19ea 07F5BC73 		add	r3, r7, #376
 3161 19ee 5C68     		ldr	r4, [r3, #4]
2031:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3162              		.loc 2 2031 3
 3163 19f0 07F50273 		add	r3, r7, #520
 3164 19f4 1968     		ldr	r1, [r3]
 3165 19f6 07F50173 		add	r3, r7, #516
 3166 19fa 1868     		ldr	r0, [r3]
 3167 19fc 2346     		mov	r3, r4
 3168              		.syntax unified
 3169              	@ 2031 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3170 19fe C1FBD023 		smlaldx r2, r3, r1, r0
 3171              	@ 0 "" 2
 3172              		.thumb
 3173              		.syntax unified
 3174 1a02 07F5BC71 		add	r1, r7, #376
 3175 1a06 0A60     		str	r2, [r1]
 3176 1a08 07F5BC72 		add	r2, r7, #376
 3177 1a0c 5360     		str	r3, [r2, #4]
 3178              		.loc 2 2036 13
 3179 1a0e D7E95E23 		ldrd	r2, [r7, #376]
 3180              	.LBE247:
 3181              	.LBE246:
 3182              		.loc 1 619 13
 3183 1a12 07F59E61 		add	r1, r7, #1264
 3184 1a16 C1E90023 		strd	r2, [r1]
 620:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 621:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 622:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 3185              		.loc 1 622 10
 3186 1a1a D7F8B034 		ldr	r3, [r7, #1200]
 3187 1a1e 013B     		subs	r3, r3, #1
 3188 1a20 C7F8B034 		str	r3, [r7, #1200]
 3189              	.L94:
 612:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 3190              		.loc 1 612 13
 3191 1a24 D7F8B034 		ldr	r3, [r7, #1200]
 3192 1a28 002B     		cmp	r3, #0
 3193 1a2a 7FF434AF 		bne	.L101
 623:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 624:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 625:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD
 626:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        * So, py is incremented by 1 */
 627:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = py + 1U;
 3194              		.loc 1 627 15
 3195 1a2e 07F5D673 		add	r3, r7, #428
 3196 1a32 1B68     		ldr	r3, [r3]
 3197 1a34 9A1C     		adds	r2, r3, #2
 3198              		.loc 1 627 10
 3199 1a36 07F5D673 		add	r3, r7, #428
 3200 1a3a 1A60     		str	r2, [r3]
 628:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 629:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.
ARM GAS  /tmp/ccjQyAEv.s 			page 116


 630:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****        ** No loop unrolling is used. */
 631:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count % 0x4U;
 3201              		.loc 1 631 9
 3202 1a3c D7F8AC34 		ldr	r3, [r7, #1196]
 3203 1a40 03F00303 		and	r3, r3, #3
 3204 1a44 C7F8B034 		str	r3, [r7, #1200]
 632:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 3205              		.loc 1 633 13
 3206 1a48 43E0     		b	.L102
 3207              	.L104:
 634:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 635:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 636:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 3208              		.loc 1 636 27
 3209 1a4a 07F5D873 		add	r3, r7, #432
 3210 1a4e 1B68     		ldr	r3, [r3]
 3211 1a50 991C     		adds	r1, r3, #2
 3212 1a52 07F5D872 		add	r2, r7, #432
 3213 1a56 1160     		str	r1, [r2]
 3214              		.loc 1 636 24
 3215 1a58 B3F90030 		ldrsh	r3, [r3]
 3216              		.loc 1 636 15
 3217 1a5c 1C46     		mov	r4, r3
 3218              		.loc 1 636 34
 3219 1a5e 07F5D673 		add	r3, r7, #428
 3220 1a62 1B68     		ldr	r3, [r3]
 3221 1a64 991E     		subs	r1, r3, #2
 3222 1a66 07F5D672 		add	r2, r7, #428
 3223 1a6a 1160     		str	r1, [r2]
 3224              		.loc 1 636 31
 3225 1a6c B3F90030 		ldrsh	r3, [r3]
 3226              		.loc 1 636 15
 3227 1a70 1846     		mov	r0, r3
 3228 1a72 07F59E63 		add	r3, r7, #1264
 3229 1a76 D3E90023 		ldrd	r2, [r3]
 3230 1a7a 07F5EA71 		add	r1, r7, #468
 3231 1a7e 0C60     		str	r4, [r1]
 3232 1a80 07F5E871 		add	r1, r7, #464
 3233 1a84 0860     		str	r0, [r1]
 3234 1a86 C7E97223 		strd	r2, [r7, #456]
 3235              	.LBB248:
 3236              	.LBB249:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3237              		.loc 2 2011 11
 3238 1a8a D7E97223 		ldrd	r2, [r7, #456]
 3239 1a8e C7E96623 		strd	r2, [r7, #408]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3240              		.loc 2 2014 118
 3241 1a92 07F5CC73 		add	r3, r7, #408
 3242 1a96 1A68     		ldr	r2, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3243              		.loc 2 2014 136
 3244 1a98 07F5CC73 		add	r3, r7, #408
 3245 1a9c 5C68     		ldr	r4, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3246              		.loc 2 2014 3
ARM GAS  /tmp/ccjQyAEv.s 			page 117


 3247 1a9e 07F5EA73 		add	r3, r7, #468
 3248 1aa2 1968     		ldr	r1, [r3]
 3249 1aa4 07F5E873 		add	r3, r7, #464
 3250 1aa8 1868     		ldr	r0, [r3]
 3251 1aaa 2346     		mov	r3, r4
 3252              		.syntax unified
 3253              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3254 1aac C1FBC023 		smlald r2, r3, r1, r0
 3255              	@ 0 "" 2
 3256              		.thumb
 3257              		.syntax unified
 3258 1ab0 07F5CC71 		add	r1, r7, #408
 3259 1ab4 0A60     		str	r2, [r1]
 3260 1ab6 07F5CC72 		add	r2, r7, #408
 3261 1aba 5360     		str	r3, [r2, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3262              		.loc 2 2019 13
 3263 1abc D7E96623 		ldrd	r2, [r7, #408]
 3264              	.LBE249:
 3265              	.LBE248:
 3266              		.loc 1 636 13
 3267 1ac0 07F59E61 		add	r1, r7, #1264
 3268 1ac4 C1E90023 		strd	r2, [r1]
 637:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 638:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 639:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
 3269              		.loc 1 639 10
 3270 1ac8 D7F8B034 		ldr	r3, [r7, #1200]
 3271 1acc 013B     		subs	r3, r3, #1
 3272 1ace C7F8B034 		str	r3, [r7, #1200]
 3273              	.L102:
 633:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 3274              		.loc 1 633 13
 3275 1ad2 D7F8B034 		ldr	r3, [r7, #1200]
 3276 1ad6 002B     		cmp	r3, #0
 3277 1ad8 B7D1     		bne	.L104
 3278              	.LBB250:
 640:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 641:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 642:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 643:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 3279              		.loc 1 643 26
 3280 1ada 07F59E63 		add	r3, r7, #1264
 3281 1ade D3E90001 		ldrd	r0, [r3]
 3282 1ae2 4FF00002 		mov	r2, #0
 3283 1ae6 4FF00003 		mov	r3, #0
 3284 1aea C20B     		lsrs	r2, r0, #15
 3285 1aec 42EA4142 		orr	r2, r2, r1, lsl #17
 3286 1af0 CB13     		asrs	r3, r1, #15
 3287 1af2 1346     		mov	r3, r2
 3288 1af4 C7F85434 		str	r3, [r7, #1108]
 3289 1af8 D7F85434 		ldr	r3, [r7, #1108]
 3290              		.syntax unified
 3291              	@ 643 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 3292 1afc 03F30F03 		ssat r3, #16, r3
 3293              	@ 0 "" 2
 3294              		.thumb
ARM GAS  /tmp/ccjQyAEv.s 			page 118


 3295              		.syntax unified
 3296 1b00 C7F85034 		str	r3, [r7, #1104]
 3297 1b04 D7F85004 		ldr	r0, [r7, #1104]
 3298              	.LBE250:
 3299              		.loc 1 643 12
 3300 1b08 07F5DA73 		add	r3, r7, #436
 3301 1b0c 1B68     		ldr	r3, [r3]
 3302 1b0e 991C     		adds	r1, r3, #2
 3303 1b10 07F5DA72 		add	r2, r7, #436
 3304 1b14 1160     		str	r1, [r2]
 3305              		.loc 1 643 17
 3306 1b16 02B2     		sxth	r2, r0
 3307              		.loc 1 643 15
 3308 1b18 1A80     		strh	r2, [r3]	@ movhi
 644:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 645:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 646:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       px = ++pSrc1;
 3309              		.loc 1 646 10
 3310 1b1a D7F8CC34 		ldr	r3, [r7, #1228]
 3311 1b1e 0233     		adds	r3, r3, #2
 3312 1b20 C7F8CC34 		str	r3, [r7, #1228]
 3313 1b24 07F5D873 		add	r3, r7, #432
 3314 1b28 D7F8CC24 		ldr	r2, [r7, #1228]
 3315 1b2c 1A60     		str	r2, [r3]
 647:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = pIn2;
 3316              		.loc 1 647 10
 3317 1b2e 07F5D673 		add	r3, r7, #428
 3318 1b32 D7F8F824 		ldr	r2, [r7, #1272]
 3319 1b36 1A60     		str	r2, [r3]
 648:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 649:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement MAC count */
 650:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       count--;
 3320              		.loc 1 650 12
 3321 1b38 D7F8AC34 		ldr	r3, [r7, #1196]
 3322 1b3c 013B     		subs	r3, r3, #1
 3323 1b3e C7F8AC34 		str	r3, [r7, #1196]
 651:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 652:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement loop counter */
 653:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize3--;
 3324              		.loc 1 653 17
 3325 1b42 D7F8B834 		ldr	r3, [r7, #1208]
 3326 1b46 013B     		subs	r3, r3, #1
 3327 1b48 C7F8B834 		str	r3, [r7, #1208]
 654:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 655:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       j--;
 3328              		.loc 1 655 8
 3329 1b4c D7F8B434 		ldr	r3, [r7, #1204]
 3330 1b50 013B     		subs	r3, r3, #1
 3331 1b52 C7F8B434 		str	r3, [r7, #1204]
 3332              	.L93:
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 3333              		.loc 1 602 11
 3334 1b56 D7F8B434 		ldr	r3, [r7, #1204]
 3335 1b5a 002B     		cmp	r3, #0
 3336 1b5c 04D0     		beq	.L105
 602:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 3337              		.loc 1 602 21 discriminator 1
ARM GAS  /tmp/ccjQyAEv.s 			page 119


 3338 1b5e D7F8B834 		ldr	r3, [r7, #1208]
 3339 1b62 002B     		cmp	r3, #0
 3340 1b64 7FF489AE 		bne	.L106
 3341              	.L105:
 656:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 657:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 658:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* The second part of the stage starts here */
 659:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* SIMD is not used for the next MAC operations,
 660:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****      * so pointer py is updated to read only one sample at a time */
 661:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     py = py + 1U;
 3342              		.loc 1 661 13
 3343 1b68 07F5D673 		add	r3, r7, #428
 3344 1b6c 1B68     		ldr	r3, [r3]
 3345 1b6e 9A1C     		adds	r2, r3, #2
 3346              		.loc 1 661 8
 3347 1b70 07F5D673 		add	r3, r7, #428
 3348 1b74 1A60     		str	r2, [r3]
 662:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     while (blockSize3 > 0U)
 3349              		.loc 1 663 11
 3350 1b76 8DE0     		b	.L107
 3351              	.L111:
 664:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 665:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Accumulator is made zero for every iteration */
 666:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 3352              		.loc 1 666 11
 3353 1b78 4FF00002 		mov	r2, #0
 3354 1b7c 4FF00003 		mov	r3, #0
 3355 1b80 07F59E61 		add	r1, r7, #1264
 3356 1b84 C1E90023 		strd	r2, [r1]
 667:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 668:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 669:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       k = count;
 3357              		.loc 1 669 9
 3358 1b88 D7F8AC34 		ldr	r3, [r7, #1196]
 3359 1b8c C7F8B034 		str	r3, [r7, #1200]
 670:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       while (k > 0U)
 3360              		.loc 1 671 13
 3361 1b90 43E0     		b	.L108
 3362              	.L110:
 672:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 673:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Perform the multiply-accumulates */
 674:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 675:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         sum = __SMLALD(*px++, *py--, sum);
 3363              		.loc 1 675 27
 3364 1b92 07F5D873 		add	r3, r7, #432
 3365 1b96 1B68     		ldr	r3, [r3]
 3366 1b98 991C     		adds	r1, r3, #2
 3367 1b9a 07F5D872 		add	r2, r7, #432
 3368 1b9e 1160     		str	r1, [r2]
 3369              		.loc 1 675 24
 3370 1ba0 B3F90030 		ldrsh	r3, [r3]
 3371              		.loc 1 675 15
 3372 1ba4 1C46     		mov	r4, r3
 3373              		.loc 1 675 34
 3374 1ba6 07F5D673 		add	r3, r7, #428
ARM GAS  /tmp/ccjQyAEv.s 			page 120


 3375 1baa 1B68     		ldr	r3, [r3]
 3376 1bac 991E     		subs	r1, r3, #2
 3377 1bae 07F5D672 		add	r2, r7, #428
 3378 1bb2 1160     		str	r1, [r2]
 3379              		.loc 1 675 31
 3380 1bb4 B3F90030 		ldrsh	r3, [r3]
 3381              		.loc 1 675 15
 3382 1bb8 1846     		mov	r0, r3
 3383 1bba 07F59E63 		add	r3, r7, #1264
 3384 1bbe D3E90023 		ldrd	r2, [r3]
 3385 1bc2 07F5E271 		add	r1, r7, #452
 3386 1bc6 0C60     		str	r4, [r1]
 3387 1bc8 07F5E071 		add	r1, r7, #448
 3388 1bcc 0860     		str	r0, [r1]
 3389 1bce C7E96E23 		strd	r2, [r7, #440]
 3390              	.LBB251:
 3391              	.LBB252:
2011:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** 
 3392              		.loc 2 2011 11
 3393 1bd2 D7E96E23 		ldrd	r2, [r7, #440]
 3394 1bd6 C7E96823 		strd	r2, [r7, #416]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3395              		.loc 2 2014 118
 3396 1bda 07F5D073 		add	r3, r7, #416
 3397 1bde 1A68     		ldr	r2, [r3]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3398              		.loc 2 2014 136
 3399 1be0 07F5D073 		add	r3, r7, #416
 3400 1be4 5C68     		ldr	r4, [r3, #4]
2014:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** #else               /* Big endian */
 3401              		.loc 2 2014 3
 3402 1be6 07F5E273 		add	r3, r7, #452
 3403 1bea 1968     		ldr	r1, [r3]
 3404 1bec 07F5E073 		add	r3, r7, #448
 3405 1bf0 1868     		ldr	r0, [r3]
 3406 1bf2 2346     		mov	r3, r4
 3407              		.syntax unified
 3408              	@ 2014 "./Libraries/CMSIS/Core/Include/cmsis_gcc.h" 1
 3409 1bf4 C1FBC023 		smlald r2, r3, r1, r0
 3410              	@ 0 "" 2
 3411              		.thumb
 3412              		.syntax unified
 3413 1bf8 07F5D071 		add	r1, r7, #416
 3414 1bfc 0A60     		str	r2, [r1]
 3415 1bfe 07F5D072 		add	r2, r7, #416
 3416 1c02 5360     		str	r3, [r2, #4]
2019:./Libraries/CMSIS/Core/Include/cmsis_gcc.h **** }
 3417              		.loc 2 2019 13
 3418 1c04 D7E96823 		ldrd	r2, [r7, #416]
 3419              	.LBE252:
 3420              	.LBE251:
 3421              		.loc 1 675 13
 3422 1c08 07F59E61 		add	r1, r7, #1264
 3423 1c0c C1E90023 		strd	r2, [r1]
 676:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 677:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Decrement loop counter */
 678:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         k--;
ARM GAS  /tmp/ccjQyAEv.s 			page 121


 3424              		.loc 1 678 10
 3425 1c10 D7F8B034 		ldr	r3, [r7, #1200]
 3426 1c14 013B     		subs	r3, r3, #1
 3427 1c16 C7F8B034 		str	r3, [r7, #1200]
 3428              	.L108:
 671:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 3429              		.loc 1 671 13
 3430 1c1a D7F8B034 		ldr	r3, [r7, #1200]
 3431 1c1e 002B     		cmp	r3, #0
 3432 1c20 B7D1     		bne	.L110
 3433              	.LBB253:
 679:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 680:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 681:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 682:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       *pOut++ = (q15_t) (__SSAT((sum >> 15), 16));
 3434              		.loc 1 682 26
 3435 1c22 07F59E63 		add	r3, r7, #1264
 3436 1c26 D3E90001 		ldrd	r0, [r3]
 3437 1c2a 4FF00002 		mov	r2, #0
 3438 1c2e 4FF00003 		mov	r3, #0
 3439 1c32 C20B     		lsrs	r2, r0, #15
 3440 1c34 42EA4142 		orr	r2, r2, r1, lsl #17
 3441 1c38 CB13     		asrs	r3, r1, #15
 3442 1c3a 1346     		mov	r3, r2
 3443 1c3c C7F84C34 		str	r3, [r7, #1100]
 3444 1c40 D7F84C34 		ldr	r3, [r7, #1100]
 3445              		.syntax unified
 3446              	@ 682 "./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c" 1
 3447 1c44 03F30F03 		ssat r3, #16, r3
 3448              	@ 0 "" 2
 3449              		.thumb
 3450              		.syntax unified
 3451 1c48 C7F84834 		str	r3, [r7, #1096]
 3452 1c4c D7F84804 		ldr	r0, [r7, #1096]
 3453              	.LBE253:
 3454              		.loc 1 682 12
 3455 1c50 07F5DA73 		add	r3, r7, #436
 3456 1c54 1B68     		ldr	r3, [r3]
 3457 1c56 991C     		adds	r1, r3, #2
 3458 1c58 07F5DA72 		add	r2, r7, #436
 3459 1c5c 1160     		str	r1, [r2]
 3460              		.loc 1 682 17
 3461 1c5e 02B2     		sxth	r2, r0
 3462              		.loc 1 682 15
 3463 1c60 1A80     		strh	r2, [r3]	@ movhi
 683:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 684:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 685:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       px = ++pSrc1;
 3464              		.loc 1 685 10
 3465 1c62 D7F8CC34 		ldr	r3, [r7, #1228]
 3466 1c66 0233     		adds	r3, r3, #2
 3467 1c68 C7F8CC34 		str	r3, [r7, #1228]
 3468 1c6c 07F5D873 		add	r3, r7, #432
 3469 1c70 D7F8CC24 		ldr	r2, [r7, #1228]
 3470 1c74 1A60     		str	r2, [r3]
 686:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       py = pSrc2;
 3471              		.loc 1 686 10
ARM GAS  /tmp/ccjQyAEv.s 			page 122


 3472 1c76 07F5D673 		add	r3, r7, #428
 3473 1c7a D7F8C824 		ldr	r2, [r7, #1224]
 3474 1c7e 1A60     		str	r2, [r3]
 687:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 688:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement MAC count */
 689:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       count--;
 3475              		.loc 1 689 12
 3476 1c80 D7F8AC34 		ldr	r3, [r7, #1196]
 3477 1c84 013B     		subs	r3, r3, #1
 3478 1c86 C7F8AC34 		str	r3, [r7, #1196]
 690:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 691:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Decrement the loop counter */
 692:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       blockSize3--;
 3479              		.loc 1 692 17
 3480 1c8a D7F8B834 		ldr	r3, [r7, #1208]
 3481 1c8e 013B     		subs	r3, r3, #1
 3482 1c90 C7F8B834 		str	r3, [r7, #1208]
 3483              	.L107:
 663:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
 3484              		.loc 1 663 11
 3485 1c94 D7F8B834 		ldr	r3, [r7, #1208]
 3486 1c98 002B     		cmp	r3, #0
 3487 1c9a 7FF46DAF 		bne	.L111
 693:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 694:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 695:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 696:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_SUCCESS;
 3488              		.loc 1 696 12
 3489 1c9e 0023     		movs	r3, #0
 3490 1ca0 87F8A734 		strb	r3, [r7, #1191]
 3491              	.L3:
 697:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   }
 698:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 699:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   /* Return to application */
 700:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   return (status);
 3492              		.loc 1 700 10
 3493 1ca4 97F9A734 		ldrsb	r3, [r7, #1191]
 701:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 702:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #else /* #if defined (ARM_MATH_DSP) */
 703:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 704:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *pIn1 = pSrcA;                           /* InputA pointer */
 705:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   const q15_t *pIn2 = pSrcB;                           /* InputB pointer */
 706:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         q63_t sum;                                     /* Accumulator */
 707:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         uint32_t i, j;                                 /* Loop counters */
 708:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         arm_status status;                             /* Status of Partial convolution */
 709:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 710:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   /* Check for range of output samples to be calculated */
 711:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
 712:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   {
 713:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 714:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 715:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   }
 716:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   else
 717:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   {
 718:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Loop to calculate convolution for output length number of values */
 719:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     for (i = firstIndex; i <= (firstIndex + numPoints - 1); i++)
 720:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     {
ARM GAS  /tmp/ccjQyAEv.s 			page 123


 721:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Initialize sum with zero to carry on MAC operations */
 722:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       sum = 0;
 723:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 724:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Loop to perform MAC operations according to convolution equation */
 725:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       for (j = 0U; j <= i; j++)
 726:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       {
 727:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         /* Check the array limitations */
 728:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         if (((i - j) < srcBLen) && (j < srcALen))
 729:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         {
 730:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           /* z[i] += x[i-j] * y[j] */
 731:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****           sum += ((q31_t) pIn1[j] * pIn2[i - j]);
 732:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****         }
 733:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       }
 734:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 735:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       /* Store the output in the destination buffer */
 736:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****       pDst[i] = (q15_t) __SSAT((sum >> 15U), 16U);
 737:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     }
 738:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 739:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 740:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****     status = ARM_MATH_SUCCESS;
 741:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   }
 742:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 743:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   /* Return to application */
 744:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c ****   return (status);
 745:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 746:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 747:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** 
 748:./Libraries/CMSIS/DSP/Source/FilteringFunctions/arm_conv_partial_q15.c **** }
 3494              		.loc 1 748 1
 3495 1ca8 1846     		mov	r0, r3
 3496 1caa 07F5A067 		add	r7, r7, #1280
 3497              	.LCFI3:
 3498              		.cfi_def_cfa_offset 32
 3499 1cae BD46     		mov	sp, r7
 3500              	.LCFI4:
 3501              		.cfi_def_cfa_register 13
 3502              		@ sp needed
 3503 1cb0 BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp}
 3504              	.LCFI5:
 3505              		.cfi_restore 11
 3506              		.cfi_restore 10
 3507              		.cfi_restore 9
 3508              		.cfi_restore 8
 3509              		.cfi_restore 7
 3510              		.cfi_restore 6
 3511              		.cfi_restore 5
 3512              		.cfi_restore 4
 3513              		.cfi_def_cfa_offset 0
 3514 1cb4 7047     		bx	lr
 3515              		.cfi_endproc
 3516              	.LFE145:
 3518              		.text
 3519              	.Letext0:
 3520              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3521              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3522              		.file 6 "/usr/include/newlib/sys/_types.h"
 3523              		.file 7 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccjQyAEv.s 			page 124


 3524              		.file 8 "/usr/include/newlib/sys/lock.h"
 3525              		.file 9 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccjQyAEv.s 			page 125


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_conv_partial_q15.c
     /tmp/ccjQyAEv.s:17     .text.arm_conv_partial_q15:0000000000000000 $t
     /tmp/ccjQyAEv.s:25     .text.arm_conv_partial_q15:0000000000000000 arm_conv_partial_q15

NO UNDEFINED SYMBOLS
