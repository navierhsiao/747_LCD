ARM GAS  /tmp/ccySW7Uk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_cmplx_mag_squared_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_cmplx_mag_squared_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_cmplx_mag_squared_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_cmplx_mag_squared_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c"
   1:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Title:        arm_cmplx_mag_squared_f32.c
   4:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Description:  Floating-point complex magnitude squared
   5:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
ARM GAS  /tmp/ccySW7Uk.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @ingroup groupCmplxMath
  33:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @defgroup cmplx_mag_squared Complex Magnitude Squared
  37:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   Computes the magnitude squared of the elements of a complex data vector.
  39:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  40:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The <code>pSrc</code> points to the source data and
  41:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <code>pDst</code> points to the where the result should be written.
  42:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  43:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   in the input array and the data is stored in an interleaved fashion
  44:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   (real, imag, real, imag, ...).
  45:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The input array has a total of <code>2*numSamples</code> values;
  46:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   the output array has a total of <code>numSamples</code> values.
  47:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  48:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The underlying algorithm is used:
  49:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  50:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <pre>
  51:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   for (n = 0; n < numSamples; n++) {
  52:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       pDst[n] = pSrc[(2*n)+0]^2 + pSrc[(2*n)+1]^2;
  53:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
  54:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   </pre>
  55:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  56:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  57:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  58:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  59:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  60:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @addtogroup cmplx_mag_squared
  61:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @{
  62:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  63:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  64:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  65:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @brief         Floating-point complex magnitude squared.
  66:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[in]     pSrc        points to input vector
  67:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[out]    pDst        points to output vector
  68:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[in]     numSamples  number of samples in each vector
  69:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @return        none
  70:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  71:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  72:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** void arm_cmplx_mag_squared_f32(
  73:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   const float32_t * pSrc,
  74:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         float32_t * pDst,
  75:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         uint32_t numSamples)
  76:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** {
  28              		.loc 1 76 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccySW7Uk.s 			page 3


  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  77:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  78:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         float32_t real, imag;                          /* Temporary input variables */
  79:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  80:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined(ARM_MATH_NEON)
  81:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4x2_t vecA;
  82:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vRealA;
  83:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vImagA;
  84:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vMagSqA;
  85:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  86:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4x2_t vecB;
  87:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vRealB;
  88:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vImagB;
  89:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vMagSqB;
  90:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  91:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute 8 outputs at a time */
  92:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples >> 3;
  93:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  94:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
  95:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
  96:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* out = sqrt((real * real) + (imag * imag)) */
  97:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  98:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vecA = vld2q_f32(pSrc);
  99:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pSrc += 8;
 100:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 101:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vRealA = vmulq_f32(vecA.val[0], vecA.val[0]);
 102:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vImagA = vmulq_f32(vecA.val[1], vecA.val[1]);
 103:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vMagSqA = vaddq_f32(vRealA, vImagA);
 104:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 105:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vecB = vld2q_f32(pSrc);
 106:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pSrc += 8;
 107:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 108:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vRealB = vmulq_f32(vecB.val[0], vecB.val[0]);
 109:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vImagB = vmulq_f32(vecB.val[1], vecB.val[1]);
 110:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vMagSqB = vaddq_f32(vRealB, vImagB);
 111:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 112:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Store the result in the destination buffer. */
 113:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vst1q_f32(pDst, vMagSqA);
 114:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst += 4;
 115:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 116:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vst1q_f32(pDst, vMagSqB);
 117:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst += 4;
 118:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 119:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement the loop counter */
 120:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
 121:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 122:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 123:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples & 7;
 124:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 125:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 126:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 127:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
ARM GAS  /tmp/ccySW7Uk.s 			page 4


 128:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 129:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples >> 2U;
 130:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 131:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
 132:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
 133:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 134:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 135:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 136:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 137:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 138:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 139:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 140:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 141:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 142:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 143:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 144:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 145:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 146:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 147:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 148:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 149:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 150:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 151:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement loop counter */
 152:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
 153:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 154:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 155:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 156:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples % 0x4U;
 157:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 158:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 159:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 160:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Initialize blkCnt with number of samples */
 161:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples;
  46              		.loc 1 161 10
  47 000c 7B68     		ldr	r3, [r7, #4]
  48 000e FB61     		str	r3, [r7, #28]
 162:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 163:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 164:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 165:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 166:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
  49              		.loc 1 166 9
  50 0010 1BE0     		b	.L2
  51              	.L3:
 167:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
 168:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 169:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 170:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
  52              		.loc 1 170 17
  53 0012 FB68     		ldr	r3, [r7, #12]
  54 0014 1A1D     		adds	r2, r3, #4
  55 0016 FA60     		str	r2, [r7, #12]
  56              		.loc 1 170 10
  57 0018 1B68     		ldr	r3, [r3]	@ float
  58 001a BB61     		str	r3, [r7, #24]	@ float
 171:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
ARM GAS  /tmp/ccySW7Uk.s 			page 5


  59              		.loc 1 171 17
  60 001c FB68     		ldr	r3, [r7, #12]
  61 001e 1A1D     		adds	r2, r3, #4
  62 0020 FA60     		str	r2, [r7, #12]
  63              		.loc 1 171 10
  64 0022 1B68     		ldr	r3, [r3]	@ float
  65 0024 7B61     		str	r3, [r7, #20]	@ float
 172:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 173:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store result in destination buffer. */
 174:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
  66              		.loc 1 174 21
  67 0026 D7ED067A 		vldr.32	s15, [r7, #24]
  68 002a 27EEA77A 		vmul.f32	s14, s15, s15
  69              		.loc 1 174 37
  70 002e D7ED057A 		vldr.32	s15, [r7, #20]
  71 0032 67EEA77A 		vmul.f32	s15, s15, s15
  72              		.loc 1 174 10
  73 0036 BB68     		ldr	r3, [r7, #8]
  74 0038 1A1D     		adds	r2, r3, #4
  75 003a BA60     		str	r2, [r7, #8]
  76              		.loc 1 174 29
  77 003c 77EE277A 		vadd.f32	s15, s14, s15
  78              		.loc 1 174 13
  79 0040 C3ED007A 		vstr.32	s15, [r3]
 175:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 176:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement loop counter */
 177:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
  80              		.loc 1 177 11
  81 0044 FB69     		ldr	r3, [r7, #28]
  82 0046 013B     		subs	r3, r3, #1
  83 0048 FB61     		str	r3, [r7, #28]
  84              	.L2:
 166:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
  85              		.loc 1 166 9
  86 004a FB69     		ldr	r3, [r7, #28]
  87 004c 002B     		cmp	r3, #0
  88 004e E0D1     		bne	.L3
 178:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 179:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 180:./Libraries/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** }
  89              		.loc 1 180 1
  90 0050 00BF     		nop
  91 0052 00BF     		nop
  92 0054 2437     		adds	r7, r7, #36
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 4
  95 0056 BD46     		mov	sp, r7
  96              	.LCFI4:
  97              		.cfi_def_cfa_register 13
  98              		@ sp needed
  99 0058 5DF8047B 		ldr	r7, [sp], #4
 100              	.LCFI5:
 101              		.cfi_restore 7
 102              		.cfi_def_cfa_offset 0
 103 005c 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE145:
ARM GAS  /tmp/ccySW7Uk.s 			page 6


 107              		.text
 108              	.Letext0:
 109              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 110              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 111              		.file 4 "/usr/include/newlib/sys/_types.h"
 112              		.file 5 "/usr/include/newlib/sys/reent.h"
 113              		.file 6 "/usr/include/newlib/sys/lock.h"
 114              		.file 7 "/usr/include/newlib/math.h"
 115              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/ccySW7Uk.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cmplx_mag_squared_f32.c
     /tmp/ccySW7Uk.s:17     .text.arm_cmplx_mag_squared_f32:0000000000000000 $t
     /tmp/ccySW7Uk.s:25     .text.arm_cmplx_mag_squared_f32:0000000000000000 arm_cmplx_mag_squared_f32

NO UNDEFINED SYMBOLS
