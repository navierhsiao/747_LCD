ARM GAS  /tmp/cceVZHeK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"arm_mat_scale_f32.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.arm_mat_scale_f32,"ax",%progbits
  17              		.align	1
  18              		.global	arm_mat_scale_f32
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	arm_mat_scale_f32:
  26              	.LFB145:
  27              		.file 1 "./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c"
   1:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /* ----------------------------------------------------------------------
   2:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Project:      CMSIS DSP Library
   3:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Title:        arm_mat_scale_f32.c
   4:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Description:  Multiplies a floating-point matrix by a scalar
   5:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
   6:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * $Date:        18. March 2019
   7:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * $Revision:    V1.6.0
   8:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
   9:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Target Processor: Cortex-M cores
  10:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * -------------------------------------------------------------------- */
  11:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /*
  12:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
  14:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
  16:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * not use this file except in compliance with the License.
  18:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * You may obtain a copy of the License at
  19:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
  20:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  *
  22:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * See the License for the specific language governing permissions and
  26:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  * limitations under the License.
  27:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  */
  28:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  29:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #include "arm_math.h"
  30:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  31:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /**
ARM GAS  /tmp/cceVZHeK.s 			page 2


  32:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @ingroup groupMatrix
  33:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  */
  34:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  35:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /**
  36:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @defgroup MatrixScale Matrix Scale
  37:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  38:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   Multiplies a matrix by a scalar.  This is accomplished by multiplying each element in the
  39:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   matrix by the scalar.  For example:
  40:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   \image html MatrixScale.gif "Matrix Scaling of a 3 x 3 matrix"
  41:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  42:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   The function checks to make sure that the input and output matrices are of the same size.
  43:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  44:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   In the fixed-point Q15 and Q31 functions, <code>scale</code> is represented by
  45:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   a fractional multiplication <code>scaleFract</code> and an arithmetic shift <code>shift</code>.
  46:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   The shift allows the gain of the scaling operation to exceed 1.0.
  47:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   The overall scale factor applied to the fixed-point data is
  48:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   <pre>
  49:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       scale = scaleFract * 2^shift.
  50:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   </pre>
  51:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  */
  52:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  53:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /**
  54:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @addtogroup MatrixScale
  55:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @{
  56:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  */
  57:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  58:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** /**
  59:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @brief         Floating-point matrix scaling.
  60:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @param[in]     pSrc       points to input matrix
  61:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @param[in]     scale      scale factor to be applied
  62:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @param[out]    pDst       points to output matrix structure
  63:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   @return        execution status
  64:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  65:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  66:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****  */
  67:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #if defined(ARM_MATH_NEON_EXPERIMENTAL)
  68:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** arm_status arm_mat_scale_f32(
  69:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   const arm_matrix_instance_f32 * pSrc,
  70:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t scale,
  71:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   arm_matrix_instance_f32 * pDst)
  72:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** {
  73:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  74:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  75:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   uint32_t numSamples;                           /* total number of elements in the matrix */
  76:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  77:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   arm_status status;                             /* status of matrix scaling     */
  78:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  79:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  80:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t in1, in2, in3, in4;                  /* temporary variables */
  81:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t out1, out2, out3, out4;              /* temporary variables */
  82:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  83:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  84:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
  85:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   /* Check for matrix mismatch condition */
  86:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   if ((pSrc->numRows != pDst->numRows) || (pSrc->numCols != pDst->numCols))
  87:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   {
  88:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
ARM GAS  /tmp/cceVZHeK.s 			page 3


  89:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
  90:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   }
  91:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   else
  92:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  93:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   {
  94:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     float32x4_t vec1;
  95:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     float32x4_t res;
  96:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
  97:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Total number of samples in the input matrix */
  98:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     numSamples = (uint32_t) pSrc->numRows * pSrc->numCols;
  99:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 100:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     blkCnt = numSamples >> 2;
 101:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 102:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Compute 4 outputs at a time.
 103:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 104:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     while (blkCnt > 0U)
 105:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     {
 106:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* C(m,n) = A(m,n) * scale */
 107:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Scaling and results are stored in the destination buffer. */
 108:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       vec1 = vld1q_f32(pIn);
 109:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       res = vmulq_f32(vec1, vdupq_n_f32(scale));
 110:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       vst1q_f32(pOut, res);
 111:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 112:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* update pointers to process next sampels */
 113:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       pIn += 4U;
 114:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       pOut += 4U;
 115:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 116:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Decrement the numSamples loop counter */
 117:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       blkCnt--;
 118:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     }
 119:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 120:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 121:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****      ** No loop unrolling is used. */
 122:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     blkCnt = numSamples % 0x4U;
 123:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 124:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     while (blkCnt > 0U)
 125:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     {
 126:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* C(m,n) = A(m,n) * scale */
 127:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* The results are stored in the destination buffer. */
 128:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
 129:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 130:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Decrement the loop counter */
 131:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       blkCnt--;
 132:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     }
 133:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 134:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 135:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     status = ARM_MATH_SUCCESS;
 136:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   }
 137:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 138:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   /* Return to application */
 139:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   return (status);
 140:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** }
 141:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #else
 142:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** arm_status arm_mat_scale_f32(
 143:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   const arm_matrix_instance_f32 * pSrc,
 144:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****         float32_t                 scale,
 145:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****         arm_matrix_instance_f32 * pDst)
ARM GAS  /tmp/cceVZHeK.s 			page 4


 146:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** {
  28              		.loc 1 146 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 87ED020A 		vstr.32	s0, [r7, #8]
  45 000c 7960     		str	r1, [r7, #4]
 147:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t *pIn = pSrc->pData;                  /* Input data matrix pointer */
  46              		.loc 1 147 14
  47 000e FB68     		ldr	r3, [r7, #12]
  48 0010 5B68     		ldr	r3, [r3, #4]
  49 0012 7B62     		str	r3, [r7, #36]
 148:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   float32_t *pOut = pDst->pData;                 /* Output data matrix pointer */
  50              		.loc 1 148 14
  51 0014 7B68     		ldr	r3, [r7, #4]
  52 0016 5B68     		ldr	r3, [r3, #4]
  53 0018 3B62     		str	r3, [r7, #32]
 149:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   uint32_t numSamples;                           /* Total number of elements in the matrix */
 150:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   uint32_t blkCnt;                               /* Loop counters */
 151:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   arm_status status;                             /* Status of matrix scaling */
 152:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 153:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 154:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 155:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   /* Check for matrix mismatch condition */
 156:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   if ((pSrc->numRows != pDst->numRows) ||
 157:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       (pSrc->numCols != pDst->numCols)   )
 158:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   {
 159:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 160:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 161:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   }
 162:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   else
 163:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 164:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 165:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 166:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   {
 167:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Total number of samples in input matrix */
 168:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     numSamples = (uint32_t) pSrc->numRows * pSrc->numCols;
  54              		.loc 1 168 33
  55 001a FB68     		ldr	r3, [r7, #12]
  56 001c 1B88     		ldrh	r3, [r3]
  57              		.loc 1 168 18
  58 001e 1A46     		mov	r2, r3
  59              		.loc 1 168 49
  60 0020 FB68     		ldr	r3, [r7, #12]
  61 0022 5B88     		ldrh	r3, [r3, #2]
ARM GAS  /tmp/cceVZHeK.s 			page 5


  62              		.loc 1 168 16
  63 0024 03FB02F3 		mul	r3, r3, r2
  64 0028 BB61     		str	r3, [r7, #24]
 169:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 170:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 171:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 172:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 173:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     blkCnt = numSamples >> 2U;
 174:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 175:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     while (blkCnt > 0U)
 176:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     {
 177:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* C(m,n) = A(m,n) * scale */
 178:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 179:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Scale and store result in destination buffer. */
 180:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
 181:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
 182:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
 183:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
 184:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 185:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Decrement loop counter */
 186:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       blkCnt--;
 187:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     }
 188:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 189:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 190:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     blkCnt = numSamples % 0x4U;
 191:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 192:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #else
 193:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 194:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Initialize blkCnt with number of samples */
 195:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     blkCnt = numSamples;
  65              		.loc 1 195 12
  66 002a BB69     		ldr	r3, [r7, #24]
  67 002c FB61     		str	r3, [r7, #28]
 196:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 197:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 198:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 199:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     while (blkCnt > 0U)
  68              		.loc 1 199 11
  69 002e 10E0     		b	.L2
  70              	.L3:
 200:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     {
 201:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* C(m,n) = A(m,n) * scale */
 202:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 203:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Scale and store result in destination buffer. */
 204:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       *pOut++ = (*pIn++) * scale;
  71              		.loc 1 204 22
  72 0030 7B6A     		ldr	r3, [r7, #36]
  73 0032 1A1D     		adds	r2, r3, #4
  74 0034 7A62     		str	r2, [r7, #36]
  75              		.loc 1 204 18
  76 0036 93ED007A 		vldr.32	s14, [r3]
  77              		.loc 1 204 12
  78 003a 3B6A     		ldr	r3, [r7, #32]
  79 003c 1A1D     		adds	r2, r3, #4
  80 003e 3A62     		str	r2, [r7, #32]
  81              		.loc 1 204 26
  82 0040 D7ED027A 		vldr.32	s15, [r7, #8]
ARM GAS  /tmp/cceVZHeK.s 			page 6


  83 0044 67EE277A 		vmul.f32	s15, s14, s15
  84              		.loc 1 204 15
  85 0048 C3ED007A 		vstr.32	s15, [r3]
 205:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 206:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       /* Decrement loop counter */
 207:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****       blkCnt--;
  86              		.loc 1 207 13
  87 004c FB69     		ldr	r3, [r7, #28]
  88 004e 013B     		subs	r3, r3, #1
  89 0050 FB61     		str	r3, [r7, #28]
  90              	.L2:
 199:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     {
  91              		.loc 1 199 11
  92 0052 FB69     		ldr	r3, [r7, #28]
  93 0054 002B     		cmp	r3, #0
  94 0056 EBD1     		bne	.L3
 208:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     }
 209:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 210:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 211:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****     status = ARM_MATH_SUCCESS;
  95              		.loc 1 211 12
  96 0058 0023     		movs	r3, #0
  97 005a FB75     		strb	r3, [r7, #23]
 212:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   }
 213:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** 
 214:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   /* Return to application */
 215:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c ****   return (status);
  98              		.loc 1 215 10
  99 005c 97F91730 		ldrsb	r3, [r7, #23]
 216:./Libraries/CMSIS/DSP/Source/MatrixFunctions/arm_mat_scale_f32.c **** }
 100              		.loc 1 216 1
 101 0060 1846     		mov	r0, r3
 102 0062 2C37     		adds	r7, r7, #44
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105 0064 BD46     		mov	sp, r7
 106              	.LCFI4:
 107              		.cfi_def_cfa_register 13
 108              		@ sp needed
 109 0066 5DF8047B 		ldr	r7, [sp], #4
 110              	.LCFI5:
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 006a 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE145:
 117              		.text
 118              	.Letext0:
 119              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 120              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 121              		.file 4 "/usr/include/newlib/sys/_types.h"
 122              		.file 5 "/usr/include/newlib/sys/reent.h"
 123              		.file 6 "/usr/include/newlib/sys/lock.h"
 124              		.file 7 "/usr/include/newlib/math.h"
 125              		.file 8 "./Libraries/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cceVZHeK.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_mat_scale_f32.c
     /tmp/cceVZHeK.s:17     .text.arm_mat_scale_f32:0000000000000000 $t
     /tmp/cceVZHeK.s:25     .text.arm_mat_scale_f32:0000000000000000 arm_mat_scale_f32

NO UNDEFINED SYMBOLS
